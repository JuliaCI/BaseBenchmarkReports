cset: moving following pidspec: 16018
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.17912751 seconds)
loading group "string"... done (took 0.558834655 seconds)
loading group "linalg"... done (took 8.72734884 seconds)
loading group "parallel"... done (took 0.172357327 seconds)
loading group "find"... done (took 2.518490722 seconds)
loading group "tuple"... done (took 2.134932914 seconds)
loading group "dates"... done (took 1.417871268 seconds)
loading group "micro"... done (took 0.558884917 seconds)
loading group "io"... done (took 0.530812944 seconds)
loading group "scalar"... done (took 48.105749849 seconds)
loading group "sparse"... done (took 13.231191835 seconds)
loading group "broadcast"... done (took 1.242388288 seconds)
loading group "union"... done (took 2.603406899 seconds)
loading group "simd"... done (took 3.005528946 seconds)
loading group "random"... done (took 11.469364153 seconds)
loading group "problem"... done (took 2.19454663 seconds)
loading group "array"... done (took 22.919834017 seconds)
loading group "misc"... done (took 1.583275177 seconds)
loading group "sort"... done (took 3.638942637 seconds)
loading group "collection"... done (took 17.448778992 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.766891352 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.154927506 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.233663484 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.295051632 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.289060064 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.201603475 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.191494209 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.157322371 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.579968317 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.22390458 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.171932905 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.409730323 seconds)
done (took 6.440288441 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.275333837 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.09006982 seconds)
    (2/2) benchmarking "String"...
    done (took 0.199619547 seconds)
  done (took 0.894602305 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.090762889 seconds)
    (2/2) benchmarking "String"...
    done (took 0.142970113 seconds)
  done (took 0.841377351 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.127640437 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.162156611 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.139319845 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.125688247 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.143732423 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.129279709 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.142888581 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.126542616 seconds)
  done (took 1.576191724 seconds)
done (took 4.321779968 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.51019501 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.887601598 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.518437245 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.194327484 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.33272269 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.332720006 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.303269354 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.248399123 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.14199357 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.095283541 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.217054321 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.477827132 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.437046413 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.968144382 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.095145514 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.146010152 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.175101064 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.786388533 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.119999091 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.150240069 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.521175314 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.232024756 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.151905678 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.131598046 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.23658217 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.161126495 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.163459192 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.126812964 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.781808096 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.170842967 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.229755125 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.119928126 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.163414257 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.194218827 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.269118888 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.148918874 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.715467743 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.239017567 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.122611407 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.135433543 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.715586889 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.157404824 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.225792632 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.140902164 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.109221271 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.17301144 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.137731994 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.112739709 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.143936252 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.135137695 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.191840303 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.46061239 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.141851053 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.216825522 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.143623472 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.716170554 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.136444725 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.315279642 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.164492531 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.145632502 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.127244467 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.124783662 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.194286131 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.133387964 seconds)
  done (took 22.047893252 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.196647553 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.210972948 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.131027138 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.179579022 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.177674131 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.132714586 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.124941647 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.114762054 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.163663921 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.228973936 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.158502918 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.218412314 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.129928817 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.125748785 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.186076022 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.283891336 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.141449873 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.156195509 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.127968365 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.147174655 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.162285002 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.145469427 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.131066098 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.147611203 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.202781884 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.239543005 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.144806614 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.161298426 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.139363824 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.13356311 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.178959727 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.198125977 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.113414923 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.141466307 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.206631089 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.157751089 seconds)
  done (took 6.573989881 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.251050752 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.13853493 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.260578385 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.2299089 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.180946278 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.211931319 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.198625545 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.31713708 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.3596628 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.199586092 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.162573898 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.134273606 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.11505683 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.133824371 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.15645815 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.115693269 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.860623526 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.187631602 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.197110437 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.204108038 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.148962766 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.133684252 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.389329497 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.137187235 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.122262055 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.146179242 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.093880161 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.237841834 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.146636836 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.505712545 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.119267897 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.149464583 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.163135861 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.226943406 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.154643946 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.193247256 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.173279214 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.146542086 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.12394823 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.243291506 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.151234143 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.115944038 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.130984584 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.152353045 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.166333481 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.141352608 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.141409613 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.170672538 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.137052282 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.143488643 seconds)
    (51/114) benchmarking ("sqrt", "LinearAlgebra.UnitUpperTriangular", 256)...
    done (took 0.232425569 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.884067374 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.243150744 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.174251423 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.140498666 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.309408358 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.140964198 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.153058225 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.142834541 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.23779829 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.159886298 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.133043222 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.115390877 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.147629898 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.116306556 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.154170731 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.472132811 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.118707796 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.193177308 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.146936557 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.138298083 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.138221302 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.123492947 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.159567872 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.122939598 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.135703692 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.117227612 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.140137897 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.11840892 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.135071478 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.12529278 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.131805757 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.122828397 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.133636963 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.181653705 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.132652985 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.15695869 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.160811595 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.128924602 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.137404116 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.151083262 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.132503679 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.123916093 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.205260368 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.148954335 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.117433976 seconds)
    (97/114) benchmarking ("sqrt", "LinearAlgebra.UnitUpperTriangular", 1024)...
    done (took 0.38837497 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.148125167 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.180203514 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.137020166 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.240322479 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.13516459 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.147961003 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.142578778 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.165168916 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.148696889 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.117662562 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.137096742 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.11630257 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.137015989 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.185765552 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.126218618 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.137015191 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.127907325 seconds)
  done (took 26.50363356 seconds)
done (took 55.733155717 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.458502296 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106142403 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.124095678 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.106325307 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.106112497 seconds)
  done (took 1.587856716 seconds)
done (took 2.257628525 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.226462913 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.317380463 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.237098158 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.140081132 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.204182767 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.186254135 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.20877811 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.206801776 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.190681954 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.220061707 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.139163364 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.225814251 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.199433907 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.207531746 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.134682702 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.245680526 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.18447845 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.20337712 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.240358072 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.139843404 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.135769682 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.160428997 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.140220722 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.143771789 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.140309595 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160238068 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.145330445 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.159903473 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.135805522 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.145447055 seconds)
  done (took 2.286281407 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.165966696 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.137079022 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.135760799 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.150958395 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.137566049 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.144263251 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.139162682 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.156817501 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.145832199 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.157952284 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.134603928 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.146124103 seconds)
  done (took 2.2663249 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.121327204 seconds)
done (took 9.453426859 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.14767045 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.243453246 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.209828192 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.265105648 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.365630526 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.296626479 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.632101255 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.230599929 seconds)
  done (took 15.198549523 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.198414087 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.151195395 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.130127678 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.147975517 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.135427587 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.152411417 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.134830989 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.148751139 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.133567179 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.153948908 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.136633663 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.137709615 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.150195711 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.137683409 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.150107094 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.134079012 seconds)
  done (took 3.066905251 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.174858968 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.176334634 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.139601152 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.159411859 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.139299252 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.16014815 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.143926809 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.158503656 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.136162008 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.154947358 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.144801435 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.156550434 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.139573533 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.152985256 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.142659296 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.175133932 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.136667616 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.158830476 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.15998191 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.158854163 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.142463825 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.155823726 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.144753724 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.158261188 seconds)
  done (took 4.417091354 seconds)
done (took 23.362757679 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.191183166 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.142464741 seconds)
  done (took 1.025224453 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.188281373 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.20734895 seconds)
  done (took 1.095356812 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.151135257 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.147097714 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.165649133 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.162810745 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.134847994 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.151279293 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.159131816 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.150777351 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.1348871 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.151722401 seconds)
  done (took 2.212117342 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.135167993 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.134868859 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.162204983 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.19415521 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.139564857 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.149139048 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.133792984 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.150633833 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.137926563 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.148948995 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.139941868 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.168325904 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.139652873 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.170761078 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.139142607 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.155880973 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.143714183 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.154316776 seconds)
  done (took 3.398642509 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.131403434 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.130971579 seconds)
  done (took 0.964283055 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.132928044 seconds)
    (2/7) benchmarking "second"...
    done (took 0.129052876 seconds)
    (3/7) benchmarking "month"...
    done (took 0.147474902 seconds)
    (4/7) benchmarking "year"...
    done (took 0.133206111 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.14967006 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.132217008 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.151391601 seconds)
  done (took 1.677917613 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.596513034 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.26564504 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.407701372 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.117054324 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.134241545 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.358953254 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.152154983 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.103151882 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104435175 seconds)
  done (took 2.968659298 seconds)
done (took 14.037472373 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.131406768 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.213078359 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.66185624 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.153262614 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.148309151 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.190844355 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.333991461 seconds)
done (took 2.540865185 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.345602577 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.179775457 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.118211925 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.138442242 seconds)
  done (took 1.484454646 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.122335528 seconds)
    (2/2) benchmarking "read"...
    done (took 0.14093693 seconds)
  done (took 0.976522382 seconds)
done (took 3.172025433 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.150670739 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.150989734 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.139150905 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.155018583 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.139640075 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.153802093 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.138499132 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.135501699 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.156259511 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.135177319 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.154315382 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.137765885 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.153774714 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.137952894 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.153525289 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.137343241 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.154867861 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.13705746 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.152729271 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.139220595 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.157731798 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.136914399 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.155164273 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.139347831 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.154721138 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.13819083 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.154613773 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.136122366 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.155731346 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.139165345 seconds)
  done (took 5.08720151 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.137898735 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.127005116 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.150265714 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.142151212 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.148545286 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.134509383 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.148482432 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.135167304 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.152477766 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.134435984 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.13453544 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.154378826 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.135950434 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.153003861 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.136692335 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.15447413 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.143270826 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.152990297 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.135390577 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.154245439 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.137503045 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.152508163 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.136730807 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.134274158 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.152579859 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.132060895 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.152545227 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.135828152 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.15395545 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.136231157 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.15393071 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.138493731 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.133490007 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.162045316 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.137862089 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.152381956 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.140854723 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.149660374 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.135794214 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.147777594 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.131315877 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.151356605 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.135846827 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.140331641 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.153942722 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.134975993 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.152999791 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.136315099 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.153397718 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.138132749 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.150359911 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.136636545 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.154426256 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.137382134 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.137757672 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.150001993 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.135635067 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.150761133 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.136550155 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.153111586 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.13245404 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.150051915 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.141867846 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.135119586 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.167376639 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.141716877 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.154461501 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.136594094 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.153665082 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.141476062 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.276360082 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.145259116 seconds)
  done (took 11.209255553 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.13293819 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.130983309 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.154412737 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.134926531 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.153315284 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.138806432 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.1536858 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.137337282 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.152533754 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.137014419 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.13511301 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.153602459 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.135439434 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.15523234 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.135365129 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.152767238 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.137807585 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.151963698 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.137245299 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.136133687 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.154359657 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.13563186 seconds)
  done (took 3.872676359 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.275779648 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.138618115 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.198583227 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.143447774 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.16963907 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.163431545 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.139012849 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.157021337 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.141417578 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.162523782 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.147757801 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.158671485 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.154946334 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.164230356 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.146007824 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.165474143 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.142014582 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.165207455 seconds)
  done (took 3.662370576 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.13206279 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.133439842 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.155769559 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.136630757 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.153272328 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.137699681 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.154312163 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.137325568 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.135383447 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.155627187 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.136535035 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.155478572 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.137062757 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.154703688 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.13767486 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.153062026 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.137554858 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.135454671 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.155258239 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.137001536 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.153884265 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.138663333 seconds)
  done (took 3.896193762 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.147553472 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.135375559 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.177934176 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.158735417 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.138327327 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.135804149 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.162736003 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.139566223 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.165571032 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.140567273 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.159313407 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.137587797 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.172601679 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.139658523 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.163380788 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.139714288 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.157413854 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.139624216 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.157523372 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.139149534 seconds)
  done (took 3.745797411 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.218914285 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.168798593 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.149212642 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.17532696 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.168115271 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.150467014 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.17653832 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.150142846 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.167890402 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.16264359 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.173134914 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.151866195 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.180598311 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.158172101 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.172544809 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.176483141 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.158287693 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.174739593 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.149566153 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.168151533 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.159599257 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.169031058 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.15805919 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.1681842 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.148445178 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.167965206 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.149058621 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.173716077 seconds)
  done (took 5.386730728 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.146329324 seconds)
    (2/2) benchmarking "in"...
    done (took 0.161014584 seconds)
  done (took 1.049462848 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.135757261 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.136140606 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.160024184 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.139530437 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.15994253 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.141019935 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.159951194 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.142486802 seconds)
  done (took 1.913975737 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.190712855 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.213640574 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.157853119 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.144652695 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.215432448 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.203627845 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.169784669 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.160905237 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.132135901 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.146653792 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.207994222 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.125091947 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.153140549 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.131044386 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.152856264 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.140120001 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.135820547 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.164768863 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.139484282 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.154529848 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.137836113 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.157886768 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.13374888 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.16382622 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.129054358 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.162021299 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.142709565 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.170584513 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.134979904 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.161251464 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.137896238 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.161131005 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.143559759 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.165869155 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.14091934 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.222197987 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.144390697 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.152614187 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.136000584 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.162577337 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.160699495 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.15529528 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.134586673 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.152136621 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.136946479 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.159912224 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.15073134 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.159928868 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.132556824 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.156126845 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.141057389 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.155367402 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.141623419 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.159108042 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.13424848 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.159142802 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.136158531 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.148594949 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.13236857 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.129984433 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.154129419 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.128729446 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.155064365 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.136472383 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.154852281 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.133806803 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.15270289 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.13506439 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.155154102 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.136268223 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.152837215 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.148947784 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.154423762 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.139556699 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.159985209 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.137729634 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.152594116 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.139898259 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.154486148 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.136008434 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.158446593 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.159247177 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.158524214 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.130548613 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.148201109 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.141935512 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.135496768 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.157342342 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.128944097 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.162061145 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.140000946 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.157038991 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.127126066 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.153264078 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.132370513 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.159276652 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.128237809 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.154375312 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.135479883 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.158532999 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.141324465 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.153765867 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.138004144 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.158893501 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.140676146 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.133783094 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.197732098 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.151805041 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.131529216 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.157161169 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.144659315 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.132780799 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.156260116 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.134609532 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.157181708 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.136612361 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.166629593 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.139815301 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.158728273 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.138942562 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.157054093 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.13740452 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.157616389 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.137121223 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.153271259 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.140210875 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.162456874 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.137671439 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.155918633 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.137517273 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.137428 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.157162801 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.139377554 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.152155192 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.14214961 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.153540374 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.136804892 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.161305986 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.144670259 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.157632371 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.13357882 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.155530376 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.135642004 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.15407021 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.1388213 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.158131735 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.132551788 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.148070105 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.139970742 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.158568251 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.140896287 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.156624285 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.154948961 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.139005184 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.156445283 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.144822046 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.152008499 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.140926329 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.158789811 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.141118518 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.161686075 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.128422794 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.152308034 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.138471686 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.155729579 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.133384714 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.155938212 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.138903481 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.141873938 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.149928207 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.139096302 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.148217972 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.13320212 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.160467652 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.137541027 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.158783385 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.132862096 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.189665273 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.147648151 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.159977255 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.135502229 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.154286108 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.139208766 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.153583802 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.14136355 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.159635576 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.142727351 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.132660991 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.154856797 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.142267785 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.15189674 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.137737825 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.155505541 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.136796928 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.149532469 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.13856164 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.149967386 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.14136968 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.158219632 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.141077028 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.160802504 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.1391611 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.153283914 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.146770826 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.152241007 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.141382901 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.12825183 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.160822272 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.144826676 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.162437643 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.140944958 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.157643777 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.13425558 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.156723712 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.147380166 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.158414757 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.136727738 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.157577813 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.13074408 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.149781463 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.142745316 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.137810858 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.153420565 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.136982585 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.157597169 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13737539 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.15365629 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.129630196 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.160737964 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.14042749 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.15243307 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.137534646 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.152804862 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.135425479 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.162397765 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.130190431 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.151752433 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.138848906 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.159909473 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.13671042 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.155225141 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.140411597 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.142243774 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.162660162 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.13844489 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.154427797 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.144751346 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.153724693 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.136586365 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.152645564 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.141522005 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.151418273 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.139331514 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.157251989 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.135598653 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.155238964 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.14155882 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.161999493 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.143721801 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.133955189 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.161961177 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.143471894 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.166290706 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.134349143 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.162553024 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.133559763 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.151120908 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.134485734 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.150073499 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.140257538 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.154467758 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.141914002 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.153802687 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.137816627 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.167928813 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.142987894 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.158920438 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.143632094 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.167908583 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.132325993 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.150907973 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135929222 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.135092487 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.153320914 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.134322141 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.162422645 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.137074266 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.163737536 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.139304689 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.154302893 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.136919083 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.164979531 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.136114502 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.162199721 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.14286351 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.163096298 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.1342215 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.161131946 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.13506339 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.160305377 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.133453574 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.135458339 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.155585429 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.138446246 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.15466687 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.135527602 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.152760974 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.132027403 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.158283925 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.146190924 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.157679188 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.14269361 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.156051671 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.135259022 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.154547035 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.133902513 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.161939642 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.135377563 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.163589836 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.138545927 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.130392665 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.152004331 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.141838396 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.156619253 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.145053136 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.152995394 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.141836882 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.163772283 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.140293509 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.157468402 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.147047786 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.165075209 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.143221065 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.162022803 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.132969385 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.156283156 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.14433413 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.138038829 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.161834522 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.142743153 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.159759221 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.143471924 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.165574114 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.141017463 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.157814594 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.131893403 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.158820365 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.144798638 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.160603931 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.14131301 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.140970633 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.161497895 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.133230286 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.161641837 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.143503894 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.157980374 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.145487792 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.157433831 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.144391984 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.156451183 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.143930021 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.159641888 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.133549453 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.151383928 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.13738884 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.163468353 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.134342564 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.143480666 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.163941486 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.135247645 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.156692104 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.142804913 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.153392794 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.141999054 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.163633813 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.13713655 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.167142768 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.140272489 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.156117269 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.142941752 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.162568879 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.132613704 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.136933574 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.157770033 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.143067788 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.156675912 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.141783488 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.158369413 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.143864027 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.161125795 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.142001717 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.162185661 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.143327882 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.152100313 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.147083889 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.161013627 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.141537373 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.154454544 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.137421205 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.132839532 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.15809593 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.144071698 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.156746999 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.146708572 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.162866829 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.137405597 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.157754944 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.143107116 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.15629603 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.145036822 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.155319215 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.14156641 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.153012333 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.142140024 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.157605035 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.145057952 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.155140046 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.133690187 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.162196836 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.143487408 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.142252285 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.160258319 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.1438592 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.153510145 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.131945044 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.162311176 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.136846314 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.167746436 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.141207547 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.15772112 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.137567389 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.163281819 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.141860063 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.16568128 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.134151877 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.156068361 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.140335437 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.141240975 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.160357572 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.135206034 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.17006363 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.138099358 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.163046973 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.140249034 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.15469537 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.138944868 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.166519004 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.139372781 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.155337077 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.138207626 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.1687304 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.140063591 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.161491269 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.135219397 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.167174029 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.142968418 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.16915948 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.140673627 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.139834325 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.157514307 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.14367662 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.175010178 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.139222396 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.161540124 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.139457155 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.167105698 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.14516455 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.153874867 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.137885367 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.169605843 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.145797151 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.161263747 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.144080929 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.159724328 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.148562336 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.168871276 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.143988168 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.135429218 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.158489652 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.139787475 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.156816028 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.144441443 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.170060325 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.141146515 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.163417968 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.145620955 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.17018925 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.143812389 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.162483885 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.134847741 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.16896416 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.138726937 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.143270602 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.156696976 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.135480405 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.167344564 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.145522382 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.159435545 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.14007056 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.164603389 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.144074774 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.158716566 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.138751437 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.166208937 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.145014198 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.167688119 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.140894195 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.139357053 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.167340011 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.15193718 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.164088113 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.141053127 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.168576912 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.147341061 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.162228643 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.140030122 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.166267132 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.149591364 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.16919256 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.14723835 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.159224635 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.140805102 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.168810927 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.149674494 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.170053049 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.140235948 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.156636125 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.146078349 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.15879657 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.136990393 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.165981486 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.150913622 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.148360579 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.161498205 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.137268612 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.169600079 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.145546287 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.162962989 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.139061341 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.160497273 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.146179963 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.15931515 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.145272185 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.158849891 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.150400825 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.168428221 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.14720567 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.17172368 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.135554575 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.165362717 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.145091644 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.148615151 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.164626266 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.136685465 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.157316443 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.144674575 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.170522014 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.148033377 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.164652636 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.144913213 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.166433048 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.142616366 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.165589302 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.1403844 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.16790245 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.148979301 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.144866352 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.167445189 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.139941146 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.163417761 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.143627571 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.168141677 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.149854232 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.163740781 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.152956776 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.169861782 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.140464456 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.159838548 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.142556599 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.16429657 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.146679024 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.170364528 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.141706343 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.137120901 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.170987941 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.14904613 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.163024683 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.149675279 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.17174653 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.139882115 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.166328726 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.15089587 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.168040821 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.14573969 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.165129085 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.145975591 seconds)
  done (took 90.089796968 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.191004813 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.175236285 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.145890547 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.164695368 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.162894202 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.167075985 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.146094447 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.167027833 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.145898165 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.174941085 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.14712181 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.144078274 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.179235518 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.185618744 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.162290447 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.175810828 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.144514655 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.165962655 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.145944863 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.16734676 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.159444003 seconds)
  done (took 4.251607544 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.146230784 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.146054215 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.165548142 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.145828328 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.167660409 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.145593048 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.165170186 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.14478803 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.144970911 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.168142477 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.14683905 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.166586916 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.144254433 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.165942741 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.145428053 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.166826902 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.146910855 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.14479939 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.167695305 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.145061083 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.166786829 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.145472081 seconds)
  done (took 4.22712173 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.169030647 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.149501258 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.170549714 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.14616986 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.171035601 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.146820595 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.172354448 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.147596456 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.175094579 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.142345882 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.161463829 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.145081339 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.146362896 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.173944336 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.139616134 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.168195909 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.153213837 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.170363537 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.15025569 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.166532464 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.137869872 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.16945153 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.148275042 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.137697805 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.17601104 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.152977598 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.173819499 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.149853324 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.158801954 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.150650864 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.168905106 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.142069014 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.161216743 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.138039176 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.137407445 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.173994401 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.149673434 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.169542284 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.146130534 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.160561417 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.149837358 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.17194209 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.14059918 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.150441785 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.172792827 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.141581977 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.177382233 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.147571209 seconds)
  done (took 8.35922102 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.174183842 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.205277047 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.152800173 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.201794141 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.158919838 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.178418341 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.149113045 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.176669543 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.172252537 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.151594952 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.183644126 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.160497556 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.173392709 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.154469531 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.172488111 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.150292269 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.173864605 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.149459679 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.176215095 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.149911587 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.1759778 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.152854788 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.182226173 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.158551737 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.174768439 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.150121324 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.172656092 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.154213044 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.181366496 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.156333894 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.177669424 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.155458743 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.186291243 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.149316607 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.174618816 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.151707121 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.18288345 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.150347443 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.17503661 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.150073115 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.175690543 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.152396237 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.17360327 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.161278793 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.17315306 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.152741373 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.176759625 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.148844657 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.184185734 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.15113256 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.178525082 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.160158393 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.177600553 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.152737683 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.178987746 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.180578111 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.152207151 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.173885839 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.157950052 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.183475676 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.149590994 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.178154475 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.163883588 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.178289625 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.163425616 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.188857736 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.153932181 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.178427749 seconds)
  done (took 12.330329442 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.180511925 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.178167316 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.162453679 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.184995708 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.155197748 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.178685104 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.155318567 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.178692205 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.15560184 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.187835873 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.157365055 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.277749087 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.180590406 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.159196936 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.177323094 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.156270813 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.184157122 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.156251782 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.181938521 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.156682981 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.178772412 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.162035485 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.179714261 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.162875549 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.186653102 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.178207419 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.155566898 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.17995956 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.163641786 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.175733084 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.165780533 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.177482594 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.155586919 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.184539208 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.165674257 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.1811095 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.152545933 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.179328618 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.156010461 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.176089916 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.152747275 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.185083758 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.154493214 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.175924183 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.156349571 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.176934207 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.187160571 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.167616414 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.181328851 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.163319535 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.177327701 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.16240079 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.178459429 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.156353233 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.192073583 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.191967794 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.165748731 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.187947171 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.156653771 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.184175686 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.164370711 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.195275733 seconds)
  done (took 11.589379591 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.152607081 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.153040858 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.178711567 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.150426069 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.172732132 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.152055186 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.174074247 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.150833454 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.170958824 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.152362505 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.151130443 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.17410415 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.151240574 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.174456578 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.151709177 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.17201601 seconds)
  done (took 3.447327939 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.169881643 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.188722176 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.222410066 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.177867758 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.151213691 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.181476692 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.153893188 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.186442336 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.152411972 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.179700806 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.156954373 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.181321336 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.169198841 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.17456988 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.151566945 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.174475066 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.151538589 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.176889961 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.154067491 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.246911695 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.15524667 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.178334206 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.152676336 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.181489285 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.153117515 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.188023657 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.166296053 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.178924787 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.153922073 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.180723711 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.157754524 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.181720454 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.153678509 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.175958944 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.153436993 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.175988033 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.154447271 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.178687827 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.157573542 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.151163098 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.177088081 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.152701863 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.175013485 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.153645933 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.173095741 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.153107115 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.172872443 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.158657477 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.176366973 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.156003196 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.179942164 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.159061164 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.18014319 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.159911588 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.181167195 seconds)
  done (took 10.204791639 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.165595327 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.152778926 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.187725665 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.151096103 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.175974285 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.154595579 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.177443904 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.153533727 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.175893661 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.150815597 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.174479743 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.156973126 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.17677889 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.15517161 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.176747366 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.15427622 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.17194258 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.155187963 seconds)
  done (took 3.838765387 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.152510259 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.14958945 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.173101439 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.150626431 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.173310646 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.150082846 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.171701463 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.150888013 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.150218261 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.173553295 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.15171306 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.17700858 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.150924583 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.171316136 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.151709091 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.175111296 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.151792682 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.149925881 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.173631182 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.150534892 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.17297629 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.150801892 seconds)
  done (took 4.401002332 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.164352702 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.246540696 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.157891997 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.252428799 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.174061979 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.151464741 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.184781161 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.150217283 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.187421273 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.147875081 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.170623653 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.148259384 seconds)
  done (took 3.015878195 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.18294766 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.210368383 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.15338085 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.178555766 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164161618 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.179600659 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.157781285 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.179912149 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.165752611 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.190309784 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.160663889 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.188988732 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.164303808 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.186962795 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.183792273 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.163084251 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.180798532 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.16011554 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.17483035 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.173307323 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.183760848 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.399836047 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.184753762 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.159931509 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.180194763 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.165544217 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.190297466 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.170356906 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.179912239 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.190683247 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.163818262 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.185277811 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.165514563 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.189893366 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.153849237 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.190149595 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.158405736 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.201869799 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.166567729 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.19134935 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.157773872 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.188340416 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.187545742 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.163450066 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.186796515 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.159777703 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.189239413 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.158657734 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.181714658 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.178053824 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.18451475 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.192266068 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.164660846 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.187608677 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168309482 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.201070773 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.168289938 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.18784999 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.181873163 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.168433066 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.190996754 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.164952277 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.191714317 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169227719 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.184587444 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.185789309 seconds)
  done (took 12.800394453 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.192140089 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.180728766 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.158045461 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.194432827 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.168419827 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.181116888 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.158435943 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.181268785 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.158484343 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.184258105 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.201446089 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.18203206 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.187973735 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.16706192 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.18738003 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.161029862 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.180697262 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.166253181 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.182640211 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.179236613 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.181127227 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.166660587 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.188306813 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.187432985 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.170333162 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.186200025 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.158434542 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.18151881 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15936674 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.18489098 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.163632794 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.183307254 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.166879401 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.181897751 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.170536373 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.182484507 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.15929512 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.188084028 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.163293908 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.19202663 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.19098174 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.175889865 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.181896738 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.159816882 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.191623621 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.158260011 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.18080806 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.154714786 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.18103197 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.156347173 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.192036126 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.167944193 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.195542317 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.188197892 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.160682778 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.180128042 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.161022673 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.180228619 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.159781347 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.186066471 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.168064811 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.181855263 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.179297471 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.182358541 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.159294811 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.190118939 seconds)
  done (took 12.521100429 seconds)
done (took 221.61205852 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.293408765 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.324286605 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.146145268 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.294083764 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.146291238 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.883495039 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.682322684 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.231321228 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.167175775 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.147704016 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.144475463 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.188537447 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.5223755 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.147201667 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.145383821 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.187436949 seconds)
  done (took 31.540114262 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.327659023 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.374719364 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.161605491 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.173114508 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.151873859 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.174282423 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.150522962 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.174283534 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.151632355 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.178718287 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.151575547 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.167366914 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.157316562 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.167060787 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.151579423 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.150156807 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.180080921 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.149639611 seconds)
  done (took 4.194803531 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.170293865 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.211456482 seconds)
  done (took 1.287671038 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.18188083 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.267488746 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.369680436 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.220810185 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.173815215 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.19043746 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.199659512 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.18651787 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.262355114 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.164045371 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.187687342 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.148915099 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.199009775 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.15529833 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.190998131 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.148845677 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.200891753 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.165219845 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.188548899 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.155746984 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.198245633 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.152919117 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.179490343 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.167505569 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.255638208 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.189892796 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.154885562 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.175911787 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.155423071 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.190046344 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.157743327 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.189944115 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.162485715 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.228829065 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.179419735 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.227047461 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.155451672 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.176053194 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.166664898 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.17427868 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.155864784 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.178546639 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.162841625 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.174233078 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.151945393 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.179520716 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.150393404 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.174064135 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.159600281 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.17755821 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.163027474 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.184381308 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.226358082 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.156708984 seconds)
  done (took 10.887760341 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.979300257 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.198324224 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.176235694 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.121233385 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.19487485 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.168717242 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.993085481 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.177728766 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.306697028 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.030189014 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.167882565 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.183976535 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.296115608 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.33408187 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.326749436 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.433158621 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.829464199 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.165526632 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.206737898 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.215600608 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.156952834 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.192732275 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.166981846 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.508399048 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.174352943 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.153120021 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.17914986 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.162250901 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.230318051 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.15170745 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.181224014 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.253799192 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.349443241 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.265740322 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.176235438 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.152131156 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.172744973 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.240052516 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.324062738 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.271888261 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.243848016 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.14997122 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.174738023 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.157804648 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.190724911 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.150599803 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.234914518 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.246367329 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.246935007 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.180520197 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.161920578 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.183246575 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.155722659 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.234728478 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.172352383 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.416644966 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.417257429 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.176170771 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.156973649 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.188445904 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.318937034 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.177202495 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.291923673 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.196880555 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.270855819 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.15274389 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.880882929 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.218200624 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.176996359 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.157436788 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.18282206 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.158099595 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.180936329 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.236503001 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.461690812 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.184289217 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.179442206 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1545419 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.283551784 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.175881049 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.154825668 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.234878514 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.155010575 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.183896661 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.161325103 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.182307829 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.247756066 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.327840387 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.159136181 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.182880984 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.158446263 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.186870576 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.176336269 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.263704566 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.307820212 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.231679943 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.28347209 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.158341768 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.238291543 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.243032815 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.179705871 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.243749212 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.16079438 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.18684068 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.157709154 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.28008394 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.213116152 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.179698085 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.15937926 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.182055428 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.194114363 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.181016174 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.158971802 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.242302853 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.548535839 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.240889583 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.176371125 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.157783787 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.184522618 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.234205083 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.160943674 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.316015164 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.186809937 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.24107414 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.15852969 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.17539097 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.176431128 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.23701808 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.186549184 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.158810904 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.181255815 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.16194667 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.333329901 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.297837745 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.163972805 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.300291195 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.249799311 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.182631415 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.250832045 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.161336743 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.241017356 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.187308958 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.158291191 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.176938305 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.86770215 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.163607616 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.183167111 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.158077261 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.260942193 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.177198889 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.158194831 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.176192151 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.153958461 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.854685988 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.180309666 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.153306379 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.179883552 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.160694266 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.182000094 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.161599302 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.182800852 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.236135182 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.302083606 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.185613231 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.1599027 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.177032821 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.211447639 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.180194338 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.154473274 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.178711708 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.155686338 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.186458183 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.157911307 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.182478228 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.245988332 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.234335185 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.288123639 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.621071594 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.178244357 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.154627883 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.319320672 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.155250398 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.379022874 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.183938452 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.290544323 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.241044747 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.175844316 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.416365372 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.241610175 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.261337462 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.158477129 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.249071555 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.175378525 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.161209868 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.23765694 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.15377668 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.185565141 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.23510072 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.163048823 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.186224683 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.30959933 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.180173883 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.303553658 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.153169661 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.246396181 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.178716688 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.160499955 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.383170291 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.179446828 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.165301571 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.235304931 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.184577428 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.154027512 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.02149732 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.180416894 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.162575123 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.184671318 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.289454865 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.239330974 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.185929283 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.160438671 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.188623053 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.237820707 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.285669534 seconds)
  done (took 59.801381241 seconds)
done (took 108.608569138 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.310542566 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.220377545 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.406703649 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.225834663 seconds)
  done (took 2.162035827 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.323353388 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.195196455 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.283092918 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.15119325 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.288592346 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.177712825 seconds)
  done (took 2.371289049 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.223807418 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.219133142 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.21947512 seconds)
  done (took 1.616694996 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.261979583 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.261973309 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.400744122 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.317014964 seconds)
  done (took 2.257810858 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.319945016 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.170244328 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.20834686 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.272034085 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.285626969 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.265528405 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.179728689 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.228313434 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.206817098 seconds)
  done (took 3.123549192 seconds)
done (took 12.482705529 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.193490132 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.208542737 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.175549612 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.191068179 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.186247497 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.210533601 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.182989424 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.20715718 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.18416311 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.190157912 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.181734138 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.187004681 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.243976445 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.209210788 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.165461571 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.20633513 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.166753949 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.216590751 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.182191126 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.199176157 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.207899664 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.168714772 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.16549493 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.195628464 seconds)
  done (took 5.573757198 seconds)
done (took 6.526250515 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.253178943 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.174359514 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.163326726 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.189829146 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.258783542 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.171744956 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.203306471 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.167298217 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.197093518 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.165809077 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.153502861 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.201524059 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.163646798 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.256795654 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.19461018 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.156848812 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.181413447 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.176090537 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.203784491 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.182210882 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.261676421 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.156771822 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.199627646 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.156502847 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.25936308 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.186170561 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.165064967 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.191357097 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.178506107 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.190546415 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.166401071 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.178544102 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.182047224 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.2045217 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.157018613 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.190160378 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.175946378 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.130724527 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.189801705 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.166185849 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.203076145 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.167068383 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.18902517 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.158023728 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.188966948 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.167123215 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.177757291 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.170224618 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.176637701 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.169019972 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.157301057 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.206407777 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.164108142 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.180166662 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.155702531 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.182923757 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.175873702 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.18031687 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.179615115 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.17912045 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.157553574 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.180601601 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.167363343 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.179193084 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.16793243 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.158685425 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.190645273 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.1662469 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.190686346 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.157987749 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.180842633 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.165189497 seconds)
done (took 14.059122464 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.163049814 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.223044559 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.234848888 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.263544633 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.213430452 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.172400356 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.196686552 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.179650525 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.19532737 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.173138647 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.214959178 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.212230834 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.240222164 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.199030973 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.196208897 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.17030586 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.168084371 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.188873187 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.2693643 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.18218677 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.205090227 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.172348457 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.207814991 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.173281051 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.185252182 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.215857802 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.165116732 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.190881024 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.16147303 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.190504066 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.181941608 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.183404601 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.165635106 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.201950814 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.17830493 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.170708096 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.197722089 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.193383966 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.162589787 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.183397955 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.170130324 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.199579301 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.163121221 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.197153838 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.17015845 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.198348771 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.169524174 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.172054679 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.187554098 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.167140439 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.186463366 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.185231633 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.198971851 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.17736528 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.198622198 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.172057809 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.198313158 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.173051497 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.189643492 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.174779658 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.186212144 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.160254394 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.186953392 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.181512257 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.190045545 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.174216716 seconds)
  done (took 13.43673407 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.180871625 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.216158009 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.172561993 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.194626939 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.166946184 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.180313717 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.156061894 seconds)
  done (took 2.255172322 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.158867824 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.270907055 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.269919948 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.27042913 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.240210861 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.279047226 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.206610316 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.155964414 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.21903434 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.191913586 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.246685585 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.298829882 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.194535 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.171659857 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.272149621 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.184629368 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.272871229 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.227227354 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.19890603 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.27175347 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.175361673 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.218268272 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.169771981 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.184795481 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.266337293 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.15962907 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.319782305 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.20336456 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.168495404 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.198611078 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.173001848 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.260212669 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.268047668 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.171482023 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.192753421 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.271230394 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.265818511 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.172744199 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.280242862 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.186680351 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.241389991 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.200684566 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.17400113 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.199731599 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.173842895 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.255943799 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.204224858 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.17519374 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.197866061 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.276926872 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.170913642 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.271052941 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.170506586 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.199078966 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.16811336 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.200598832 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.17941833 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.199951957 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.279676079 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.175260241 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.26806869 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.271372585 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.271365874 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.272375681 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.182097219 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.271204994 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.262295136 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.17215807 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.268960364 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.201118342 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.274071093 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.172670501 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.197830857 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.260913414 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.177984815 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.274783884 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.274568319 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.17092007 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.198196786 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.162954431 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.198506257 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.159324417 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.273522946 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.199529489 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.17131912 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.202492154 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.173008324 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.199005303 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.26696858 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.182760617 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.200577377 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.171898143 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.206191819 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.173999699 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.201577606 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.27621654 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.171884216 seconds)
  done (took 22.048801924 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.163056815 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.159329845 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.190536702 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.159968416 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.18781376 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.161154955 seconds)
  done (took 2.043179816 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.197228604 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.198534155 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.184215375 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.199070199 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.222413336 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.278035139 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.285851545 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.193842985 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.195078895 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.210758834 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.28286619 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.281503398 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.280698824 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.179019791 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.283799921 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.203131705 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.261662229 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.200358005 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.182000046 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.198600817 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.173918169 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.206793337 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.172362538 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.268980175 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.202489336 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.176301459 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.195073333 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.185959739 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.208882601 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.168311554 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.206597808 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.174987736 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.19301178 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.17072082 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.28539549 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.194532801 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.16977851 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.20437729 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.176777833 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.201983037 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.286402127 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.172042713 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.2081616 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.176932644 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.196217442 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.165945872 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.203555101 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.167971967 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.284036807 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.204782823 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.177378005 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.203524478 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.176252805 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.204218884 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.167434729 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.194370234 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.17759794 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.284587259 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.207251767 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.167776875 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.201648536 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.177229577 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.196535463 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.179536668 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.200519489 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.176890456 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.19285474 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.176577915 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.196965526 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.177824547 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.203517697 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.176448425 seconds)
  done (took 15.760779815 seconds)
done (took 56.520771713 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.580275276 seconds)
  done (took 2.599777549 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.135051446 seconds)
  done (took 2.156764379 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.637280983 seconds)
  done (took 17.690521292 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.471113252 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.402789941 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.062427403 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.205621134 seconds)
  done (took 3.165281588 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.104366747 seconds)
  done (took 2.146820433 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.450238649 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.331069278 seconds)
  done (took 1.809992233 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.767018444 seconds)
  done (took 1.807751667 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.727732984 seconds)
  done (took 2.756362225 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.324017158 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.300657893 seconds)
  done (took 1.665545689 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.660788772 seconds)
  done (took 1.706851687 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 12.715478007 seconds)
  done (took 13.761793631 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.308612829 seconds)
  done (took 1.355167781 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.349778029 seconds)
  done (took 1.396463362 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.374838231 seconds)
  done (took 4.420795926 seconds)
done (took 59.472934004 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.176454296 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.176770227 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.204829537 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.175639169 seconds)
  done (took 1.764899621 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.181163958 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.174657708 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.204945103 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.1722086 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.206448524 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.173648649 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.202025945 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.177768066 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.201365525 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.175247164 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.201287396 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.174163918 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.203804363 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.175596118 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.197062882 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.177485066 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.202933367 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.175214865 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.200318976 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.177442796 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.198903568 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.179081556 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.176663692 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.205647725 seconds)
  done (took 5.56264345 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.172355499 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.16407015 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.194792664 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.164384451 seconds)
  done (took 1.7464278 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.187048121 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.21371497 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.190307203 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.208366013 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.190695977 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.212854994 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.176215169 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.196479579 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.176983659 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.184917223 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.217337814 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.215780445 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.190895901 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.209352115 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.188067407 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.194096318 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.182150891 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.18653575 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.211082909 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.185540666 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.20564257 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.185227349 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.201929204 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.186360854 seconds)
  done (took 5.751094808 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.249860992 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.213109818 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.20482046 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.246907181 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.203352785 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.201046006 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.201342111 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.206116078 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.178878036 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.202314941 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.174421677 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.246917444 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.203379159 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.177588972 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.199444967 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.181661846 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.207907409 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.181939601 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.241627205 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.177815756 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.20696355 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.186569992 seconds)
  done (took 5.54954633 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.257544834 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.196223389 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.164586138 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.191815223 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.176673237 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.196915159 seconds)
  done (took 2.24468809 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.165432531 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.158462665 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.18741954 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.159949127 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.190231854 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.161387149 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.184433581 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.161649351 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.184638791 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.162690963 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.158803978 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.185577032 seconds)
  done (took 3.117965845 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255767941 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205116423 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.335407627 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.44625667 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246840671 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.214474838 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.361875474 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.2417818 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.260655239 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19238671 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265324929 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245833345 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.235273264 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243930706 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.227690093 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.204997576 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255730075 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.292414632 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223910065 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294572377 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213522614 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.259357092 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.274622145 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.229826815 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196660569 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244995247 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.179297162 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.21137548 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247290982 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21880693 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25686779 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234953715 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.195514374 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26779338 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31082386 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25860356 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.346653041 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.217121285 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.241941631 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.248516068 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.339123113 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198831821 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.272778469 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236208439 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185197611 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276208931 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233591684 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.268327435 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.192709653 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.227441889 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26631234 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235914354 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.254783593 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.224259977 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.380194677 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191926201 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.226153085 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.261665088 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269307442 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261105914 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266323462 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.209106242 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.253517933 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249681447 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.301726811 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.225534652 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.248944386 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182072158 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248338942 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.293372498 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267027599 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216653086 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.275120569 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21719336 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.257539404 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.22281364 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239567545 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.294364533 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256860538 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.178120603 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239208237 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191129165 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211503525 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.244834745 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.208665427 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.303232861 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188746358 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.261835756 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262048092 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.234979434 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219266037 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24643631 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244899411 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205823132 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.176803521 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202308803 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.243396047 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214875221 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213910621 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.236914663 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19832893 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.211497141 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209799578 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.209408449 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254093812 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.186359954 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243608397 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229024688 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.219487614 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.26630416 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204602841 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.249508497 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254515793 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284226179 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189610865 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.219857691 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.307792939 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229155162 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.224284676 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.257179552 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.282726497 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.200506157 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2218266 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248980733 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25009707 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.22914592 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.288584651 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196860993 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.221748142 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.214093974 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233462777 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.244637349 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.246426751 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186889221 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.252506982 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271976173 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.184449996 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.224679903 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268192894 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192614745 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210017852 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195272413 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223023664 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.2024202 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.237049136 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.222186086 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213353108 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25551139 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.251119477 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215505489 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22165948 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262192985 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189572023 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.257860482 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.233396335 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.17947801 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.260219504 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28426653 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18758803 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266602572 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.244623969 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262175224 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232641294 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216410815 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.266357461 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188031467 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.205791846 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219986261 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.257699852 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.248908476 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.276855784 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259243613 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.223093535 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.250279093 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236306358 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253111904 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.243148563 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243631985 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.225623884 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.23265229 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254617279 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.208288654 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.182748954 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.213370087 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196441423 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216081882 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19711513 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.26660318 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252196206 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.257179812 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.254976029 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198556111 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.281922643 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.183415034 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246353643 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.263417667 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196888727 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.278565486 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279249493 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.268531437 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198513212 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249370118 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.208556144 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186377666 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.220408308 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.218165537 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.226014444 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19486641 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227992422 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.28037176 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255868263 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207104149 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275467191 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250303339 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.292844995 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.179591852 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.25005316 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252723638 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229101493 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.271812322 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193074122 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.24535216 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.28097031 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229904535 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249916513 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25709603 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.268245063 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281973557 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.251026896 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192927931 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.23012777 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218757062 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227233528 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.245659459 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20276226 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216749246 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208077564 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.226322174 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198149114 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270139335 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233069524 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261049993 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.212359131 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255891619 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.211684255 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201271581 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.262814157 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233853804 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.155833472 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252870668 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276697552 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209651718 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241872939 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255152943 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189759117 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.401876572 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.268947713 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229341851 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.224076966 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22428923 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.232941835 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.24563738 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245338382 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.24154308 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231268414 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.297976292 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.258311027 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.198895666 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217283611 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20612437 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.238551923 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.187226116 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.240785354 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.25337663 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.202724293 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274129454 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226401474 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.260150673 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238171831 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.235310669 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.207592855 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227673945 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316314488 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258886583 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258013351 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.226580576 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.252180961 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270095575 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184729005 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213811074 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.192458475 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.27293068 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188643644 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.267697142 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.249751582 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266945142 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263548551 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220053906 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.230811481 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.215383807 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.229314724 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238540007 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267303835 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196987322 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.2259917 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274830033 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.179277146 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.221221907 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.21918248 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.377512447 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.235309127 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255397865 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.15847452 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.370153751 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190657766 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.22153267 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.218907839 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257290466 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.221708933 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.243571312 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26332363 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22762136 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.221403292 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223162688 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.261856554 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2679509 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228521462 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262768006 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.233993542 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.220482215 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24554534 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259524416 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20651059 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.235508559 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247283232 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256441263 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.262841363 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.220896359 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23044865 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261392195 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.26173261 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261725955 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199887189 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269912214 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186822282 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254871073 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227547808 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185342339 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248999789 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.249577832 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193507573 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262262565 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26155959 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19272563 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.21769679 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233044138 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230020076 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230369021 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.190008185 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273751742 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.219542024 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242398466 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.300530025 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220550353 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.255776487 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204077755 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.219534817 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200681914 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233263987 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191385403 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.262782399 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.265435684 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.191694431 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263520919 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255100156 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224942838 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242894288 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.230135848 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.32742163 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.219991153 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283408628 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.211890389 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.285204546 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.238864532 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237192397 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.261737869 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238916611 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225195648 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237226229 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.310146744 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226668939 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.258003611 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.220972349 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203770293 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229565123 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.193332284 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.241366999 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260336986 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204428223 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.226049829 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.227773606 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235240217 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.235373581 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202348402 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.291296261 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.241460237 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277559999 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.246592391 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.230322757 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267600512 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261814737 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192574231 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.255468069 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231951478 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.235669732 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243126473 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.196217711 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.227726864 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.305602906 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.187773826 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250689612 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265102524 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.231109403 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265316446 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.195538411 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.270769514 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233003635 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265951402 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189628439 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.240533917 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.232195608 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.225002663 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.188635422 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.263295478 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250114564 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.226705321 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.231841526 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.263344523 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258900385 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.214903905 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196163889 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.377613842 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252870902 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.286266459 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.184028603 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.229300389 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207284131 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248696115 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.255739951 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234906788 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.219876866 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190829237 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.235362199 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.235080764 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.190838436 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.263643427 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242658934 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247787452 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275517274 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.194836937 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.347259764 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.232305074 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.235284895 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.199002021 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.191176293 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232837353 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197231478 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234487487 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.267379473 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311137728 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.225931851 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.239187967 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.226104901 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.188422164 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220600158 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.222649076 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241180076 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258676286 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209329033 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.184360098 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203409098 seconds)
  done (took 115.721108567 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.226007222 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.217559201 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.232491572 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.284929777 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.257335652 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.355662728 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.29235988 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.310708418 seconds)
  done (took 3.357138085 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.181804282 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.225100521 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.231289167 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.181845944 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.199491971 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.483873769 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.227466271 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.18094993 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.253089387 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.213690701 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.199948151 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.623566435 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.178763185 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.210601955 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.211061724 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.199547507 seconds)
  done (took 5.171162044 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.940534764 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.592136394 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.693902737 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.348838175 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.321690471 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.275293861 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.821121888 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.256422485 seconds)
  done (took 12.427401448 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.23454401 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.26396379 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.419572251 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.357009272 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.275833987 seconds)
  done (took 2.736906831 seconds)
done (took 166.182198312 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.186071388 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.185778827 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.216501793 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.188275852 seconds)
  done (took 1.945261504 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.226311864 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.145263254 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.17694974 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.145225216 seconds)
  done (took 1.880824331 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.452972346 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.146217346 seconds)
  done (took 1.805406887 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.208300373 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.226317832 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.198631682 seconds)
  done (took 1.82926745 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.198223005 seconds)
  done (took 1.390721832 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.18314092 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.181390183 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.296392869 seconds)
  done (took 1.853526184 seconds)
done (took 11.887794076 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.206083118 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.026751371 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.644062838 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.196090882 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.81060773 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.461596242 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.491161574 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.239197172 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.26529084 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.203207899 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.205937409 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.782494464 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.440532794 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.967268109 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.422041397 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.96649798 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.758460218 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.204136767 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.180109655 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.203720331 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.436819254 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.202689034 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.175436279 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.203033255 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.755089699 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.508652815 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.173736104 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.976991336 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.173526145 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.211618205 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.462839938 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.201756754 seconds)
  done (took 23.332712087 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.176596093 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.260238648 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.228644036 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.205809094 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.182726678 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.205091504 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.185266809 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.216174992 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.27266621 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.205721648 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.19571672 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.203311708 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.179402923 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.204477042 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.197511442 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.202987255 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.178084796 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.205402908 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.182440617 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.206133678 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.196203919 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.204493329 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.176527353 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.204514849 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.175016597 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.220450277 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.175057242 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.215494644 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.174954061 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.213849416 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.179190329 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.204328867 seconds)
  done (took 7.626697143 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.217653671 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.269231034 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.229795239 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.243144729 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.257139112 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.17834599 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.291962764 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.211789243 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.310428607 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.204981629 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.196970796 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.202712091 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.215756778 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.205398183 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.199530796 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.204862814 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.178480616 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.204884718 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.182993353 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.204384361 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.197280549 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.203384019 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.176954777 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.204903295 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.175946302 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.221882738 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.17552852 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.215687211 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.175429343 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.212377459 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.181586047 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.202858997 seconds)
  done (took 7.952153563 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.19026012 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.189300444 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.230035707 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.197584698 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.216211668 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.188366309 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.218402403 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.184478436 seconds)
  done (took 2.816505738 seconds)
done (took 42.917354992 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.198344001 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.190458789 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.225079416 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.189123842 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.287479695 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.213773956 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.193171769 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.213529581 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.18991531 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.22658912 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.175823819 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.183114141 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.225397617 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.186157686 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.290241073 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.222643412 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.295600062 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.260708123 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.21579851 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.189856503 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.216837706 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.295247417 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.189099143 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.215040571 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.244945578 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.209840644 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.28150042 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.186800282 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.185469473 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.207777525 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.293368233 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.18613235 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.215070962 seconds)
  done (took 8.494674841 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.276107472 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.216851321 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.185291268 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.215752089 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.187690631 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.214279016 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.278755461 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.217111083 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.183724142 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.216230422 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.183638594 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.297564276 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.220478815 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.18172344 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.185407819 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.196583648 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.310438124 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.185811034 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.177051206 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.179197784 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.180922824 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.216746519 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.291080825 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.212236964 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.184684156 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.216185751 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.187705855 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.221583798 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.186706253 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.216694662 seconds)
  done (took 7.639901806 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.190497616 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.197226953 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.233810505 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.281227186 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.215374914 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.227965006 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.203166929 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.225745192 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.206979586 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.209467512 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.193864959 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.243252613 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.196406819 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.219656407 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.180238116 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.193004361 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.223787388 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.178561338 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.216834989 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.196728039 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.228771148 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.19460056 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.230728253 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.190214414 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.207289846 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.186748256 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.219623191 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.189426363 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.217436757 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.194451776 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.210939886 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.182649455 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.211021652 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.214264317 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.211768811 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.193578397 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.229571759 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.192798666 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.222906596 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.212399712 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.212088707 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.181012288 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.237308867 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.237790703 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.211602887 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.192856261 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.209231972 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.194808711 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.176606731 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.228444063 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.222031695 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.209603601 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.231357227 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.180179845 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.176691293 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.219238727 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.179700375 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.213436024 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.194739445 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.211814228 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.200328229 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.217301273 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.192096743 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.211274337 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.194441243 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.207935846 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.180198777 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.183245248 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.23831357 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.186748102 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.248884555 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.179396175 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.22315973 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.193525558 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.222696822 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.191872899 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.209718933 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.192433451 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.222398567 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.185032072 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.224305018 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.183760477 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.212567773 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.198533594 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.231019441 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.195731632 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.221572743 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.192032605 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.211614507 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.182149897 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.197045243 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.213761232 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.183620254 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.225056843 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.181274136 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.216138178 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.191247111 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.220030873 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.178651465 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.23799333 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.186088605 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.211281815 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.207998709 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.213669969 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.185153568 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.189666878 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.255066861 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.179941465 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.22099156 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.191874619 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.21165114 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.188211419 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.212680931 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.180203005 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.226559445 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.197954679 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.218134372 seconds)
  done (took 25.375194879 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.386896129 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.379492852 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.277669533 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.426730335 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.227091326 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.303997961 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.378519289 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.382545333 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.181172371 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.245179761 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.268207043 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.345964804 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.182435906 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.241020716 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.386366927 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.425098514 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.243673543 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.248723326 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.21572361 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.226733097 seconds)
  done (took 7.213236 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.189668952 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.245393627 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.203950097 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.231965369 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.192987807 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.194249601 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.212664128 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.201913423 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.225185657 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.18808816 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.215775659 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.189208717 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.225006351 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.197479544 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.228630778 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.203620423 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.219686021 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.185700009 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.235449432 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.18595161 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.230406559 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.20712387 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.221753403 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.203294288 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.231527454 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.191762527 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.21130846 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.186630634 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.219128739 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.190522411 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.215743938 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.1909068 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.219697132 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.163210667 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.193459057 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.22820337 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.188823098 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.214765637 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.187886777 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.213598937 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.197097121 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.223011426 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.18990327 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.194690913 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.231159027 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.168395586 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.193940123 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.226330348 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.16420196 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.231006452 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.193263275 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.225596303 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.190792296 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.233876336 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.19013886 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.228352433 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.19301016 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.225023981 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.188760137 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.18033078 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.211710214 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.183771758 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.221332573 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.196547661 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.225530785 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.190997097 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.220949924 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.182834629 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.217263385 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.18589885 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.213885673 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.196100965 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.234650777 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.192906356 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.188649052 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.223817146 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.19049879 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.183187203 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.191271165 seconds)
  done (took 17.45881074 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.208350153 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.192267746 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.229898737 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.212917938 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.225412503 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.188825253 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.22471509 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.200812398 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.230157372 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.201340293 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.228964567 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.196090913 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.236236357 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.193191529 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.224729338 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.20032839 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.225695561 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.218860374 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.227052627 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.209520177 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.230554606 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.188045989 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.227706723 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.194074528 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.24379201 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.193986036 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.241350271 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.195434327 seconds)
  done (took 7.258846425 seconds)
done (took 74.649318584 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.466203399 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.599400024 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.358050177 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.373978514 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.373541889 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.357196283 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.359481128 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.372311472 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.78771322 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.327057501 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.361726382 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.365176912 seconds)
done (took 30.400364605 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.357773784 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 1.982684657 seconds)
    (2/2) benchmarking "String"...
    done (took 2.005097853 seconds)
  done (took 5.232242666 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 1.985922138 seconds)
    (2/2) benchmarking "String"...
    done (took 1.998557246 seconds)
  done (took 5.229209371 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.343144359 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.338617672 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.730454306 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.35574009 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.33850454 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.351606161 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.348809447 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.346902603 seconds)
  done (took 17.056166113 seconds)
done (took 33.464524976 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.362179697 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.518442798 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.594371497 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.350664231 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.344450986 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.351273848 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.351521752 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.353014088 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.351668137 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.336921141 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.731510404 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.633800525 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.366699284 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.751426624 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.332867315 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.363361862 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.35375854 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.573712288 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.34314308 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.409363512 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.328176783 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.336226952 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.379893801 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.346913962 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.347611454 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.346244332 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.349631611 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.359754093 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.521812574 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.388901438 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.386716386 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.3437732 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.350721346 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.341657576 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.339266303 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.370210298 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.515980671 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.358504597 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.335946298 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.341722294 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.526352115 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.35744817 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.345401499 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.358597198 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.335551792 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.354962921 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.341154535 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.453900192 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.374343454 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.340092948 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.409403256 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.725994036 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.351900743 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.36579102 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.348561778 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.565201551 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.345785761 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.379996288 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.367807234 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.371942648 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.33850617 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.358773538 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.410461929 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.341507399 seconds)
  done (took 152.881071785 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.341264937 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.344077381 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.345429936 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.363537021 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.346334221 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.354799056 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.349811948 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.339453167 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.347113921 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.345971566 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.34570516 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.361801488 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.344394714 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.303643316 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.359545596 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.360765715 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.34764217 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.338599853 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.349037329 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.357634177 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.364782519 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.359432633 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.345945079 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.338193639 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.386568919 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.408220273 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.351432764 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.369117446 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.354942853 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.349418276 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.378747876 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.347794836 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.90670367 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.211970171 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.34654566 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.385928635 seconds)
  done (took 85.396497951 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.339718462 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.348712393 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.344482477 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.367389567 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.341395549 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.842995385 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.849226806 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.330265379 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.844931456 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.504096499 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.52026772 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.343454529 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.427917543 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.349792581 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.337284854 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.354802235 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.432066622 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.372682611 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.345029731 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.337633396 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.83966813 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.358710655 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.574800205 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.520545933 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.34317426 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.375350825 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.739490358 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.338301531 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.369908625 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.65782841 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.366573148 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.356577377 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.591373395 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.429156232 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.455313023 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.339590094 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.341993353 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.367106187 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.33870478 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.629190199 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.338248774 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.348187714 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.348685836 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.890496911 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.34805924 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.834038098 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.344721389 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.260562629 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.344363995 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.348282879 seconds)
    (51/114) benchmarking ("sqrt", "LinearAlgebra.UnitUpperTriangular", 256)...
    done (took 1.742416529 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.474542876 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.887866042 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.343828085 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.338006626 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.358851142 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.337135499 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.348051186 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.373571498 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.529295444 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.156687899 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.344997472 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.34289194 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.38511261 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.340498528 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.349184166 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.126587161 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.39728847 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.032530586 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.83484956 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.345780745 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.447481393 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.452518269 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.349658248 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.346945688 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.33907141 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.342686875 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.339727446 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.446707803 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.357397898 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.340207776 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.71662561 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.509997339 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.341253121 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.447915386 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.439389854 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.339700375 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.610708258 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.346535181 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.350002844 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.001348056 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.438980654 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.344410577 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.342578009 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.340630879 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.72334067 seconds)
    (97/114) benchmarking ("sqrt", "LinearAlgebra.UnitUpperTriangular", 1024)...
    done (took 21.434308845 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.846238829 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.506424904 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.347437374 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.671148711 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.346998117 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.71781759 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.847176923 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.911065033 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.357740784 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.45502372 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.505786463 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.346427045 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.342259522 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.442377007 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.365226239 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.40129861 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.35174006 seconds)
  done (took 383.563441184 seconds)
done (took 623.086164836 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.333981128 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.32839808 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.331074231 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.328141553 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.329632551 seconds)
  done (took 12.898846372 seconds)
done (took 14.146504166 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.36025097 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.351481996 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.351710579 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.001611894 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.355680668 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.348373692 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.351517551 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.361321539 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.349002593 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.348986549 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 1.988169285 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.371535773 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.354345738 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.160013052 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.009984243 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.348379729 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.113132515 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.363453369 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.355980335 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.624968945 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.357392556 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.415912825 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.614051122 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.390969086 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.634900861 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.652493015 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.36892343 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.529779991 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.368689052 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.371075793 seconds)
  done (took 19.583933354 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.091061844 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.638420185 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.367360657 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.43599864 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.618901915 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.392123815 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.64441664 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.673607832 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.358091396 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.54479921 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.379600534 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.375419801 seconds)
  done (took 19.678631858 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 1.964989014 seconds)
done (took 87.81288356 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.386446946 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.440811151 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.37244774 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.382160319 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.374691146 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.370873967 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.365997036 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.365141402 seconds)
  done (took 12.308989344 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.36627127 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.362812684 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.36285855 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.381401351 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.372879648 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.371107218 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.364270848 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.363147149 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.367969314 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.364469087 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.363507451 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.380692292 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.37356298 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.371987073 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.365022796 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.362926155 seconds)
  done (took 23.146627416 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.368242663 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.36402239 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.363855935 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.381571202 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.371854723 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.371087752 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.365835798 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.363396799 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.368242155 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.364510012 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.364566472 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.381296087 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.37155844 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.371571113 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.362563785 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.366618143 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.3666569 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.364757018 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.368016028 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.382921402 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.375994642 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.370578871 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.365840442 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.363711507 seconds)
  done (took 34.111972869 seconds)
done (took 70.818698657 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.351554017 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.350755605 seconds)
  done (took 5.955588728 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.422845206 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.440600503 seconds)
  done (took 4.118360625 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.374261591 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.373823089 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.366229794 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.365785518 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.368838814 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.365611915 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.366879314 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.384313976 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.377950786 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.373749196 seconds)
  done (took 14.970808463 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.366243409 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.367040088 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.369181491 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.366790357 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.36691132 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.385633089 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.376055312 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.372999 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.366888283 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.36583908 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.371430556 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.367428166 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.368147441 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.384969513 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.377625051 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.375192275 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.367099145 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.367501722 seconds)
  done (took 25.937859764 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.383857508 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.387162774 seconds)
  done (took 4.026349655 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.492569367 seconds)
    (2/7) benchmarking "second"...
    done (took 1.424794504 seconds)
    (3/7) benchmarking "month"...
    done (took 1.487221153 seconds)
    (4/7) benchmarking "year"...
    done (took 1.46904466 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.407836667 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.384857245 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.407271659 seconds)
  done (took 11.327210183 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.351511951 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.627374944 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.818041563 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.515584203 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.350875219 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.357519866 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.322479737 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.361257908 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.360776679 seconds)
  done (took 15.312390977 seconds)
done (took 82.902771835 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.336029492 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.371780315 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.377324422 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.358854516 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.63906877 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.365569384 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.332780206 seconds)
done (took 17.023637496 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.315280895 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.314946068 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.321715989 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.319200872 seconds)
  done (took 10.499538141 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.324827618 seconds)
    (2/2) benchmarking "read"...
    done (took 1.639835672 seconds)
  done (took 5.187373334 seconds)
done (took 16.915644044 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.325268431 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.328011282 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.324242386 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.325138958 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.343318536 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.3339229 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.330653741 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.323378647 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.324730057 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.32723772 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.324345934 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.324709539 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.34202513 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.333525258 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.331362559 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.324704094 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.325051407 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.327848924 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.324604942 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.326010812 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.343659794 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.333891787 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.330826197 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.324669559 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.32502449 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.326388411 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.324099541 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.326285708 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.339782493 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.331673032 seconds)
  done (took 41.093160537 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.33257066 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.325782386 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.321513487 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.324733965 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.321050951 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.319008025 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.33809295 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.328400818 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.325821841 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.31970216 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.319375938 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.324797555 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.317157564 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.316153776 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.335326348 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.32586452 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.323620564 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.316618498 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.315546205 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.32007708 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.313490136 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.313876703 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.332379178 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.323816259 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.321071467 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.313037004 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.313258466 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.316302818 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.313003954 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.313816588 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.331244814 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.323029623 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.322100089 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.312351611 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.3141867 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.315989754 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.316602547 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.317892928 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.331995872 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.324831379 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.320968142 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.31400273 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.313207431 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.316765529 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.313356621 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.31397846 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.332928797 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.322914293 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.320966911 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.314001512 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.314855021 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.31843049 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.314650984 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.313908092 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.33330212 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.324199239 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.323505049 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.314808157 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.314399552 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.318127038 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.314057093 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.316313804 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.334163498 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.327297505 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.323268704 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.315757431 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.314264053 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.318417156 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.31658598 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.31703522 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.334961174 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.327056504 seconds)
  done (took 96.304606582 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.32329491 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.316679947 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.316393 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.319347659 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.315940752 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.316588087 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.335615772 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.327684064 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.323032365 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.317265237 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.316230714 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.320929157 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.316411778 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.317263712 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.336230546 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.327333812 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.324202651 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.316159388 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.317290005 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.320744249 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.317093415 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.317516932 seconds)
  done (took 30.270310143 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.335492658 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.328830833 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.324488128 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.31770144 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.320644645 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.322112965 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.318478575 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.320462663 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.337300735 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.328281897 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.325637107 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.318475058 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.32001474 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.321054115 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.318649589 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.321160132 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.337778785 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.331242291 seconds)
  done (took 25.05910171 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.32661751 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.31981802 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.319370404 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.322751179 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.320010629 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.317997918 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.338319265 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.329823999 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.326406575 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.320192077 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.319908037 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.321851724 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.320256568 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.319693897 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.337762907 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.329930191 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.326641709 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.31908318 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.319252238 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.322407139 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.319842597 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.321389246 seconds)
  done (took 30.332167643 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.33978145 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.33102642 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.327770322 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.321293021 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.321054091 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.32442667 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.321972561 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.320357768 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.34223228 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.33296063 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.327848334 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.321195554 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.32396898 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.3245523 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.32136226 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.320995915 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.341735711 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.331345087 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.329363861 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.320471309 seconds)
  done (took 27.75893882 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.322668772 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.327662511 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.322317744 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.323633771 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.344206914 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.334542775 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.332068645 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.323906149 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.323645729 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.327653072 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.324511808 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.324049776 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.343709719 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.33439638 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.33070101 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.324775901 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.325836445 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.327920245 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.324583467 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.325040452 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.343375853 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.334256076 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.332373843 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.324825255 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.325003725 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.327881675 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.325161774 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.32435508 seconds)
  done (took 38.421529531 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.359875373 seconds)
    (2/2) benchmarking "in"...
    done (took 1.352568605 seconds)
  done (took 3.929459374 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.33014638 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.324820359 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.32332725 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.327270283 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.323890242 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.324983848 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.345889076 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.334260864 seconds)
  done (took 11.849125965 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.325136997 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.325684357 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.324911439 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.3288075 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.325334122 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.318866285 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.344523827 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.342261953 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.330762464 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.321370596 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.325115623 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.326237034 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.323210464 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.323497526 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.341535351 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.337466136 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.338665149 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.331666436 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.330204975 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.332073599 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.33005054 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.324018339 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.346612806 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.342923394 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.331539942 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.334077178 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.330554695 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.337262861 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.322734512 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.328455094 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.345427798 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.34264085 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.337840617 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.332816282 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.331182366 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.333872257 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.331294972 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.328087186 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.350730593 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.346254496 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.338749885 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.3317243 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.326262684 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.332136929 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.32761059 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.333975342 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.351236626 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.341332565 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.330786512 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.325605404 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.335189937 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.326564412 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.332845779 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.329651594 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.349746433 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.345729013 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.346157798 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.325005785 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.328142593 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.337902337 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.343245942 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.337195277 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.353091694 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.346787624 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.337524001 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.335425927 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.337433066 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.341556641 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.334133911 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.335508105 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.354768632 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.357909145 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.348691326 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.336040241 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.333591009 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.336837014 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.328213866 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.336955022 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.355848981 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.346994139 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.345812643 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.334871492 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.331447988 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.337906244 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.329260235 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.337342327 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.353012208 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.346037473 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.335448853 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.338980239 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.342700549 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.338346071 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.326915328 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.329724425 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.352444732 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.346359163 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.335976101 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.333049351 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.336371192 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.33823984 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.334050846 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.329767846 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.353893622 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.348902233 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.342211965 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.339914565 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.341235132 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.332463731 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.341547485 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.341702356 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.355039696 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.340085474 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.34252408 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.339405372 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.329053604 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.33812919 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.340443918 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.331888643 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.360074054 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.347145563 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.341178313 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.341962136 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.341762326 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.339800225 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.331961068 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.341512733 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.357408528 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.343782339 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.348507472 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.337145939 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.336527276 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.33758914 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.340934916 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.332976388 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.360855031 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.344025816 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.349244706 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.337294055 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.338055544 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.337509367 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.336109371 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.336041811 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.357705792 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.350007991 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.350325457 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.334154206 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.347675115 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.342110341 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.336733308 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.338736532 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.362747083 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.349961918 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.342377266 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.342420692 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.332438769 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.343773903 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.33405895 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.342408347 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.361041297 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.349877294 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.34718874 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.331003555 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.335578638 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.346042862 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.338705218 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.338491489 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.363190309 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.352277675 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.349003289 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.334088008 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.341243642 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.335716032 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.334844989 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.343625634 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.360674779 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.351039172 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.345629953 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.344527336 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.340326506 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.343662328 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.335078881 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.339029461 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.365502933 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.356429828 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.353696863 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.340912981 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.340184804 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.338494148 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.337678553 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.343949252 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.356132781 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.358734944 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.358592715 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.350928624 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.336158184 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.347033098 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.333502155 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.345455318 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.361477298 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.359955193 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.351219138 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.343126453 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.336921324 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.348310442 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.337987129 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.345702987 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.35592671 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.356462361 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.352088003 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.34406259 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.3439084 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.342540955 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.343016666 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.344991072 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.364506879 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.354418151 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.344356258 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.347105256 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.334791817 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.342022558 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.347359065 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.34379113 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.368967596 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.360864277 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.348042461 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.344575278 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.343081246 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.34257412 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.346645914 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.34234424 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.362821455 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.361332152 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.353453777 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.342546215 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.349430208 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.349198656 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.337754352 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.345809702 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.373423524 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.355830182 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.34646751 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.350017539 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.34692292 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.348965922 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.346231587 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.341410247 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.370616495 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.358313161 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.360176814 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.339707084 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.350263171 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.344010826 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.349458522 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.343394747 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.368216355 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.35697148 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.356652155 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.352567752 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.3477386 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.345038214 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.351105097 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.347573422 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.36810451 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.351546507 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.35914547 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.34752721 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.347773905 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.348481728 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.344025068 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.350539432 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.361777741 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.360199544 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.35086521 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.360947848 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.361342813 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.357890398 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.351636975 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.350158494 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.369454087 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.357552372 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.35068639 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.344408786 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.347107852 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.349663912 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.343677628 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.351069175 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.365451933 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.363379643 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.353597764 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.347091681 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.35124926 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.35492816 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.343631353 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.353183784 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.370728931 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.36073568 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.349474613 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.351478086 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.34663524 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.353926666 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.34823509 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.344112427 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.377902617 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.364715451 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.355752548 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.348104289 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.345267133 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.347422711 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.348166083 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.356057596 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.36565286 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.365788911 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.351712666 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.350653478 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.347250296 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.359134636 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.356915456 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.344850457 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.374666587 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.361945138 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.351105874 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.345628682 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.352059025 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.357965267 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.358869543 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.342756971 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.376062939 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.362581281 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.360258064 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.353685891 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.352941305 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.356183995 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.352411033 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.355914681 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.375080041 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.360419289 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.361802457 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.358009566 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.352663559 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.356762723 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.344354804 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.354279167 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.381177286 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.360943087 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.361601925 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.348280858 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.354921435 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.356737927 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.351479571 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.353904439 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.376281327 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.369839974 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.363403035 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.356546211 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.353220635 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.361996564 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.361372553 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.359923967 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.383882484 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.36114276 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.367056789 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.354564157 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.348975875 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.353028818 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.350771483 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.357665491 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.369363324 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.37115787 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.362920372 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.352082955 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.356493992 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.363472973 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.347801148 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.35404789 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.385264173 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.35833248 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.365562031 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.355443763 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.348350017 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.360539736 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.356020808 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.348232375 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.371980461 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.365106804 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.368896231 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.351271104 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.360927507 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.354530534 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.360324925 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.356529927 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.380084004 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.367779556 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.365197717 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.350759194 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.358749873 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.361826585 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.362833256 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.352527182 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.378953882 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.364811489 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.370763648 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.364388769 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.355224427 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.366497265 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.359526479 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.35351278 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.378881415 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.374615178 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.36243032 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.361751333 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.350708877 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.356658763 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.355132012 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.358691013 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.382630607 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.375206153 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.361241836 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.354182617 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.36061374 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.362438294 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.359265085 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.355112049 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.386597584 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.364045964 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.360112882 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.361594396 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.353754132 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.366777843 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.353753287 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.356654021 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.379213928 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.375370867 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.367272348 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.358861498 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.353248539 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.359036753 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.36823748 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.360641167 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.38039811 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.368729188 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.369810889 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.354758155 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.358015371 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.362316862 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.356846795 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.357636858 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.385894597 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.368804016 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.364611248 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.356865577 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.363411396 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.368692454 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.362469725 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.357951797 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.39019249 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.379940125 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.37493476 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.353783157 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.35799873 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.362599566 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.364142629 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.362052078 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.37832945 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.381801577 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.374696787 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.366483633 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.35885547 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.363104249 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.355513934 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.364497167 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.386374925 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.371628329 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.376935913 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.360341876 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.369558614 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.367861474 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.362191964 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.355025559 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.381226801 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.369620706 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.368455185 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.365464977 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.362359792 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.365860711 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.361912073 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.367740734 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.386768204 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.37780154 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.372558547 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.357500234 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.366477907 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.361578253 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.364700345 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.362529008 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.382435965 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.379077394 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.375824053 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.358210422 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.36285736 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.373172156 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.365800632 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.358241226 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.386307693 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.381845135 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.380589298 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.364666817 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.359704791 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.36845539 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.369268526 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.365716331 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.38963259 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.370850842 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.38437772 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.374803325 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.361008523 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.367249174 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.3703151 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.372291195 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.389000043 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.379184283 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.371501255 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.364212668 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.370379494 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.369972643 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.368296236 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.369462448 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.385670074 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.383191022 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.370036689 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.364801747 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.367451202 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.377789653 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.367829627 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.361200994 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.398792835 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.386822023 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.373594406 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.38028098 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.372029722 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.372528984 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.373184781 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.361659518 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.394877093 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.377472006 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.381032044 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.368892412 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.368723987 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.372790781 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.361869458 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.369540124 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.396953789 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.389299367 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.378426768 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.361212696 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.365449972 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.373706639 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.370482476 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.371369783 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.392447547 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.382083447 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.377287258 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.36485442 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.384612498 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.385882121 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.375551036 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.369952344 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.394155125 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.381896496 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.379291429 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.368853867 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.374705365 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.374786405 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.371282907 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.368141582 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.400663441 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.384607508 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.373839314 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.365843136 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.366301016 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.377962213 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.380777981 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.385941935 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.395859539 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.385699508 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.382994795 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.371433938 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.367489989 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.379865742 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.371553888 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.368064751 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.391532059 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.387331226 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.381383895 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.372650154 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.366504495 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.380234432 seconds)
  done (took 808.925726552 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.373272195 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.372296615 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.397947593 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.38461711 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.380399635 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.373202792 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.373893819 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.376309162 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.373526511 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.37320762 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.397206047 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.387028004 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.383343474 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.374409135 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.374397389 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.378521426 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.374386745 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.373900428 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.397701469 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.386682116 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.382769984 seconds)
  done (took 30.249955384 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.375293789 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.375033645 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.380183836 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.375918326 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.374078758 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.398349414 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.387754016 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.38363683 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.375605463 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.373410633 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.377734379 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.375669128 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.375224184 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.399915623 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.388203759 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.384952841 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.375757462 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.374964674 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.379371767 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.376760344 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.375163828 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.399196235 seconds)
  done (took 31.644541694 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.389655041 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.385064449 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.367936249 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.378719486 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.379976178 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.374915505 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.375518914 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.399938439 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.390437884 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.379165487 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.370567119 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.370705903 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.376378883 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.379853342 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.372379878 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.405682426 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.390836444 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.385181918 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.376072728 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.376751712 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.381682028 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.383877084 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.376647615 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.392422828 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.391972239 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.386590786 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.378862231 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.377448113 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.372469194 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.379929377 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.377510658 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.396180857 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.391632504 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.384050036 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.372386407 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.379759924 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.381416658 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.376550568 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.378359308 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.401243821 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.401071505 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.387610782 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.384028024 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.385033389 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.382431105 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.372382875 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.384514498 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.40304733 seconds)
  done (took 67.650748281 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.392157918 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.38982571 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.378902912 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.378595985 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.383385211 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.380109098 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.380439439 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.404050764 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.392723815 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.389776508 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.380616919 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.381297499 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.383471564 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.3797234 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.381369564 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.405381909 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.392470555 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.388898045 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.380483746 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.380184013 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.383800407 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.380013616 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.380787407 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.405297456 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.39461624 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.390939767 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.38067382 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.381236186 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.385461732 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.381349433 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.380949957 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.407669894 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.394722321 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.390610939 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.381544383 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.382113892 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.386246947 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.380655144 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.381326478 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.407695767 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.396478249 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.390584004 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.381910417 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.382999476 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.386326954 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.382813239 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.381717484 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.408181306 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.396413908 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.39165159 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.384160184 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.38239201 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.386582005 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.381685653 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.383793058 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.408518269 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.395985814 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.391970075 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.382812517 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.38483036 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.387031435 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.383656568 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.383097197 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.410177058 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.396026462 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.392631077 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.385198164 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.384812623 seconds)
  done (took 95.653696818 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.388914805 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.385223773 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.383910976 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.411982971 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.39924933 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.394702444 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.384859167 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.384362119 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.390283283 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.384173777 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.385863493 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.411721528 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.399410958 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.394377537 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.386277518 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.385842757 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.389932295 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.38697751 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.385148405 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.411604749 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.399205576 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.396001341 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.387118123 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.386829814 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.390575392 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.385803803 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.386212834 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.412299796 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.399226801 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.395747002 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.38705351 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.386820316 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.390569674 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.38713875 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.387445522 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.41423987 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.401049148 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.395553388 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.387416944 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.387238942 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.391747869 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.387709926 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.387449241 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.413988973 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.401331845 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.397041271 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.388433023 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.388457026 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.391663747 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.388447097 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.387432848 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.414728719 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.402630818 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.398685362 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.389120451 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.389954457 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.392701105 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.388557 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.38883044 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.414533223 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.404472274 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.398608029 seconds)
  done (took 87.68799024 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.389941658 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.390565542 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.392375057 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.389750822 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.390046262 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.416057103 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.404560592 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.39930415 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.388890881 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.388831578 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.394105247 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.391639765 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.389721487 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.415927752 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.405228833 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.398167986 seconds)
  done (took 23.620657028 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.389892056 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.389845724 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.394129352 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.390169866 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.390197481 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.416370928 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.403936993 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.400285982 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.388411133 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.390599363 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.394849728 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.392268945 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.39075569 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.41762742 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.406704644 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.400975676 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.391209869 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.391131041 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.394984195 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.390965767 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.391195127 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.417046904 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.40525511 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.401967153 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.390917542 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.390996102 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.39592368 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.391630156 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.39078017 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.418397953 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.406940594 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.402595036 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.391973478 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.391656049 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.396954981 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.392155384 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.392333511 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.419112457 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.405047636 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.404104347 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.392500495 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.392914651 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.399144066 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.39378069 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.390853062 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.421787142 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.406432389 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.401978842 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.392873458 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.39527687 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.397635364 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.394248587 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.394209896 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.420783591 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.408989109 seconds)
  done (took 78.203062916 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.403486491 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.393379326 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.394061443 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.39918581 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.393927618 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.393720052 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.423378793 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.412222106 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.403925825 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.395302969 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.395145707 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.400477998 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.394130516 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.394853001 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.450948746 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.409905791 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.406439802 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.395188153 seconds)
  done (took 26.539102241 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.395988581 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.39897806 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.394533881 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.396020486 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.42231519 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.410031347 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.404947228 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.396344686 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.395123389 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.400195093 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.396121824 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.396388373 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.424338681 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.411576485 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.40745998 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.396618397 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.398465265 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.401121785 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.397122256 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.396927709 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.42499229 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.410029802 seconds)
  done (took 32.158325542 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.396079361 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.387499211 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.387157543 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.404356466 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.394703982 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.388548806 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.415495154 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.402199706 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.411808895 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.409079892 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.408100565 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.399471061 seconds)
  done (took 18.08723653 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.39854749 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399596517 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.425222872 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.411874586 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.409204481 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.398657158 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.398202273 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402546613 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.398165202 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.398186423 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.427066334 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.414012316 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407905949 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.399475712 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.400717815 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.403099148 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.398995298 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400586585 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.427297538 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.414930776 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.408956103 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.401071646 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.399063783 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403495024 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.399741955 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.398877553 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.428236414 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.415105687 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.410463463 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.400756648 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.401411593 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406212013 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399265974 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.401045365 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.428208349 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.41576588 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.411187224 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.40113416 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.401380716 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404883365 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.399727028 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.401303048 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.429746809 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416377912 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.411946603 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402333607 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.401246431 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.405831379 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.400055545 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.401507308 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.429331552 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416474441 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410972322 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.402552917 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.402052478 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406467798 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402108635 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.401831799 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.430333257 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.417711947 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.411673393 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.402786007 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403715892 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407817041 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.403367512 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.404148421 seconds)
  done (took 94.180218021 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.432431451 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.41799432 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.413183197 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402570427 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.404046086 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407609984 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403294915 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.40141041 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.431208931 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.41762269 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.414331667 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.402988068 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402409753 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407931367 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404650073 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40427425 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.431889357 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.419173408 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.413582138 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404138948 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404213176 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.408480453 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.404721078 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402886726 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.43344625 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.420597886 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.414014465 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.404282034 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.403859621 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.408087298 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404140984 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404872231 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.433117151 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.420518074 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.414694235 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405121498 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40671716 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.410506134 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403761026 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40474203 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.434930397 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.420618919 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.414947006 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404832398 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405615323 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.409526178 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.404620172 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403698578 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.434112788 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.421300445 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.416126454 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.406436503 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.40719575 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.410207419 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.404830245 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.405747513 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.435136313 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.422655672 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416511627 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406323535 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407107702 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.41178538 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407764482 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405995247 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.436861598 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.422585877 seconds)
  done (took 94.516641433 seconds)
done (took 1795.352687283 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.404756908 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.392704465 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.397437392 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 10.519564432 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.397104576 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.056605786 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 5.973596962 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.413877434 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.409723161 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.397959132 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.398120312 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.401071902 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.720928104 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.39773867 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.427098635 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.411020583 seconds)
  done (took 55.407186378 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.432494405 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.416949156 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.521301821 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.427277991 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.437350933 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.591031181 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.509944684 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.432088366 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.58194202 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.427694533 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.411463048 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.449899042 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.414395086 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.410862195 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.470972693 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.608229611 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.674493483 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.427128772 seconds)
  done (took 30.940555958 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.827357206 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.454571783 seconds)
  done (took 5.58680822 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.434545429 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.414686261 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.448863433 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.430488969 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.425430517 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.407041152 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.414390631 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.423363482 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.416726117 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.541649016 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.459978847 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.444613856 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.426927715 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.416451041 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.422518288 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.463833359 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.544865028 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.426232209 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.452585284 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.437704725 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.425700153 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.576367647 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.464921526 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.439345532 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.530821868 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.428717314 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.462954617 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.447140781 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.568118298 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.426849894 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.417101317 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.420806998 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.419047042 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.372598735 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.968003982 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.426078455 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.45682385 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.424993117 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.42510987 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.564787355 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.419768458 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.422680206 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.440377438 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.943726152 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.549649983 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.630224992 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.423989252 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.4356078 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.419301442 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.558150058 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.459641103 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.434079187 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.487154456 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.411857698 seconds)
  done (took 90.85667958 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.449917604 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.415146201 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.593812536 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.430622672 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.440423447 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.448737678 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.430080777 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.676063869 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.426843987 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.416440444 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.739916404 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.029278006 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.462542279 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.468749328 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.46609795 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.439502051 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.411808364 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.416468684 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.411069003 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.416404491 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.991452399 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.439070904 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.421506859 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.611819372 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.452904064 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.947946703 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.412769522 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.42265458 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.454684199 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.425846498 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.006397201 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.416506305 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.469309927 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.418451681 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.691220677 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.787517735 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.779546371 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.429283748 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.471467059 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.415131953 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.447008046 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.945184821 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.772248809 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.412141659 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.43994938 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.958882432 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.422677731 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.412481402 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.413298975 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.679176616 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.41161717 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.414888965 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.44057641 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.429083313 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.422357017 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.476839664 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.473431687 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.947271843 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.413846481 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.414342578 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.487247946 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.427246932 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.4348456 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.416092423 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.414868492 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.77895714 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.598516699 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.423910287 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.800916496 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.002417735 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.424165625 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.063518305 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.426173475 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.443881715 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.527803526 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.41463205 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.455625692 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.952999127 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.425120802 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.414503359 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.751727485 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.419971058 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.716253833 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.428888326 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.443938538 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.012016763 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.43071221 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.49495957 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.41452328 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.419985615 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.413508359 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.416001537 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.7241678 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.459459567 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.424957924 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.414910797 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.450134152 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.419861637 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.431936654 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.425968666 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.09802885 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.450801485 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.427132691 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.419195543 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.417512075 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.421655411 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.416587866 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.418198823 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.723484662 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.432276285 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.451108973 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.420734839 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.416885632 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.434305484 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.618189446 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.424478921 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.738340333 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.434599908 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.427215573 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.422055154 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.417870963 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.422647656 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.41724114 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.423523109 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.363579317 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.747471544 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.441742193 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.418508722 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.419295211 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.422232136 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.418683347 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.420189298 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.47727661 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.437050484 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.233626454 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.450377784 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.446853761 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.423148656 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.420842049 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.418524544 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.452556775 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.43423859 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.741880698 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.696282589 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.626165669 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.423177044 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.419133639 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.206232871 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.492934438 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.619332439 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.447051119 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.420093781 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.721895985 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.621499302 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.422151042 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.418605236 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.450176334 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.717180113 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.442451098 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.732581276 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.019627017 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.434751534 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.423824509 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.218042016 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.189257022 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.43807141 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.434684482 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.720794907 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.433431586 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.427502182 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.419868942 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.42025487 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.44938868 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.442333379 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.437689893 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.42183908 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.420248995 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.500246091 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.617240311 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.436377183 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.460335653 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.960640458 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.438881028 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.421895086 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.424102717 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.430270898 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.422114989 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.471539649 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.454722124 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.468268476 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.432479397 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.42465432 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.979942701 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.425774986 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.424358311 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.618304802 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.192112702 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.437809014 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.434400535 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.423270521 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.45420407 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.980059092 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.424904891 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.715479401 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.464835869 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.47835872 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.432436288 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.444821284 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.976778188 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.429556359 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.425900777 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.14087495 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.452736721 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.214053069 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.435024446 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.426769594 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.073997294 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.426081905 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.422547828 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.422813344 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.451407833 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.762053616 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.437387809 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.450365869 seconds)
  done (took 518.520474733 seconds)
done (took 702.604786868 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.422027205 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.427471143 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.435348507 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.434388569 seconds)
  done (took 11.031776955 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.466776721 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.442783386 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.446256801 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.426184186 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.438382086 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.432110725 seconds)
  done (took 9.963811527 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.416384596 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.416838638 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.45788537 seconds)
  done (took 8.606175689 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.626792944 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.428196211 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.764144312 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.437171711 seconds)
  done (took 9.564244326 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.429677639 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.426029315 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.427014761 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.455740383 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.444993974 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.441724619 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.431156581 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.428183103 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.433164195 seconds)
  done (took 14.222352514 seconds)
done (took 54.707816167 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.494526511 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.498247998 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.448258763 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.481470992 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.557468367 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.506817675 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.501365073 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.512061019 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.503154217 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.456170631 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.529776236 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.462531035 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.516163408 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.623273756 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.453900402 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.504010542 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.448905249 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.5902096 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.534069701 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.476693901 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.537723776 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.45742677 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.458138995 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.431391783 seconds)
  done (took 39.287499005 seconds)
done (took 40.597904226 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.44609036 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.519928019 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.456287572 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.441582703 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.439285803 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.396861006 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.457763841 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.432595466 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.440904423 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.442443979 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.427540103 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.461668604 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.452738928 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.438639713 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.461718605 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.432327439 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.428303916 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.436839382 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.472420259 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.460670498 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.440548758 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.429249152 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.454690549 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.433011492 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.436347812 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.435831414 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.464816568 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.448055144 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.446128291 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.444694527 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.42620554 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.439008304 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.444013466 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.441345011 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.461897407 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.454812844 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.443361475 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.522727963 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.451121182 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.442579574 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.438879701 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.446162495 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.466019785 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.451497795 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.452057253 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.456765734 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.438474473 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.450337369 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.425770417 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.393814626 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.492643889 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.457862057 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.450927098 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.3930466 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.436223421 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.450093347 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.441861974 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.450299446 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.468847737 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.448796968 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.475606013 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.451247075 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.442939866 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.444283626 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.438616823 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.44549678 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.471034022 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.462755533 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.448354356 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.434193909 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.430771829 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.442879645 seconds)
done (took 113.524642449 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.553960654 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.427975594 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.615675155 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.455267369 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.608762913 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.556558677 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.439455563 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.444701921 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.438658517 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.231305395 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.470034584 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.457577055 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.440194663 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.439219615 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.555402675 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.445961446 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.439520374 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.133063795 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.471660261 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.585886547 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.440327609 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.439951638 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.441348988 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.239619419 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.430596183 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.425460011 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.599008085 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.457130483 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.143660239 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.432544367 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.427801306 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.136492783 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.568260229 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.459133907 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.481549805 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.466824048 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.610933215 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.444038142 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.557832396 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.560271316 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.586283424 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.479561106 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.45680346 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.448008361 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.452767467 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.443057686 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.441800924 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.474553755 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.431363436 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.441111088 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.166181969 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.467438926 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.453446334 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.442079818 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.443190088 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.475252778 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.443001614 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.44229444 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.602294885 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.460409524 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.571335589 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.2383232 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.234087872 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.448890596 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.42965852 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.44246064 seconds)
  done (took 115.704563545 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.534651431 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.529669157 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.553327617 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.43512846 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.483801177 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.547620195 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.434025237 seconds)
  done (took 11.843399723 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.440718532 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.474464779 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.499142961 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.493231072 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.443485245 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.607611221 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.447397424 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.446705525 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.443163397 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.517269621 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.461791294 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.455867101 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.452456368 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.434456129 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.487689286 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.447407197 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.551879129 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.46921173 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.462588932 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.601806436 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.445429248 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.452445449 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.493480453 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.44858149 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.444439683 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.473163325 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.210808699 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.455146145 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.44415521 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.444461079 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.450137642 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.503062419 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.445934454 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.468211056 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.462259762 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.560743115 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.445320894 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.445333061 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.450767997 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.437681222 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.445689826 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.475715018 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.463820977 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.456989 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.445993084 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.46393441 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.451811099 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.446735424 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.446313041 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.479879291 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.504426438 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.456262795 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.446600967 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.445286597 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.494775686 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.455632352 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.446126164 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.479242718 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.465096123 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.458271755 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.59311064 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.486763492 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.451435862 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.486321995 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.446998641 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.480756043 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.46550435 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.458559366 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.529432352 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.446778248 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.492242277 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.449790501 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.620841654 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.496843105 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.466057733 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.454331171 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.443121531 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.448623348 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.440508749 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.444450346 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.44837782 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.474557438 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.465421527 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.459272743 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.448730862 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.598756861 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.553793175 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.448969874 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.456020508 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.48103125 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.469308143 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.502732472 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.448551384 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.448372845 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.495992216 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.556310143 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.49346756 seconds)
  done (took 149.022600873 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.484838901 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.47279311 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.457096345 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.469378126 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.444983267 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.447451177 seconds)
  done (took 10.106973435 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.444386614 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.452300991 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.483220337 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.468083598 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.462996232 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.451899321 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.451628447 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.447379958 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.453436321 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.450328402 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.484170345 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.471591296 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.463895245 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.45189811 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.451025772 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.454368035 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.45289375 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.451582444 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.484317071 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.470693676 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.451835358 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.452620911 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.454195708 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.449664198 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.454022366 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.454359555 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.502221701 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.470940666 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.465045388 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.452548918 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.454265445 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.459650101 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.445346694 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.447839846 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.48737992 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.466228221 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.468072392 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.454481173 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.452566555 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.458549476 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.456438765 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.455688225 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.487138086 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.473947382 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.458051968 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.450176898 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.458944109 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.47413946 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.454133825 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.455810871 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.489482864 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.471606886 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.465940474 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.456211553 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.449353852 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.452933412 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.458670574 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.455848311 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.490166124 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.466964722 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.468755487 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.455537325 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.44942027 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.463033979 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.45518834 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.456623608 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.482202146 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.476399659 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.469001916 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.457251704 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.458676006 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.46193152 seconds)
  done (took 107.565405546 seconds)
done (took 395.562563885 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.724987225 seconds)
  done (took 4.053708472 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.482397397 seconds)
  done (took 3.8208346 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.262762955 seconds)
  done (took 21.601956814 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.550689875 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.453839599 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.470886851 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.46193681 seconds)
  done (took 11.273647815 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.882867949 seconds)
  done (took 4.227386851 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.459179496 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.495724555 seconds)
  done (took 6.294704234 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.715969138 seconds)
  done (took 4.053113228 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.031081882 seconds)
  done (took 4.369159775 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.482620652 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.475389823 seconds)
  done (took 6.303871604 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.442655905 seconds)
  done (took 3.780420275 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 13.299060172 seconds)
  done (took 14.64490745 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.474424138 seconds)
  done (took 3.813493369 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.501795277 seconds)
  done (took 3.840092707 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.803502546 seconds)
  done (took 6.141193622 seconds)
done (took 99.554400994 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.462911752 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.462239412 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.460892844 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.46038968 seconds)
  done (took 11.184567268 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.530972467 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.530028503 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.575705976 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.545812055 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.533327233 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.535384372 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.491848144 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.498526609 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.521478824 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.520758386 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.570679348 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.544425248 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.545874053 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.494678565 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.520652034 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.541564991 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.52597627 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.540571 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.528731526 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.540706427 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.482413158 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.527024851 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.51962805 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.475710531 seconds)
  done (took 37.990792124 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.954381144 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.529932503 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.648537678 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.529644955 seconds)
  done (took 8.010590538 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.586546461 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.574969851 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.592369414 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.631960029 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.657853226 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.590160702 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.531832963 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.510193138 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.490131201 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.573794504 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.650586973 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.580564994 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.789831192 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.469142541 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.822453653 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.489947979 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.483977744 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.574142074 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.625463569 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.656064805 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.470020042 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.576177774 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.614143803 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.59294965 seconds)
  done (took 39.475216579 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.49053037 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.487437868 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.473167179 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.491744116 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.472847387 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.471877528 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.508846281 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.497277134 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.484067906 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.472478829 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.472566284 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.491331389 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.472938553 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.471872716 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.516233004 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.493523576 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.487080058 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.479542388 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.482689268 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.478962878 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.472997478 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.480643023 seconds)
  done (took 34.00071039 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.493771779 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.47603262 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.820716788 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.711461066 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.457430675 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.461547969 seconds)
  done (took 14.771946082 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.527511101 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.660958204 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.500821194 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.814245487 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.900872035 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.467110562 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.466066142 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.699164305 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.970758895 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.98053859 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.547238477 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.549700889 seconds)
  done (took 21.428298516 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561732072 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.468659574 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.47054393 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527247737 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468427473 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.468372274 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.555326655 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.921383764 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.486372882 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.744176319 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478843928 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567669357 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.717276548 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469578461 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.515774406 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.447750059 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.711203878 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964080636 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473937145 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47754249 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.514016461 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.474525964 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.518228572 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.694309951 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.496481517 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.475711627 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.736492204 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.478531936 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.744229867 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.724394586 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.762642231 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.506544161 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.763838531 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873152023 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.582487167 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.672931157 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481275766 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.477134146 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.525151924 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.510377437 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.505472212 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.48643032 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.717256752 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492400972 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.47688951 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.476864035 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.961133852 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.50482263 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.489774327 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.47900735 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.718570825 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.571652786 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.483792977 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.477417683 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508088233 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497788714 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.495154872 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.592091383 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.115597326 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489216376 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488842537 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.48548293 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.511811222 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508556355 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118351499 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.492943236 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.485231386 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.48996153 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477592655 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.483699236 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.545826045 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497911746 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.511796277 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478299604 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.211736809 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.493738785 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508184517 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025110132 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517828074 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.509691896 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.719107457 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479144416 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479595623 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.482909223 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.480071877 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.224690283 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.524601085 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.475075567 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524318613 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.917579132 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.674489669 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.512312606 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508997713 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.701296712 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.491168555 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501568055 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.508241177 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490801837 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.502046101 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.925127761 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480460043 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.485885293 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.765785934 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.711348222 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507835219 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.451606899 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925538914 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484673711 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.51101993 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.481924064 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.722709272 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.097812992 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.753404839 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492977843 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.528130144 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.48749235 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.296903924 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483539055 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.535277815 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.503023247 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.776197481 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.312997245 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483515203 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560737851 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.486877936 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.483710932 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.526703003 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514249855 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.496184921 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.659081443 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.503580591 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.739657786 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.494321602 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483471875 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.520613828 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505630372 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.508212478 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.704485765 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483805874 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.774375232 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482236484 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484799474 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.523598427 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.72628456 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.499440217 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.500536667 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.825371989 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502423501 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.502900641 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.735750581 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.566870136 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.621161098 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.532119116 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.495919417 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.741546905 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.495479506 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.490892278 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.493283739 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.5350539 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510687697 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.508597922 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494375737 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079130376 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477251927 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.491188881 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.486797249 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.539173288 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.582295544 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.506088514 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.681509112 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.501748212 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489188457 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.493345249 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.487545405 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.746424294 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.7503779 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.508893454 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.668396927 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.927445993 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.085096664 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.510400103 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.486035882 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.526049636 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.507654197 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500824542 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487256736 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.488108987 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.687875003 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.745219968 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.499334087 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.123387477 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518289885 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.500555197 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.50235383 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.729462507 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.512301211 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489040463 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.488653793 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527120118 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.524340821 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.753977888 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.719347633 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.505161173 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.494155143 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.008965945 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.496008286 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.526960297 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.509999482 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.530525315 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.488222064 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.009285583 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.834194589 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.493104658 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.733561964 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.539108523 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.530514037 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.501839583 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491292345 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49257845 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.510001636 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.506929072 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.686554559 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.551528377 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522922349 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.142106569 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.237678595 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.035921973 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.516986558 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.494827077 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.499785545 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.980252524 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512676455 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.507287875 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.730897879 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.93611608 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499239081 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.935525765 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.496604533 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.28105528 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.75794656 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.740893084 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.502054315 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.49613669 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.745272784 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.716294039 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.519854699 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.542994175 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522164151 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.483470903 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.009734816 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.492917634 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.677468821 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.939752266 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494036873 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.543584707 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.599800379 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.5246535 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872544605 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.493626446 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500208823 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.504910818 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.504846399 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.064271352 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.520869775 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.509712352 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.115660806 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.495764475 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.971901507 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495809577 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.690509271 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.789627492 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.753106583 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.528077968 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.503652177 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.739922467 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.747102859 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504167859 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.496995108 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.08297092 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.384326128 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.518144779 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498252942 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.311702254 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508701377 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.77765308 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.518693454 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.553871867 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.526668357 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.512165744 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499242282 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.497432314 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.508319641 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472708788 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993244246 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.542328481 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.521261824 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.524502751 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504380156 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.744573402 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.518051979 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.095853806 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.731079598 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.534391969 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.553217763 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.517515625 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505102138 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.475032702 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.503864681 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.497213424 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510451777 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.761588647 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.53293359 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.487995767 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.559848934 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.711901078 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.503258078 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.508630287 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.708681196 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.548870829 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.536479939 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272539647 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.5403991 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.504940531 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515067641 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.495221618 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533870173 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.615580718 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.720572198 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.767878043 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.755698083 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887769432 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509732045 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.502011124 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.514624612 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.624195087 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.522083657 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.539186634 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.499989871 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101004325 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257193853 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.115135851 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.751914256 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.553009943 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532937724 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515633088 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.742402546 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.502083281 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.781977162 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500855263 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.497963127 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.566571586 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.531538608 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.537205254 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.721070752 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.777344175 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.507671924 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507536181 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507962479 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.54546521 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.777052961 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.738800364 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002852769 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058801316 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510750473 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.507599788 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.960736975 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.821406528 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526939361 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.518229257 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504806785 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.504209143 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.533786591 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.511766457 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510955109 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.776657872 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.77235539 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935847043 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.750616931 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.548314718 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.393638268 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504046842 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.759004627 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377647104 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.724907148 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.134279376 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.205819204 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.757943102 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.584558846 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.702419662 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.512362369 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.78497035 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.528864741 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.520331375 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.506493937 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505984423 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.509655938 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.752210133 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120620584 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.800312435 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.534622223 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.520273492 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.534296865 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.704398218 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.738767534 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.259184108 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.72754371 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.799810319 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.545065506 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.521456468 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.116646582 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.757365134 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.522538046 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.514818915 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.716615187 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.557912913 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.568752807 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.397583289 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.505366794 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062815228 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.725898708 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.529333788 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519642161 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.259116734 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.137047359 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.524581156 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026508481 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.511858567 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.524213445 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.793529658 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.516245117 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.551775752 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.829081363 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.527071199 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.514857818 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.719110782 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.121435146 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.26243139 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.515077141 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.580039856 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.559392127 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524784149 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.580365117 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510288264 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.51550569 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.87889706 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.509955299 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.553349318 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.546687721 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.530273191 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.519605662 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.517552829 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51720512 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.51810263 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.494450078 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.559542802 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.545038691 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.650250045 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035236621 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513930445 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.133861924 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.845692827 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.757134767 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.563821379 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.51825438 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.532526655 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513791299 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512106673 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515623915 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.506308436 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075198297 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.565420446 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.793693008 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.541721165 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.725648736 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.724417983 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.527730405 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.714045599 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532545607 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.584417977 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.512881371 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528192729 seconds)
  done (took 1039.830278861 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.503041654 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.523191368 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.512501373 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.526543422 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.509515758 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.598582353 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.574711787 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.526284122 seconds)
  done (took 21.664702129 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.51227806 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.512136815 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.517661446 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.519850901 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.506835492 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.01790628 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.534719286 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.529141531 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.532466445 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.511337971 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.516187032 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.121357829 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.524613391 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.559007403 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.539659831 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.53107944 seconds)
  done (took 34.878266507 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.171120078 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.831318165 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.999381734 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.544202749 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.537844786 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.554154356 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.657779011 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.543221476 seconds)
  done (took 27.233569907 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.518086543 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.520385145 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.525103112 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.521840243 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.525347334 seconds)
  done (took 9.004812559 seconds)
done (took 1300.811745661 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.566022668 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.545223652 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.536848554 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.522470966 seconds)
  done (took 7.554291879 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.490437191 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.497339905 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.491149114 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.504958298 seconds)
  done (took 10.378787216 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.901978326 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.058543028 seconds)
  done (took 5.34537978 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.530813897 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.281102351 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.268615083 seconds)
  done (took 8.46514506 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.815830507 seconds)
  done (took 3.212926786 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.915837693 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.002958986 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.55243827 seconds)
  done (took 7.857825069 seconds)
done (took 44.198237078 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.543839552 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.285878486 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.663851421 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.505473931 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.676116988 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.664292524 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.758629563 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.562434684 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.546113644 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.533562256 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.509251308 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.667948437 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.75035924 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.270640025 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.744669995 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.316421091 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.691970372 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.524206583 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.531161001 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.510802989 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.764134701 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.519503529 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.517730042 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.554146865 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.691809966 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.667574545 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.519725749 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.271792896 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.520140116 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.508848229 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.652172467 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.553724868 seconds)
  done (took 87.385305136 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.539933738 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.524784245 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.520621402 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.510445165 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.535987431 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.516135397 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.511865073 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.554748724 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.534408176 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.53064319 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.522926146 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.508913259 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.516666134 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.522181889 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.512912925 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.554746692 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.562247724 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.524498908 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.510006116 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.511624986 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.516575858 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.512552415 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.50841674 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.560785073 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.53355709 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.537907398 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.510213396 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.510288139 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.515655377 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.509297616 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.512679138 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.570183464 seconds)
  done (took 82.223903905 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.540752203 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.524765927 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.52644559 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.50956495 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.520485672 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.510839611 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.512843311 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.553171253 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.550694148 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.525663447 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.510952808 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.51164435 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.518409838 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.510952276 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.510419325 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.554397578 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.532303914 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.525820182 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.511569045 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.525780118 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.515313562 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.511738069 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.510730126 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.557476607 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.532533988 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.525109395 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.515810069 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.510970233 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.515883935 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.524624778 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.511849395 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.551800135 seconds)
  done (took 82.169697902 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.776663787 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.540008704 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.528489889 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.520452479 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.535090646 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.527093078 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.522063391 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.800309579 seconds)
  done (took 16.149445246 seconds)
done (took 269.314871164 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.543888254 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.535906786 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.547765061 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.520333091 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.560879654 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.548031316 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.717882421 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.588965108 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.730360653 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.536936497 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.538103034 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.523242372 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.279878389 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.662441096 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.515417714 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.565473652 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.373879599 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.528008228 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.523098463 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.74134087 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.554078259 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.514602614 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.523450539 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.405763165 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.533365962 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.596819637 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.583008088 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.677991082 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.640980475 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.581216676 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.516175436 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.564862969 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.55886968 seconds)
  done (took 70.723013064 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.536480909 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.528731859 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.530785225 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.534666886 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.529920191 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.53051681 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.562696794 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.551995544 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.545197724 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.529400025 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.530892593 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.534056929 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.531099861 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.529180702 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.573696556 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.533097934 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.535090393 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.529930517 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.522014687 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.515810713 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.53082016 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.531665385 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.573689241 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.553853513 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.546893476 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.533106438 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.531538538 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.539075676 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.532200988 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.532038688 seconds)
  done (took 47.52145364 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.574323371 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.555287401 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.534328557 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.530180926 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.522617204 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.533837811 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.79633213 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.533509699 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.571313319 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.552647934 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.466123051 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.535831804 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.575364997 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.532662471 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.526106881 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.533605749 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.575750002 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.547040188 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.534228667 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.541068587 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.802864626 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.548630302 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.796434178 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.542619966 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.573486874 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.550362131 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.545640223 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.518338341 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.528735772 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.459928012 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.255947218 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.798937515 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.571229215 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.545257739 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.267460429 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.544166766 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.535975397 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.473983987 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.527124909 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.529046446 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.836724413 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.557599402 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.548562645 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.50327339 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.527760022 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.540568606 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.51949388 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.472176025 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.799007066 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.557203102 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.545369795 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.530256292 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.538274822 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.534254653 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.755469996 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.540162793 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.571825446 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.544195507 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.54728868 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.796421927 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.538247051 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.533442712 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.521449904 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.529498709 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.566380473 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.568922241 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.559282296 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.529649165 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.521791474 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.553506155 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.521768659 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.530244369 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.581221211 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.483180146 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.539810622 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.541792666 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.533109944 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.527132638 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.523809029 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.794832571 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.588063488 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.561509546 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.821296922 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.542156286 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.540193555 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.545886519 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.538436356 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.60150976 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.837717613 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.455392495 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.549532043 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.525214365 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.802119657 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.552532583 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.531848027 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.525820355 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.582736035 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.562756262 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.549938373 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.523377918 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.53192179 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.550015374 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.512037403 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.532763478 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.845665738 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.572568741 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.554456369 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.532162102 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.603398707 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.544596782 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.543562141 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.536547621 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.855656881 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.566956108 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.556174392 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.503329128 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.483180663 seconds)
  done (took 222.725045123 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.532238098 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.544931676 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.525823821 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.570730472 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.551052711 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.551187876 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.526164396 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.528874617 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.538867561 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.527357662 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.525529771 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.580265652 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.559992349 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.543235481 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.527481897 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.527394539 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.531525949 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.528701812 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.52873433 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.573499197 seconds)
  done (took 48.237081551 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.567901168 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.07890074 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.037989035 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.552937143 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.547198694 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.534166435 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.585340719 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.589577475 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.565895896 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.829760222 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.725157661 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.554055041 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.548094811 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.543654367 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.028792994 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.600642458 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.840576668 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.080313908 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.551518076 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.064472424 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.556158884 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.543868428 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.533532507 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.110550007 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.859841338 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.825656953 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.597810519 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.065012979 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.558107567 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.54339143 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.06661997 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.600663305 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.563264464 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.075020995 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.551815247 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.560628655 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.549185463 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.590998543 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.593801529 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.865269339 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.097627067 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.834503219 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.561867247 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.705029737 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.553794479 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.52329638 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.076141607 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.598456748 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.549978485 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.563672414 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.551820672 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.043089936 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.553099438 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.044424575 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.554831808 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.591425709 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.091319115 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.060523763 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.045738159 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.704221943 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.553281498 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.806704235 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.557933445 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.126131626 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.584320909 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.563936372 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.547444159 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.700368198 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.079055244 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.811404646 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.831088273 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.875823646 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.58171453 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.618387849 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.550254164 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.823478976 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.617051464 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.927763932 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.825970393 seconds)
  done (took 138.341991525 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.848092148 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.655960164 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.916062307 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.10972278 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.036886176 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.687738178 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.632527394 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.775262358 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.599152634 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.676892784 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.168962936 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.630504 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.268689247 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.613113242 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.65378006 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.660197908 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.970722478 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.500739813 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.183483259 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.134523134 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.544299231 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.641204659 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.28656884 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.917247424 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.597289727 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.327970073 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.449056047 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.051152949 seconds)
  done (took 57.957813365 seconds)
done (took 586.906798932 seconds)
SAVING RESULT...
DONE!
