cset: moving following pidspec: 8848
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.177751556 seconds)
loading group "string"... done (took 0.555577669 seconds)
loading group "linalg"... done (took 9.677615234 seconds)
loading group "parallel"... done (took 0.173805089 seconds)
loading group "find"... done (took 2.492754604 seconds)
loading group "tuple"... done (took 2.282219962 seconds)
loading group "dates"... done (took 1.417538809 seconds)
loading group "micro"... done (took 0.557216816 seconds)
loading group "io"... done (took 0.529475519 seconds)
loading group "scalar"... done (took 55.085449833 seconds)
loading group "sparse"... done (took 13.57846078 seconds)
loading group "broadcast"... done (took 1.315560236 seconds)
loading group "union"... done (took 2.545258512 seconds)
loading group "simd"... done (took 3.803439296 seconds)
loading group "random"... done (took 14.369145619 seconds)
loading group "problem"... done (took 2.236026149 seconds)
loading group "array"... done (took 23.330725157 seconds)
loading group "misc"... done (took 1.624502719 seconds)
loading group "sort"... done (took 3.711630713 seconds)
loading group "collection"... done (took 20.51838602 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.76939517 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.163371096 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.240937784 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.303915608 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.294782434 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.205383595 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.199351853 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.167718885 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.603073882 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.228411217 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.196392767 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.406132586 seconds)
done (took 6.583205825 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.340829042 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.090800333 seconds)
    (2/2) benchmarking "String"...
    done (took 0.211212064 seconds)
  done (took 0.948310644 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.105632147 seconds)
    (2/2) benchmarking "String"...
    done (took 0.153033676 seconds)
  done (took 0.905118441 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.134927929 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.167647804 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.148001699 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.132623087 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.150196538 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.134626718 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.1491827 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.14624521 seconds)
  done (took 1.674575846 seconds)
done (took 4.648159752 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.519207808 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.900930831 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.549782813 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.201016904 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.340116033 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.33962197 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.307190437 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.255189024 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.151765189 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.098581148 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.223961784 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.486808565 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.442259119 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.97755013 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.096165205 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.15412 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.186816442 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.812497256 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.123594965 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.154324876 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.525570606 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.236896483 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.159322445 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.134358204 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.246709994 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.171413463 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.170447955 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.146447818 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.847567693 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.178564401 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.235820504 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.127284011 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.169368248 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.204568876 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.279179913 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.155222474 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.788445498 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.245960468 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.126151682 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.144236094 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.778419987 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.16964172 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.229831586 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.14638362 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.111893077 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.191283486 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.139786736 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.120535457 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.15313753 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.145618398 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.219456704 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.530742758 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.150106591 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.228308888 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.152969576 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.786906187 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.138233772 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.328376315 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.16743013 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.153666897 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.134801632 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.133495218 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.217901406 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.137869583 seconds)
  done (took 22.951177745 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.204975863 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.221002888 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.140613275 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.187944147 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.188208605 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.141955683 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.131523346 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.139063572 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.157885856 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.237359343 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.182300221 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.210651394 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.136952604 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.133493004 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.197942599 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.293341187 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.145091339 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.162196474 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.130850759 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.153193073 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.18454316 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.136937036 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.152976532 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.13937279 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.214166063 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.254775463 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.166078733 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.170037926 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.134775552 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.157232463 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.186784528 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.192811509 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.137513352 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.13134893 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.231707974 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.166477326 seconds)
  done (took 6.923696152 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.259653655 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.147023168 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.269385929 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.238589618 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.187331217 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.219310638 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.22002393 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.306447812 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.29317726 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.148729159 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.220133105 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.172828404 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.143156918 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.137287816 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.125275591 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.122649178 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.865645136 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.215772067 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.203221651 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.210161665 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.152037559 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.12369864 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.76839911 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.127667707 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.142527829 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.134831199 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.109650008 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.245696135 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.133982434 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.513408656 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.14114874 seconds)
    (32/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.187453427 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.154234659 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.172236187 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.235857098 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.142447729 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.161327675 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.143501948 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.165677767 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.155470577 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.144457604 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.25048607 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.142661343 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.139103326 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.124570742 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.177330684 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.16133807 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.152363223 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166428424 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.180422027 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.147430654 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.153507672 seconds)
    (53/114) benchmarking ("sqrt", "LinearAlgebra.UnitUpperTriangular", 256)...
    done (took 0.241887951 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.949128423 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.249854945 seconds)
    (56/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.177487605 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.147398007 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.319037046 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.150169981 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.161954239 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.153045043 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.237011865 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.178508894 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.141914153 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.123772333 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.157827524 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.12476256 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.166172095 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.46873299 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.124378015 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.200328485 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.155018654 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.147599458 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.148374549 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.131995237 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.168157635 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.130861666 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.141966571 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.131114686 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.143868729 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.135132487 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.137921103 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.131094699 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.141321594 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.192256909 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.155941976 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.151228105 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.172470275 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.151367079 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.130471507 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.176417577 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.143465232 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.134579687 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.216723476 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.157099913 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.120921481 seconds)
    (97/114) benchmarking ("sqrt", "LinearAlgebra.UnitUpperTriangular", 1024)...
    done (took 0.756879848 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.159908458 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.189679342 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.132996401 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.278692146 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.129552299 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.171108098 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.145760494 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.160073522 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.160100253 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.126344743 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.149127861 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.126487627 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.145791423 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.193851169 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.146881116 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.127216063 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.151435665 seconds)
  done (took 28.19393462 seconds)
done (took 58.710816805 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.46843491 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.111184207 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.130726019 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.11078283 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.110135357 seconds)
  done (took 1.652546949 seconds)
done (took 2.35388281 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.238344143 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.327824435 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.247064124 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.148893395 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.21848255 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.215799726 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.205354883 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.227172866 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.218236094 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.213747606 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.151205218 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.2403151 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.228466093 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.20095683 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.145808224 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.258846627 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.189363471 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.211375496 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.253123385 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.149150855 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.144994854 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.17013261 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.149909731 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.150626065 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.147926609 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.167064941 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.151547498 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.168184335 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.141514192 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.150119207 seconds)
  done (took 2.409843164 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.176322624 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.146922676 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.143185269 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.158636294 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.146520046 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.151512965 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.1451077 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.164670617 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.153245693 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.164815049 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.142869606 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.151601341 seconds)
  done (took 2.388311497 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.126862108 seconds)
done (took 9.97322712 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.17483544 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.929144973 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.194065133 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.275390646 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.370851288 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.30944268 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.654024071 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.236561499 seconds)
  done (took 15.992876175 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.20748406 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.158656283 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.140407748 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.155382746 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.144583831 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.15852787 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.141086804 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.156084431 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.145294792 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.158950721 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.145068381 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.157955295 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.140310274 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.158699832 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.144591382 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.139483691 seconds)
  done (took 3.226680451 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.181051867 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.17984973 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.143613455 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.161832732 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.140956283 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.162292241 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.146614992 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.161103301 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.139187578 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.160232745 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.15235809 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.163777878 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.146536458 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.161206352 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.148996779 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.186717547 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.144294702 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.165796257 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.166894498 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.166221927 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.147438839 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.163013248 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.147056719 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.169186067 seconds)
  done (took 4.595553742 seconds)
done (took 24.532714785 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.197749581 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.146474767 seconds)
  done (took 1.071167667 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.196226264 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.214326721 seconds)
  done (took 1.146129247 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.158703053 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.152297102 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.168928477 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.169300649 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.141397381 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.158734483 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.165673577 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.158589585 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.139708282 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.154729229 seconds)
  done (took 2.307579853 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.139968063 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.140622646 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.167524127 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.202556847 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.143876904 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.155473184 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.141484365 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.15739352 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.14043097 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.15404261 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.14100129 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.16981872 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.1409532 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.172456984 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.158025715 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.14226097 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.161042736 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.140971958 seconds)
  done (took 3.508427344 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.137365689 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.136995819 seconds)
  done (took 1.016633001 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.138916348 seconds)
    (2/7) benchmarking "second"...
    done (took 0.137205828 seconds)
    (3/7) benchmarking "month"...
    done (took 0.15542852 seconds)
    (4/7) benchmarking "year"...
    done (took 0.136893859 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.154959661 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.137484168 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.152422482 seconds)
  done (took 1.755292454 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.599782926 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.26846807 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.415110478 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.120337907 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.135982016 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.365735666 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.155134446 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.103184881 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103499772 seconds)
  done (took 3.037072445 seconds)
done (took 14.574628004 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.137443635 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.221422306 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.678890841 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.158637443 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.155789762 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.196373026 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.342919103 seconds)
done (took 2.639672536 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.349084196 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.179324075 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.117122772 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.141298159 seconds)
  done (took 1.530605346 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.130224291 seconds)
    (2/2) benchmarking "read"...
    done (took 0.14447167 seconds)
  done (took 1.023367831 seconds)
done (took 3.304842908 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.157131 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.153354456 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.140579559 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.155712622 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.142458803 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.155714106 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.139424997 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.152844094 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.140613891 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.153630658 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.140550651 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.155487895 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.138239888 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.154816482 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.137393673 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.156115319 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.141574406 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.152378369 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.139450236 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.139106438 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.15618462 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.137324561 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.1579895 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.138970816 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.157376771 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.139437625 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.155020776 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.137878579 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.156944398 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.140170085 seconds)
  done (took 5.166031148 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.145746056 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.132171072 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.152371757 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.143274332 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.149166136 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.137531548 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.150718818 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.137220471 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.15333654 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.1362911 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.154761104 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.136837489 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.155179859 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.137700055 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.137105083 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.15594632 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.144309764 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.15345709 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.135092962 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.155396836 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.139284291 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.153073401 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.136214001 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.154262523 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.135902462 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.152308965 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.136321644 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.15355116 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.138491393 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.135617575 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.156534167 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.139554282 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.15383171 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.145509884 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.15648649 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.137301766 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.161719073 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.134368374 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.156622317 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.134725314 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.152342544 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.137669285 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.136244054 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.160542452 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.13670531 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.153660053 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.137539267 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.15580988 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.137523425 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.155937124 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.134367084 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.154072861 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.139243547 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.156671408 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.141610144 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.15021955 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.139251713 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.133758195 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.155239975 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.138360836 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.152562929 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.133823643 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.158923795 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.138165085 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.169353693 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.142791069 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.154752289 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.138857517 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.15633555 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.143212174 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.276835409 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.148440884 seconds)
  done (took 11.390169841 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.137725297 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.13532229 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.154731588 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.137076594 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.153782702 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.141727025 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.154069228 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.136643172 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.153254959 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.137962421 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.153185387 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.138613098 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.137824922 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.153500313 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.137618434 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.154369195 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.136528216 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.15370083 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.137855975 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.154756686 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.137855016 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.15439998 seconds)
  done (took 3.955657321 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.283571985 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.144793305 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.204718376 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.149039634 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.174371895 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.168009712 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.143176428 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.160299042 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.142993842 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.163786957 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.14844729 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.160507199 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.154821133 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.163272964 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.146267584 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.167541063 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.142914521 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.165659709 seconds)
  done (took 3.747694359 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.138372418 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.138018549 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.154210537 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.138171704 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.155311801 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.137266521 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.153455419 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.138837066 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.154005216 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.138316463 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.136466323 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.156020823 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.139671542 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.156047874 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.137907639 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.155423056 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.139526695 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.15653645 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.138846899 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.15511313 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.137193444 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.155902229 seconds)
  done (took 3.978952815 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153763523 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.156574937 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.160246724 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.160633498 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.138122343 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.156591692 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.146343255 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.156378184 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.147587048 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.141230879 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.159998143 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.137614838 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.171003825 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.139860227 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.164515225 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.140057339 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.158909448 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.141863924 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.160107755 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.139957017 seconds)
  done (took 3.802163016 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.231774713 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.176549786 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.156291359 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.184062346 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.175761642 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.157671646 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.182407792 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.156682549 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.173847299 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.169133659 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.175442249 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.15516502 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.184312263 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.181978931 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.156692692 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.182205256 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.164170975 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.185648452 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.156271023 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.176612585 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.187168098 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.156548039 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.182397671 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.156246329 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.175529558 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.156790092 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.174854592 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.159955873 seconds)
  done (took 5.607675433 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.153364307 seconds)
    (2/2) benchmarking "in"...
    done (took 0.168117273 seconds)
  done (took 1.100108222 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.142347228 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.141237475 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.161473559 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.140830605 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.160809043 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.144248935 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.160134928 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.142522021 seconds)
  done (took 1.970194083 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.199015014 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.223858263 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.165067201 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.152460074 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.223135193 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.215236886 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.177902355 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.16898279 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.140455474 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.153540937 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.216892158 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.132882796 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.16097305 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.137831711 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.161137649 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.145465574 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.159822885 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.14919207 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.167259387 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.144435109 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.165722091 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.145525668 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.161167215 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.150292029 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.156817202 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.144254673 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.162942279 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.151594978 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.157552019 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.141577419 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.158800991 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.141690617 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.164793485 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.145523993 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.160838044 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.206199397 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.167682941 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.139641029 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.165000554 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.146130462 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.188072658 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.140930586 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.165349534 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.140507985 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.165603749 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.146755373 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.169103753 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.1429264 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.154100369 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.135838626 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.165654741 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.145482323 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.16432462 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.143010485 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.162421374 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.14809918 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.163835213 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.137322808 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.157182452 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.136328373 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.159914426 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.13628815 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.163266975 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.143840989 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.161319683 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.141912222 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.160180653 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.142378655 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.163351796 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.144093506 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.159720601 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.156842053 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.162060711 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.148725658 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.167974083 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.142433171 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.158700911 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.14786242 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.161126418 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.143399291 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.165856099 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.164195798 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.162655042 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.137855148 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.155995038 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.150831459 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.142780451 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.166241723 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.135443672 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.169483674 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.145087859 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.165125194 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.134332944 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.162075949 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.139346109 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.167439764 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.135037734 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.163503363 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.142555376 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.166924678 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.1480007 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.160638521 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.142923999 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.167374797 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.147766843 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.160863783 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.186122899 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.160037604 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.137979153 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.164089862 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.149318676 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.159025837 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.142199486 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.160836853 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.139253129 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.157748931 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.148032783 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.163074917 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.144378181 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.165307146 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.144917398 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.164202828 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.14416461 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.163968795 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.141216887 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.166418285 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.150245579 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.164342727 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.145243866 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.16396006 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.144922357 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.163347785 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.148352795 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.139243932 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.168142494 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.139321483 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.161731353 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.143885848 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.168193549 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.142215008 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.158816314 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.142116464 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.163858875 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.142534259 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.168723111 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.143255634 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.159640464 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.134204819 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.16352513 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.138873971 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.163979996 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.161298998 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.162103061 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.149228906 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.159591216 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.152098785 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.160536618 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.149018101 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.166084515 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.148514708 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.167878912 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.135757515 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.159630889 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.147095707 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.16343275 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.139378698 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.163620436 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.145385288 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.149383819 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.159407706 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.147894238 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.157601732 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.140946853 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.170120273 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.145168693 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.167272927 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.139553874 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.195485799 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.154258007 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.169521735 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.143285193 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.166395103 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.147456425 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.163337036 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.149460328 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.17250736 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.155215296 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.162430955 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.143024367 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.170573111 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.13935318 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.165817355 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.144569811 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.165288272 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.135952494 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.165908882 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.137639908 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.147504583 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.167048864 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.149092071 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.168831301 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.145462589 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.164312404 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.152572601 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.160193671 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.14877637 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.157550596 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.15138835 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.173859426 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.150431902 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.170315203 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.145776504 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.162561052 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.146014659 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.173462338 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.146079574 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.163039155 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.147520138 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.157760982 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.1381762 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.17059318 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.147183629 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.159361271 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.144161348 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.16348163 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.146583123 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.161057676 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.136779147 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.148198974 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.170350993 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.139851453 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.16657207 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.139785408 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.164175831 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.170140119 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.137948668 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.139382934 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.167792085 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.150245181 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.166536468 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.143826548 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.166501192 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.15115597 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.170405962 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.147106857 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.161629334 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.15185704 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.161947879 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.143875682 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.161936926 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.147616868 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.157202243 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.147109098 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.163339671 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.142648705 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.160746141 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.148841338 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.168963346 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.150704951 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.162854692 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.149428434 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.147904676 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.169950225 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.141346193 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.171555214 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.141363254 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.158995468 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.141996693 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.161891429 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.149961958 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.161820549 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.148448827 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.162933482 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.143429755 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.170796499 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.145999052 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.162024618 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.150572921 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.174671589 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.139259644 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.158036117 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.143212382 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.164474103 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.142419605 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.16243417 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.148476712 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.167196211 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.149051849 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.167215712 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.143036223 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.165875813 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.153070571 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.161530734 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.150950649 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.170388425 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.151399499 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.161170298 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.150199853 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.140596139 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.1696818 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.13743467 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.16714325 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.143611747 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.16813433 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.141367416 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.162946406 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.142695159 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.159907 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.141680479 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.171964724 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.144164864 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.169664538 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.144264737 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.166453034 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.142155799 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.162455534 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.151550925 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.163893997 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.150703376 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.166080325 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.138593103 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.159181275 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.150548783 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.164765836 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.151480361 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.160102749 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.149991704 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.170596048 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.149756979 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.145943724 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.174012078 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.153761878 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.171698446 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.149462419 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.161699171 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.142106942 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.174950196 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.146717225 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.16875884 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.148602414 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.15944823 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.148028902 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.171269669 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.148118037 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.164312364 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.138728564 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.169921304 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.153843413 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.170184908 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.148689241 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.167688632 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.147260461 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.160849351 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.149800189 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.172853478 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.147353373 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.152594715 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.169992167 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.148523794 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.161949945 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.151433189 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.169722959 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.140507683 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.160536953 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.142822891 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.172527619 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.139968439 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.176132834 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.154053625 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.162648679 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.145264138 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.171866861 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.141939727 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.169730856 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.15139723 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.163754544 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.157296526 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.16646852 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.144654209 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.171980991 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.151899991 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.138230793 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.167812215 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.145891437 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.177400821 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.146153524 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.174122608 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.145898846 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.171293406 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.148198224 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.171551793 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.150764552 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.172183778 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.139208705 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.173160574 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.148977367 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.168786661 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.144616879 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.164659155 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.140729544 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.1651996 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.151189344 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.165039047 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.153328567 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.171690646 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.145907069 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.164286903 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.151747581 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.164668058 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.152556276 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.162682422 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.149224328 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.160659005 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.149840008 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.164834364 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.152901401 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.142442334 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.161853316 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.152419931 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.172327129 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.150051271 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.16835862 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.151931223 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.161986051 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.140493352 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.169228513 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.143535947 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.176537693 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.149795159 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.165614215 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.144574353 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.17015365 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.148763766 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.173162016 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.140688694 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.163332104 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.148680024 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.168593814 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.145150091 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.161801553 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.151107012 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.166758578 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.152260762 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.166067541 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.141118331 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.166148836 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.153873599 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.144964963 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.16428687 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.143654207 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.174154774 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.147589854 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.165748968 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.142124461 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.175067737 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.147729446 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.174409191 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.14403725 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.169779092 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.144561169 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.171168167 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.153060228 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.166438377 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.148230891 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.166569288 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.153572718 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.172797661 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.140073296 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.165415655 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.156044417 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.173734145 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.14927583 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.171871656 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.14574307 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.175839623 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.154456565 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.172533489 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.142871564 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.162243722 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.148062976 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.140239552 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.170786408 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.151241329 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.167286543 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.145666095 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.172376244 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.151487136 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.170670261 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.150866532 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.16211732 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.154154979 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.166660454 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.150803068 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.163871917 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.142123093 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.170857461 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.153409568 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.167396487 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.147188256 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.169704054 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.150277646 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.162873219 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.146178711 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.170377377 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.153878376 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.152716177 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.167351615 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.146159427 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.172467308 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.158342161 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.170828642 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.14631054 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.177454824 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.154178556 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.169549847 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.14727239 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.172366887 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.154043783 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.171708836 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.15531771 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.167400193 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.14665039 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.176875132 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.155339023 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.177494629 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.147033406 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.163903007 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.15204785 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.166735082 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.142837853 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.173677027 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.155484343 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.178047934 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.148794557 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.16641129 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.158018989 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.173597396 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.148079002 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.166548056 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.146590094 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.174190544 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.14643891 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.172209764 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.14560018 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.176787806 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.155616858 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.153659805 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.178228016 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.14255643 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.175648448 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.150010497 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.17902581 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.151181464 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.166142897 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.144139346 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.172290659 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.156901547 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.175642511 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.15202497 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.173600688 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.153091139 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.169684625 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.14957246 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.168207675 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.157105187 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.175070035 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.149703542 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.170864815 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.147879067 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.169736897 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.150856844 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.155960962 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.176201492 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.149973052 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.180177796 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.155366618 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.168303841 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.145770544 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.170742451 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.152064473 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.172235343 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.152890623 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.167059977 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.144164045 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.176706425 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.157248328 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.169201833 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.156363297 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.177595136 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.147435453 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.172344125 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.157311963 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.174127502 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.150980772 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.171917845 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.154612336 seconds)
  done (took 94.496507729 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.198655137 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.179373821 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.152225229 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.172344667 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.168748883 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.175258581 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.151798223 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.174342104 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.153731069 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.181633436 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.152104487 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.172553192 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.166769883 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.195385793 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.168489115 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.184264918 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.151654314 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.175578772 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.151723171 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.174053928 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.16545765 seconds)
  done (took 4.442626799 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.15261924 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.151919305 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.174000176 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.152028702 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.173221081 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.152296571 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.172222709 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.152088218 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.173106717 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.151566303 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.151173528 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.173981721 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.151740209 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.173220052 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.151447792 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.172661641 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.15244999 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.1731084 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.151574185 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.174608514 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.152976629 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.151201691 seconds)
  done (took 4.413809779 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.176692059 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.154935695 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.172102806 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.151768618 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.177955075 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.151868944 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.178308538 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.153706837 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.183420517 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.148110586 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.16594485 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.149170376 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.172505392 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.155414174 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.166705345 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.155428882 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.160963238 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.178228124 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.156657385 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.175722144 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.144599979 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.175624325 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.152481733 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.165294081 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.158166133 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.179124364 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.156512793 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.177674598 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.14467781 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.178555365 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.155054634 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.147313182 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.167383484 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.145135555 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.166386333 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.15580695 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.179278664 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.153102748 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.177184804 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.144986022 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.17624449 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.158317392 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.166380891 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.15479531 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.153760599 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.169123256 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.155498467 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.175839526 seconds)
  done (took 8.701698228 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.183304091 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.214154532 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.156940758 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.206099814 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.191822567 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.164380443 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.179724655 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.18321764 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.178969895 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.158235767 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.19175371 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.166613344 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.182830709 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.159536612 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.178576414 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.157110117 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.181551358 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.15605337 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.183093012 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.157030129 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.183116843 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.158062835 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.189753858 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.188295553 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.16057153 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.178389703 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.158565901 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.181992092 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.166798943 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.182895783 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.160583318 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.183202997 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.168213745 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.182170859 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.156216509 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.17987133 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.169684169 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.180052564 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.159645698 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.177231782 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.158476195 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.182830742 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.158887616 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.190402208 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.158127946 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.1816827 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.159199125 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.177590072 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.166643691 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.180790561 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.164976577 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.190199686 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.183480472 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.159677827 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.182885894 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.168575349 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.180592892 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.158544086 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.180865998 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.167244113 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.177418656 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.159921418 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.19125103 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.158306583 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.185378423 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.166877796 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.181885454 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.159346094 seconds)
  done (took 12.799928292 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.189702228 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.185476979 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.168574688 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.192033329 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.161726967 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.186333862 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.161000511 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.184185892 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.163579542 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.189108906 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.161236592 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.288037606 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.188198919 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.165604282 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.185359928 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.187057581 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.164431208 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.184242706 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.16286862 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.184254938 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.162977921 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.190290267 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.162176867 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.194668832 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.171723782 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.181969974 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.160724639 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.184350088 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.191673593 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.164632619 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.196492948 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.162671115 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.184666557 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.16977023 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.19619554 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.161815259 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.179631966 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.161598118 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.184845756 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.16109294 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.181731165 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.169346472 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.186092739 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.159502301 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.185896149 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.184411754 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.170701875 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.197456372 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.166209744 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.191202247 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.162159112 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.192481109 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.162243201 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.186940614 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.192467854 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.177764483 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.192362955 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.169486908 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.185182003 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.170364539 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.192366642 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.198691007 seconds)
  done (took 12.053214169 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.158608239 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.157766705 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.180686867 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.157209494 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.179967428 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.157910109 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.180017197 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.159119657 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.181257108 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.159093278 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.178948249 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.160635489 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.157682729 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.180429444 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.159612232 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.180188414 seconds)
  done (took 3.595153178 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.17742 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.197286739 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.254087206 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.161406583 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.158278826 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.189370314 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.1584234 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.182828272 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.157838173 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.187325944 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.161164123 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.184463864 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.17281688 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.183076396 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.15939629 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.184203039 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.156468528 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.184883561 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.157689361 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.255970015 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.185876026 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.161165409 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.182551644 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.162396273 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.184416612 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.161463595 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.189598624 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.159188712 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.183141362 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.16145871 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.182974902 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.165824318 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.180837557 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.163837534 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.181954359 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.161958243 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.179480952 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.159620299 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.160640637 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.185153536 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.159682085 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.184056144 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.157811096 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.184060509 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.156980266 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.181471847 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.156861032 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.187676737 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.160642223 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.184187421 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.160362507 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.186857157 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.162621096 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.190648959 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.165729011 seconds)
  done (took 10.567991232 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.170235206 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.182823281 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.171297654 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.157514073 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.183442114 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.159986589 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.184576362 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.159803592 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.185510658 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.156533251 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.18474601 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.161152997 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.185086336 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.161649267 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.183526705 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.160582349 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.18115527 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.160031986 seconds)
  done (took 4.011409881 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.157224139 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.157429785 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.181071892 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.157697171 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.180532134 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.157053671 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.181221808 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.157378228 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.181024042 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.158582227 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.157560786 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.181559028 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.15826699 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.181625569 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.156734086 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.18033769 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.157991599 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.182345624 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.157809082 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.181643801 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.15973205 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.156372241 seconds)
  done (took 4.605098284 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.169882274 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.25663549 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.164523366 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.261459549 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.181684795 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.154148027 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.189971256 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.156396257 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.195494454 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.177961797 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.155901992 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.177422147 seconds)
  done (took 3.168533334 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.187026176 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.218028587 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.160443419 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.183190148 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169927896 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.188589608 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.164194431 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.186281336 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.17219436 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.198972218 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.164221218 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.197015804 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.19616804 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.17260589 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.192686156 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169223805 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.189570966 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.164570454 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.18526009 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.177592591 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.18954335 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.53758565 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.168555691 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.187574157 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.165283438 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.196528731 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.173889906 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.199481014 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.16474457 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.196012828 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.170787392 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.188275199 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.196271494 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.175992007 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.184126484 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.173959948 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.189831609 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.178724806 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.193147243 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.17054777 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.185996303 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.192704121 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.172448362 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.193064478 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172564457 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.187946888 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.170570489 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.187347806 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.164088119 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.210672056 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.192955694 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.173692136 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.19382153 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.172896664 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.196066939 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.207315736 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.177119921 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.197476426 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.169709411 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.199421467 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.173733631 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.196207881 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.195438407 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.176634175 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.194243447 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.17221835 seconds)
  done (took 13.391164031 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.200317388 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.186350143 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.167511511 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.200902099 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.172355687 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.190548775 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.164778624 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.188558136 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.165005067 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.185330172 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.231317222 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.167080028 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.196806115 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.173130637 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.190976739 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.165517433 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.189952065 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.172999338 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.187017239 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.210456915 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.167193013 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.196549604 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.17393488 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.197748169 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.174806414 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.195229058 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.189299443 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167130809 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.188487884 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.166269284 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194205075 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.166915873 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.196926912 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.164017006 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.198094509 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.166962845 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.190902145 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.172683156 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.191913721 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.170153154 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.19711833 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.203990234 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.167434336 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.188960065 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.178564692 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.190727615 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.16591659 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.187748825 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.167377024 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.187384067 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.176762045 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.201305667 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.201160065 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.173434203 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.190777844 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.16730417 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.190696513 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.166814292 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.190041838 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170366729 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.197999742 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166372807 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.21022387 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.189768884 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168228315 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.198979203 seconds)
  done (took 13.073300085 seconds)
done (took 230.786022469 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.305596034 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.334889172 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.159528059 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.410125273 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.15298712 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.887607437 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.755726672 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.240731534 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.178650983 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.1543719 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.175583648 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.173280519 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.565485471 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.153541623 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.175996154 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.170696968 seconds)
  done (took 31.931386391 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.342570101 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.387526176 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.168429324 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.181964038 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.159212035 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.183770253 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.155690303 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.183236428 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.158983548 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.187735199 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.157861228 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.177761059 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.163914247 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.177131812 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.158585309 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.18097588 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.164604296 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.18187161 seconds)
  done (took 4.42535221 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.177211431 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.287098901 seconds)
  done (took 1.417538776 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.188891633 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.277326136 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.380875004 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.230321901 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.180035829 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.200192853 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.206213521 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.195356704 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.270765758 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.169931496 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.195215594 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.15583435 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.208560068 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.186105524 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.175277287 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.178937037 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.185709752 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.196188395 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.17188732 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.18240306 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.184264746 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.181728688 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.16445023 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.197286557 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.239860665 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.197431559 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.184330968 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.160097655 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.183229586 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.176615596 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.188505036 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.174622096 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.194335568 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.238749537 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.162071734 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.235628835 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.185323167 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.159447248 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.196129792 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.159562526 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.185571807 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.162650497 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.192619647 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.15687859 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.180935341 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.162591182 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.180050843 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.160496065 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.191911639 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.160829412 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.191094183 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.164996542 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.232993756 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.186067061 seconds)
  done (took 11.357167722 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.995358442 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.205855175 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.183857704 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.125629793 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.205050661 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.173437092 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.017814804 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.185831671 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.311948852 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.077319825 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.174529743 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.192994261 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.303548369 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.341868308 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.361334829 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.421311048 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.847896688 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.195563152 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.191342423 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.227454146 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.164439073 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.202526253 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.197493506 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.48296202 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.184961663 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.157880844 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.1882247 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.166641559 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.238897907 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.18396042 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.162703955 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.259585426 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.355373851 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.296938613 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.161569862 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.181478347 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.161214235 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.249817232 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.331443655 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.279847561 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.253198311 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.180041912 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.159052417 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.188935885 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.173934907 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.181280956 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.245367918 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.253371183 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.25492404 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.164033375 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.192596617 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.166668521 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.187565988 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.243728897 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.156845553 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.447916174 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.428349872 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.183516952 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.166804353 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.196508336 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.331058481 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.160009557 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.323955829 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.180568724 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.29991263 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.159663685 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.868145891 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.251097381 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.182926631 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.166242381 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.188634795 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.16601145 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.189182273 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.244075638 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.459926886 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.190757911 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.163734643 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.184440668 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.302400747 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.159667777 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.185028965 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.244898811 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.160481279 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.190691928 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.16684337 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.192194937 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.257031707 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.337971889 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.165521097 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.192039938 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.188336388 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.17117344 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.18355876 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.268272416 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.319161544 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.241159482 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.29729878 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.164973244 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.247440378 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.25077803 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.189883464 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.254055722 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.166386691 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.197777835 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.164948686 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.312455654 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.197984296 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.188360362 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.165292233 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.192580275 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.224818766 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.165934656 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.191361142 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.251607963 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.545642928 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.248582775 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.158681723 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.187771961 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.166714632 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.243220287 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.190995777 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.327701967 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.168182735 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.250600094 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.191101381 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.158037897 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.191477756 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.246480283 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.168768869 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.193399843 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.163951409 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.195677474 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.344456696 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.306285102 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.194611177 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.311890055 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.260003151 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.167219178 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.258099413 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.193355237 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.249971757 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.17200615 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.188759368 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.162739638 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.869498665 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.198553908 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.19037164 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.169104954 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.268680171 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.160052288 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.190741332 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.160440765 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.184690129 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.880654575 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.163958198 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.18640383 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.163106276 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.191124143 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.166122616 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.19285962 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.165306968 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.245373544 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.33604208 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.16977886 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.190904965 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.160481429 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.241604071 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.189866558 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.16158352 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.186200317 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.161775324 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.193121927 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.165519428 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.190069033 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.255133639 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.243088141 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.296392546 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.643387365 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.187044823 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.161115105 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.332737149 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.162706552 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.389034792 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.194200367 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.302000491 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.248031435 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.184263807 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.424034988 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.250099705 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.271747766 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.164736894 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.255075825 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.185603996 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.167646085 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.245461454 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.18783586 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.17008374 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.243494621 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.196792689 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.168953466 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.34981637 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.162331848 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.312367935 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.183965849 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.230165215 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.188859672 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.165982772 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.419608977 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.161260157 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.199787426 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.246138194 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.167195476 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.187808083 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.947079 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.161993079 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.198065724 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.165930072 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.324468183 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.248764448 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.167662922 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.194362059 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.170428194 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.246018078 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.293056144 seconds)
  done (took 61.726388661 seconds)
done (took 111.800400343 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.320118698 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.228043366 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.422054122 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.235793616 seconds)
  done (took 2.255787239 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.335268022 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.202983706 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.294258067 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.18296666 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.274183524 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.187119784 seconds)
  done (took 2.478038016 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.23188802 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.228519818 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.229051062 seconds)
  done (took 1.692402201 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.269122417 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.272092721 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.41246062 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.325987842 seconds)
  done (took 2.344927528 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.333083317 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.177813372 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.216835024 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.284944019 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.302003392 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.271628097 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.184321999 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.238562447 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.216580174 seconds)
  done (took 3.262915448 seconds)
done (took 13.033477955 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.202808164 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.217205304 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.181465802 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.20044955 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.192410594 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.218056876 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.19044854 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.214597826 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.189810183 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.200074035 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.188046081 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.198407972 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.275387776 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.190426029 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.196853866 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.188440991 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.198349669 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.19916662 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.21532947 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.183671894 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.219014045 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.172216737 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.198560251 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.179141597 seconds)
  done (took 5.808246593 seconds)
done (took 6.813470248 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.263485847 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.179516575 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.170013573 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.198745518 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.270725409 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.179091428 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.212301456 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.172498467 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.207003113 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.171110908 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.185226999 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.185454472 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.195070512 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.242584599 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.20258611 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.163836983 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.190122074 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.182942746 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.213340492 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.188921495 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.270730494 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.192461933 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.182426981 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.188334996 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.271388481 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.166018144 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.170323428 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.201846083 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.184412606 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.200245994 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.172042973 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.190143424 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.187147669 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.213859505 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.161786154 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.200879132 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.162527487 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.179640564 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.173495491 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.199146359 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.186953147 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.196813981 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.172339614 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.189658659 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.174287748 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.19682755 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.163102336 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.200369568 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.162624469 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.196714105 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.165704951 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.212208317 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.174224398 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.160773891 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.188918193 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.162998148 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.209495359 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.163015523 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.212509047 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.162946008 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.192141904 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.162446845 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.200420715 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.162812426 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.199281646 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.163811246 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.19956762 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.174430199 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.195956509 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.16520594 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.18863195 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.17257908 seconds)
done (took 14.689106081 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.168225047 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.23190525 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.27157593 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.247176048 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.22031206 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.20457224 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.179019607 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.212034208 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.177003264 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.204612511 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.198626997 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.221566471 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.276436293 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.180034652 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.206864226 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.176519296 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.200771437 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.171264042 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.27976601 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.213811323 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.187212877 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.207756127 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.189230283 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.209047315 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.16714872 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.225049905 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.170888993 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.204045363 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.168092441 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.202161662 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.187453366 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.193340344 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.170862926 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.212223942 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.184935261 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.204011854 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.205457385 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.176878936 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.192171077 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.169541667 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.19997563 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.184471953 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.191986092 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.181570291 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.201197979 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.183356825 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.199496413 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.181030138 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.193242201 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.175047979 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.192921683 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.194199318 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.206499495 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.18712346 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.20517637 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.180913694 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.206542502 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.181165229 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.197568552 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.181526085 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.193822433 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.168394366 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.19440303 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.189072683 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.198125793 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.181563719 seconds)
  done (took 14.039199835 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.189655984 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.223930127 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.178855286 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.205861523 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.173623055 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.188213023 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.163354278 seconds)
  done (took 2.36593844 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.16574648 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.284412758 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.282423442 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.281677814 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.278100224 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.290478163 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.18736502 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.190368406 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.201175983 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.202027304 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.284290875 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.310814135 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.176965617 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.207041393 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.256249725 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.193724556 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.286015333 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.265602555 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.179907773 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.283402805 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.210140779 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.197410093 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.204754446 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.165895679 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.276627304 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.192264774 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.334072614 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.183257245 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.201864757 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.178949999 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.206344582 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.241504204 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.278295705 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.209044817 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.173805841 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.278953002 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.279335941 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.206739334 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.293712148 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.17123371 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.279060741 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.178960017 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.208370599 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.179339443 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.208723653 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.270179597 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.184664832 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.209836181 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.178865598 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.287447559 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.20443494 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.28203459 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.178605474 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.20555224 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.176604463 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.207771255 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.189076998 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.208274745 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.29121684 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.185617143 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.282858242 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.285400183 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.282155492 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.284141817 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.191836084 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.284304204 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.274664481 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.178927556 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.279642135 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.20983181 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.285688524 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.179976737 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.205726478 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.273931536 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.184995847 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.287801959 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.287266422 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.177007888 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.209046421 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.168871369 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.206745587 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.166448193 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.285450218 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.207550682 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.179764522 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.213376388 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.180035295 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.209388779 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.278776316 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.189168243 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.209286755 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.177264731 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.214914248 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.179633867 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.210568664 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.290030594 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.176488242 seconds)
  done (took 23.041375903 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.169171126 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.166864723 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.198853494 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.167405231 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.194196247 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.167408455 seconds)
  done (took 2.13764071 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.205078603 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.209541819 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.190411659 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.208237695 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.229283181 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.289596637 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.299863071 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.203129415 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.200841577 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.222955657 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.294951871 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.296815416 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.294268752 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.185198065 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.295656173 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.212866372 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.300884081 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.180954249 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.216153763 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.179086206 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.208299868 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.186338151 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.20635376 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.284400222 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.182135828 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.210473379 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.175236361 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.222022616 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.188916198 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.203720808 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.185462786 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.208838164 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.173492158 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.203915375 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.299811727 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.172942322 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.2073986 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.184194304 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.212542538 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.183314857 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.295727315 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.207615074 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.189081731 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.21283644 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.175976027 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.202752991 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.183635593 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.201888394 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.299287417 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.183993227 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.214540963 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.182032587 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.212168315 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.184137246 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.202008415 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.176074493 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.212460494 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.302506453 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.186462654 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.203864632 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.182625582 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.212322108 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.175950293 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.213840792 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.182189484 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.214003037 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.173962992 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.211419092 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.178843962 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.212352514 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.184895185 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.211052533 seconds)
  done (took 16.471886832 seconds)
done (took 59.083028562 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.677927444 seconds)
  done (took 2.751298988 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.18352749 seconds)
  done (took 2.260080077 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.697674061 seconds)
  done (took 19.803458911 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.490777215 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.413781252 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.08672472 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.241061686 seconds)
  done (took 3.307071546 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.157928449 seconds)
  done (took 2.248827953 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.460922082 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.343350769 seconds)
  done (took 1.88684398 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.811443392 seconds)
  done (took 1.906733059 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.789460094 seconds)
  done (took 2.874506461 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.361720112 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.285813546 seconds)
  done (took 1.740942075 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.674918008 seconds)
  done (took 1.775114211 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 13.371643438 seconds)
  done (took 14.47239684 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.318084633 seconds)
  done (took 1.418082085 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.355761515 seconds)
  done (took 1.459849737 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.732348196 seconds)
  done (took 4.836850019 seconds)
done (took 63.826039849 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.185587827 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.210525471 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.188176977 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.210010961 seconds)
  done (took 1.884304487 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.188280528 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.180911597 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.216738426 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.180495068 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.21769293 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.179446522 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.209880054 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.185547006 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.209276076 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.182710972 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.210707678 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.181911817 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.211969897 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.180305714 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.209347872 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.183600509 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.214280827 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.182706744 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.213838327 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.18476481 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.211493712 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.183333365 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.213465534 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.185379225 seconds)
  done (took 5.818142215 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.179298985 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.172216125 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.204984741 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.171631942 seconds)
  done (took 1.837804797 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.193893823 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.224032878 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.19705876 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.220110604 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.198186506 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.224371813 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.182615327 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.207297239 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.182991027 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.220497358 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.199749304 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.227264166 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.195933143 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.222544902 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.195762392 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.205612449 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.186539081 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.222879857 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.193865928 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.221899563 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.186033629 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.218899498 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.182475607 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.221057143 seconds)
  done (took 6.044260069 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.259257518 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.222417592 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.216470841 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.25835952 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.238969625 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.182589489 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.237422597 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.189511065 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.215990618 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.183784891 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.211083677 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.229951955 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.216419803 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.183733098 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.212066295 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.188355998 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.2196984 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.187630945 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.256571105 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.185670098 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.217896562 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.194263325 seconds)
  done (took 5.822982083 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.269016401 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.204839855 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.172605291 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.200781373 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.184455791 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.206436865 seconds)
  done (took 2.355219916 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.174178501 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.167604427 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.197754128 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.167566081 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.199525217 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.168598363 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.194952183 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.168574092 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.195249666 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.168651655 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.195525701 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.168001165 seconds)
  done (took 3.281204159 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26174334 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.21675171 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.347814895 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.463191617 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260221681 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.251963196 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.350988574 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.250648925 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.272171533 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228727246 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247181266 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258151652 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.246154133 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253995355 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.236082502 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.240924389 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238372176 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.30463138 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236890885 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.309156262 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249499318 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.241251076 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.286917412 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.242503415 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202673318 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256487174 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.215830222 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193514037 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260013966 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256593517 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.267041931 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215512135 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.234344808 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278638729 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.32287094 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.271901284 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.357562226 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200260765 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.253746295 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.287841335 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.325343138 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.237148867 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.283493324 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218017428 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.221865086 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.285708939 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215039393 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.279259671 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.226030509 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209681664 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278820221 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277249618 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.26587688 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201899454 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.399149245 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230007605 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.233762882 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244219125 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281981137 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298472394 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276408596 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.189533534 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.265487253 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.289020613 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311091923 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.234270165 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.228020243 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.220660745 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260277086 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.305333254 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24607519 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254913147 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.286273429 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226866712 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239226935 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.26034301 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249312422 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.30598081 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26550187 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.187327421 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245540921 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19961289 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220725999 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.253380669 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.217404041 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.315427279 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197447897 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.267098293 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271390087 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21714242 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.255615746 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.256721137 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258719934 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213150476 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.182281154 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20960608 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.254037936 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.251377061 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1956138 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.246384907 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20399729 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.221522594 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216963281 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.218861824 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265598905 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.188062883 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254763385 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265925695 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.198838858 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.275986913 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.242353845 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.229709847 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263871823 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.296572213 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197137217 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.229772612 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.318235941 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268147306 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.202174983 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.266957747 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.294914698 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.202383618 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23214246 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262902107 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.289167605 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210927138 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.297005847 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234138039 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20083716 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.221130154 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271252761 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.225228848 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.255502325 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222883058 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.233536104 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28454992 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.224736127 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204901764 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280704346 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229028905 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191771338 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231367172 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202093226 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.238693647 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.245001088 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.208131702 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249907247 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232778868 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.262690619 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252794318 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230540655 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239507682 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227515241 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.265518025 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.215841146 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.213700097 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.269652581 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266402755 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.226446862 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277772584 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.226692351 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275530849 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271050775 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225778867 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.248615663 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.227156323 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.1862464 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257817624 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.269047733 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.257988921 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.255623247 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.300643731 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.230930947 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.263331926 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244722942 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235124121 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.282079318 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253512502 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.235841607 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.239191019 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266696871 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.216332829 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.190992375 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.222979223 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205188093 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226419308 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204602486 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.27792284 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263608022 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.268946112 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.265358507 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204729164 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.293480278 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.18923225 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255443067 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.27517142 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235763143 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.258723546 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.290470011 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277977015 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.237409753 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2306149 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.220129192 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192173938 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.229546466 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.255149223 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205652573 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.23266937 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206765637 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.291633195 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26459318 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244710783 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.282746728 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231079627 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.300498884 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.219143159 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.227019083 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263133691 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268830558 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.254906901 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230066755 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.254903299 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.262399464 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240472691 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291799951 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267265122 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245660373 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.289331349 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.265179228 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.226416902 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.211693941 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258184691 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203592089 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.256362706 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.238669104 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197375612 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.245896427 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.20282094 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.237122019 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285936598 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240969669 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241195087 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.252828947 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266587343 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192391306 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239882165 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.274298636 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211706721 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.190079998 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230587075 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.288712124 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247749756 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249994939 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236868903 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.228655355 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.414034072 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249514516 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.268894634 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.23465281 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206248222 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.272284903 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.25634332 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253604613 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.25141279 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240855971 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.309869193 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.266617613 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.207155086 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228099444 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.213493727 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.247508694 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.190893792 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.251222789 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.262120722 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.209296154 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284063103 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236173583 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.271842186 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245326228 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.247095583 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.24593903 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208075237 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.329628271 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269916536 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270180205 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.232976549 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.263561323 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281445681 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191654902 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225686739 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.198988344 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.283337075 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226617334 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248921481 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.261812993 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276931495 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274665595 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259795709 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207290844 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.227199324 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.235816501 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246976204 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280144872 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234287034 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.203219706 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284330466 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.212891049 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19884737 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.258922534 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.387161365 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214522228 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267192849 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.159947571 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.386463919 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.227724546 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201153517 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.256192587 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267809107 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.20002546 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.281971913 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272940872 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208532419 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.256784079 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202262851 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.273759027 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277429211 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266533192 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276639212 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.213377541 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.259884318 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25563344 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267679459 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216286374 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.244191373 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226762516 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296001161 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.274046549 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.197328868 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270667022 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271760483 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.271850905 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239146528 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.239871532 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281647913 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198258547 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265217198 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236114345 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.193644685 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258184113 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.261461016 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198896772 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27267154 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270808138 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199693787 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.226519689 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214158263 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26692685 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240094247 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.197916759 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284977704 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.231834995 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252213713 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31195065 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230919392 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.264977702 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211423561 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229650845 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207038887 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244164378 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199828235 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.275735694 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.275838172 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.200736873 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274411035 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265194065 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230457617 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253527478 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.242951514 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.333766864 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.228118319 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.296475423 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.218047407 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.295943364 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.250062864 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276858743 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.241273982 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252452544 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264988753 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215882769 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.321704339 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266106073 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.23582965 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.231603142 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242239231 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208140554 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.234372324 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.219029166 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271947809 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242470048 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.20543141 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.2710156 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243223599 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.21577844 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.240385003 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.301707125 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.219572583 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288718831 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.28741727 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206703168 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27618906 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275059579 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228005557 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.233027595 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271408567 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.243501049 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220742002 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.235293764 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.206540562 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.318767988 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.228179772 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226655729 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27726136 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.271679307 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275933711 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.205174284 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281723568 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240743818 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246319897 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229359096 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.217391348 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.272739769 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.234732327 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.196651546 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.274537063 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260894233 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.235256012 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.24216642 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.248759495 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294225148 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.223900433 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202296994 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.393017336 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261344704 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.292565372 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.18887893 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.237517225 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214326838 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258842371 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.267753228 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242526009 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.231564899 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197534753 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.244853211 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.24587842 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.195231265 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.274426289 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281812695 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229172964 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28681236 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.202633085 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.354333371 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.24437939 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.241533176 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.204513951 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.198064036 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241948543 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203135632 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244345261 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.276707848 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319460113 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.264694313 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.216273739 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.238458519 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.196890125 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232393822 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.258943098 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220852144 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272470957 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248618476 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.160410302 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212082012 seconds)
  done (took 120.523108854 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.25714133 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.246920018 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.266080134 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.317521797 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.286552527 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.38423234 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.321451279 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.339756231 seconds)
  done (took 3.663968416 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.189922255 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.23762707 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.241889484 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.18864773 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.211396395 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.526970079 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.234944532 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.189957987 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.265061928 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.222833517 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.182097689 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.641299765 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.219720868 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.217988661 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.219257792 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.180793679 seconds)
  done (took 5.405025272 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.211948172 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.638414693 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.314698064 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.369133141 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.337957379 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.288882546 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.906237638 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.270231323 seconds)
  done (took 13.579544913 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.243683812 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.277264237 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.43775543 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.374099905 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.288562087 seconds)
  done (took 2.868314926 seconds)
done (took 174.172301359 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.196046866 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.195022187 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.227415019 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.196327203 seconds)
  done (took 2.046234952 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.232231126 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.148489718 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.182799523 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.148077337 seconds)
  done (took 1.960899925 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.463756366 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.149078472 seconds)
  done (took 1.882720949 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.216877349 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.237384781 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.206832557 seconds)
  done (took 1.920997775 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.206794724 seconds)
  done (took 1.460895656 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.191904355 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.190364867 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.31053116 seconds)
  done (took 1.945921691 seconds)
done (took 12.4635213 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.21371387 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.0489029 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.658001022 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.203659779 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.82408379 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.469435668 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.530053808 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.250545889 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.274379367 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.214204629 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.213398359 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.796374546 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.515334401 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.953865948 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.496936943 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.952593889 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.76650642 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.214390244 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.189455106 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.217049752 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.501578524 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.182859795 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.182612636 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.214030706 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.763957856 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.521632828 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.181315761 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.994966147 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.181995569 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.222978574 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.470243075 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.214771629 seconds)
  done (took 23.874603975 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.184919969 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.271790664 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.238139868 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.218014725 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.191356621 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.216289006 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.194121404 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.227891771 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.316144559 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.183884765 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.237342249 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.182857547 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.220699261 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.184992291 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.239091899 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.183034446 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.218192961 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.184032111 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.220777861 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.186088375 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.237047825 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.183491731 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.215663623 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.184281475 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.18335395 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.232393902 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.18330877 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.226363245 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.214976038 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.19432786 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.218287748 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.185070196 seconds)
  done (took 8.020940521 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.226461781 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.282111658 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.239928084 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.255224994 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.270984911 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.186372061 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.303924921 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.220604523 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.322445147 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.215383745 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.205413291 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.215257593 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.225030504 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.21704934 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.208366182 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.216940067 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.186975003 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.216675041 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.190802793 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.217088735 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.205737125 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.215220261 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.186340111 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.215970468 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.184601485 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.235402504 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.184296328 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.227584966 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.183419998 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.225691758 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.189149717 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.216013427 seconds)
  done (took 8.363702204 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.199509669 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.197833063 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.241485912 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.206693015 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.225755705 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.197707183 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.231923699 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.194951364 seconds)
  done (took 2.968914609 seconds)
done (took 44.480677605 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.206684895 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.199931899 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.238415814 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.199948007 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.302929628 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.225051293 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.202757793 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.225778784 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.198882503 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.239493449 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.183597049 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.224676002 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.204265635 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.227749669 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.273088609 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.233792529 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.310919048 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.306619075 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.192110882 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.232817531 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.193012982 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.311759848 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.196831668 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.227755756 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.251497873 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.223405073 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.298288464 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.194468892 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.230428787 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.1849187 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.309929137 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.22945142 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.195745141 seconds)
  done (took 8.936308619 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.290671703 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.228526253 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.193753269 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.22669685 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.194923928 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.226913636 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.327566241 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.195523379 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.19930391 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.230732315 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.194983525 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.318029028 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.241482144 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.199221169 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.235180901 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.176348819 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.335771157 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.207264868 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.231621269 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.165234564 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.204062516 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.244204817 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.350445907 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.203794367 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.233350659 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.206220654 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.239875249 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.216766717 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.202581883 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.246017639 seconds)
  done (took 8.254203211 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.214433844 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.219344651 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.26353521 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.307641608 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.244693278 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.267076202 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.238567499 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.264866219 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.23741736 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.24639797 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.23018942 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.285148606 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.227899021 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.256029216 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.211131188 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.262083239 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.230275085 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.242601703 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.217560008 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.248114785 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.226212766 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.239134273 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.218656959 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.235611643 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.193066717 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.228403533 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.201342606 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.233797284 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.197874201 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.237220069 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.191241123 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.223318585 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.192685176 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.255825873 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.192958565 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.238557459 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.212356847 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.235582972 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.204504674 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.256013803 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.192086537 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.223485065 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.218591488 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.282952604 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.191436054 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.235053222 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.190851014 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.238824285 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.188778553 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.20768806 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.265714283 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.221406788 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.214277131 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.22113564 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.187628322 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.230173209 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.190550667 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.191838029 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.238577987 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.190003041 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.244787063 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.197003978 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.237611375 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.191890086 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.23446934 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.188909488 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.22224122 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.195349314 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.252160014 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.19746197 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.262464736 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.188768669 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.235557803 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.203484106 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.236149038 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.201946895 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.222305983 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.202677397 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.233340574 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.195072922 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.235504338 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.192936496 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.225473209 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.207075766 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.24441758 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.204726216 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.234661793 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.201979445 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.223535257 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.19277395 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.206897363 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.225645204 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.193427971 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.237640096 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.189646826 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.227704164 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.200110843 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.232458198 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.189942621 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.250077028 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.194598184 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.222036561 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.217253779 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.22537936 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.193878916 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.231889665 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.231990768 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.222190572 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.198646315 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.233512139 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.190187283 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.231039124 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.191760773 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.221892707 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.206700393 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.238666317 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.199111056 seconds)
  done (took 27.256548261 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.403756782 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.397372234 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.291747884 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.444373157 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.238025303 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.321892315 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.395213377 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.400154175 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.189880081 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.259212926 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.281200143 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.36509073 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.190937103 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.252799822 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.403803201 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.444708706 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.255068977 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.263119877 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.258376222 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.203297736 seconds)
  done (took 7.575359783 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.198743665 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.256836265 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.21248059 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.239872835 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.201143556 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.236252655 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.192226999 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.245484677 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.202000354 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.229121115 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.195043562 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.198639239 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.236735523 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.207759994 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.238920579 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.214087175 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.232021203 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.194587298 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.247756025 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.193963133 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.243458944 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.251286645 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.200275581 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.245089808 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.20927877 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.23390772 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.190235603 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.227298716 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.197983423 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.233865092 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.196516879 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.201191101 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.231589562 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.167272858 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.236674832 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.206954112 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.229968157 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.193819204 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.229675103 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.195024681 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.238025422 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.205662285 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.198740861 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.234958459 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.212185281 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.172264176 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.239970744 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.204393029 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.202098312 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.212827587 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.238928418 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.207051904 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.232286287 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.214912328 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.232415296 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.211205607 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.235272519 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.20798241 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.231482819 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.190443495 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.223030755 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.193918804 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.201575783 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.241811058 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.206087864 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.235075365 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.201829878 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.226433136 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.195529195 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.228333672 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.194649394 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.238913314 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.211594292 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.237797488 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.200009068 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.236641854 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.201866934 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.15661408 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.236100039 seconds)
  done (took 18.413600714 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.216819207 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.235764345 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.209305736 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.256704964 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.205031077 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.196368685 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.238049288 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.209132218 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.241361621 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.209673353 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.241680613 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.205349526 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.248494391 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.202787001 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.235651876 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.207486142 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.238848314 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.229302609 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.238006711 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.25245039 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.209729094 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.196584207 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.240579769 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.20432784 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.255468006 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.203128487 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.252891848 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.241161046 seconds)
  done (took 7.654400418 seconds)
done (took 79.363517703 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.550316383 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.684087591 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.437637191 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.439809351 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.44790181 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.439153721 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.434390777 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.462246858 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.968756663 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.399757105 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.439231532 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.428642411 seconds)
done (took 31.498619824 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.552408564 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.079905421 seconds)
    (2/2) benchmarking "String"...
    done (took 2.112984106 seconds)
  done (took 5.522173714 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.094496608 seconds)
    (2/2) benchmarking "String"...
    done (took 2.101922838 seconds)
  done (took 5.508269496 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.415063638 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.410002755 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.830209887 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.435676777 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.408452908 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.430350181 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.423817298 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.417637222 seconds)
  done (took 17.671856704 seconds)
done (took 34.985293028 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.410480882 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.889938912 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.828260451 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.430219276 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.419039148 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.443831043 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.427393825 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.411860411 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.431836125 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.40342929 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.856876974 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.846691932 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.424375214 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.981229542 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.406089345 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.41538706 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.416307417 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 3.002590898 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.419327513 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.431999377 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.407743856 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.416921694 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.434084656 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.429502174 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.430967792 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.416897952 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.421091839 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.461695377 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.751844544 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.460858699 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.409892067 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.430340442 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.427090093 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.416091976 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.412225983 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.455390142 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.761931012 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.446873799 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.425981738 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.413509137 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.922775957 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.419996061 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.422854407 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.44861042 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.398155393 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.476241601 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.417472279 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.542462703 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.438513318 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.431225882 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.417280768 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.895959364 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.421518945 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.446195326 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.444905689 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.809319379 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.419371299 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.588929362 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.453124839 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.466587845 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.425654572 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.44859295 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.441999857 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.421225254 seconds)
  done (took 159.862925803 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.419166497 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.414659572 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.418200045 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.454440259 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.42031468 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.434274659 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.434084526 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.415836637 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.420766166 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.420304874 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.417532019 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.450483771 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.417876226 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.444141173 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.445189101 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.4344804 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.424985988 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.416773062 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.427824993 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.451679443 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.419988116 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.44816375 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.429942553 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.413926222 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.425411406 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.507356591 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.437534155 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.472033959 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.426821418 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.439226418 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.441220328 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.424125383 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.125959581 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.285311888 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.429006268 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.456281382 seconds)
  done (took 88.483115646 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.417316358 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.440774941 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.429742136 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.453066858 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.421041314 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.042800973 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.042866021 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.53604945 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.633865762 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.440668603 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.123448157 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.804255821 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.421888951 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.512872668 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.43046002 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.453666036 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.521469155 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.464940229 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.432555024 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.419978303 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.048856085 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.431765988 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.80933075 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.641247089 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.426247005 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.477673081 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.833481651 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.418444115 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.460820434 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.764193501 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.45664976 seconds)
    (32/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.458143858 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.41899489 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.900914198 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.795124777 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.41903566 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.540788256 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.419231916 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.422465188 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.493204638 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.420531924 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.731345126 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.433988136 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.420405018 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.4279704 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.16372487 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.423825956 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.085971443 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.421471049 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.572105082 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.434006008 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.419803771 seconds)
    (53/114) benchmarking ("sqrt", "LinearAlgebra.UnitUpperTriangular", 256)...
    done (took 1.829606296 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.615403505 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.70074049 seconds)
    (56/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.462878981 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.421271417 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.444737794 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.434164666 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.420276996 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.461919932 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.463259265 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.419651127 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.459831628 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.4256754 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.478673042 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.434241039 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.943997212 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.617102048 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.481437717 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.568969482 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.089569234 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.421234181 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.541153483 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.558506129 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.422972051 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.426191898 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.421837905 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.422665481 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.577551132 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.423744856 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.920797301 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.625952469 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.423208735 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.204062304 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.526107684 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.423049211 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.888043467 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.423425016 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.443896954 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.294830873 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.524577104 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.42936376 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.423424055 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.423326655 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.941946174 seconds)
    (97/114) benchmarking ("sqrt", "LinearAlgebra.UnitUpperTriangular", 1024)...
    done (took 21.515098565 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.076164589 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.794962186 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.425674806 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.385595325 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.423905127 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.912650263 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.099960324 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.163300755 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.448874604 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.553154022 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.614452041 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.431845531 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.425794255 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.03593657 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.463499462 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.479981867 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.448526376 seconds)
  done (took 400.365779254 seconds)
done (took 650.026306346 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.423535906 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.41164257 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.415048007 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.428599741 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.410974644 seconds)
  done (took 13.415697815 seconds)
done (took 14.743060653 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.466876172 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.450130634 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.4613648 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.16275539 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.434496635 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.430028211 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.438983801 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.430394465 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.437569054 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.434061075 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.132701156 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.473547045 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.451956149 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.332304474 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.132088983 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.43480856 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.243738123 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.470742785 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.451989902 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.737867456 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.438178359 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.503980412 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.718829416 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.472861441 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.772530082 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.820522149 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.456374334 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.598099111 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.455207089 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.455041761 seconds)
  done (took 20.769939934 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.239710627 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.787121454 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.460667477 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.530020635 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.718318216 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.476253459 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.772934064 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.777781068 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.439909552 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.671317462 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.474654042 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.46342392 seconds)
  done (took 20.902361136 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.090518822 seconds)
done (took 92.602178151 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.473054199 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.538615954 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.450154408 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.487655102 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.466921377 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.460336752 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.451864066 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.449332816 seconds)
  done (took 13.106384318 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.450316804 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.445328805 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.446095601 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.484465782 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.466905589 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.459251474 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.443912076 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.446708502 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.449390407 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.444545486 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.44563127 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.484903877 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.466430912 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.458817288 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.44447574 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.446431309 seconds)
  done (took 24.615309528 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.452676243 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.445131062 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.445852092 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.486021126 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.46745312 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.461302194 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.447309244 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.44564415 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.450841905 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.445506814 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.447648094 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.487186006 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.467261413 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.460274216 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.446105072 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.44599031 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.452860934 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.446757874 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.45188047 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.485768112 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.468670819 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.46208837 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.446512786 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.446621785 seconds)
  done (took 36.296227147 seconds)
done (took 75.348944463 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.437476033 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.433979017 seconds)
  done (took 6.203900305 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.504618503 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.545876537 seconds)
  done (took 4.384755189 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.46960344 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.463242081 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.449176669 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.448778235 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.451730008 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.44751323 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.448424143 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.488937653 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.469297099 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.462242826 seconds)
  done (took 15.930736585 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.448454625 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.44927185 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.451367298 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.449063241 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.448629382 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.49098103 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.471182415 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.461922554 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.448784303 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.447624836 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.454669929 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.448293815 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.448874621 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.49099827 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.472444263 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.463455718 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.448186955 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.449516631 seconds)
  done (took 27.578634704 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.466646013 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.468476853 seconds)
  done (took 4.27053505 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.576808586 seconds)
    (2/7) benchmarking "second"...
    done (took 1.532325509 seconds)
    (3/7) benchmarking "month"...
    done (took 1.57623374 seconds)
    (4/7) benchmarking "year"...
    done (took 1.561273018 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.491717578 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.469399111 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.495696423 seconds)
  done (took 12.037792631 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.444302653 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.760003264 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.992603517 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.63021182 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.448923022 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.454755087 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.419696567 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.460880764 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.458981874 seconds)
  done (took 16.405306678 seconds)
done (took 88.146233706 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.439290596 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.492194182 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.493126049 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.471513169 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.748370803 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.444999258 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.446836185 seconds)
done (took 17.876218863 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.435856347 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.425046193 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.470337446 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.471135073 seconds)
  done (took 11.138541546 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.452789087 seconds)
    (2/2) benchmarking "read"...
    done (took 1.7621216 seconds)
  done (took 5.554609734 seconds)
done (took 18.031428321 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.453817627 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.45784411 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.454186977 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.45426035 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.494730737 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.476798479 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.466998832 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.451888161 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.454563588 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.456577558 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.45344349 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.453369226 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.494119895 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.476940797 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.468254683 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.452247801 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.454509558 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.457585669 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.453218582 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.454017207 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.497186553 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.479088605 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.467622433 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.452625982 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.453909715 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.458570571 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.455420136 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.453649028 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.495221362 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.477691049 seconds)
  done (took 45.268482518 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.471975291 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.456406155 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.456957981 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.458906803 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.454701618 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.45520863 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.498235737 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.477157503 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.471398169 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.453780893 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.455762102 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.460239535 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.457854333 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.454844785 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.499909808 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.478565379 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.470292202 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.454735222 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.455323828 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.463029666 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.457138228 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.457682525 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.499490098 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.479712237 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.470905742 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.456301741 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.455462669 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.460919335 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.458766586 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.458049673 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.498657442 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.479608982 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.471427515 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.458493845 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.456559919 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.462273726 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.460189418 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.459164734 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.50031472 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.480865248 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.472187605 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.456603858 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.456967806 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.462394587 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.457499976 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.45911993 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.502145862 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.481820869 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.471141957 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.456970348 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.45791363 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.463133617 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.457015989 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.45821474 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.502905549 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.481590095 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.472415292 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.460277341 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.458690148 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.462793665 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.45823745 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.458260671 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.502873908 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.483042178 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.473214669 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.459280262 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.457507616 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.46496333 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.458774057 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.459194327 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.504244121 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.482542978 seconds)
  done (took 107.043391662 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.472997411 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.462618924 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.458345834 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.464632359 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.460792084 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.460598135 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.502935606 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.483677098 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.476289926 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.459238598 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.459700075 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.466429789 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.459896663 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.461298439 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.504805649 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.483721443 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.475348934 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.460002302 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.461796445 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.466188379 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.460854092 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.459325023 seconds)
  done (took 33.667989924 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.507452438 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.48678529 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.477133685 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.462372146 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.463572396 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.469073613 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.462536992 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.463769829 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.505662845 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.484558114 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.476942789 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.462919697 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.466078056 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.465294295 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.460915667 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.464543795 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.508193829 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.487910016 seconds)
  done (took 27.922881479 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.477213449 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.462688443 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.46362203 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.466953332 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.46394394 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.463554685 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.50771649 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.487085647 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.477381339 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.463970681 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.462891972 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.467058126 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.462753187 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.463580662 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.506711585 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.487714972 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.478270147 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.461457544 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.463662531 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.468434368 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.46287999 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.464695434 seconds)
  done (took 33.733784794 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.508625871 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.487684164 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.480264646 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.464191974 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.466043726 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.468794072 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.46414337 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.464200814 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.509605135 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.491016853 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.481096945 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.465101111 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.465460318 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.467987655 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.46457992 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.463658555 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.50920498 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.491656262 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.480992294 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.464675093 seconds)
  done (took 30.909042644 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.465748465 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.472616463 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.467727846 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.46852398 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.512621929 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.492875007 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.485277887 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.468280851 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.467529636 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.47358403 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.468044359 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.467462468 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.51315068 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.492780921 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.483751742 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.469006505 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.466791232 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.473257767 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.467680644 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.468312377 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.51407659 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.494154299 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.483723574 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.467219063 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.470136924 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.4730204 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.468249606 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.468955226 seconds)
  done (took 42.736824756 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.532742843 seconds)
    (2/2) benchmarking "in"...
    done (took 1.510290244 seconds)
  done (took 4.397427707 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.482330684 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.468262831 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.469237153 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.473174627 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.468906225 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.467976323 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.516300279 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.492173233 seconds)
  done (took 13.190639629 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.478960158 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.467979016 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.469720018 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.474347951 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.47040715 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.462851046 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.518313912 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.501434541 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.480482966 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.463785598 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.46843856 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.470311204 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.466564288 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.465320534 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.5104546 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.495402302 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.490295257 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.474041023 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.472849321 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.476711143 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.471696844 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.466579088 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.515085633 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.500195282 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.481429712 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.475175824 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.471705238 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.480872739 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.4651441 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.472175093 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.515288881 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.500891011 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.489441892 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.473536404 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.473152592 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.480201774 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.475505748 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.471997712 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.5201216 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.503553219 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.489219063 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.473696524 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.467544912 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.475271169 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.470725303 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.475950869 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.519131978 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.499325478 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.482759875 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.469765835 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.476101518 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.471391685 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.474861322 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.473217704 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.520597486 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.503420065 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.496689268 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.469362283 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.471700291 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.481085676 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.486465103 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.480516497 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.524105376 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.502504499 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.488900572 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.476785542 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.480403576 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.485517038 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.476672954 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.475352692 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.524740088 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.516230288 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.498522019 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.478460086 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.475135462 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.480247626 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.470001153 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.478574881 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.525691105 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.506032653 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.496015587 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.476715511 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.473619604 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.480878042 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.470322431 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.479354186 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.523409908 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.501872931 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.484626203 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.480892407 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.484859701 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.482153769 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.469683036 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.474297723 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.522148173 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.505393804 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.488082839 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.475868467 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.479910215 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.483013417 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.478322379 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.471929294 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.525265576 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.507392964 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.494137149 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.481539279 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.484794656 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.477492912 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.484572698 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.484402331 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.528181865 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.499763362 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.493207123 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.481897881 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.472217776 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.482869485 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.482408633 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.476001578 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.530425882 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.504515332 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.49313745 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.486268606 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.483267095 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.484562115 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.474557687 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.484511718 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.52711249 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.504217368 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.499264155 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.480376024 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.480088558 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.483454832 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.484743121 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.47630264 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.533356734 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.504134481 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.500663152 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.481350857 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.4805199 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.4831397 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.480982318 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.479350574 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.529228612 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.511240684 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.5013869 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.478004063 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.490998972 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.487802778 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.481395763 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.483787406 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.535755702 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.508074707 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.494991632 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.486580524 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.476622791 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.488737724 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.477081966 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.486558453 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.531022955 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.511041573 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.498483663 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.47600287 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.480483403 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.491346263 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.481839187 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.483491694 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.535838115 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.508659405 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.500218393 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.476239732 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.484337806 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.481062205 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.479278056 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.488201832 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.534002799 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.508450742 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.497689512 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.490251134 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.485414286 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.49003096 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.477036638 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.483447968 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.539331452 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.514558566 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.507913734 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.486526886 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.485535291 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.483906124 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.48087717 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.487572006 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.526942388 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.516425908 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.510298113 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.494878825 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.480096423 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.493561694 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.477823713 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.487981119 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.533891522 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.518948391 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.503386834 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.48507519 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.481413609 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.497105182 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.480249697 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.489806913 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.529293139 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.516234183 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.50477102 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.485895712 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.48550768 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.486935165 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.487856594 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.491611279 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.537857706 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.513695931 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.497776299 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.490087537 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.478969951 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.489105641 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.490584187 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.486724822 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.538914127 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.519560208 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.501976387 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.490957499 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.487782451 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.490156742 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.490530665 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.485487598 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.536955664 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.519285349 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.506574055 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.486166207 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.494462483 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.494894969 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.484248321 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.489796351 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.546647169 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.514926244 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.50065107 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.493446621 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.49111958 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.494744864 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.48911207 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.483343199 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.544491234 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.51751384 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.514362798 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.483705977 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.491953746 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.490975381 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.49313942 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.4862727 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.543183382 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.519248253 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.509807933 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.497054711 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.489713977 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.491347727 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.493327613 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.490478095 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.539352018 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.512676234 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.510045229 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.490670126 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.491621042 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.495259917 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.489212157 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.492067072 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.535059693 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.521197154 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.502995481 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.505420276 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.507226571 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.502408216 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.494831735 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.495630274 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.544095354 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.520714994 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.505027695 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.488083261 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.491170964 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.494869628 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.487644093 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.494851447 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.53911961 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.523711258 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.507795369 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.491276348 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.494844287 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.499109131 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.485845217 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.496549424 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.54385157 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.520629769 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.502688313 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.495813226 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.489694469 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.500967768 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.492621495 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.489516514 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.552933845 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.525223119 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.51237462 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.494654446 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.490970955 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.49566969 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.4945418 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.499253819 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.541104355 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.525368468 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.504949894 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.493416742 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.491448442 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.503364181 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.501167158 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.487773887 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.550587684 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.52306169 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.50417262 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.491036863 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.496874233 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.503942946 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.504325198 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.489435474 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.552746329 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.524040974 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.515425533 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.496359085 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.494356061 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.500886426 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.494824596 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.501391112 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.550970176 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.52089208 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.516048644 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.501752115 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.496098358 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.500545906 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.48892661 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.499173202 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.555548168 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.521216933 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.515317292 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.493504771 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.498824429 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.502001402 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.496946937 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.499360578 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.550018443 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.529331573 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.517996708 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.502007929 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.497720285 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.507542775 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.504551732 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.499683165 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.561829646 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.522845215 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.521108541 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.498134609 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.494079079 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.49842673 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.494808422 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.502713471 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.544570635 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.530715256 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.516815784 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.497395394 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.499838748 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.509567161 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.491971039 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.499222802 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.561670657 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.521028946 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.51965307 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.499417161 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.492270704 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.507246332 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.500368522 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.491926989 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.548775257 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.526282824 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.519804221 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.493412443 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.502736957 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.501661206 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.505039332 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.502697344 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.554254861 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.529043822 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.51888596 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.494896289 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.501222106 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.508175476 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.507850547 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.496029265 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.556641131 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.525493628 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.525040953 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.507979518 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.496948017 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.512205466 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.50199798 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.49583888 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.554861026 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.536209872 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.515093895 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.506915304 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.495630415 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.504765074 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.498111065 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.501113466 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.558363325 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.535491749 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.513074932 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.497507336 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.501451657 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.50718852 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.503274118 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.500096213 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.561899273 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.525677974 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.51582713 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.503616206 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.497626395 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.514153326 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.496117185 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.501574843 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.556766883 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.538141634 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.522074536 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.505974631 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.49723034 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.505731599 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.509459907 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.504724944 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.556526484 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.529930643 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.525617425 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.497941632 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.503486795 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.507697503 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.501712946 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.500751326 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.564846408 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.530459574 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.519978066 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.501351393 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.507904196 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.513117054 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.506684608 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.500179796 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.566324513 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.542911477 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.529799007 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.499395153 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.503687154 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.509296545 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.508125383 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.506484107 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.553804697 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.543110737 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.529301205 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.510716121 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.504868246 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.509524487 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.500290945 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.510345902 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.561774129 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.534752653 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.533454129 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.503465595 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.514015482 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.512440429 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.506804264 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.49974931 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.556786323 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.534083892 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.522640862 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.509862397 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.50557935 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.51465975 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.50776478 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.51270279 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.562733518 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.536934251 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.525158006 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.501775962 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.509956588 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.508283348 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.508735834 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.508796546 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.560417059 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.541832978 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.528102646 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.504342873 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.507420757 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.519091947 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.511421669 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.502739498 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.565071676 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.545358124 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.532884323 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.5095015 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.503888368 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.513111425 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.511507394 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.509297681 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.564434023 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.536200894 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.537385847 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.51952809 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.504856819 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.512863332 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.516792235 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.516669562 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.565669515 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.540522258 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.525489293 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.509336207 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.515423271 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.515931025 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.512562565 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.512923505 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.562975689 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.54342034 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.525387868 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.509734143 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.513252821 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.524121331 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.512223412 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.506506184 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.576219528 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.548424469 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.529217137 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.524001449 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.516766021 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.51963217 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.518878497 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.503997627 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.570493296 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.541073594 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.536309954 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.511828532 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.5139389 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.518079173 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.50541047 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.514541577 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.575442944 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.551723613 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.532578696 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.507303839 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.50903587 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.520987073 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.512558396 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.514103383 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.570114231 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.544409683 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.534521396 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.508501538 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.529999599 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.533336819 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.521040386 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.515569045 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.572908759 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.543922384 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.535919013 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.513673983 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.519967036 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.521048806 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.513317737 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.511165297 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.57890227 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.548342992 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.528913247 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.510392622 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.511952812 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.525762858 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.524666475 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.531651588 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.574116034 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.549548885 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.537191841 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.515088595 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.513093836 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.52417823 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.517596135 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.511315898 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.571833933 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.550772421 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.536389676 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.518178911 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.510691369 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.525075783 seconds)
  done (took 899.074623037 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.517302422 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.516588893 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.575153121 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.548632471 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.535430203 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.515948745 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.5173686 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.521959494 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.517610461 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.517025666 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.576169518 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.550222294 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.537258276 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.518187923 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.517980076 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.523843362 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.518570479 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.51890052 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.577065693 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.549933208 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.538472482 seconds)
  done (took 33.605892238 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.519101129 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.517362207 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.523953684 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.520335801 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.52027675 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.578256551 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.552958039 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.539694323 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.522669414 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.520732681 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.527607742 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.521761617 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.520915227 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.579039418 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.551414304 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.539458485 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.519981991 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.520397573 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.525643484 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.521643618 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.520472828 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.583208711 seconds)
  done (took 35.145209947 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.552697023 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.539520261 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.514276451 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.523245979 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.52606748 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.521375998 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.520846914 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.579566337 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.552783039 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.535766478 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.514919157 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.515452993 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.523720566 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.524200621 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.517536364 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.585126718 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.553174121 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.539808688 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.520171001 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.520677326 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.526896502 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.529119737 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.521576613 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.57409159 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.555472105 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.541262209 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.521476644 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.519835788 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.520374497 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.524830262 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.521976363 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.575559708 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.556773788 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.539727541 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.517698678 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.524821394 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.528610265 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.522013332 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.523166581 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.584388392 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.563208004 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.541810011 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.528512997 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.530527794 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.527748149 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.516994981 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.52750704 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.582793493 seconds)
  done (took 75.129567315 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.555449429 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.543340533 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.52348762 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.52337585 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.530703311 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.522734043 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.523705671 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.585738339 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.55648586 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.544296529 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.523860971 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.525013991 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.531375648 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.524640132 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.524193222 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.585420169 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.557299876 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.543971283 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.526032373 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.524842369 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.530411654 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.52512314 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.523938583 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.584865284 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.55973558 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.545742739 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.525412539 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.52624386 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.530855224 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.525133965 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.524702437 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.588324899 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.558989524 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.545696184 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.527010603 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.526415457 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.532437585 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.526525366 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.527081766 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.587406743 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.558585585 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.546626305 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.525777557 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.528359003 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.53215484 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.525971233 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.527062318 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.587637027 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.560940056 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.547541215 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.526126505 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.527548389 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.533038882 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.52866287 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.526128039 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.590403345 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.560114553 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.546353899 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.527559826 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.527988619 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.532867024 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.527872731 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.528381632 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.59049592 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.561567793 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.547462513 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.528789097 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.53040251 seconds)
  done (took 106.185288642 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.534546035 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.530122224 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.528827734 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.592491012 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.563629096 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.550687366 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.528477527 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.529701771 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.536046079 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.528654573 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.530043652 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.591236347 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.565066459 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.548296049 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.532518773 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.531304937 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.537747362 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.532020265 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.530340469 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.592540923 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.566321257 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.551361185 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.530984187 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.531222917 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.538392309 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.530968873 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.529992144 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.594731706 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.565220647 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.551273002 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.532566165 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.53263093 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.537420989 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.530692996 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.532020063 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.594643805 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.56940417 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.553161983 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.533223163 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.533593066 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.538775808 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.532677473 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.533780634 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.596992604 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.566702111 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.55201269 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.532835255 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.532654072 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.53964225 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.532409328 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.532601162 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.596609946 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.56760966 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.551946407 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.53147454 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.532966902 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.539760932 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.532968176 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.532762482 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.597145451 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.567879284 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.554508359 seconds)
  done (took 97.360833172 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.532410135 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.533879875 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.540200189 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.534073144 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.535043975 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.598093717 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.568631333 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.554573391 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.534109127 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.53363406 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.540977775 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.535507974 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.53366463 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.599497955 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.569012094 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.554696646 seconds)
  done (took 26.210118978 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.534537959 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.535989632 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.54127114 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.534269682 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.534502196 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.600023665 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.568640601 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.55480778 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.535163529 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.535460789 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.541233436 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.535019558 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.536639423 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.599571317 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.571098473 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.556471338 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.535873974 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.53484008 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.541260879 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.535795078 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.536023509 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.599926943 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.572754995 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.556701423 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.537244857 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.536939407 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.543070713 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.536447219 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.536569982 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.600650029 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.57119003 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.558010677 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.53626974 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.537776604 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.542883406 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.537168858 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.536278522 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.603484056 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.574389996 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.561179667 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.537093124 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.53744184 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.544384321 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.5366086 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.539319538 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.602433179 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.573059079 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.560681141 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.537437277 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.540028007 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.543202979 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.539768081 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.539129279 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.605593801 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.576375476 seconds)
  done (took 86.804678219 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.561686339 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.536844443 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.537676982 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.543629924 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.539679504 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.53966725 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.606494695 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.575800594 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.560966627 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.540129984 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.539595735 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.546185072 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.540110891 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.540584503 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.604152033 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.577597935 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.561381506 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.53979217 seconds)
  done (took 29.408677958 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.540983768 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.547433645 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.539835906 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.540180139 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.606758162 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.577297718 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.59692245 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.541596606 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.540142515 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.547148327 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.541057977 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.540565208 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.607675732 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.57735307 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.563435327 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.540586699 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.540477739 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.54642172 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.541013616 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.54117328 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.607961447 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.57910031 seconds)
  done (took 35.724569007 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.555543467 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.531101078 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.532413768 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.551594083 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.539774581 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.533889836 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.598705838 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.569297224 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.569927747 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.556243753 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.55547682 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.547325362 seconds)
  done (took 20.058586187 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.543138222 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.543268662 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.610780142 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.579447495 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.563462072 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.543985797 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.543905446 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.5507216 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.542467395 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.543130782 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.611671024 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.579305273 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.565772646 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.544706698 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.543762289 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.550014892 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.54310197 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.544463566 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.611593829 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.580175448 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.564873464 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.542741694 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.544139688 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.548495317 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.544693264 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.543733722 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.612474092 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.581446176 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.565407223 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.544948688 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.546144199 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.550328299 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.545947434 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.545454265 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.611992965 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.580111814 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.566973794 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.544973539 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.545010813 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.552365573 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.544718464 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.545545129 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.613446817 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.58295366 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.567818351 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.546713554 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.546951072 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.552168213 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.545631089 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.546597441 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.613793322 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.583172991 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.567851791 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.546877466 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.545578774 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.554951229 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.547847059 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.546077504 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.616034715 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.585713217 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.569256241 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.54529911 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.546193173 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.553418218 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.546518206 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.547111392 seconds)
  done (took 104.451038415 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.615533943 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.585870489 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.56995537 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.546187907 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.547446363 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.555527408 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.548066386 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.548582307 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.61716996 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.584056295 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.572762778 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.548643535 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.548862929 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.55488561 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.548141518 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.549027966 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.616428581 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.585619142 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.570463203 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.548679444 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.547763982 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.555500436 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.548032628 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.547833316 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.616717407 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.587950487 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.569750724 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.548341469 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.548407567 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.555679202 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.548999004 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.54973136 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.618444191 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.585411823 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.573234035 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.54847283 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.550225154 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.556107861 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.550240688 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.550330369 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.619112983 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.586872438 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.570946597 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.549607005 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.550743865 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.555571045 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.548626281 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.5502453 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.62024567 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.588207021 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.573229558 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.550761845 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.549041315 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.557133294 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.550534926 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.550877881 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.621043432 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.589183895 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.573136972 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.550995845 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.550907699 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.555913075 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.551613126 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.551678305 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.622410769 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.590231332 seconds)
  done (took 104.875907873 seconds)
done (took 1994.2434801 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.559548662 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.538979023 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.543974025 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 10.719923138 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.542800298 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.202575795 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.254456424 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.582354373 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.565562874 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.542926319 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.545610872 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.545319326 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.878078286 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.545243467 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.61205213 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.580069048 seconds)
  done (took 58.182984756 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.599360443 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.553352144 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.683874971 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.55487296 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.576060498 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.766858745 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.684954002 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.588602504 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.774496649 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.551292548 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.542247537 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.580192905 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.54902793 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.540726389 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.642178207 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.809717158 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.869961931 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.54471753 seconds)
  done (took 33.843174902 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.101598595 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.600438607 seconds)
  done (took 6.132500968 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.574443265 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.551967867 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.623549686 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.587803964 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.565252721 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.5418641 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.54871976 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.556262188 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.542720793 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.699052664 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.622837781 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.601155211 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.575034242 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.551801845 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.557058176 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.606566286 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.682900161 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.559455093 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.627013499 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.593457743 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.574520088 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.729749366 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.600788644 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.566532201 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.701092495 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.544622511 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.630133638 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.605021087 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.725886155 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.560642459 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.551463553 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.557792502 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.553677138 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.546568395 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.193252091 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.585491068 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.627995321 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.561949254 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.559269916 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.713307379 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.554468385 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.558638126 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.616889366 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.158784975 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.703990867 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.792811852 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.547663103 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.563318987 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.554559646 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.70621845 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.62684395 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.595411725 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.642664128 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.549669759 seconds)
  done (took 99.067489557 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.591150772 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.552095794 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.731540639 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.564398172 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.619724576 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.586345355 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.591571239 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.894332818 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.609863538 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.555255627 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.90260247 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.24462883 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.625910004 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.633151526 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.617865824 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.580241586 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.549331749 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.554519759 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.547528124 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.548948811 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.231318048 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.590642186 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.573145615 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.703910311 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.592446589 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.165229268 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.549640712 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.56576377 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.622848454 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.589629933 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.235484043 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.550530814 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.604558089 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.555392145 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.865525306 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.010218763 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.040540767 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.590744149 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.622468768 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.553652755 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.585590446 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.168330536 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.990855683 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.550563648 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.623632339 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.20105459 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.574961688 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.559199117 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.550343275 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.831005695 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.550820958 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.553649585 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.623959756 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.60883043 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.573853577 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.611703901 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.601235804 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.167848089 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.55055674 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.54999626 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.663095211 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.591810174 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.589056437 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.551589964 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.550895495 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.999675802 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.734518756 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.55759036 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.06696501 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.248740745 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.574483143 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.29333777 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.552523605 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.562432712 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.624020035 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.550784808 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.625821439 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.197815828 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.60059246 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.553346804 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.972124984 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.561303786 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.884360924 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.572126614 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.627363512 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.220041395 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.585839105 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.61902849 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.551282163 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.560483238 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.554072409 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.558461324 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.950233953 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.615066657 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.577190533 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.553661837 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.561154453 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.561528373 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.552873304 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.559586715 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.369448667 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.603819835 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.580086829 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.557865979 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.553407433 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.561180608 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.558229238 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.554465334 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.915400397 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.594951116 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.580429961 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.556213392 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.555560778 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.573278083 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.707167546 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.557080883 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.004973316 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.595869891 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.579452668 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.556976642 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.556290428 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.580784614 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.56073865 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.556129207 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.589296715 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.957321931 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.615261492 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.55559985 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.556212606 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.570902251 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.555423261 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.556546173 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.670810532 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.597837216 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.454574562 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.564757152 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.570127858 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.56418245 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.558390673 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.557229565 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.64459077 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.598120949 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.911856197 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.87562448 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.754510417 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.56872704 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.557963317 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.426257819 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.683032343 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.784431047 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.604289141 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.557139776 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.865416415 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.758158327 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.558157875 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.563817634 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.636211117 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.890221779 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.58445091 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.897016918 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.239280536 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.567755169 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.568095009 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.425063083 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.389208319 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.604105221 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.587997487 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.888288597 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.579015441 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.565778957 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.558506557 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.561132671 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.636759182 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.603070094 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.587715582 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.560259381 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.559649238 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.68071606 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.760351747 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.581297358 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.64036611 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.208813614 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.596468537 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.560485583 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.565036279 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.566297401 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.560838869 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.594587804 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.63753681 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.645467948 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.584237475 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.561197413 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.238181739 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.568292218 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.562467252 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.760129358 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.456232194 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.603875857 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.587295217 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.560612594 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.597525066 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.20503923 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.621484447 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.937332018 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.64756561 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.649375621 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.58867516 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.587131837 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.197806875 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.572253063 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.56085491 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.37347672 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.640350013 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.292696183 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.587689607 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.562576269 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.304871847 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.569326057 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.565768757 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.562591819 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.640910036 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.929603859 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.589547564 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.599666154 seconds)
  done (took 554.806180314 seconds)
done (took 753.461725995 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.564548189 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.573885009 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.56593321 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.567965451 seconds)
  done (took 11.715742038 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.659230331 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.614213358 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.603163903 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.570090686 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.579190325 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.577540095 seconds)
  done (took 11.047448367 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.563583123 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.566479361 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.647291271 seconds)
  done (took 9.230330981 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.85356302 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.591770908 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.991754399 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.568397963 seconds)
  done (took 10.450846239 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.586250512 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.582330696 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.580105352 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.659601436 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.623900128 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.608144608 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.580504123 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.580404007 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.591570957 seconds)
  done (took 15.834990144 seconds)
done (took 59.73206682 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.647564607 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.650539091 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.659692073 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.650497212 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.731610487 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.657524219 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.656410336 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.661946425 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.654931386 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.603478744 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.729046022 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.639276128 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.673570002 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.788280853 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.607307652 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.657750774 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.595738605 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.744418959 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.732396069 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.659858472 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.700006441 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.604758679 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.606318774 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.611561408 seconds)
  done (took 43.370599799 seconds)
done (took 44.827140614 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.598195263 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.67184953 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.658156913 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.620712043 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.604302068 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.576399495 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.599059386 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.586437196 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.593008694 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.59300558 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.656761016 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.630605511 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.618674052 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.590454793 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.611663504 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.584718624 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.578913458 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.589340041 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.674880381 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.640248743 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.606471958 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.581162883 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.606832782 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.585680339 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.588248512 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.588883939 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.665573949 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.615781536 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.615842753 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.595566184 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.574151154 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.592252429 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.597380517 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.592810157 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.663593776 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.636083693 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.609851477 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.674571193 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.601623178 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.600817464 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.590016826 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.598847776 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.667548244 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.630520888 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.619763861 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.608949192 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.590131938 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.601725272 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.573638483 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.573841683 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.683955667 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.638068472 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.614237546 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.572334871 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.575082179 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.603357188 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.592751753 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.602828277 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.671922433 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.628224751 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.64275368 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.60225735 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.595137181 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.598334367 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.589857416 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.598905097 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.674965139 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.643312074 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.617169079 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.583786505 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.584205748 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.599487901 seconds)
done (took 125.497165887 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.705285702 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.576681808 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.812475213 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.632810958 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.778437558 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.708226241 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.588951181 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.598158771 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.590556892 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.378790821 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.673321414 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.631754786 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.607563691 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.589056633 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.707726475 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.595307212 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.589755848 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.275076667 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.672330399 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.764460141 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.608079215 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.589123423 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.58907627 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.384503544 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.578502805 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.575374414 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.799086697 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.634696333 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.305799375 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.572310096 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.576362559 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.284882368 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.716919777 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.608981304 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.681153121 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.641446461 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.780732979 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.593199263 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.708358925 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.715445158 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.734465886 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.629920414 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.658939611 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.627229788 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.618408754 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.591944237 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.591346447 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.626571749 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.581756689 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.591958449 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.362757558 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.646493272 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.626722409 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.592823954 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.591318245 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.617877224 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.59285446 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.592934999 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.803855739 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.637199608 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.736588929 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.388039293 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.382795354 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.601420423 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.579969025 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.592512095 seconds)
  done (took 126.473047724 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.736511612 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.708088613 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.734412364 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.586482597 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.634631707 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.71466722 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.586826448 seconds)
  done (took 13.167947165 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.591269567 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.675616401 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.680844149 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.660644779 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.592964602 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.763665721 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.600431923 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.597263905 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.593600778 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.72162671 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.639644125 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.623330935 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.603448714 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.584542467 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.640191458 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.59847865 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.702180132 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.672193709 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.639809649 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.768496483 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.593317718 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.603606989 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.644512857 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.597233261 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.595124662 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.676579042 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.391963195 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.622484884 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.593814347 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.595514634 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.602048334 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.65601282 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.596524974 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.671666364 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.641390537 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.732406733 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.59546303 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.595130615 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.604388423 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.587471179 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.59756869 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.681330358 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.642232764 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.62400805 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.595594956 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.613239318 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.604704358 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.59756683 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.598410969 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.682342169 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.68330881 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.638134381 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.597050403 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.595465239 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.649762769 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.606197353 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.598467707 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.683279718 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.644306718 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.625298403 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.74280468 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.637686636 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.60551678 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.635998384 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.597959624 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.685052787 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.644415451 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.625554998 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.679168217 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.59790371 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.645897244 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.59841828 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.772499287 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.702829932 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.646149962 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.620930652 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.594336265 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.599322177 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.594900535 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.597354418 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.599149485 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.679356415 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.644153238 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.624899166 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.599074197 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.751512968 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.710098463 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.599594671 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.608434396 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.68370361 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.646139193 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.670029601 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.599910865 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.599228903 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.647659375 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.70718559 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.644144601 seconds)
  done (took 165.00361178 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.69130001 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.651788742 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.622990618 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.621486719 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.59448124 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.600670912 seconds)
  done (took 11.256214316 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.595158553 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.601065117 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.686697686 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.647587639 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.62875965 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.601580673 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.60340738 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.603062497 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.604273932 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.603724294 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.689254379 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.650865389 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.630956836 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.602308245 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.602451205 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.609388433 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.603195172 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.601234521 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.688916389 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.650591551 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.617793688 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.603312267 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.603425939 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.603700138 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.604431389 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.601602031 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.708392164 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.651482397 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.632813476 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.604049458 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.604655261 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.61168099 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.597217856 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.599511124 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.694543304 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.645181172 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.633882083 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.605875236 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.602670432 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.612334474 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.605667899 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.605831189 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.692895691 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.653057302 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.625181638 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.600333464 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.607327471 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.627637699 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.604302926 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.606046528 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.69325923 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.652362151 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.634427315 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.608081769 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.601340377 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.60623801 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.607453015 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.606084157 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.692865297 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.64880414 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.63546986 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.606589321 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.598989114 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.614233425 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.607264881 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.606444159 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.688673136 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.655170091 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.636972198 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.606449838 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.608737766 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.612066271 seconds)
  done (took 119.466563544 seconds)
done (took 436.830230094 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.948708499 seconds)
  done (took 4.417541735 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.956956913 seconds)
  done (took 4.426896821 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.749213436 seconds)
  done (took 26.22519272 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.670443222 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.597122307 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.616422002 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.606904272 seconds)
  done (took 11.958929313 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.201030439 seconds)
  done (took 4.680943699 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.610694159 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.68800358 seconds)
  done (took 6.772179924 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.057791899 seconds)
  done (took 4.527610485 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.351357176 seconds)
  done (took 4.827969288 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.606244569 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.611125517 seconds)
  done (took 6.695648193 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.585988258 seconds)
  done (took 4.055791372 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.968709869 seconds)
  done (took 16.449909402 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.615415858 seconds)
  done (took 4.088249378 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.691164025 seconds)
  done (took 4.161010289 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.794337376 seconds)
  done (took 7.266013034 seconds)
done (took 112.034152965 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.62308066 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.602330516 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.598356198 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.603974547 seconds)
  done (took 11.896796744 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.672650095 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.674800534 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.770760526 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.716210704 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.696819436 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.675855868 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.634562736 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.641484765 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.664216741 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.660529545 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.766522789 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.715571366 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.704064153 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.636389371 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.660036602 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.683449155 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.664519997 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.676813377 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.725670992 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.715873834 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.639935009 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.668619809 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.661465381 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.61677947 seconds)
  done (took 41.826890062 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.097319682 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.672349028 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.846003532 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.701841009 seconds)
  done (took 8.798353528 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.743572027 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.716148097 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.734316127 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.775280672 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.814387215 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.728592222 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.725633328 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.683123184 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.646154443 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.715514877 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.790335247 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.723198716 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.932267105 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.610604571 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.023645092 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.660096729 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.641642903 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.716815424 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.764092976 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.802646976 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.612553661 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.716595528 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.811073825 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.766051941 seconds)
  done (took 43.32745205 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.648008385 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.628439658 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.61270018 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.635377071 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.615032114 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.613697819 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.704527211 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.669658743 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.642427276 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.612028799 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.613676559 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.635435852 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.614085385 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.6163358 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.713094476 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.665486177 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.643948108 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.620653996 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.622636109 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.623636045 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.614227954 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.621336724 seconds)
  done (took 37.471378557 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.691886834 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.647571797 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.97934809 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.85614554 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.602425556 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.609628252 seconds)
  done (took 15.872505936 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.691588181 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.844128872 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.700017457 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.08951319 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.153964174 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.608627727 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.608429818 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.895941875 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.264796617 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.294209107 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.749449154 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.737749775 seconds)
  done (took 24.116024162 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.731551538 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.613190657 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.626112292 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661754588 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.613408054 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.612354377 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.751870851 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.185294517 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.646038285 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.888465584 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.62515539 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.708082661 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.861684317 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.629791433 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.702231404 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.638012323 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.870499823 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.206011909 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.615312704 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.619802162 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.645425001 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.621525701 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.702114979 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.908348885 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.644405341 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.613126658 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.873297652 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.621520384 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959168183 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.936030557 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.028093002 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.668324233 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.918486018 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095074412 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.721022117 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861168854 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.635891144 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.61564367 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.696313713 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.667003407 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.646139994 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.617385352 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92756653 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.623232697 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.614425989 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.616361914 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241013681 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.675652194 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.644318127 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.614424261 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.93194122 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.70574651 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.622318694 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.614046475 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.70193445 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.665915973 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.649312925 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.736561254 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.257287373 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.62579233 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.623728103 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.615640493 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.713629739 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.675539622 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.385162365 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.624103362 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.622928745 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62934678 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.615695109 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.615457064 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.73200381 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.667407172 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.667845703 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.617292472 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490659562 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.625808841 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.619998803 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.266525916 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.733825463 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.669896427 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.87273359 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.617209689 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.618186863 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.623531779 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.615818465 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.511011167 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.719295451 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.644435094 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.681941631 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.14331634 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.862390471 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.645129137 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.648379068 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.838080873 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.689221472 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.670060645 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.664156589 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.621664309 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.639982834 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.154665207 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.618637848 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.626562658 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961101559 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.881982337 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.656442372 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.604126363 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.150626749 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.646901523 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.646298276 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.632152871 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.960840199 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.385379836 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.972191856 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.633810104 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.655322887 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.626499248 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.574679235 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.637397327 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.723156417 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.68759158 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.967046184 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.597272348 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.6226309 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.702540035 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.619837569 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.622006125 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.715187598 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.675602342 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.651290498 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.848125116 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.62801129 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.942748783 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.623914152 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.621455377 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.718039781 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.673474239 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.674475554 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.842712909 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.639471375 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.905607988 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.623617797 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.623492645 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.719721848 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.895135071 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.658135676 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.629409774 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.962346684 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.63445438 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.628667894 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939399228 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.754644419 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.786221188 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.686933059 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.630301375 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.871922076 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.637256242 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.630188592 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.625302374 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.722897772 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.677864576 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.660609653 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.615992193 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336785761 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.602086814 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.633493925 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.622799918 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.734251442 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.748812272 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660890181 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.870292189 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.637529378 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.651119512 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.632928196 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.624771057 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944224797 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994233736 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.655996557 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.797447514 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.153850482 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.365597884 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.642411651 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.624157967 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.721968738 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.676180656 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.657783207 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.624713422 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.626580921 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875745363 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.953109205 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.624569828 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.461418323 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.685979078 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.656807246 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.633088877 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.946460601 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.646225639 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.629320939 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.629252713 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.739336956 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.682218354 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.982782881 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.852427372 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.642667685 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.634940665 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.190979997 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635424796 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.727341162 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.680442152 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.684487604 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.627850722 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232069722 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.975092546 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.639466741 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.953517643 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.731514511 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.699186783 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.65744034 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.626554977 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.647178777 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.643668346 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.641484481 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.8730222 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.728349678 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.690013957 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.301327394 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.534399466 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.311752236 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.649655207 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.639299522 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.635161905 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.264341829 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.682841388 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.66228655 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.911541093 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.163917233 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.638262066 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.162183685 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.651063351 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.661947062 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001834899 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.888678608 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.66922933 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.632056528 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.956729374 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.84230558 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.656507607 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.728917728 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.71147469 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.638649011 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233744078 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.640772706 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.817133304 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165776525 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.632784967 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.733118048 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.747651125 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.666351737 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.096460703 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.632253919 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.640868793 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.634562771 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.639645551 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339300193 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.696114887 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.664354719 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.368612963 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.634023714 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.180684118 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.634156492 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.879955988 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.05115799 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.984355327 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.682768636 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.642774316 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.883377674 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.958007775 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.635043354 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.633880551 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.392213669 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.54510095 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.673908973 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.634315623 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.588015079 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.644782029 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980852868 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.645262699 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.739923933 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.704183718 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.667448701 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.635770085 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.63516117 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.652595804 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.604496986 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.231617914 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.730288707 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.69045661 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.67768809 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.640430064 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.884634995 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.658792344 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.355472108 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.865200594 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.730049351 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.723355801 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.674243042 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.63569685 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.61321231 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.641777533 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.636269688 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.644415306 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.958104043 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.713151902 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.644964153 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.696970287 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.846578213 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.645547796 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.637188713 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.897034038 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.738655529 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.69262753 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.55139661 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.668821744 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.637273847 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.647884642 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.644144877 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.667030151 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.811237214 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937600435 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.986216508 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.955318403 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.105305054 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.645683712 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.640860937 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.65317666 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.820147704 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.699902524 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.677583321 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.638269641 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357788888 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.533201209 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.361826682 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.958924256 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.744740804 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.704882145 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.673205258 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884333723 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.638005836 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.921860827 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.640330801 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.660480149 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.762758509 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.694507239 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.674104993 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.856481493 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.915204951 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.648285833 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.651912135 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.640326434 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.743712549 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.018953035 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.884972065 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.243003371 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.29631798 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.651816694 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.641134769 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.182698614 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.017965529 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.695824004 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.6752078 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.641406504 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.641835464 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.662561283 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.648398062 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.639704837 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967682547 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.013152325 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.177295269 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.963582133 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.668255579 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.519213596 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.659369528 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.889287368 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.581114242 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.943865492 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403004966 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.482525971 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.896029686 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.724378689 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.893558913 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.643455697 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980965463 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.703295235 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.674547282 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.644499634 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.646225877 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.650863492 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.95803201 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367191837 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.000969792 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.702940382 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.681550046 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.673004846 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.894526445 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.874825116 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.537895475 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.864756308 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075539566 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.710588319 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.677122185 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371620791 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.964652423 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.65483131 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.651019849 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902152283 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.747934557 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.736145361 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.548777651 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.643740193 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.29894395 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.866524841 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.665666269 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.6630616 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.593918816 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428309754 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.688208938 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.243538521 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.647994972 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.654362733 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.922118831 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.655304501 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.763867749 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.994647098 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.684690764 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.661938285 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901566097 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.374705665 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.574475711 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.664975862 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.755755806 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.70435385 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.681476843 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.712091126 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.647641199 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.666012823 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.108148439 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.647282176 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.750309903 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.71611839 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.686615303 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.650734901 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.653265699 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.655949282 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.655888202 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.647886555 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.72933469 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.706871321 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810055072 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260239066 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.65301951 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.274148584 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.985486934 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.897261574 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.769762263 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.686094707 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.690301484 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.650486407 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.649019744 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.658163792 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.641416544 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.310964851 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.770022652 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.02793742 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68910577 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.863962025 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.861988272 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.659182849 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.900305428 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.65224584 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.801353779 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.682535696 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.684168579 seconds)
  done (took 1121.975475417 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.693738955 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.731888655 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.67165504 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.685230502 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.66210537 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.901965774 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.775214152 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.815728073 seconds)
  done (took 23.459827223 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.642506553 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.657515889 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.664746304 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.669800107 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.65204463 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.303334961 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.717592772 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.686367914 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.669178747 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.653160742 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.656081467 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.362250656 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.652593866 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.754373913 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.711157496 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.690828497 seconds)
  done (took 37.676386346 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.954092883 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.855829103 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.44238504 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.65265869 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.692169982 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.753838917 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.112782345 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.701228848 seconds)
  done (took 30.691648751 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.659190133 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.66135438 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.670258647 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.661428582 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.662186412 seconds)
  done (took 9.839475034 seconds)
done (took 1408.424655143 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.76504629 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.717113089 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.692940747 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.661313929 seconds)
  done (took 8.349939456 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.629563686 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.638072088 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.631269761 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.648378069 seconds)
  done (took 11.073727956 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.190564695 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.346895227 seconds)
  done (took 6.052488709 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.688969894 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.425395571 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.404401016 seconds)
  done (took 9.031891394 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.967935835 seconds)
  done (took 3.495000749 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.048419841 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.130337132 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.753134812 seconds)
  done (took 8.447618501 seconds)
done (took 47.964940948 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.711597805 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.449448395 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.80576591 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.646848556 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.819022813 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.806106842 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.917434311 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.770593963 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.707711866 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.693326453 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.648489884 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.810343915 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.916716407 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.417164356 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.906722477 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.52317712 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.898091773 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.684852724 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.655324078 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.64885873 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.949499688 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.648174573 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.652982314 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.760779011 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.867872206 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.827341419 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.648777836 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.418447619 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.65695448 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.660092414 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.794048177 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.760514182 seconds)
  done (took 92.598775301 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.70614335 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.683293982 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.672745318 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.650598595 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.657925371 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.648338899 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.650086569 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.755912546 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.707611577 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.690793143 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.648502706 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.666973427 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.661007244 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.651304653 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.65336697 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.758313535 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.710502232 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.683125102 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.652540802 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.668263439 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.661226031 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.650681513 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.650900394 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.782590453 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.707354756 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.687001275 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.666945977 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.650896799 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.659401738 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.651385223 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.653427513 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.758813342 seconds)
  done (took 87.288894204 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.710152589 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.686692449 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.65222181 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.65642797 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.666074847 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.653872086 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.671159504 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.759876163 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.709076952 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.713723994 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.66577239 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.647957745 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.660778368 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.649878549 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.65002379 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.758476543 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.708791222 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.687285137 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.64950262 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.649563066 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.661961266 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.662208199 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.655975665 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.755901938 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.707406363 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.706261316 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.651134093 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.663207033 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.658667699 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.65732924 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.654462025 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.768225402 seconds)
  done (took 87.343740302 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.948928825 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.69760874 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.66870644 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.66060051 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.675834065 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.664554791 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.660036968 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.004872269 seconds)
  done (took 17.512993956 seconds)
done (took 286.260162785 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.717227875 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.695205165 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.712120643 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.661339247 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.688063772 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.690318001 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.894176483 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.794177 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.943954401 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.696783274 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.678974079 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.660387782 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.635760941 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.806469979 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.658871648 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.78080673 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.725960087 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.699188102 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.676380453 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.921265534 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.696572024 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.653801321 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.6644383 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.809315407 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.711330909 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.773694355 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.739014514 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.828458071 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.800187837 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.738864365 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.656032161 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.774054302 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.723039911 seconds)
  done (took 76.826969484 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.696896173 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.667836901 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.668671542 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.677562127 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.66850018 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.67060809 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.772017366 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.728884018 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.706960149 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.668294456 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.669080215 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.679394152 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.670288378 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.670021919 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.780094158 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.708385261 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.697256612 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.692970988 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.662192982 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.659501704 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.669196783 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.670883169 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.783398101 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.730211405 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.703328568 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.672573465 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.671034226 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.681226586 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.670118497 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.670552411 seconds)
  done (took 52.273171956 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.779999232 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.718070199 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.701000996 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.670702559 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.663254783 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.676103525 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.021277303 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.672753008 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.778933498 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.728350377 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.713330786 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.673760245 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.720382128 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.679998575 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.668164195 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.673255767 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.783504742 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.725111733 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.692764825 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.681243857 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.027065459 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.681498844 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.021713694 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.682454583 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.780456202 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.725086391 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.707371138 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.660148398 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.668968594 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.689205886 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.669807331 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.022620035 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.771139611 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.719902178 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.704291598 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.680256583 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.674688617 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.669387265 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.670902756 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.66868244 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.132919965 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.72999366 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.712080733 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.659929167 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.670334809 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.683187639 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.659694569 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.683942977 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.083513761 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.733120636 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.700476155 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.671827225 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.675555794 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.677235407 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.969314879 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.671285877 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.778509203 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.72412964 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.710497341 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.023161387 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.676444563 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.677686948 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.66292303 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.670793747 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.776345748 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.73481044 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.718323783 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.670127698 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.678585376 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.679612347 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.663116151 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.671657196 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.791609074 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.743678086 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.70026843 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.662460978 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.694114034 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.672334825 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.666827938 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.022335586 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.789185768 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.742400737 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.069323218 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.676360892 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.678767424 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.689040809 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.677412237 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.744958005 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.135855846 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.691310816 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.721741991 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.664538574 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.028298649 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.689218843 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.671503675 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.667643781 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.793343242 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.740885135 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.714368527 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.664684132 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.674445188 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.695364345 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.668044916 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.677356949 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.144031777 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.739649354 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.712230969 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.673107412 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.783485017 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.687671731 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.686126308 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.675674762 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.152376672 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.739573592 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.717582764 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.667885787 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.67029635 seconds)
  done (took 243.459331306 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.677299126 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.668272012 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.6658752 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.780991508 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.72752262 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.712483297 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.667292648 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.668895817 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.682045782 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.670870048 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.67281919 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.791929984 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.736837074 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.705921091 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.679694768 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.66911117 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.677742158 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.690661197 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.67084363 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.784238227 seconds)
  done (took 51.547204438 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.745081142 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.395488793 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.336896731 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.684503618 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.694002939 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.676131835 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.743793615 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.800649499 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.74671922 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.07839149 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.892172025 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.687079811 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.693542593 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.683250697 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.336796191 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.802257353 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.105909039 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.398857206 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.726398461 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.363957548 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.694078435 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.682882256 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.675805196 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.47825334 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.116399953 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.069431461 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.747535566 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.367083851 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.694208317 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.684695374 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.363358031 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.80061111 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.742662626 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.390210489 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.686157486 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.699052441 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.694367044 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.74786268 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.749749367 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.16174363 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.433626558 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.076949704 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.696550371 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.852857206 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.695592962 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.664556607 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.373417813 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.804077962 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.727260836 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.72499626 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.690402463 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.349785863 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.68811055 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.34867458 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.685553545 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.800899318 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.428914467 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.387219354 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.341096735 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.891501222 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.687318598 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.034927374 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.687951511 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.491860879 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.750926484 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.72433686 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.689127258 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.897212508 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.37538919 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.036623503 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.04921842 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.167321505 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.75257974 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.796525199 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.689615872 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.049484363 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.766195958 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.092963175 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.0498679 seconds)
  done (took 154.839752888 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.115856813 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.851927331 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.163607146 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.318856221 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.248018766 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.843046048 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.791265091 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.956510597 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.804018674 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.853731218 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.493978511 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.793661188 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.510334542 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.769405012 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.796868247 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.817030143 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.271500503 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.759297693 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.435687007 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.429144171 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.687711601 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.806774039 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.468140492 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.09656466 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.795070561 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.53478514 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.716694804 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.27084723 seconds)
  done (took 63.953941749 seconds)
done (took 644.434190775 seconds)
SAVING RESULT...
DONE!
