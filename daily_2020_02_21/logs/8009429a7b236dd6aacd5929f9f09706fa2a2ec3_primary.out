cset: moving following pidspec: 28308
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.413598108 seconds)
loading group "string"... done (took 0.610894823 seconds)
loading group "linalg"... done (took 7.860673176 seconds)
loading group "parallel"... done (took 0.16607935 seconds)
loading group "find"... done (took 1.261495239 seconds)
loading group "tuple"... done (took 1.883844705 seconds)
loading group "dates"... done (took 1.324852882 seconds)
loading group "micro"... done (took 0.229833123 seconds)
loading group "io"... done (took 0.979849389 seconds)
loading group "scalar"... done (took 39.172958771 seconds)
loading group "sparse"... done (took 12.340289769 seconds)
loading group "broadcast"... done (took 0.992651878 seconds)
loading group "union"... done (took 12.660051164 seconds)
loading group "simd"... done (took 4.693331075 seconds)
loading group "random"... done (took 9.116684097 seconds)
loading group "problem"... done (took 1.889539086 seconds)
loading group "array"... done (took 21.922091367 seconds)
loading group "misc"... done (took 1.76441515 seconds)
loading group "sort"... done (took 3.490496135 seconds)
loading group "collection"... done (took 18.096978172 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.527678177 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129131358 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.131631246 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123785369 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.151385877 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119106978 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.131703955 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.091569747 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.906519404 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.152904129 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.120758807 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.439057172 seconds)
done (took 5.359650075 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.17763549 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085997128 seconds)
    (2/2) benchmarking "String"...
    done (took 0.086359353 seconds)
  done (took 1.322336747 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.072056199 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129180285 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.070171918 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.071001841 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.070596175 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.070378799 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.071440639 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.070951807 seconds)
  done (took 1.704356938 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075982014 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.072238284 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069712525 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071242586 seconds)
  done (took 1.440109143 seconds)
done (took 5.877405729 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.80910123 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.223518136 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.192556034 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.418119252 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.136619975 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.165999174 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.639629419 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.317352887 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.193351324 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080202165 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.113503661 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.350391457 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.113161791 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.640638088 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077577212 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.094252655 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.140684671 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.456603443 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.070597724 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085102442 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092122474 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132197418 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.088883323 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077477683 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.149115365 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070829396 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.139931679 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083174582 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069625372 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.223607977 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175347411 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.663840342 seconds)
  done (took 10.476331064 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.104577887 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.103615646 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071654933 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.129541098 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.103149631 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073911175 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.078291379 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070686925 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094061578 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.134926296 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.095725037 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.106746113 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068564238 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071886409 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.088989972 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.209845772 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.086688314 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085612245 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.073950649 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.081513672 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.111691262 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.08183906 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.084402068 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.083572797 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.132236215 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.185348671 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.103129221 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.103021617 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.072939462 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.089486422 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.119853883 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.134661788 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.071323664 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.071509665 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.133886258 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.099574148 seconds)
  done (took 4.798160659 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.052062266 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.149430349 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093569932 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.138994405 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.068207245 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.11360326 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068938526 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084663381 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.215572674 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.409198309 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.092333231 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.630908086 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113932678 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.109528349 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070926518 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.072155713 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.071055304 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.579141475 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.101377486 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112696882 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086667847 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074034155 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073285599 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.372813984 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071671766 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067757876 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072642624 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060272973 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.130430001 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073349345 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.968678011 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.165829465 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069333974 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103447309 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.164013738 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.222261319 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.148299415 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073001927 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068317293 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.161543607 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07411562 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069636596 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.087661498 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107077192 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.121869188 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.069456036 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069772362 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.168330407 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068079809 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084402037 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.126371792 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.156394269 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.084272162 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.069385341 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.263910265 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.093433311 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073299089 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.068182383 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.210516813 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134522739 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.074032927 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.072685498 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071898556 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.073083921 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.440203453 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.06992664 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.2075677 seconds)
    (67/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.068223493 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080393257 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070537704 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073724627 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073136498 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076798079 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078305537 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.091705476 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.095603986 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.070271917 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078869514 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069138569 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.069645445 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070074799 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087102862 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.401871862 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070116441 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.07206619 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068238569 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.093125956 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099527368 seconds)
    (88/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.171102799 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.069692141 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070682571 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102770664 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071880048 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.070216178 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.111707218 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070159113 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.086981061 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073574842 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116623985 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.071899649 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.115116839 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.072068477 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.102316518 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073395284 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101995852 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.08301895 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071965477 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.447390871 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.068599356 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.06813909 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.072111649 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068892104 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.071554049 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.071029284 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.082862807 seconds)
  done (took 22.684165059 seconds)
done (took 40.16053366 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.265751832 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080217796 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077108552 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076418723 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077092159 seconds)
  done (took 1.823883363 seconds)
done (took 3.05116753 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.127213406 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103943139 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068159348 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.102431565 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067807611 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106144758 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10504801 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080456639 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104409107 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06867657 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101752367 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067584692 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068026881 seconds)
  done (took 2.419611181 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087393076 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088492007 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073636567 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087446028 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06632046 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087066082 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.085669768 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.092843199 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.085662231 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076091752 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066890034 seconds)
  done (took 2.118376299 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086825669 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089161344 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075972084 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086062201 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067274233 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086362141 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.085330918 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090191204 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086209053 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077969757 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066901894 seconds)
  done (took 2.112777842 seconds)
done (took 7.865518463 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080913591 seconds)
  done (took 1.288459765 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.596920548 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.123584132 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085140966 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.114936955 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.196917244 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.121246147 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.271920076 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.090760016 seconds)
  done (took 8.994900338 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.10632971 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.074712029 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.074965026 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.075238031 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.072137221 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071605729 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.073083064 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072501595 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072864454 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.075125996 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070863798 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.074423775 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.075678398 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.072345331 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072304491 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.075485688 seconds)
  done (took 2.489041658 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.095758931 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095382025 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.076772982 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077719805 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.075834671 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074817582 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077552732 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076646956 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074164654 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075953049 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077237415 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076647415 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.074442904 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067623359 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.077554813 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078487269 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073931383 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077178671 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077317595 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078979274 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07775395 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068569743 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.07456183 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077137226 seconds)
  done (took 3.17641698 seconds)
done (took 17.164797882 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.109572717 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07056422 seconds)
  done (took 1.392830496 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085001411 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08591474 seconds)
  done (took 1.392921448 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084536383 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.068845638 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091557509 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.081145368 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.069486279 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068464009 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089835731 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.069532206 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.069015269 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069550589 seconds)
  done (took 1.984167059 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071456699 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080133374 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.07352088 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.083963655 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076786369 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066939226 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074847907 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.071120447 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080131236 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065651842 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07423139 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086185367 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074005727 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.087711856 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074683956 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.071765191 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.07417732 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070462167 seconds)
  done (took 2.58205894 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068470997 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069895203 seconds)
  done (took 1.366603801 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069913981 seconds)
    (2/7) benchmarking "second"...
    done (took 0.066653842 seconds)
    (3/7) benchmarking "month"...
    done (took 0.070126426 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069360158 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.066720991 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065707707 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06620017 seconds)
  done (took 1.697805366 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.397176497 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.122638553 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.332934875 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.076881271 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.086257179 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.26814355 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.069727796 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07415249 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.074494069 seconds)
  done (took 2.771169603 seconds)
done (took 14.414935971 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.084535417 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.090980247 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.100987679 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.390665435 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.094738715 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070063759 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.117228976 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.190501781 seconds)
done (took 2.378312857 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.218484652 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.721814081 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.44907462 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.219850866 seconds)
  done (took 2.622305667 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.356686254 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092703057 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.062459837 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070176586 seconds)
  done (took 1.821974169 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069890389 seconds)
    (2/2) benchmarking "read"...
    done (took 0.073035838 seconds)
  done (took 1.381088203 seconds)
done (took 7.283197745 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070356718 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.070451184 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.087903379 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.067763293 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.069435123 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.066738509 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066688182 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.069264289 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.069884859 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066720326 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068944525 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.068957713 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.069515106 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.069807124 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069504325 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067307934 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066973999 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06889153 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066304169 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066862301 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066574197 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070520138 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.069185045 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.069005901 seconds)
  done (took 2.938057372 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088406787 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.069654094 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075446729 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.074808327 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072955712 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.073639293 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074382334 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068859185 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.074274723 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071023865 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072239959 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072375914 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.070887857 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072392698 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071746713 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072278332 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.07405267 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069447216 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071127225 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072865681 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.182765472 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068755979 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.07214286 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073912158 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071997933 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0718886 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071177642 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068734764 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074006601 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.072259525 seconds)
  done (took 3.538314311 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073329352 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065998878 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.066759688 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.074218877 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06673657 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.068010707 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066232337 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06678149 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067495144 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066606054 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.067850401 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066861451 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066687509 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06753476 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067428228 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.070680427 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083102251 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066792838 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.066505198 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066994477 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069977235 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.066771429 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066742145 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.066107907 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066134738 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066427146 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.066664244 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066773761 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067546102 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.066598911 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.070243966 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070540638 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066676764 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.073493148 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.070171557 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066378545 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.071142302 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.066794819 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.068025588 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.066582823 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06642312 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066673699 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.066341792 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.074389915 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.067063584 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06817246 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066838461 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.068106423 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066975813 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068879403 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.066184368 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066879994 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.068470015 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.067416381 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.071931691 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.067194851 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.070013734 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.067521998 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06953126 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.068627723 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.068077283 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06676029 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.069872464 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.067200487 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.082196289 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.073758807 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.066930688 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068392948 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067561595 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.069918994 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068611369 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.081573471 seconds)
  done (took 6.195368828 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093362909 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090240041 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068785113 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068354783 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065170167 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067515209 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072458358 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06779808 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069987017 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084893183 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067301828 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069073314 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068351651 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070382347 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067513855 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068046926 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075339765 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065048627 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066810537 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070267913 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067942243 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072454808 seconds)
  done (took 2.835830232 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.159159231 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073213857 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109659712 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078270335 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072984457 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078336588 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072829532 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072985318 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073643919 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070897574 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070729646 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072917229 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072943675 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070544044 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070993282 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070918556 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072824702 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070573821 seconds)
  done (took 2.685513632 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079733933 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.070156213 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.091032969 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069811917 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068903439 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071631798 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073273058 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077145536 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.071174405 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06891503 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.077325763 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072177833 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.071378726 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071399982 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072469984 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07016502 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.073549811 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071503696 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079192705 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074670408 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07390037 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077898429 seconds)
  done (took 2.879619007 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083012925 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071239752 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084735072 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071134325 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064700099 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067418811 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.073483953 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069323285 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.073793745 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070921053 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069192062 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067353934 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071604148 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068664829 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071776966 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068780533 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07091563 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068886148 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070648371 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064821917 seconds)
  done (took 2.676157433 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090302193 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071754436 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072226813 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07848992 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071262605 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070882866 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07857718 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07079905 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071257004 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.091691686 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071070283 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070996059 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078331664 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075219516 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071208593 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079304085 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079267781 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07826883 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071548552 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070895715 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.091927066 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071392013 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07842941 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071539308 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070990099 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071415329 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070864886 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.0752092 seconds)
  done (took 3.370762153 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069650748 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070263401 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066908876 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066887846 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066518156 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.067260374 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066395401 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066956061 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06905025 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06715917 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.068862045 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.069123978 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069895436 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.069413532 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069102274 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069340766 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069380641 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067238776 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068533826 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068553166 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.071764771 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07096204 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.071457817 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069378885 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068789358 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.07164662 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068828465 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06891077 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071552051 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068494536 seconds)
  done (took 3.323182134 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07828408 seconds)
    (2/2) benchmarking "in"...
    done (took 0.076205403 seconds)
  done (took 1.411355934 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066149758 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08389867 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.066703425 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073803986 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.075648145 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070727743 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077114474 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073492704 seconds)
  done (took 1.840107926 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085483392 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.081239206 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.072738982 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.085832034 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.08268131 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.089791083 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.142330105 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.071577579 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076659229 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.068095074 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.0876537 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.070556759 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.078991707 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072237042 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07808911 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078540116 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.069341304 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.07729266 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.074156684 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.06997517 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07300628 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080777914 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074390326 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065533992 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070851025 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093526466 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.08083621 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069879964 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072879231 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077319589 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.075692391 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063375279 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.069653744 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.07021 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067267379 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.080018432 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084806252 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072725894 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079390187 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070192385 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078898668 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064472828 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.076488318 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.077217116 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080778756 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.071573772 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.071959308 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.066396557 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.069804435 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.077156501 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.067158155 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071983821 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.065000194 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07771657 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.074463589 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081428818 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.068944408 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071785618 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.073018359 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072941084 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076348222 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071600314 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073380919 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.069880903 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080355378 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.074385535 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078740008 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064502941 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063492813 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.068051474 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079392293 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093628799 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076388457 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070769531 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070787961 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066975806 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07322187 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070602578 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075164984 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07668277 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.071989904 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.078079584 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078774812 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070259786 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071887521 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.077271378 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067939639 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072582356 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.068490263 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086657704 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.069029688 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.067241533 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.067531427 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079982441 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073300429 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069047805 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.067125205 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076847162 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063492834 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069547813 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069756319 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070054919 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079264326 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072876004 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073739473 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077937708 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075722882 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068608029 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070836441 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065207619 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06912672 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067638569 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075941031 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062893894 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072224103 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.195871014 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.071164735 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.079422344 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06870097 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070509681 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.078079959 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076176938 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.068395691 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.066447164 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072615554 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.069692356 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074128398 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077825026 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.068977937 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064865989 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.064713378 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.075560001 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.07197434 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.074048896 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074010548 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073241512 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064067131 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.067763857 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074855495 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07949051 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069608871 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.07124738 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.077322959 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071658189 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.068951881 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07704642 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072690102 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.069336276 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076064844 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.072032784 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064645803 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073052713 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072494367 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.068506834 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.073829286 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072847382 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072112351 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070395382 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068427843 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076612908 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070854379 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.069479645 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070213409 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069616482 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.08032975 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.07133226 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.066066745 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.068602106 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.080714974 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.070304845 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.071094928 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.071093583 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.075025779 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.072343422 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.069078032 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.071252008 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.073390389 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080988773 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073400548 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072236405 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.077697672 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.083313635 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.071879448 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.074479382 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.071443343 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07327206 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.072303717 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080760617 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.078533592 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.076632578 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.074835529 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.068645731 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077303272 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080024762 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.070948755 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.069545448 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.071136392 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.075550903 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077897447 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.075929373 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.072253836 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.07008031 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07370156 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075229681 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.075113053 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.072336327 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.071238962 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.078152582 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.069905751 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.078348446 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072820119 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.08171928 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074143864 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064506443 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072962488 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067637752 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075992386 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063774733 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067452541 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068755146 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069393391 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068274023 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071289324 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062939629 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075563279 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075951526 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069247198 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067879884 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.067641108 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07528443 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.07035509 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071893955 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.07211425 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.201041563 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082560589 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.070471667 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.074432428 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081259363 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.07026233 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.064676919 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.076320748 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.068789038 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069566264 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.070108147 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.06822025 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073550324 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078454969 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.077374844 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063619976 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07281457 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.068517122 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.069863768 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.065226333 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.075043504 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.073096218 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.071776991 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076709044 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070831543 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070415225 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074343012 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.069808094 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.07187036 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.071176914 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074383401 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.070830427 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071859616 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.069507686 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.073461149 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.069207784 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.067338123 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.072635683 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070491039 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.070590605 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07537002 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.069477793 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069496662 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.072873852 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.07006878 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070469349 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.070343813 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069977973 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074374341 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072702465 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.072234468 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.074759645 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.066298823 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079600852 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.071702674 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079517251 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.073290096 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.068422403 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.078907041 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.074433114 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07704618 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.072713173 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.07211354 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.074476259 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.071655314 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.074804025 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078774957 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.069796782 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.082946766 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078493484 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072441126 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.07500342 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.072097458 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.074237297 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.071157643 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.072353867 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.072695263 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.072238317 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.0721689 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.076961015 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.07518685 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.072952381 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074184672 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.073136484 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.072389542 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.072992619 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.066103461 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.071825768 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.071638149 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.074343221 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082211655 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.072860601 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.071762108 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.071744382 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073214562 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.071973216 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06881259 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.080044146 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.080886573 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.071260148 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077270939 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069306321 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071654601 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079950618 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063961361 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067864069 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06741041 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.069028334 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078694417 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.071972722 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.081894529 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.071722673 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.071299399 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.068211768 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.072182785 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.069293747 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.064859243 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06853651 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074809046 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.069629315 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069575352 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.071248082 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.203770775 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071714746 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079398954 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.070527886 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.072074353 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.0714148 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.069291584 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.071992268 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.07178697 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.076209396 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.073716022 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.069986993 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.069171291 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.072072165 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.072459137 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.07290946 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.072906531 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.073761655 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079185147 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069595918 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.075539149 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075736491 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.067151071 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.075723782 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.072434918 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.072278813 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.071310693 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.075941049 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075513368 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073405249 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.082280568 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.071651933 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072844052 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072998203 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06957218 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.072901776 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.071987323 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.071781508 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.071200756 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071704663 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078143915 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06759567 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.074020588 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072400114 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.072824973 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07991598 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.072780986 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.075037539 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.078916034 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.072750002 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.073718094 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.080494645 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.075887555 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076239138 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072631745 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.073727792 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078367705 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.071420482 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.078869309 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.072771184 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.072908522 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.073700075 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.070027991 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071344129 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06915588 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069134223 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.076010774 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071660218 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.069067159 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.069404956 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067319185 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070101004 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073106732 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079106883 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.075180607 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075212102 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.066174947 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.068666026 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072663979 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.069613116 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.073953072 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.074400602 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078684021 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.075085348 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.071867318 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.070686436 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078903982 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075553893 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073814745 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068014956 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073334006 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070702564 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.07195785 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.07173186 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.071172109 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073635131 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.076300848 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.07407582 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.071746154 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079464638 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.076080833 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07321687 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.07287173 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071143003 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069755347 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.066206649 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.071777841 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.073733957 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075744164 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071917503 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069564606 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079690901 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067475541 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070271648 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073670321 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07032248 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.075441499 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.066038892 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.073408127 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072048963 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071218943 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.065611816 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.07075842 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.069116571 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.072249653 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068282607 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063504972 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079647166 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077315085 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.07366477 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068637266 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.0677957 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063925689 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063967461 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.06873325 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069278235 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072091685 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.080703756 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069048701 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068637178 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064241716 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069279687 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072241791 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071595908 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065661021 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064451333 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.069892277 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.074005328 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075418017 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068955353 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070401779 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074209661 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072973297 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068466302 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073670784 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.068407219 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074997323 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083903722 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070982459 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071856198 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075917652 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075708435 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068308217 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063211362 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070611029 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.074019863 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071061638 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071266787 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.072301964 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086293238 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073850309 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.070235763 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.069594042 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.073304813 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.071045429 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078769474 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071608967 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069667358 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073015604 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070384963 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075432563 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072081042 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075390412 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071606503 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071549266 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067642869 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068776529 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066312944 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067594038 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069514602 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06921481 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072092023 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07514692 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067820321 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079049973 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.078146924 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070440498 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065203817 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06688542 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066664229 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062715121 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068069032 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065304223 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06575549 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065813451 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066973341 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069339953 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072137097 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069000725 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067945164 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067544797 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061985207 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070558498 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069843693 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069715396 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065202461 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067580677 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068347979 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071527561 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070891749 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066163196 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069537606 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069473438 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068741609 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062513774 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074157028 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066733583 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070270348 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067786534 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068862905 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067854579 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071688081 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071725358 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069110428 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070075028 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071334465 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069579533 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064501815 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064553429 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073244186 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065398987 seconds)
  done (took 44.879739677 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.112542856 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069243728 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067509819 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068209928 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07914713 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06898148 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068093431 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069390545 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06958962 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07067198 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067565098 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067354337 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075177188 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.082367755 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077927517 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071366377 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067058494 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070079715 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069568676 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071351566 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078744912 seconds)
  done (took 3.047092388 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.079044894 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.083024403 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.082166598 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087995306 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075808492 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.075507716 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.080382431 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075640712 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.083488592 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077134871 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083207133 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075890088 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.07725059 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.077074041 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077237326 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076907042 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087140875 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076794741 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.076117827 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080921246 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07503973 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079841206 seconds)
  done (took 3.101536076 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.072213724 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.070650583 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.073127845 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.065783183 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.071548965 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.065600884 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073690363 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.068448361 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.074075604 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.069938667 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.07007016 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06927958 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072898243 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065467828 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.071586581 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.068209926 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.111877184 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073352522 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.070332839 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070934036 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.065359302 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072229384 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.067246554 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.067777131 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.071506516 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.074321315 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.070849194 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068091508 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.070460162 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.069571522 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.07012608 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.068039008 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072197116 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070577989 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.069236967 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.069439282 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.069586027 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.070019029 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065444668 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.068213201 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070800837 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.065686733 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.071308786 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.072035615 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.068133375 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.068109111 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072019483 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.070743283 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.067545046 seconds)
  done (took 4.826984501 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.083247746 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.114797502 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.07154112 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.094314576 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.085964208 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.078887432 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.076179596 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.097113882 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06931929 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.070605679 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.087402468 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.083849352 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.070913933 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.076557398 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.078920971 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.071503636 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.073381707 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.07100583 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.075415737 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.071198765 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.076121748 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.079688581 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.086693533 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.084802071 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074873984 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.0712602 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069762254 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073586789 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081621174 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073524024 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073876939 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074797663 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084196145 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071237743 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068850159 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071578774 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085898634 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069561865 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071805093 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06719825 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071795568 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073461963 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.077309244 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08640961 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.071126873 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07497004 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.071723894 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.069135487 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.083728866 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.073860956 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.079215661 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.085235229 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07524999 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.071752284 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.076368231 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.08630228 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.071575827 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.069859241 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.074897447 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.082691022 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06946596 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.076002198 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.084401744 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.073131758 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.078774061 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.085484607 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.077287066 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.075979137 seconds)
  done (took 6.768596094 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080623924 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.099971409 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088022795 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086738688 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079073005 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.079486923 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.078898431 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.079077052 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079189738 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.083962179 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078875622 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.120219923 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.074882142 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081897888 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079443481 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.079353615 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.079244631 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079102739 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.078954212 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079329207 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.079151405 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.086544282 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.079410732 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.086426705 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090770162 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.075092668 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.078911205 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079220438 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086842479 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079051962 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083592672 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.079282926 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079542467 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086701327 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.082535718 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.079851504 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069579571 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079385886 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.079164938 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.079746276 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.076560153 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089035821 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.081966958 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.077020335 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082410563 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08126714 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.090083173 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.085527766 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.083567428 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.086022505 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.08152118 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089222683 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081677599 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081817089 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08896433 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.092080565 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08967502 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089767063 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08214999 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.088759692 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089219256 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.09228489 seconds)
  done (took 6.550452757 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085748158 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078079043 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.085562066 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065568868 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068050982 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075039552 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068217331 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.067970826 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078296207 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077625804 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079686552 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075266201 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077902777 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079324448 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075106914 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0785476 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075661921 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074784217 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077952133 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075205039 seconds)
  done (took 2.902656995 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078707865 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087411914 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.071204779 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075187181 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.072661523 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075271783 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.072429123 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073343537 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070379605 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073030301 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.079831042 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079242244 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070732735 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07504154 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.079283446 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074850718 seconds)
  done (took 2.586572126 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.087131018 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.077160446 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083530844 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.070165981 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.071067934 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.065778501 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069177589 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065176263 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.065774791 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082601533 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.069223943 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.080062686 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.069356258 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.0689782 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066302708 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.074898517 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065442381 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.066726766 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069440384 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.082168412 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07521116 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.069360638 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.07284846 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06960304 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.07283976 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074290649 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068921129 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.070414839 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067401388 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.071089303 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.072382894 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.073041596 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.066239297 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067229304 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.069274517 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06644664 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.070173132 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.069847296 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.074828696 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.069464024 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068399989 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.071591881 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069342823 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070552846 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.065940901 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069891594 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06631517 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.072032986 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067123639 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.073833729 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.072092886 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.074606196 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.072265434 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077381911 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072330856 seconds)
  done (took 5.304584637 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083351659 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073447104 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065299303 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067588059 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.073005333 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070633633 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072875834 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070741633 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070851917 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06782605 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07065877 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072573541 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071041225 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07324703 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070915779 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073241382 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065426915 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070550662 seconds)
  done (took 2.674411065 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074746005 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069942721 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.077276963 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069892049 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06948798 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072270567 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065557633 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06819055 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068876493 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069751045 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069514466 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.072197579 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070439881 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071733539 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06930761 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069549959 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.072181437 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068611676 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069583223 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065794899 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072826318 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06889195 seconds)
  done (took 2.93156544 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.098144006 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.087320216 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.144163465 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.08261109 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.089957949 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.076089383 seconds)
  done (took 1.965328827 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095514321 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105606535 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070433947 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073485151 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079707624 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073424678 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073708998 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074427721 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08201678 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078969216 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073745315 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081831045 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082224763 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080736621 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079450886 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079634014 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074166901 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074114317 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070420902 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086825932 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073438807 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082256246 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073444765 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073426243 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07365284 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080580482 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081419796 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078947608 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073273736 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082385947 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079044198 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073571911 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081975177 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078517424 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073698277 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081846939 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073640639 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086876372 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079442507 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080828048 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072689238 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079594454 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081617303 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077606411 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081513942 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073574887 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077732965 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074245368 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074729637 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091056793 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081983471 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083428159 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08151572 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084353039 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083993535 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091318165 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082199978 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08327655 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082123234 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081649973 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083102708 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081701481 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083689439 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081421215 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081812816 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083107281 seconds)
  done (took 6.657693364 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107788013 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070257586 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074585353 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079355443 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08070061 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073451788 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074053079 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07406993 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073652949 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071228446 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112147144 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074389417 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080709981 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081403333 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073528057 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07638355 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075943239 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083304169 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07322804 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091504207 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076611243 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08397062 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08317963 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083738404 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081893883 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081941684 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075955076 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076483752 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075992657 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076059642 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08095233 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07632915 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083386037 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071736547 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081045994 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073763478 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073631382 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078715859 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075516627 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081662199 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083620343 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089555111 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076315254 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075853592 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08148509 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075780751 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075966881 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072727342 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075918558 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072540884 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081321114 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081033366 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081104849 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083027083 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075968226 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076439667 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075985205 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075966688 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07760829 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082411635 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083464519 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076032173 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091478723 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07574599 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075891543 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085135307 seconds)
  done (took 6.637818248 seconds)
done (took 135.765691102 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.193813412 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.172660911 seconds)
  done (took 1.748706572 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072593714 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.102203601 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081392555 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.13299656 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070492785 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103892178 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.102567791 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081680175 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069766923 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.069631642 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.07002989 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072447635 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134973148 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070051501 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069576435 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072162326 seconds)
  done (took 2.772104982 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104727111 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.169232621 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107326704 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068866583 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103953616 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076952496 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069419954 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078784104 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.074147325 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06943895 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076125614 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074103547 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068357909 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.073865501 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074423422 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.075932981 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068973637 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075856092 seconds)
  done (took 2.907122898 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102581898 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.095331708 seconds)
  done (took 1.599450578 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.163246247 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.139381578 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.21026292 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.356354917 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.163610062 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.154267116 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.151474083 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.147553408 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.127162996 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.142688695 seconds)
  done (took 3.150455034 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104761223 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.159667155 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.278671145 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.122908015 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076719901 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.096953811 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.124167209 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082659046 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084004937 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083740837 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083936073 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080417835 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103784506 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076740932 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.077777413 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079562572 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.108371626 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077022481 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078694343 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078913157 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105675716 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069838877 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076938523 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07688747 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080370459 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.08106487 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070078489 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070310642 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.080048501 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.079008168 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079954729 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.096234829 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.08022927 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.109513528 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074657151 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.110697153 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080697939 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077203001 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078877108 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077101885 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081390462 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.081599779 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077029465 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080871569 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069872302 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080668372 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070278986 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070311141 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081588593 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071071018 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080833859 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080104655 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.109319494 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.07049478 seconds)
  done (took 6.243168473 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10825914 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.113337009 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076160557 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.119413662 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109112288 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076356051 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109706825 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102627017 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.109478852 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073642026 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071830376 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073852904 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085665746 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.086050686 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.120767368 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.113097541 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077380337 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07480942 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111989803 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111475802 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071975491 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103586827 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097205886 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109212282 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.071175827 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07457835 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071669704 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073826086 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079755983 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081249633 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072952956 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.084269876 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087665691 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081324937 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071115168 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071745324 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072389941 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.082905141 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08353122 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081872701 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.081446266 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071691704 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071786609 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072871292 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07441581 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07279859 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.082428044 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.083693202 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.081819282 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.0734872 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073763277 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.074268373 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074143534 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.083694188 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.081047115 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.084055231 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083334526 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07252226 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072623192 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076385525 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08417127 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082980433 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083077405 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073675544 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082940673 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072073694 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083448663 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087539694 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072629514 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074453726 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072601517 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073567514 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07421916 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.081143532 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.081746561 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073797442 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073205101 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072665601 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083384617 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082867283 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072160148 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080101724 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070851662 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072274515 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073699954 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073501786 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.081183779 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.084306499 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073797341 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072728849 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073058362 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072214168 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.070814666 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.080297282 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.082935181 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.082606662 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.082260084 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073239244 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.082175449 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081402506 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074191348 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.081855178 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071803581 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.202169964 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07427701 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.0831893 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.081091027 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083841052 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073788609 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072710669 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.082386559 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084553511 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073121238 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.082021483 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084190043 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.083337287 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.072303628 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084882312 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072489461 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08345206 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07384215 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083322543 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073803653 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083176255 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072681654 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071705951 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072894928 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.083360877 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07421617 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072927011 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073268003 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075930802 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.082855618 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.086138471 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074704238 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082207272 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.082513663 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073749829 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081828674 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072592548 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082771136 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073131285 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073511587 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071590594 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085344877 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07265645 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.07199362 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073728465 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.084191686 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072288614 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083105651 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082483842 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07269365 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084167407 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083251827 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080640507 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083650931 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073980452 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072135185 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071570191 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073736126 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080704721 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.083619682 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074177429 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071985731 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.081894208 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.083113054 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.07167959 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.082487799 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081204322 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.081304769 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072049021 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073298417 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083499617 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083736287 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.081011044 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.081365553 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081979673 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072435505 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081655572 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081523161 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072007401 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087487393 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072164683 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.086084841 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.082561223 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079906347 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081864819 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.083891711 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.083694043 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.084181291 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.086922144 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072342877 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071945516 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.082760095 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072128844 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072641689 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.081529285 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073117717 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072926968 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.085905085 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07224908 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.08313475 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.071464077 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.081167021 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071475445 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073260831 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.216754261 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072648684 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073603501 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.084322811 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074483993 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.081782328 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085032414 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.082096967 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072809845 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075324837 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.084365479 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.082773524 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072116301 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072789261 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07444824 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.081820828 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.080602231 seconds)
  done (took 19.581065083 seconds)
done (took 39.409388002 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.21504009 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.157670083 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.176635098 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.122491467 seconds)
  done (took 2.169485505 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.120426514 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104562338 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.096271406 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.068402881 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103039759 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068631575 seconds)
  done (took 1.990561994 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.317113745 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213605085 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.191903627 seconds)
  done (took 2.148240841 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.214386892 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.198847213 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.455419905 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.278734222 seconds)
  done (took 2.688389773 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.148992164 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.091360403 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071511296 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087982842 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.136468392 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.162735818 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.103180482 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.128491049 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083564707 seconds)
  done (took 2.499486887 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.152038082 seconds)
done (took 13.078772141 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.115618256 seconds)
    (2/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.077866254 seconds)
    (3/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.212284485 seconds)
    (4/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.171459986 seconds)
    (5/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.18091052 seconds)
    (6/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.083549918 seconds)
    (7/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.266504581 seconds)
    (8/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.082573527 seconds)
    (9/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.115024363 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.086761141 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.177037215 seconds)
    (12/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.185683854 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.130634444 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.082024162 seconds)
    (15/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.116435226 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078074791 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.1182521 seconds)
    (18/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.202132245 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.093562598 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.102447745 seconds)
    (21/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.156816509 seconds)
    (22/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.184070055 seconds)
    (23/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.189619199 seconds)
    (24/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.077620385 seconds)
    (25/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.118488942 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.115797941 seconds)
    (27/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.22746691 seconds)
    (28/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.092979842 seconds)
    (29/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.104637954 seconds)
    (30/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.077455285 seconds)
    (31/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.075511707 seconds)
    (32/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.083298752 seconds)
    (33/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.097256429 seconds)
    (34/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.207665097 seconds)
    (35/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.079618886 seconds)
    (36/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.079781266 seconds)
    (37/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.079944304 seconds)
    (38/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.087672185 seconds)
    (39/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.215928058 seconds)
    (40/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.164548692 seconds)
    (41/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.165687661 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075388471 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.097728057 seconds)
    (44/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.07121045 seconds)
    (45/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.171058148 seconds)
    (46/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.069890421 seconds)
    (47/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.070210814 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.094128221 seconds)
    (49/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.168186665 seconds)
    (50/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.077209922 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.076902497 seconds)
    (52/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.163593454 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.089245163 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.081125803 seconds)
    (55/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.076011639 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.105157321 seconds)
    (57/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.077101256 seconds)
    (58/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.206493025 seconds)
    (59/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073160918 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.094379905 seconds)
    (61/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.079420646 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.071242528 seconds)
    (63/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.078578467 seconds)
    (64/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.268768337 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.068784856 seconds)
    (66/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.054075641 seconds)
    (67/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.188016099 seconds)
    (68/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.077702105 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.09198104 seconds)
    (70/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.170007963 seconds)
    (71/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.079158424 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.068815046 seconds)
    (73/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.055015662 seconds)
    (74/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.066180676 seconds)
    (75/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068143313 seconds)
    (76/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.094423531 seconds)
    (77/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.083127623 seconds)
    (78/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.079073541 seconds)
    (79/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.151839603 seconds)
    (80/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.15896705 seconds)
    (81/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.080351385 seconds)
    (82/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.08459591 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.092844275 seconds)
    (84/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.211561389 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 0.069138445 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.095688711 seconds)
    (87/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.34114399 seconds)
    (88/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.166987427 seconds)
    (89/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.203427327 seconds)
    (90/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.162997475 seconds)
    (91/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.076729843 seconds)
    (92/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.125211648 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.151291214 seconds)
    (94/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.161447999 seconds)
    (95/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.0542671 seconds)
    (96/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.075568664 seconds)
    (97/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.080077647 seconds)
    (98/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.189179564 seconds)
    (99/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.195023189 seconds)
    (100/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.078108328 seconds)
    (101/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.224686619 seconds)
    (102/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.055450453 seconds)
    (103/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.09455751 seconds)
    (104/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.185961336 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.094730211 seconds)
    (106/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.076476399 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.111036863 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.095187804 seconds)
    (109/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072823143 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.119835121 seconds)
    (111/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.171287408 seconds)
    (112/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.183855208 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076748021 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.069459269 seconds)
    (115/309) benchmarking ("sort", BigInt, false)...
    done (took 0.200873754 seconds)
    (116/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.118842949 seconds)
    (117/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.067033731 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.072074754 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.150927552 seconds)
    (120/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.054344909 seconds)
    (121/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.073023116 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.143867344 seconds)
    (123/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.05388345 seconds)
    (124/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.055197824 seconds)
    (125/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.055473733 seconds)
    (126/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.070070581 seconds)
    (127/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.075670304 seconds)
    (128/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.055070157 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.075683783 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.068344203 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 0.14408249 seconds)
    (132/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.151614946 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076991005 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.098973812 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077384485 seconds)
    (136/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.055515222 seconds)
    (137/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.166355471 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.076398316 seconds)
    (139/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.054344554 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075878115 seconds)
    (141/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.054142322 seconds)
    (142/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.161374611 seconds)
    (143/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.069250133 seconds)
    (144/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.070387547 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.075236586 seconds)
    (146/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.053495127 seconds)
    (147/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.073993994 seconds)
    (148/309) benchmarking ("sort", Int8, false)...
    done (took 0.148292243 seconds)
    (149/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.114592245 seconds)
    (150/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075546823 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.096259395 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068820765 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07720734 seconds)
    (154/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.065662864 seconds)
    (155/309) benchmarking ("sort", Float32, false)...
    done (took 0.137616083 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.090835959 seconds)
    (157/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.077490947 seconds)
    (158/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.105247488 seconds)
    (159/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.078508843 seconds)
    (160/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.199949232 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077812485 seconds)
    (162/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.073847078 seconds)
    (163/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.053921446 seconds)
    (164/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.07879915 seconds)
    (165/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.065124451 seconds)
    (166/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.182210237 seconds)
    (167/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.080348877 seconds)
    (168/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.053755006 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.135155698 seconds)
    (170/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.053652352 seconds)
    (171/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.054127585 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.098413011 seconds)
    (173/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.054307499 seconds)
    (174/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.076312816 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.148328369 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.098509719 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.097449032 seconds)
    (178/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.083380934 seconds)
    (179/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.067304268 seconds)
    (180/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.069293261 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068973907 seconds)
    (182/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.1598994 seconds)
    (183/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.075081513 seconds)
    (184/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.05405797 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076506963 seconds)
    (186/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07539919 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.094813107 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.068879279 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.078127953 seconds)
    (190/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.053966005 seconds)
    (191/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.146343867 seconds)
    (192/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071240571 seconds)
    (193/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.263715602 seconds)
    (194/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.055815999 seconds)
    (195/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.16039955 seconds)
    (196/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.078907486 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.095558747 seconds)
    (198/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.183530843 seconds)
    (199/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.0545727 seconds)
    (200/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.081992909 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067756518 seconds)
    (202/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.055526153 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.069383413 seconds)
    (204/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076429153 seconds)
    (205/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.069495512 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.069797787 seconds)
    (207/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.082361715 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.069233887 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.09540273 seconds)
    (210/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082754015 seconds)
    (211/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.070092054 seconds)
    (212/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.069064752 seconds)
    (213/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.069924714 seconds)
    (214/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.182305748 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076971862 seconds)
    (216/309) benchmarking ("sort", Float64, false)...
    done (took 0.137563638 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078825708 seconds)
    (218/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.070316439 seconds)
    (219/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.056071252 seconds)
    (220/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.054703968 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.118818446 seconds)
    (222/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.084398323 seconds)
    (223/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.071132341 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.096879182 seconds)
    (225/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.055389347 seconds)
    (226/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054215688 seconds)
    (227/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.071357284 seconds)
    (228/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077644918 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074889111 seconds)
    (230/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.068432551 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.092456533 seconds)
    (232/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.069647907 seconds)
    (233/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.055628333 seconds)
    (234/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.056164873 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.069117353 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.067585233 seconds)
    (237/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076187705 seconds)
    (238/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.05413322 seconds)
    (239/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.11562104 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.145600756 seconds)
    (241/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074779458 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.107315724 seconds)
    (243/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.12493713 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.116052567 seconds)
    (245/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069968254 seconds)
    (246/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.053957985 seconds)
    (247/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.054551158 seconds)
    (248/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.054945314 seconds)
    (249/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.068542692 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.130169015 seconds)
    (251/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.186724763 seconds)
    (252/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.054987144 seconds)
    (253/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.073854114 seconds)
    (254/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.05414001 seconds)
    (255/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.076668287 seconds)
    (256/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.108821267 seconds)
    (257/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.153282854 seconds)
    (258/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.053881232 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.06926728 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092419981 seconds)
    (261/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.068402207 seconds)
    (262/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.054512349 seconds)
    (263/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074808098 seconds)
    (264/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.083975473 seconds)
    (265/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.054534254 seconds)
    (266/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092963009 seconds)
    (267/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.091108205 seconds)
    (268/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.056524495 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.118792901 seconds)
    (270/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071710869 seconds)
    (271/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076362014 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077964499 seconds)
    (273/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.071974791 seconds)
    (274/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.055317746 seconds)
    (275/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.053856282 seconds)
    (276/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.071507029 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068804988 seconds)
    (278/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.077904846 seconds)
    (279/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.14545811 seconds)
    (280/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08544401 seconds)
    (281/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.053782633 seconds)
    (282/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069934463 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.189163774 seconds)
    (284/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077389459 seconds)
    (285/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.114092477 seconds)
    (286/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.066800094 seconds)
    (287/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.053622681 seconds)
    (288/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.056375442 seconds)
    (289/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.054704755 seconds)
    (290/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.211460634 seconds)
    (291/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075759753 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.076982824 seconds)
    (293/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.055564958 seconds)
    (294/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.069341206 seconds)
    (295/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06764822 seconds)
    (296/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.054946129 seconds)
    (297/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.066996206 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076456643 seconds)
    (299/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.083215005 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075022506 seconds)
    (301/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.116860723 seconds)
    (302/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.068252619 seconds)
    (303/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.05422255 seconds)
    (304/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.069782719 seconds)
    (305/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.068014455 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074402171 seconds)
    (307/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.053660838 seconds)
    (308/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.067103924 seconds)
    (309/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.054318907 seconds)
  done (took 32.35992825 seconds)
done (took 33.800137484 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.089478615 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096555695 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078889715 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.097341936 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083989015 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.079952039 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076303003 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081958016 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083860333 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.085386421 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080827028 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057592606 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.077858179 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078268724 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.078667149 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094093356 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081987147 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077696311 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076422735 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067828287 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076531274 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068508889 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070353114 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057928946 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.082496968 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075355704 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.079120625 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07684026 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068529562 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068602311 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072046326 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077580822 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068604949 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081770347 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075954552 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077128303 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078003354 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079962323 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070635946 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068528556 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077710925 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068620078 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.0764629 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.077482626 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.075857871 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074876266 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077103813 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.080443914 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093900025 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070548882 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078798111 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.079032063 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078961889 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.076456549 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.07264296 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075878335 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073763084 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094091758 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.077005279 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071086955 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.077827562 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077436183 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074601913 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076631416 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07604067 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.078310157 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07871923 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074137452 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078299695 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074885072 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068805896 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076573271 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072148363 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068265552 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079518732 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.081120841 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06712877 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074939667 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076516572 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074237354 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067665198 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070336539 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.072368606 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.075517355 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070736481 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056876798 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073212186 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075588096 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067407826 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077019098 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075353407 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076566122 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.07030145 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078851112 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068015192 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07346085 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068519401 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068707827 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070508509 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073353949 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06832534 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070455319 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078176649 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069738683 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.075543813 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.08208539 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068581603 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075816105 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067431152 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067652473 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082800302 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078613272 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068538978 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070656363 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067480475 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075584743 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067612273 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068113923 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06832202 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068354027 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074452195 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068755423 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070328091 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.076270646 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.081543581 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06804946 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071820325 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070891814 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068681884 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074729599 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.201406103 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.069599608 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.071890427 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.065724291 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071031561 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068528114 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.077452019 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070898908 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.076426033 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070963173 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.077487115 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.074461988 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075074959 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.074564108 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067664988 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062409944 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07082929 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070916333 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070833693 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.068894119 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.07022953 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068380355 seconds)
done (took 13.013990721 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069364353 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143124322 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099992257 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.098805324 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.089200406 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069741336 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079372171 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102698011 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071209336 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103960311 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.09078706 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.089430712 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.117595895 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06775082 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068807104 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.07326656 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.07044647 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.084624016 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.103182788 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.090383134 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.117909798 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068543261 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095105989 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092338857 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.090917196 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.096768287 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070361627 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072737029 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072944952 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.104645841 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.091786527 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072993261 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069713963 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.10116161 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.097051218 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086495859 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069166088 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.085975944 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069957449 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068726046 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.07050682 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.10213894 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.084369266 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.083774297 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.073800225 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.080795745 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070798477 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086756263 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.092330238 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.08177437 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.088580484 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103618157 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071553822 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.087205837 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067527811 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.089220413 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080081703 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.071991329 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069886562 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.077715495 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069459853 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072801767 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.084029506 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.083048836 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.073230353 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.087948115 seconds)
  done (took 7.081929184 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087596458 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.095574492 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086837094 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.086607964 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069248108 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069301115 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.070048133 seconds)
  done (took 2.09823399 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070047498 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091724761 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.093276091 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093623288 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084877225 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092430454 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.078929879 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069877934 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.091706515 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070494314 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090953447 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.104004967 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072769096 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076972692 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094682418 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069864465 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093975995 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069384673 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073109543 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.093727237 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072628799 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.099698277 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.073010505 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070184624 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.083851729 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069606318 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117799923 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074340276 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071707772 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072508204 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06749736 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.111068684 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.083429764 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077271395 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070351415 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085233813 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084419381 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068301861 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087119146 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.078962313 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083774395 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.071108889 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.070548442 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068240323 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.075115478 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.08035904 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070624788 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070312175 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072691906 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090088767 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070806844 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083845885 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072558537 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.075242582 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071749042 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076249603 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.080781509 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070759364 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090632771 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071164349 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087450762 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086831107 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.083980741 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086887426 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071892007 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083396609 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084153816 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072432528 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071709415 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.07346449 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086185949 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068418416 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072255355 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.080512256 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071702978 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093589081 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.09372576 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07147475 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083509571 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070055697 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069816633 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070175548 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093070416 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07509861 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069343793 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074123342 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07332581 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068287599 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069585266 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073811592 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067857602 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071450575 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072951076 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072527308 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073096306 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08650902 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.072540585 seconds)
  done (took 9.181694208 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071464222 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070727555 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.073320875 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.07077728 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070247958 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.071581829 seconds)
  done (took 1.981534252 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.097132323 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.071679652 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083840608 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.074831958 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.108244279 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.090131653 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.090481493 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081541442 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087145996 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.081702406 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.090234932 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.091868128 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.095992876 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.075920544 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.089682647 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.074374228 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.090323314 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077327491 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081375071 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075496642 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.088970655 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.075614238 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075675624 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085012869 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.079009392 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074686452 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.081142898 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082830527 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081511105 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.08084125 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074849873 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.078789183 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074384313 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.080930591 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.090284526 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074401499 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074860306 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.080023002 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07488138 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.078677311 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.091083844 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076352063 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.077226324 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.079866026 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.080684897 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07314052 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.079767566 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.082495447 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.090019454 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.080090515 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.079648107 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.073776611 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.078453365 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.080258956 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073272788 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080727944 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.079903622 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.090479957 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075162147 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073315789 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.071547692 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.079362587 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080287242 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07870485 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.083320559 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.080376375 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.073706738 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075658175 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075648412 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.074371356 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.079973646 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072359448 seconds)
  done (took 7.346495899 seconds)
done (took 29.208527061 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.541887387 seconds)
  done (took 2.060380022 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.629221432 seconds)
  done (took 2.170666625 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.545200354 seconds)
  done (took 8.08413587 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.399739725 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.505286301 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.746741375 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.136607659 seconds)
  done (took 3.36776234 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.727877044 seconds)
  done (took 2.27694601 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.230701297 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.220143775 seconds)
  done (took 2.008518885 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.383507692 seconds)
  done (took 1.92468639 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.149913325 seconds)
  done (took 2.692049742 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.263337507 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182848231 seconds)
  done (took 1.99035255 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.487301107 seconds)
  done (took 2.030007974 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.874431021 seconds)
  done (took 6.420871018 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.220378956 seconds)
  done (took 1.807053407 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241353379 seconds)
  done (took 1.785617257 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.811781512 seconds)
  done (took 3.359216835 seconds)
done (took 43.526667173 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08680541 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08870818 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.087816012 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.084911325 seconds)
  done (took 1.880826623 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079482489 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075455747 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.079420888 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07535124 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.080643618 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076440248 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.077293196 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.078401002 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.075641836 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.076570719 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075673008 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.076023878 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077664856 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.077322684 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074625986 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077820809 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.078913124 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07549905 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.078652014 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07524585 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.073235194 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.077464233 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078440522 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.074740662 seconds)
  done (took 3.393835525 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081428488 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07687366 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.078723015 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074573065 seconds)
  done (took 1.8657188 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.08134451 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095940842 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.092997572 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.081692182 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.096201257 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08970735 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.071993622 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.07207089 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073230336 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080828406 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.07054633 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099389112 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.091473322 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.081101566 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.082896765 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068597761 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071067663 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.091306261 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.081179743 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.081844849 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072846365 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.081084965 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.071506214 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.091472933 seconds)
  done (took 3.522934644 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.089022761 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.108324863 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.08367617 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091420845 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.094243845 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068483867 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.091334464 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094106569 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.130403669 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068118493 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073570876 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068641185 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.076220414 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068178987 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.084040956 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110787758 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.115226192 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072195307 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.100262584 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068519531 seconds)
  done (took 3.318356378 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07527961 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072462697 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.070992494 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068690388 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.080187445 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.075533251 seconds)
  done (took 2.00487743 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070848205 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070770666 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.070963397 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.070062005 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074822874 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.071043304 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069412594 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070179283 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.071222771 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069683179 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069663472 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068278578 seconds)
  done (took 2.404548026 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.201260697 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070684195 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.07242317 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069813818 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073416471 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.069195426 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084646905 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071008671 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.095147315 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069492121 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069594613 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071349409 seconds)
  done (took 2.576618189 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21042904 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079449664 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241377505 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1542416 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113854763 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119102011 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116280475 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115972422 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.144718301 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103289186 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170122602 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170280073 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111344957 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140496121 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092135036 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.101487718 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157474116 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165841525 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109399142 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168880576 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148671775 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131465203 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149427447 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105184895 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108822291 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125428642 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074053972 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083191221 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174825276 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136590204 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147055868 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115086035 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095267847 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178720671 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174243468 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144147624 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151067279 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087981237 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.104841646 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.136626752 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203933138 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092293261 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166196431 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249386369 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084887497 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136059572 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121196679 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.12187507 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.108042696 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092736778 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149553741 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187242653 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.13973553 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091302602 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128121731 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117320387 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.117210729 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117008296 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184552832 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164974083 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130918698 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.075270704 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111515423 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154133443 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135147 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.111143778 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127787335 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094991838 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137580058 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157580179 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125737448 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147739176 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.120348935 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091729626 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121407228 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142548675 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129703006 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162454848 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126188785 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07552223 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126328979 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10382939 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083453549 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.150605577 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078401851 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177206001 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101712239 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10828746 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128447068 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112337193 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111847244 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161694022 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146311302 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105570746 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.068557241 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107144714 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121993695 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144608447 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08816336 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108712962 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11443346 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077766667 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133761433 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07643873 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12134859 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075544806 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122047693 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127212754 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.082102205 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120613318 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103546652 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099571612 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12960364 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154863612 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088354599 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082997218 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165009968 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119305768 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101790794 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141113897 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153396634 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098534424 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099852529 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146223956 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174605187 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089609731 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158668475 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10579746 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083720748 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088747738 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120446111 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110741981 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122355814 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081693761 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.115830683 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163153908 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075548639 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095189476 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131288734 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079265453 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081130486 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104072 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104669576 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096079291 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.09972587 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101598963 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129623111 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118847367 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103715462 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119550557 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.35071033 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176906731 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092220986 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.107154385 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108759042 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.074234723 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.139591026 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161135006 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084275289 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167782564 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.126378579 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121741577 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122784544 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087897449 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144688359 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083641408 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073750764 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149438985 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113954475 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11468524 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.155084525 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11965913 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128836887 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.124841473 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136207037 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13492487 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.133638692 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109615724 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.091090698 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114111141 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129953187 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.076753688 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093193849 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.083295134 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107832354 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098858721 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086600228 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144115285 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127133078 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113737153 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11441782 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10003963 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149519586 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.081021923 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131227136 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.121846345 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098414669 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.15346819 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152382401 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134387907 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102034081 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139555564 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.0735048 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077391591 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.091242753 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.272206074 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085889578 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087164942 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119976534 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150531506 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132845118 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140263782 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127774206 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123190938 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158359346 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073225107 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.122903526 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149113691 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124423143 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.10845342 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093264977 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.101690303 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143950153 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110567128 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18377257 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115175094 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124936028 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154987747 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.104617725 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08331928 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10595177 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137282913 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106903028 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145733104 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10177168 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092163048 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111903282 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.077903599 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10109851 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129418255 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121433463 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136634411 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.117871552 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134736188 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080368112 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117690257 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123775379 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123970814 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067040145 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122763825 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163467085 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097408028 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119128801 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154552981 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08232758 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.137207746 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176164658 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.292330874 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089454046 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113486576 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121576033 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131996673 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122717886 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144519895 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111246169 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139665423 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11242052 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.088581588 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090328038 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100324376 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108388091 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.098131238 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107700139 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.116070344 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.098459377 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13531735 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105927036 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112049464 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11872939 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.102954759 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.093844542 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099064354 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177806007 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119917993 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171997052 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.101588755 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144828332 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16533934 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077942309 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082116946 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.08103186 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142886931 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086674494 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132317785 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.110518821 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12197267 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125390704 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144319008 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09768966 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.071204929 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112505467 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13500276 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127418068 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100759971 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.106084077 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165310747 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.102874243 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081971229 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115736332 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118886262 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105447773 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171925612 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064015796 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108861604 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.220734563 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083846068 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131155291 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156984948 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083366889 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.106624503 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121345283 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115081009 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130424272 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103476371 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11155602 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130149105 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152612584 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132214717 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091906584 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114507561 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129705911 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1574264 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10813261 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.099492313 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173523075 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152819252 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.161250899 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.090196059 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11533477 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115331978 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110041921 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139642001 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086053551 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164505265 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084588253 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138611628 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105611953 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091462287 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131274486 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.111683432 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090575076 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149396659 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119426467 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084933446 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079750165 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119987038 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121861192 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108478399 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.078283392 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146016383 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.076054589 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132687972 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160682239 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083102723 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106435096 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098180173 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081736993 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252951858 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105418285 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090341977 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.101877836 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174195114 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089368703 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151370373 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134836978 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114134891 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137411403 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105716467 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.642414803 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081362182 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154033373 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118040978 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176490335 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103218613 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119223882 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111682142 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124183958 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147536509 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106366989 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.18736036 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134495573 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117806283 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082783385 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104256645 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107077432 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.090347773 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111091087 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115108824 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117090516 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.095445517 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.118105036 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125341544 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.084574548 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098799769 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156409151 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120017365 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146297747 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142851513 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08902804 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119515204 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138937164 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0826694 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122524362 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153570122 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108438932 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102722956 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083124253 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102692319 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159978825 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.076509583 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160810224 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120276814 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110790477 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113721542 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.112731393 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130554407 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107948443 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121634282 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092804223 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.107769696 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11268084 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081785047 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077425722 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106419457 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109795979 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098282868 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096586543 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099919819 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147902329 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.073261016 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098378032 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116340255 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140501041 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169941411 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089818033 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083880273 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116287479 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11350496 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111000363 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119810888 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.07946905 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082264617 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080295787 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.083048431 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108858212 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112028387 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114578285 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109178753 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159051167 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084881895 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.236665937 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095594156 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104233087 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071824507 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078538373 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095418722 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097495004 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106399133 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110703102 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154537137 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094926577 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089799085 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090479453 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075395183 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083737171 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1268768 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108416015 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.373294543 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106764076 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066468469 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112712448 seconds)
  done (took 59.925312605 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.112043868 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.08656639 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.100744873 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149551861 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.12657565 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.205309766 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156732062 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194412191 seconds)
  done (took 2.840567104 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072647374 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.100782214 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.107441923 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.0881066 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.070910895 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071608555 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.234849721 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.085343931 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069905302 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.100828284 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.081315348 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.071619831 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.436547418 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069406986 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070358654 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.065305062 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070404665 seconds)
  done (took 3.56688675 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.40519167 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.625917779 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.359076379 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.079089263 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.884240593 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.096281235 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.135069748 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.135889689 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081045985 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.52479122 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.407818369 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.131099384 seconds)
  done (took 18.575211865 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.083436781 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077851746 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.091805986 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091626229 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.079806442 seconds)
  done (took 2.132659865 seconds)
done (took 109.588197588 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08373057 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.614989356 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055727339 seconds)
  done (took 2.408418727 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085238258 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087478319 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08951227 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085961358 seconds)
  done (took 2.064436563 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.07710936 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078505406 seconds)
  done (took 1.864920531 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.237163804 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.169949806 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.099110754 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085057633 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082073118 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.08326898 seconds)
  done (took 1.964149353 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075036402 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077549959 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.076189646 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079447369 seconds)
  done (took 2.016208342 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079779532 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054605294 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057788454 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.060370766 seconds)
  done (took 1.961692579 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089749362 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.082814869 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081630344 seconds)
  done (took 1.964476394 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106285193 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.090009383 seconds)
  done (took 1.906136175 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084150782 seconds)
  done (took 1.795231006 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098081483 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.10403705 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.135618451 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.113286315 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.142845563 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.11228676 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087606205 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088630041 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079384125 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089198011 seconds)
  done (took 2.76133026 seconds)
done (took 23.004058005 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.08138293 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.36795076 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362506727 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.093191648 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670548985 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35934614 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.971645351 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096083091 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118623022 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070285597 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087264683 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652055313 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.964002165 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.32373972 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.952518454 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.327580885 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651955548 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071670215 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070473426 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070386798 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.955165928 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070429555 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070292727 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071030229 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651557287 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375223334 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07082442 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.327461678 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070463282 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072760475 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357797302 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071202832 seconds)
  done (took 16.224932852 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073071598 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124561369 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075714118 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088421563 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072776263 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072642726 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073684344 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.085985032 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123914956 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071025918 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088029384 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070629661 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074788538 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072116049 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090421386 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071290964 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072085675 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071174396 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071019109 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071060681 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089999054 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071009282 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07061221 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07082787 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070447653 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.0832232 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071622834 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071254029 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070837366 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072842167 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073513659 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072461417 seconds)
  done (took 4.229936592 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118051703 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128693705 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076575097 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106900198 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113430612 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072635224 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.146201217 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096770893 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130457053 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071138802 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087879095 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071100926 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105744102 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072364353 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091445213 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071053427 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071941316 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071416309 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071363871 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071495801 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091345752 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071460091 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071245339 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071356518 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071108683 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084931451 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071243314 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071537814 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071607638 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073154396 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074516249 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071472323 seconds)
  done (took 4.467465462 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075146245 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078059868 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.086404923 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087464212 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.07238305 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074729825 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075770446 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.072405245 seconds)
  done (took 2.350572528 seconds)
done (took 28.989552774 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081162525 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.07192473 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.075489012 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084573497 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07596896 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081929126 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069459211 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.078237785 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075173728 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.076688212 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.078158428 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070236581 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.075094262 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069468326 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07741863 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.07081156 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082603974 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.074841235 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082529502 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082333901 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072485499 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076649468 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078194124 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082614366 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.082287389 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082652951 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080276589 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076198163 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071473067 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073440419 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080269532 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.08665505 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071311158 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082894471 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070357858 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070376419 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.074460477 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070560306 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083312854 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079756094 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072500981 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079441189 seconds)
  done (took 4.940704873 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090889269 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.095667107 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.087800525 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065382487 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.068995969 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.068312209 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.091696671 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.062673688 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.062292038 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.091425214 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058604843 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.06276362 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.066422819 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.056612542 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.063607869 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059393852 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.064979455 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.05889675 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.063470287 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.062543562 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.092222034 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056200015 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081264242 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.06656701 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058726503 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064608611 seconds)
  done (took 3.557294848 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077974369 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088369617 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093872126 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133496834 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.107541053 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.082418939 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082305668 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.098398928 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.092092683 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069795703 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073871569 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09611115 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093023648 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.077271903 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070464672 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.089421812 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08662869 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072237569 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076245121 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097905585 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089931144 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.088536348 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099384926 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086833553 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069604703 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072453737 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074121411 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.084531216 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073666808 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079857858 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073541062 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074269382 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072263655 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081802137 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073198514 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072441715 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.097729215 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080335721 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081752972 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071114765 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078796004 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072200563 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09575036 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.129654905 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070052727 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077093049 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074293237 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.08030879 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070037152 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090446503 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082240466 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.07002213 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.074662871 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06972168 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070005503 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.073264655 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071865709 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.072692341 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079836646 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.077226028 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.095019342 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07557395 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086303148 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06992163 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078589587 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069988622 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071192897 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069880259 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.098762799 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072134358 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.114675552 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070688902 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071243373 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079596006 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078861027 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077093377 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070476148 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086207811 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.081484905 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074255131 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.080526221 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073685075 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074157116 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.093737929 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.072621701 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071708982 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.071544145 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075872319 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072988531 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071963817 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084391852 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069690945 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074238832 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.087178804 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070243311 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071860274 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.076373883 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.074523669 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069704021 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082281605 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074166057 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071074301 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080101217 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070460883 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.073319594 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.083736909 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076959304 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069164029 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074824581 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.075958281 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071440006 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072079818 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073058157 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.072741577 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.079396112 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07728871 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074639368 seconds)
  done (took 11.05701316 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.168164124 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.160796977 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073880667 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.152148837 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.079866843 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.082051184 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.155526394 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.098143662 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071233208 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071018497 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.07176742 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113506579 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.121428107 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.12154755 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082223403 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070418316 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.087484827 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.118455185 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.157175158 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.151050262 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.087200238 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079698268 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07280149 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071538665 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073510959 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081602656 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.088687409 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.082263039 seconds)
  done (took 4.611066194 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08326191 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.109023447 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.078132848 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094465461 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.094279411 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070458805 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.073027574 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072074042 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085293645 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080578203 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.070335012 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.076706836 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.077348414 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073697595 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.0714144 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07754339 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077415623 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071805974 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074229266 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.076301814 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.081488235 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.09488927 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074237861 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070253973 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075806409 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069732974 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065721307 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.08692051 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070807496 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.098608796 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068445371 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075983379 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.085513369 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.072048182 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.070441856 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070348241 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070807674 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070802558 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072500063 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068866141 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069741768 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059992591 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06959363 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.081843162 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.077778134 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.059002554 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075864963 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075765083 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075808033 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068658789 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073264452 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07392719 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073807013 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078141953 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074566138 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.075350025 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.071299932 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.077381431 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.079693565 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070436081 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067583877 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068759645 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.076015361 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067453386 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.079344183 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.0752868 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06898241 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.07049049 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072344035 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.07791 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070236138 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074982291 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068594632 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072761541 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.075631079 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072668715 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071683441 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069012404 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070140147 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071295029 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.057639142 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.071197874 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055797364 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.073334006 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068729784 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068811726 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.070616016 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07534222 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.082370449 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071674924 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.076504685 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.072096582 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070262672 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07362378 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.062835542 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074100934 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081980377 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.085955493 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071107638 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06831678 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084242054 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075632645 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069403008 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.058337127 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074928818 seconds)
  done (took 9.558225954 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093275138 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072458173 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087653041 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094206925 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.090919324 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07802348 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081059557 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072446482 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.087105249 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.076726728 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.080485919 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.07051213 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.0813795 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.080368445 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072837576 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.081408658 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074844406 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088211161 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.086118586 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.071091524 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.080058319 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.084210356 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.093585388 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084613966 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083579501 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085059177 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.093941305 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.080814341 seconds)
  done (took 4.082613871 seconds)
done (took 39.530720018 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.804047734 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.063701629 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.809121865 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.176611511 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.884862801 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.018503299 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.89002852 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.801358664 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.03010859 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.838046596 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.138512275 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.024199364 seconds)
done (took 66.225627432 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.851682161 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.970512367 seconds)
    (2/2) benchmarking "String"...
    done (took 2.044247377 seconds)
  done (took 5.758246711 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.014554349 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.374762647 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.052607114 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.803266828 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.811517099 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.122091985 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.600016277 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.313602567 seconds)
  done (took 30.823270979 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.990574939 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.025706441 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.51304355 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.55050666 seconds)
  done (took 15.879265708 seconds)
done (took 64.15224239 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.817955199 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.80929656 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.813899117 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.788721635 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.866058008 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.810331066 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.017377322 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.806543244 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.80713727 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.793386101 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.805146567 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.279761926 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.809400969 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.995034711 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.807847048 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.809033662 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.809752913 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.252207281 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.963773371 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.818294003 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.819515602 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.829252335 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.809960942 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.820341706 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.811874401 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.807039833 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.196544932 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.816636013 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.642993429 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.810262074 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.865345325 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.310501897 seconds)
  done (took 204.965611493 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.80621721 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.640345696 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.766431444 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.851102909 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.187810643 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.021117434 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.91798034 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.276882809 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.80870782 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.811062328 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.949367947 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.807789005 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.977529057 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.756619 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.83759836 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.889588679 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.974164479 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.981387411 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.840521462 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.963032593 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.818503707 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.797971535 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.747046533 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.938499833 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.827485654 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.904172567 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.834314856 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.823739969 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.004402774 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.942373383 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.810977098 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.810752616 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.002503528 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.680251331 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.82917429 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.822321494 seconds)
  done (took 170.406750323 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.969217699 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.808006274 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.807887933 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.80950956 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.813314754 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.807819802 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.92919628 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.933830976 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.424027257 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.635058443 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.812074338 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.858379583 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.587094833 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.808140175 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.875183945 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.819157528 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.809216565 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.824400732 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.836061914 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.810770356 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.807884445 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.931676682 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.823479073 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.820077222 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.81859201 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.809435693 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.814303768 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.179857605 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.809161815 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.81515769 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.049536269 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.809936053 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.809045937 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.647746856 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.454023637 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.901333422 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.810213245 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.815484519 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.808300018 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.026524175 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.80925701 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.809925185 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.81269708 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.943555592 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.808357218 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.93172454 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.810363988 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.286047298 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.809340001 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.809471187 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.431013543 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.385313593 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.812703638 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.810236818 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.812884146 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.809889915 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.810987901 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.815309872 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.497286204 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.884654837 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.811705366 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.815707315 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.815992155 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.810822693 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.022699986 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.813893422 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.338679604 seconds)
    (67/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.813298206 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.048835106 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.869250407 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.931590246 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.814366244 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.87620111 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.903167066 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.810457256 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.810962993 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.81047312 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.81170076 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.811870461 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.891695639 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.811270999 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.93255107 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.819517503 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.812847068 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.864521065 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.880429819 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.813154461 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.646147443 seconds)
    (88/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.814856215 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.811227829 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.812414426 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.072878613 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.876316811 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.811496513 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.811629093 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.811359283 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.933952948 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.933573302 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.524063644 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.815696537 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.547128352 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.817481113 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.944845138 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.812686632 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.945238198 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.817091255 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.893866303 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.818039758 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.814749284 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.8123134 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.844904073 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.813869685 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.868464214 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.812738344 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.187520942 seconds)
  done (took 406.426385041 seconds)
done (took 785.568293324 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.46828212 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.44646768 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.547558216 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.461018123 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.437207383 seconds)
  done (took 14.112647566 seconds)
done (took 15.866099953 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.901604786 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.907947532 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.837339062 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.905879822 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.835930085 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.904560881 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.886279028 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.837296995 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.873104399 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.837084919 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.875381028 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.838009666 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.82738833 seconds)
  done (took 26.022058294 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.065105641 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.048300389 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.885389253 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.052157323 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.861918042 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.046112616 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.978951386 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.967841799 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.967174219 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.830561118 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.826614911 seconds)
  done (took 23.284729468 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.049681812 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.066946362 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.893297609 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.044035426 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.864384542 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.051746321 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.982048155 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.969616351 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.975421985 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.83122142 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.829781529 seconds)
  done (took 23.311852179 seconds)
done (took 74.372188178 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.824857482 seconds)
  done (took 3.579864783 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.852179613 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.01893505 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.831462545 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.830659908 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.825688872 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.825787325 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.830881823 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.825054529 seconds)
  done (took 16.596771216 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.823263601 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.826162867 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.824631073 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.823885282 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.819945196 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.820639707 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.820158192 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.820472972 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.822006504 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.822686431 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.82076647 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.823100158 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.824730979 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.82141293 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.821047738 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.824109259 seconds)
  done (took 30.91594115 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.822341314 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.8206093 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.822247505 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.82120104 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.820419319 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.821155178 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.822076756 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.823235002 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.821005452 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.82152586 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.822826001 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.821127805 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.820853546 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.822395681 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.821103882 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.821915371 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.821611461 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.822726404 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.827170015 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.822327789 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.821778999 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.821279122 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.821680435 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.82245291 seconds)
  done (took 45.485661615 seconds)
done (took 98.334086409 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.56195977 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.454628608 seconds)
  done (took 9.773461245 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.827848749 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.824853566 seconds)
  done (took 5.465031598 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.825460409 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.824755723 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.826256381 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.825055948 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.824754623 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.825023573 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.826588706 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.825604559 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.826209329 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.824337055 seconds)
  done (took 20.01238471 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.825911167 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.825823566 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.823038992 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.825237222 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.826266929 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.824295608 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.82610796 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.825612473 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.826103082 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.823425904 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.826462083 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.825410983 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.825778808 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.823871538 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.826712994 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.822868736 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.823928744 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.824820488 seconds)
  done (took 34.609825127 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.827362434 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.826768834 seconds)
  done (took 5.413112346 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.825110508 seconds)
    (2/7) benchmarking "second"...
    done (took 1.823840983 seconds)
    (3/7) benchmarking "month"...
    done (took 1.823744099 seconds)
    (4/7) benchmarking "year"...
    done (took 1.82383049 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.824385456 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.823830373 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.824465296 seconds)
  done (took 14.52865752 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.827977715 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.98933126 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.056212238 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.490632545 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.828588905 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.831480445 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.800209572 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.833102878 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.834194433 seconds)
  done (took 20.250682215 seconds)
done (took 111.812196443 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.624373123 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.823298805 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.062815774 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.894584723 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.840072092 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.163426989 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.825765746 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.135058162 seconds)
done (took 43.130557343 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.86867966 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 4.166591321 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 4.194636616 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.847380586 seconds)
  done (took 16.969112282 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.808059704 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.359741265 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.867776515 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.498439482 seconds)
  done (took 20.51694611 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.196509065 seconds)
    (2/2) benchmarking "read"...
    done (took 2.1755449 seconds)
  done (took 6.138439594 seconds)
done (took 52.257098742 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.829330157 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.831077027 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.828240075 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.827254083 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.830810569 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.828065397 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.826934909 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.830217274 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.830337392 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.827327471 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.830910721 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.830612678 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.830296358 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.831924792 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.830926889 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.827863208 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.827446195 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.830396858 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.827828515 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.828568041 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.827980308 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.831657019 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.827828174 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.828277063 seconds)
  done (took 45.665778507 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.830566572 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.828358714 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.831150626 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.830420774 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.828365674 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.830905874 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.833277977 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.82871677 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.830860688 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.831780554 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.828603031 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.82902533 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.831098374 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.829648369 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.831303573 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.828894956 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.831714817 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.828758739 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.832241948 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.828508084 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.832024383 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.829750128 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.82896217 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.833356547 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.830490411 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.829527823 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.832645326 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.830560149 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.83268022 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.830452942 seconds)
  done (took 56.677571312 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.836497193 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.839785462 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.833129842 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.833967268 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.833747509 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.833011471 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.832576348 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.832974985 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.832751442 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.833496372 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.833258152 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.833720266 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.833278599 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.833505227 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.83400532 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.833550911 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.832775568 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.833294119 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.832591817 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.83400602 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.835320807 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.834094173 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.833657828 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.83363638 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.834158321 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.835517567 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.835385633 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.834082489 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.83397651 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.833766134 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.833986992 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.834359094 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.834219731 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.834558816 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.834226979 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.834979958 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.839852728 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.84208288 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.834071784 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.83468901 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.833874228 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.834139573 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.835259566 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.835372195 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.834679551 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.835464991 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.836690722 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.835608899 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.835952158 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.834863432 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.835652433 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.834597602 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.835660858 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.83677534 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.836087942 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.835014907 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.835575768 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.835893452 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.836083092 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.836289843 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.836028464 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.836877513 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.836953769 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.835736198 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.837079932 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.836970128 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.836220321 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.835776625 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.836186603 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.837119284 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.836227465 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.836722253 seconds)
  done (took 133.890939477 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.836142304 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.834642168 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.833737237 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.833582176 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.833810107 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.836802552 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.834128582 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.837455188 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.834204445 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.837147049 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.83626069 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.834008756 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.835189104 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.837582499 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.835885157 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.833602225 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.836639495 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.834173792 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.838009081 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.837945244 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.837086247 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.834860826 seconds)
  done (took 42.151478767 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.83762991 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.837966142 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.834499819 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.838253922 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.834957921 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.83835425 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.838354172 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.837524013 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.837766911 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.835432553 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.835676482 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.83874706 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.835533489 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.835869102 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.835293767 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.837091601 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.838491483 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.836476953 seconds)
  done (took 34.833450526 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.835378675 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.834919997 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.839873673 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.836690101 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.836282255 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.838943617 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.83603844 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.838661881 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.838816389 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.836931172 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.838477664 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.838809082 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.839955587 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.836170872 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.839563891 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.837128743 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.839789162 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.836475985 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.839666505 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.837030013 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.837890099 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.838950219 seconds)
  done (took 42.202521929 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.839008007 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.839541816 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.83716606 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.836370363 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.837264621 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.840103237 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.840364684 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.837826617 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.840971877 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.840344545 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.837447383 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.839715258 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.837502738 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.838298011 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.837788063 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.838208511 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.839886193 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.838098616 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.840759885 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.837258569 seconds)
  done (took 38.545451677 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.841568484 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.842652211 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.842344708 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.84390038 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.842628479 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.84268119 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.842696561 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.843269251 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.843569138 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.845871208 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.842983529 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.843080787 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.842701419 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.843334135 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.843073318 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.843371742 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.843181679 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.844023945 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.843360719 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.84463217 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.84322236 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.842970382 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.843528641 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.843376455 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.844935674 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.843754426 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.843707742 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.844076876 seconds)
  done (took 53.387301003 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.842183656 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.843206502 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.839426079 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.839624828 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.839980792 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.839678763 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.840230702 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.839249882 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.842112342 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.838951016 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.842239412 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.842549698 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.843014024 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.842421684 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.842983543 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.844240399 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.842790154 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.841534296 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.839939771 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.840562694 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.843210972 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.843459576 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.842711246 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.841044562 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.840513149 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.843557149 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.84033104 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.84121258 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.845032676 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.841753298 seconds)
  done (took 57.024042983 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.862178932 seconds)
    (2/2) benchmarking "in"...
    done (took 1.861969444 seconds)
  done (took 5.49892047 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.84069224 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.843816814 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.843708989 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.840810208 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.84116775 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.844606614 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.843119082 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.840959156 seconds)
  done (took 16.514537062 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.843260942 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.8450196 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.844560968 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.844315958 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.845623236 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.844466208 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.850447097 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.845209758 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.845092805 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.845916582 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.850623559 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.852631184 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.847907666 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.845126136 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.84421805 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.846014794 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.844483 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.846329886 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.847285912 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.845886268 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.846616312 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.848112665 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.846231418 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.842443699 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.84640682 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.855351418 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.849159604 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.845301427 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.845652852 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.849443774 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.84641029 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.843983082 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.847539611 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.846653611 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.846471768 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.84791633 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.852791783 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.846319172 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.851630152 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.847968231 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.847455333 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.843861242 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.847305483 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.849050079 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.848433442 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.848947607 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.846755849 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.843900478 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.846784724 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.851484394 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.852196235 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.847475523 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.844674645 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.850834975 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.848554818 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.854567419 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.84856213 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.849125285 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.85462139 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.856731586 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.859903491 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.855041662 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.848970055 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.848210097 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.856335014 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.87021864 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.85378989 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.845507525 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.845251463 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.847982593 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.853925961 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.860791712 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.857254153 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.848942006 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.849539125 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.847982157 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.849046661 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.849014473 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.853991487 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.850735279 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.848996651 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.849864331 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.858288346 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.869082453 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.847661436 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.849891174 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.850409008 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.849608857 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.849514378 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.858889845 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.851596512 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.850164252 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.850415107 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.851028565 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.850862271 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.851729744 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.848806959 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.8507071 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.846663458 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.850166728 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.850192605 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.853525776 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.858130206 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.850873261 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.851657527 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.855903332 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.850121213 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.850662972 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.856267292 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.850182214 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.851201478 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.851747745 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.855187805 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.847086895 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.85250762 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.858790613 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.851079118 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.851635507 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.851983309 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.849937848 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.859927348 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.874772162 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.850254022 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.850584845 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.854954013 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.862188286 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.852976555 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.85381417 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.851471129 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.848826004 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.848005874 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.853397962 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.85091021 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.852501967 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.852508086 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.851992217 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.848845643 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.850945696 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.852786649 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.851953261 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.853014739 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.854441959 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.854026874 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.854688097 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.852281794 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.853991823 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.858541625 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.852911597 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.853855768 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.853888045 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.850333918 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.851549832 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.853868324 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.853904871 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.852620343 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.854343372 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.852076041 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.854052324 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.853882913 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.852447744 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.852693481 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.85376 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.856700171 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.855950413 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.85653138 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.852691798 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.851360627 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.85292048 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.853872984 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.853451479 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.853963478 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.852209427 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.855897176 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.862416483 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.854545805 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.855521104 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.85488152 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.854788815 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.855545681 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.855480404 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.857102501 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.861380015 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.855726743 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.859441934 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.8551277 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.855920644 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.853143082 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.854100603 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.853361416 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.855647856 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.858920069 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.862019304 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.867283624 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.861858889 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.856543003 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.858472226 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.856488106 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.858998696 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.858246969 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.8553065 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.854761922 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.855951694 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.854765152 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.856441472 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.856113213 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.856371709 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.854575161 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.855048054 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.856082684 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.856654182 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.855420074 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.85699136 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.858112518 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.852889029 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.855324072 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.857082949 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.85553373 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.853229927 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.855507452 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.855257235 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.85596081 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.856522907 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.863354995 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.853473554 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.856748949 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.856914483 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.855991755 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.855264249 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.857523186 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.858819919 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.855918336 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.862635573 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.85664453 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.857594519 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.862095024 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.856510487 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.856780904 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.859085345 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.857002893 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.854933621 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.860147408 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.863315917 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.856581272 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.858562403 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.858718904 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.859474638 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.857486272 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.86835488 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.857289771 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.857471894 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.858550453 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.859796666 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.854670221 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.858223445 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.857886435 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.858695213 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.859916682 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.858028322 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.858046517 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.858358619 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.860726393 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.86058956 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.859521448 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.862155462 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.86817618 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.862190347 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.859191819 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.85972374 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.860287915 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.861405492 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.857939536 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.860718466 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.858397455 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.871710693 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.867532033 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.863923929 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.860502548 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.859125995 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.863585431 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.8593887 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.863126209 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.858699504 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.860339132 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.859323732 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.8592072 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.855533274 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.859514426 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.860187235 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.860283634 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.859789482 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.862354519 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.859216908 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.858520269 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.861124179 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.860677632 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.859722724 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.8594268 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.858843511 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.862147412 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.862106605 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.85916689 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.85886924 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.865674412 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.862068916 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.860841777 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.85961054 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.859291942 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.859100366 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.861163682 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.861760785 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.862795272 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.868529255 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.863811421 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.868869979 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.861904091 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.868974548 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.862137929 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.864107335 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.869472574 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.859355003 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.861017618 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.861760644 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.862059072 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.866902478 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.863004933 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.861565839 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.866812691 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.862525627 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.863190838 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.861278014 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.862938035 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.860815538 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.863236024 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.868857073 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.862753979 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.866617307 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.864350458 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.858577157 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.862688515 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.860710339 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.860415252 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.866387083 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.864744584 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.862487302 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.861806533 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.861550844 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.862437927 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.863876124 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.862302908 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.859527025 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.861950413 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.868586011 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.864785383 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.86789392 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.862369226 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.870358736 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.863643664 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.868859969 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.864048881 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.863342226 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.863977379 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.8628376 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.865224078 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.86326955 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.863891619 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.864200677 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.865202355 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.86756149 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.86644912 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.865693774 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.863538164 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.865036376 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.862860579 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.873899647 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.888364697 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.8651357 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.867948475 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.862874134 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.865823511 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.869291606 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.865709944 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.862283844 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.866697185 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.874893546 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.873200872 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.864474622 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.865956167 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.865057808 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.867020735 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.86405414 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.864509761 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.865910731 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.864583648 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.86628277 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.865572843 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.868364068 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.865294145 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.865402422 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.865577325 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.867094948 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.875844729 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.867013099 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.866405954 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.866162038 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.865219022 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.866518369 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.866467798 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.866900565 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.866456801 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.866287789 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.866715879 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.872571548 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.872625824 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.868029236 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.864752354 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.867562006 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.867200415 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.866321681 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.868723817 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.868157362 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.868215398 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.866883201 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.867780581 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.867440529 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.865511745 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.867313979 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.868413059 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.867841521 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.869333193 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.872729678 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.867658225 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.863963918 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.868044262 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.867800374 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.866062528 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.867133846 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.874232087 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.869689273 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.876795673 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.874953744 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.872299672 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.867443424 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.87091242 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.875162276 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.86720088 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.867511247 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.86841745 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.868626844 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.870247093 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.871356761 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.869145453 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.873348678 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.867876338 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.868669356 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.875736333 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.86897307 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.86963487 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.868865934 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.872172681 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.868047122 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.865165316 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.867360448 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.868268837 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.874368551 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.870467683 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.870558728 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.870623205 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.866468653 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.86958544 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.875136625 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.869215671 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.870457384 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.866423839 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.870267856 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.871734336 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.869083532 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.866441934 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.870152232 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.868686449 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.873476965 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.876599918 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.866972781 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.872190777 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.869560166 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.870332169 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.872183835 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.870326974 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.867771245 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.866700709 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.868805643 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.870809281 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.869988159 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.872106299 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.869916656 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.870994449 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.871145251 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.873450962 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.872752362 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.880422327 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.877124121 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.867460535 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.869977111 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.870629442 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.872792818 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.871867698 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.872035409 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.871385917 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.87192395 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.870597179 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.871488225 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.869959575 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.8731119 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.886044179 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.871169767 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.870444557 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.871266636 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.874172334 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.870900894 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.869100586 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.871099694 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.872624006 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.873747647 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.879895033 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.873875551 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.878225907 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.872692769 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.874576981 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.876075574 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.875544945 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.881112442 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.874719612 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.874070929 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.873152821 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.87725235 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.889070632 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.872159202 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.881485079 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.899317815 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.87384378 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.874316203 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.874524734 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.872119809 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.87419358 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.874190828 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.873649816 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.873332337 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.872815207 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.873713562 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.874178212 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.879250173 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.874598731 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.872890946 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.873297762 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.872970215 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.87463048 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.870244967 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.874109726 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.873446927 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.873688815 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.875762181 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.875673363 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.873879629 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.886736348 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.883284841 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.873316942 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.876035416 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.870524056 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.87699036 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.877027576 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.88397142 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.880866945 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.87657484 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.875431906 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.875344645 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.875514783 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.871994357 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.875888536 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.875202114 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.874270377 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.872307607 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.887315707 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.885156622 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.880363907 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.876846223 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.877306556 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.875162601 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.876410811 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.879476151 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.876752852 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.876894082 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.876575692 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.881582649 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.876542197 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.876328919 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.879153847 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.883857809 seconds)
  done (took 1111.544534051 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.87403416 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.871987866 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.871714711 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.872481221 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.873645493 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.873870182 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.87432926 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.872430668 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.872715273 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.872893941 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.873666723 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.873592077 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.874797179 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.87404717 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.872442905 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.873188053 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.872879705 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.873467689 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.873883584 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.873103976 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.872687951 seconds)
  done (took 41.143734995 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.878016863 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.874065938 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.87482032 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.876537983 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.873780486 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.877205175 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.874971449 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.875864856 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.876720663 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.87428215 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.87657543 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.877919494 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.874744214 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.876451902 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.875071088 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.878288114 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.879098851 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.875733753 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.878041025 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.875222601 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.877485324 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.874673799 seconds)
  done (took 43.082467906 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.879842638 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.880241958 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.878342487 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.877514119 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.878953406 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.875979315 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.879637635 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.878145478 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.878776793 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.879774605 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.878153721 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.879437209 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.886706632 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.883508149 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.87952394 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.879301265 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.021335596 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.880557853 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.881618705 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.879746941 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.87588665 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.884196769 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.877586985 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.876469481 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.878880122 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.881594848 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.879052756 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.880573558 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.880539221 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.881022734 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.885165516 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.883776984 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.881062019 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.881445021 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.880339656 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.881337741 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.883554835 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.881151886 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.87677424 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.880757029 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.890120817 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.900572897 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.882656615 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.88548365 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.879225525 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.879567089 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.883142913 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.889001058 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.877663427 seconds)
  done (took 94.127825336 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.880128255 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.880740547 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.8773023 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.879218702 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.880200961 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.87981324 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.880929689 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.881839515 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.877296734 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.877580755 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.880774344 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.877911255 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.879238981 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.882072083 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.881988869 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.878133553 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.878457978 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.879630683 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.879478548 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.879090612 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.878780569 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.881370942 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.881631654 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.879476165 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.883102745 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.877835161 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.879904132 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.88214227 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.879717368 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.879895257 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.881909176 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.882221018 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.882474883 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.880300899 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.880704853 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.882515697 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.882604293 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.880456417 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.882756678 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.880703817 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.88371153 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.883378169 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.883425583 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.882021224 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.880767585 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.880697866 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.880197875 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.881042368 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.882019959 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.88378711 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.884029716 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.881177896 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.884538122 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.88058245 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.88411818 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.883725729 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.882377122 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.880294231 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.883244717 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.881767725 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.881645937 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.884009466 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.880738157 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.884366869 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.884134008 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.881402193 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.880934289 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.883452845 seconds)
  done (took 129.732690823 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.886489304 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.884378936 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.887148782 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.887243896 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.885646426 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.885439898 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.887116596 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.886450342 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.886328852 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.886309848 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.886463167 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.884401993 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.886165251 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.885553784 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.886430086 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.886517374 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.887341676 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.887115539 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.887945224 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.88735038 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.888249956 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.887491879 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.887665978 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.886908744 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.88829659 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.888429035 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.888141793 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.888461189 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.888203472 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.887436985 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.887231093 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.887088009 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.887294584 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.888621588 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.88944855 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.888292397 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.887289528 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.887964234 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.888252473 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.887542604 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.888414449 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.889349812 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.888245766 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.888721937 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.888718782 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.887942516 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.889038439 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.88900072 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.886756524 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.889242986 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.88724227 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.890266414 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.889220712 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.88884735 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.889828008 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.886450141 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.889132946 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.888289181 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.888311065 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.888887674 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.889186913 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.886327952 seconds)
  done (took 118.850197619 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.888284078 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.889748271 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.886296778 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.88603934 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.887601575 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.885710527 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.888288331 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.888040986 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.887307792 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.886943783 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.889102222 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.884574032 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.886650277 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.888069017 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.884970344 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.886628448 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.884807617 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.885472715 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.888001761 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.886655625 seconds)
  done (took 39.557952828 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.886393324 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.88880541 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.886702745 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.886285193 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.88935714 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.886262463 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.890239656 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.889802993 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.886408001 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.889518231 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.889403536 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.888012456 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.88749417 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.887371923 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.888646255 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.886621929 seconds)
  done (took 32.027480481 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.887109913 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.890674243 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.891921221 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.890296584 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.887367639 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.886427005 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.890598712 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.887597496 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.886353085 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.889011978 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.889701855 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.890021655 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.89000718 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.892533087 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.888903752 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.890756841 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.887474744 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.887503023 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.891164581 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.891286563 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.888687929 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.888141097 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.891080441 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.889818272 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.890342187 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.888676871 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.887721643 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.889135726 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.887978691 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.890668713 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.889198769 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.887966805 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.887215432 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.889172705 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.892489755 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.888742721 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.890761969 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.891708902 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.89166159 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.891129351 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.890632039 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.889856189 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.892575704 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.893655097 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.890531449 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.892218715 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.890409753 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.89113911 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.891334677 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.891157866 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.891221408 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.893840988 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.891275111 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.894408043 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.893797931 seconds)
  done (took 105.779136828 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.893705585 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.891862869 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.88890043 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.893258643 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.891538852 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.889774138 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.8933616 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.888340325 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.888501152 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.893802331 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.889677378 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.894381765 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.889626089 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.893434855 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.891743468 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.893004409 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.889874026 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.89127128 seconds)
  done (took 35.868695637 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.890006244 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.890782264 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.894110027 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.893020077 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.889964535 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.892623503 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.890974193 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.894029109 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.894579765 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.891758224 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.891978705 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.893721384 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.894135903 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.894666081 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.891650905 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.891648868 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.894636814 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.89620694 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.890838992 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.891101966 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.893939236 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.894629683 seconds)
  done (took 43.465876401 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.894784844 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.895488393 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.910969647 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.916555176 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.915620146 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.931155204 seconds)
  done (took 13.292085839 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.893538853 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.895804172 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.892755983 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.896095003 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.897596176 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.894763781 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.893467996 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.893960805 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.895510653 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.892443593 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.893806388 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.896519626 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.89486974 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.894281631 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.896311985 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.895614982 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893596684 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.893231027 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895015929 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.896798622 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.894035245 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.89613243 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.892978189 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.895647958 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893878537 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.89512291 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.898198343 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.89461453 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895927818 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.896560117 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.898592785 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.89515079 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.896534441 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.894697097 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.897533521 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.898120309 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.895076994 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.898789725 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.89701087 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.893586602 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.898937978 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.900438953 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.899013978 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.894735674 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.899485902 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.897376597 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.896408198 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896568376 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.896736917 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.899118788 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.900456321 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.896825807 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.898500829 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.899204893 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.898839064 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.900258165 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.898322764 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.895752584 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.898095678 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.896081271 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.895746632 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.899288354 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.896774853 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.895652417 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.899074847 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.896871087 seconds)
  done (took 126.987773525 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.896713051 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.897032935 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.896465836 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.896240464 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.897860556 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.895648976 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.898782113 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.897201549 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.897233974 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.896205591 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.900066075 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.897688218 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.89818825 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896775257 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.899257558 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.898107573 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.898210344 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.898200261 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.897758181 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.90070604 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.898045596 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.897840182 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.897848807 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.89694409 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.89864125 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.901261897 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.898024274 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.897393244 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.897816153 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.897459449 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.898620338 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.896999208 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.897993663 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.898090557 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.896335702 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.899044555 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.899544157 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.898088865 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.898484929 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.900301377 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.899118304 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.901091659 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.899440443 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.898921729 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.899045839 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.898735485 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.898497431 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.899567722 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.899258146 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.89921317 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.897281773 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.899562221 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.897834995 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.899699576 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.899159249 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.90027417 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.900034464 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.900145358 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.900693116 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.901435099 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.89881378 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.898192075 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.901569034 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.899407587 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.898783209 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.899154318 seconds)
  done (took 127.135535371 seconds)
done (took 2590.751498651 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.9616337 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.979834754 seconds)
  done (took 15.772755801 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.065364714 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.019557191 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.904609813 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.910988042 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.905396753 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.92405834 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.924387782 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.905028728 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.903658208 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.904027172 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.903955622 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.090314268 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.897862629 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.903841734 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.90456784 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.995276679 seconds)
  done (took 52.902678296 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.907004351 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.907027716 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.91762912 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.909827343 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.906727944 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.919100307 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.939252331 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.909249307 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.946853333 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.921962029 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.984347286 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.919595022 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.906897346 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.959187597 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.920796587 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.922235577 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.998569868 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.983545262 seconds)
  done (took 36.614136485 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.985650438 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.914808321 seconds)
  done (took 10.742991379 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.936194494 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.941362377 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.999009836 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.927881473 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.920990216 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.900582144 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.947199188 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.927200985 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.945770851 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.928951177 seconds)
  done (took 71.213121987 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.90930817 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.903775738 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.903686339 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.90102504 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.895360462 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.899598622 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.903278738 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.901719244 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.575252195 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.939782535 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.911339325 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.909300003 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.903832379 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.904500645 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.901677134 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.926395363 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.998255606 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.903665743 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.901811437 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.90908015 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.903183318 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.958672004 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.918423845 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.906778779 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.935452943 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.57637689 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.912168282 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.909553666 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.996588154 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.901103327 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.902576827 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.904494217 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.905164131 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.258058462 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.170486099 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.905433657 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.919701164 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.910127301 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.899500156 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.99893397 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.902856333 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.908055757 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.545220115 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.149206082 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.014259084 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.941892001 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.215209986 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.919996596 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.90426509 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.928503343 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.904141988 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.901622905 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.913292259 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.38348252 seconds)
  done (took 133.965769828 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.894034796 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.260239767 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.067821203 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.898933173 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.18755453 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.108288705 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.89790312 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.947862781 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.89701616 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.126788511 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.152796677 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.007915193 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.895318796 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.894127502 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.894634132 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.893606934 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.053198008 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.968000189 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.894529737 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.88855399 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.922901723 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.136813025 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.018881736 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.891675817 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.921175518 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.105390858 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.015374808 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.998869155 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.683689003 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.88751707 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.954857714 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.891394059 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.888389825 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.884966583 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.047229197 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.985841763 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.976268743 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.887800766 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.883704585 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.884666898 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.559978553 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.088825026 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.985222261 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.029959251 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.08543956 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.095896661 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.671320901 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.882944836 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.627114811 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.052058477 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.118398416 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.117881218 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.011022466 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.887814383 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.209325202 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.88212157 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.882804977 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.136671731 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.033131255 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.989035018 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.884254294 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.883172596 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.880786228 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.132368761 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.886294223 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.982290898 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.883543062 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.882853806 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.98333292 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.98782356 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.025650642 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.099245969 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.916375684 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.806918852 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.420684349 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.133097066 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.951527397 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.137413766 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.885847287 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.881449485 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.963936992 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.731514719 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.136293582 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.132518227 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.135117658 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.918349562 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.6073415 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.874510584 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.109913585 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.100969369 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.130928316 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.083361739 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.120397752 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.207500638 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.872805196 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.870952067 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.090933242 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.010456525 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.873584528 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.216021876 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.106303343 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.43903822 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.895331566 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.179602311 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.003714915 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.870692896 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.511573349 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.866981215 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.091259673 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.910365646 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.865543344 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.863398975 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.088096018 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.835668234 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.860515271 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.504931111 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.923118005 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.861048208 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.092799776 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.85799204 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.121010256 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.856447073 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.093377998 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.447867269 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.885926106 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.029233572 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.055410479 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.852235812 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.100431994 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.098579274 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.970796445 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.074771036 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.474868118 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.852561739 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.140028286 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.85111415 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.845435845 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.021541373 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.847761724 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.996571061 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.847396824 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.134965975 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.87114693 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.087359869 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.846682783 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.102771377 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.88180932 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.898011193 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.844464293 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.972221047 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.846358357 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.770577802 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.004266267 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.849309075 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.84115532 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.397664192 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.84081333 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.000039952 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.077004937 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.868559857 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.916530748 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.514972512 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.838537517 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.93138761 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.866966211 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.238303256 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.841006704 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.093915868 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.840859016 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.837120468 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.835859563 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.085635951 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.024361453 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.83997863 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.838571216 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.732298033 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.834585593 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.832993348 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.017613171 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.151761442 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.834491607 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.038521356 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.837652939 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.964960393 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.836220803 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.909833116 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.168852698 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.828645655 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.828562794 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.827608741 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.826523364 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.829950531 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.040730861 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.857696931 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.36485519 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.968554775 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.098866605 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.141781661 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.081720225 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.873936488 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.827065077 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.09333949 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.826717529 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.893078571 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.826929313 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.8483213 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.065175206 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.828755503 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.092633242 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.10536053 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.866615903 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.87437687 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.825100472 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.823049461 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.820716807 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.971994307 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.914417545 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.823606734 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.81995607 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.940078042 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.946836035 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.037142241 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.821591507 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.85066889 seconds)
  done (took 900.962055837 seconds)
done (took 1224.006428235 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.819065957 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.818353881 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.80799309 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.821068596 seconds)
  done (took 29.023976586 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.82685347 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.822789559 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.825523638 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.823857575 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.825436434 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.822718228 seconds)
  done (took 12.701470705 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.849704632 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.816596323 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.821160271 seconds)
  done (took 21.242152118 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.8905372 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.209031557 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.937045112 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.244875707 seconds)
  done (took 10.034360077 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.823759983 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.823845863 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.82073971 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.822039749 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.821975781 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.823801075 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.822443224 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.821044439 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.822452816 seconds)
  done (took 18.156389076 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.190601517 seconds)
done (took 97.106564646 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.930636101 seconds)
    (2/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.935166084 seconds)
    (3/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.978364168 seconds)
    (4/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.99335474 seconds)
    (5/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.914280769 seconds)
    (6/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.915388722 seconds)
    (7/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.247699528 seconds)
    (8/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.914207648 seconds)
    (9/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.972794699 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.139785498 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.012061608 seconds)
    (12/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.43983132 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.896873816 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.049782218 seconds)
    (15/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.909760041 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.053891807 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.013697015 seconds)
    (18/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 3.162697742 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.210448489 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.896509426 seconds)
    (21/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 7.000858585 seconds)
    (22/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.062097584 seconds)
    (23/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.126549705 seconds)
    (24/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.937012196 seconds)
    (25/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.090987566 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.03493145 seconds)
    (27/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.893164258 seconds)
    (28/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 2.010092129 seconds)
    (29/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.57937481 seconds)
    (30/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.994035737 seconds)
    (31/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.044943807 seconds)
    (32/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.907298891 seconds)
    (33/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 7.010716971 seconds)
    (34/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.475565463 seconds)
    (35/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.992441323 seconds)
    (36/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.888497026 seconds)
    (37/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.084274972 seconds)
    (38/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.332903409 seconds)
    (39/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.894262255 seconds)
    (40/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.07048389 seconds)
    (41/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.53032132 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.003159366 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.590377975 seconds)
    (44/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.11901673 seconds)
    (45/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.409951362 seconds)
    (46/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.907109874 seconds)
    (47/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.968276989 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.951351708 seconds)
    (49/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.103210046 seconds)
    (50/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.930712265 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.052873438 seconds)
    (52/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.011127658 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.157181401 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.203050323 seconds)
    (55/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.1568932 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.293451747 seconds)
    (57/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.932698042 seconds)
    (58/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.246201552 seconds)
    (59/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.0125707 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.287652406 seconds)
    (61/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.907777042 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.064557048 seconds)
    (63/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.904370371 seconds)
    (64/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 3.671816595 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.23268464 seconds)
    (66/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.205369074 seconds)
    (67/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.879487956 seconds)
    (68/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.00079598 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.832369097 seconds)
    (70/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.012408933 seconds)
    (71/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.972135164 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.889180695 seconds)
    (73/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.869438996 seconds)
    (74/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.004808334 seconds)
    (75/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.06936562 seconds)
    (76/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.953614765 seconds)
    (77/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.932930487 seconds)
    (78/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.018531497 seconds)
    (79/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.296373751 seconds)
    (80/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.140123727 seconds)
    (81/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.932251081 seconds)
    (82/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.755902924 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.049474795 seconds)
    (84/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.89499607 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 5.64568274 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.707009512 seconds)
    (87/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.909547534 seconds)
    (88/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.22446082 seconds)
    (89/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.338242533 seconds)
    (90/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.012848271 seconds)
    (91/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.291837877 seconds)
    (92/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.892338234 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 2.052658885 seconds)
    (94/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.091409213 seconds)
    (95/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.931112714 seconds)
    (96/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.136976025 seconds)
    (97/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.011984632 seconds)
    (98/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.210644119 seconds)
    (99/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.251253155 seconds)
    (100/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.909597693 seconds)
    (101/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.961207268 seconds)
    (102/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.178523041 seconds)
    (103/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.996358014 seconds)
    (104/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.908241463 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.240713843 seconds)
    (106/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.252239392 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.912008734 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.715321589 seconds)
    (109/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.977178054 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.979527119 seconds)
    (111/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.365892518 seconds)
    (112/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.911374109 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.123022572 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.279305211 seconds)
    (115/309) benchmarking ("sort", BigInt, false)...
    done (took 6.909550744 seconds)
    (116/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.143696168 seconds)
    (117/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.164678269 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.187128547 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.910874127 seconds)
    (120/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.259199757 seconds)
    (121/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.975808063 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.909038733 seconds)
    (123/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.334335046 seconds)
    (124/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.895208753 seconds)
    (125/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.426058001 seconds)
    (126/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.934192606 seconds)
    (127/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.387511829 seconds)
    (128/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.415953737 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.006028853 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.043206365 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 2.135970256 seconds)
    (132/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.19443369 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.931675831 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.957850572 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.158938103 seconds)
    (136/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.198012928 seconds)
    (137/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.109031997 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.128192942 seconds)
    (139/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.982272921 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.166508028 seconds)
    (141/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.268049819 seconds)
    (142/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.013611627 seconds)
    (143/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.911144642 seconds)
    (144/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.130925102 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.000412471 seconds)
    (146/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.997427623 seconds)
    (147/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.934176636 seconds)
    (148/309) benchmarking ("sort", Int8, false)...
    done (took 4.872622224 seconds)
    (149/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.365317005 seconds)
    (150/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.936568195 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.252950151 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.143346953 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.933495569 seconds)
    (154/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.085015303 seconds)
    (155/309) benchmarking ("sort", Float32, false)...
    done (took 5.612002362 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.864436896 seconds)
    (157/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.030113251 seconds)
    (158/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.971281554 seconds)
    (159/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.906199684 seconds)
    (160/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 8.089934478 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 3.217769365 seconds)
    (162/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.009545924 seconds)
    (163/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.080192981 seconds)
    (164/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.98759688 seconds)
    (165/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.341165435 seconds)
    (166/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.810212248 seconds)
    (167/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.916104805 seconds)
    (168/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.996735719 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.990938801 seconds)
    (170/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.465246435 seconds)
    (171/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.062323363 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.547828613 seconds)
    (173/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.07474608 seconds)
    (174/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.9815182 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.988807804 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.013209168 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.546277749 seconds)
    (178/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.42181874 seconds)
    (179/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.070414377 seconds)
    (180/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.904780838 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.261013394 seconds)
    (182/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.140557537 seconds)
    (183/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.373143448 seconds)
    (184/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.002712816 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.923178181 seconds)
    (186/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.979877698 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.584073724 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.156496915 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.931039264 seconds)
    (190/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.022823031 seconds)
    (191/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.219044881 seconds)
    (192/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.057536806 seconds)
    (193/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.819046948 seconds)
    (194/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.878717698 seconds)
    (195/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.117533548 seconds)
    (196/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.913870171 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.831320391 seconds)
    (198/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.896038491 seconds)
    (199/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.067285851 seconds)
    (200/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.905561249 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.940943178 seconds)
    (202/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.180087324 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.208706647 seconds)
    (204/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.04435039 seconds)
    (205/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.266397674 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.221602121 seconds)
    (207/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.575931298 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.181060684 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.857563853 seconds)
    (210/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.399352697 seconds)
    (211/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.930524869 seconds)
    (212/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 7.714618184 seconds)
    (213/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.002594688 seconds)
    (214/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.969414196 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.109916737 seconds)
    (216/309) benchmarking ("sort", Float64, false)...
    done (took 5.637236257 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.69459141 seconds)
    (218/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.99698427 seconds)
    (219/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.866312126 seconds)
    (220/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.285585628 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.960249361 seconds)
    (222/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.447859037 seconds)
    (223/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.898749832 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.237276402 seconds)
    (225/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.356897863 seconds)
    (226/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.033242981 seconds)
    (227/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.133649951 seconds)
    (228/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.970316375 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.901265614 seconds)
    (230/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.980230938 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.825851509 seconds)
    (232/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.026024275 seconds)
    (233/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.43507813 seconds)
    (234/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.426699487 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.261512016 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.927873306 seconds)
    (237/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.907086409 seconds)
    (238/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.975262675 seconds)
    (239/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.012085878 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.752050547 seconds)
    (241/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.90557707 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.95379645 seconds)
    (243/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.883812583 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.866722675 seconds)
    (245/309) benchmarking ("perf_sum", Float64, false)...
    done (took 3.291017596 seconds)
    (246/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.888843877 seconds)
    (247/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.263320684 seconds)
    (248/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.307950956 seconds)
    (249/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.111751414 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.913596421 seconds)
    (251/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.882109075 seconds)
    (252/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.881942027 seconds)
    (253/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.869165631 seconds)
    (254/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.468231478 seconds)
    (255/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.911101671 seconds)
    (256/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.231076701 seconds)
    (257/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 7.011188457 seconds)
    (258/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.801311305 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.511065471 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.908758946 seconds)
    (261/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.001434347 seconds)
    (262/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.988902119 seconds)
    (263/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.909969717 seconds)
    (264/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.020836226 seconds)
    (265/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.061269269 seconds)
    (266/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.913470324 seconds)
    (267/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.899483039 seconds)
    (268/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.867306071 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.541842681 seconds)
    (270/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.946740421 seconds)
    (271/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.908572524 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.215597831 seconds)
    (273/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.074885768 seconds)
    (274/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.280365618 seconds)
    (275/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.20363626 seconds)
    (276/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.026322599 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.122691162 seconds)
    (278/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.984755549 seconds)
    (279/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.883642181 seconds)
    (280/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.746366709 seconds)
    (281/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.060336197 seconds)
    (282/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.890099091 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.965757348 seconds)
    (284/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.897450508 seconds)
    (285/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.009101357 seconds)
    (286/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.875579799 seconds)
    (287/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 3.340170769 seconds)
    (288/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.875481936 seconds)
    (289/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.049875831 seconds)
    (290/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.871449728 seconds)
    (291/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.170701927 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.992488657 seconds)
    (293/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.246532068 seconds)
    (294/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.091006989 seconds)
    (295/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.966836197 seconds)
    (296/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.869676371 seconds)
    (297/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.66779677 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.566378758 seconds)
    (299/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.799022947 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.925581128 seconds)
    (301/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.123935567 seconds)
    (302/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.170858571 seconds)
    (303/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.995999601 seconds)
    (304/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.941482497 seconds)
    (305/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.22050531 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.910944103 seconds)
    (307/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.180953334 seconds)
    (308/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.973803957 seconds)
    (309/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.954558621 seconds)
  done (took 1015.979925111 seconds)
done (took 1017.889585964 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.920051628 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.91269662 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.896451748 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.918385939 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.008200144 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.925920762 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.906990345 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.899362639 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.944396284 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.945570425 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.895296393 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.923263875 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.898822102 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.89715601 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.895468608 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.910534853 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.211135579 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.930261483 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.913294119 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.905704352 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.913827241 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.896436114 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.946597308 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.92427608 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.900846207 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.900510175 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.900952319 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.917267641 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.00895521 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.901391005 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.899226144 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.908529685 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.211279577 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.925926035 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.892409006 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.917980864 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.908972302 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.906675974 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.902571885 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.930514305 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.302188181 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.935333707 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.90006421 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.899122274 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.899315155 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.902467501 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.900072422 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.904714818 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.911635381 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.912346191 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.299275706 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.952633001 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.903397593 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.900127183 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.909865458 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.89962278 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.903013827 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.916936122 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.920636856 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.916609072 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.203298733 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.933749963 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.901438385 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.916270397 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.907379018 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.338759464 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.933133586 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.90592448 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.301976923 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.94053063 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.334939245 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.944299775 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.900296337 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.909883035 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.927919449 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.208743384 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.919421427 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.896889922 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.901671027 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.891377077 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.903841509 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.906367982 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.899795565 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.89193755 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.90552615 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.920724682 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.90158899 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.893407782 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.900090193 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.908898288 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.897240983 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.900118119 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.892915832 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.886941507 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.896829311 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.891503727 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.891697869 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.891811967 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.894433491 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.898880002 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.289412722 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.943216629 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.885092313 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.886555423 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.889251592 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.90288756 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.289052229 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.928358482 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.914003906 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.934831432 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.889342717 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.190505539 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.919044756 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.905037618 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.893564116 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.889221242 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.880316679 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.187767193 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.319688349 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.936598 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.883448589 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.88132378 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.898816978 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.884323814 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.880505051 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.194673941 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.910952437 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.895100327 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.001803396 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.891683752 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.911104687 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.878037961 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.882023035 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.907382372 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.897619235 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.909461292 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.879752243 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.892654098 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.893599367 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.876147435 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.886154255 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.88496338 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.876587275 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.880647162 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.870090155 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.903939941 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.8874807 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.887968059 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.89512823 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.995145206 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.872596534 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.177559998 seconds)
done (took 297.331505957 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.943472632 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.867844491 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.970848411 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.870643408 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.954202068 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.9591002 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.86957168 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.868816698 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.868326997 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.251560027 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.869019496 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.869478813 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.87042171 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.869307404 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.955504771 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.871834786 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.868385117 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.21317474 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.873709597 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.944421281 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.86547968 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.868956578 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.871902129 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.283754342 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.865052485 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.865812771 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.944413667 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.873127182 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.217025134 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.864923486 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.8691052 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.216582069 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.964518316 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.890273361 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.882863857 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.879643847 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.954835543 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.878545993 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.954570594 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.954101279 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.973118325 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.915258605 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.866437548 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.866421552 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.877334923 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.876619528 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.87071759 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.910800987 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.869533184 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.870093421 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.214366371 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.883883074 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.880519315 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.871635243 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.87114573 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.896570219 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.871070163 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.876263079 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.965736505 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.875615539 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.936989209 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.309929559 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.252720244 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.87428705 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.87393824 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.870038312 seconds)
  done (took 184.617327612 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.935252885 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.94182741 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.936358857 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.873825185 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.917540753 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.933306111 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.871065514 seconds)
  done (took 15.208323047 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.872015781 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.868158971 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.91616929 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.917594133 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.865053234 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.013669444 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.864843068 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.87458811 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.859716602 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.915088822 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.863747981 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.864146683 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.870574014 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.856499076 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.913470573 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.874658041 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.982258451 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.865162217 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.865171388 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.015312739 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.861263406 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.869145007 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.918702514 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.874542747 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.864487262 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.869726455 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.454772718 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.865955672 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.862407168 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.86441917 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.860531475 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.905934979 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.864094964 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.858426564 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.861845959 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.98001984 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.864675642 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.860837452 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.864615872 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.864375866 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.863307819 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.864698243 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.864098067 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.86159665 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.864136 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.888231803 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.864947952 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.864040969 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.865037068 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.865438454 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.915431328 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.865983779 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.862777517 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.861997853 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.920515513 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.872656418 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.867340116 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.862316593 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.866265486 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.86257547 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.016923948 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.916075379 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.865735902 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.916260451 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.866451085 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.866072232 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.864424415 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.865670585 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.963112256 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.866006358 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.917536967 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.862842438 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.025166946 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.890400386 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.86713499 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.867643283 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.869134786 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.868072428 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.862439363 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.873062743 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.863430172 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.867448165 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.872851102 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.863235653 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.865519251 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.979981528 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.974279403 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.864650907 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.880391142 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.873740956 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.863459053 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.919949548 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.867156638 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.864818984 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.925101148 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.985883494 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.921999778 seconds)
  done (took 205.415631825 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.872150476 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.875888671 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.870808541 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.885633968 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.868259202 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.867169609 seconds)
  done (took 13.035503384 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.870277081 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.869698278 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.867564807 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.868678961 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.868736299 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.868571015 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.869420124 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.869650639 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.873570126 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.866835426 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.868721104 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.870511519 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.870948915 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.869819149 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.870289073 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.868181771 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.870212722 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.866008324 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.867947652 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.870096602 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.026895467 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.870015266 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.869932757 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.869559854 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.874228302 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.868543814 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.878249112 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.869619281 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.868635974 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.875599733 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.874058741 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.871474734 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.870137157 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.875876248 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.874809925 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.870375033 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.873378244 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.871356547 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.86605315 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.87031889 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.87130447 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.870324982 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.870337347 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.872403691 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.872054081 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.874685643 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.875309947 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.877875722 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.872362106 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.871657951 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.872165926 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.869455585 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.871347849 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.871440212 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.872888302 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.876290933 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.875469463 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.871768839 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.872438011 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.872261358 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.871469262 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.87212386 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.872949904 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.876975962 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.867852251 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.871777953 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.872378384 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.876008561 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.871648645 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.871096389 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.871896107 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.867765901 seconds)
  done (took 137.690289933 seconds)
done (took 557.785316501 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.036952774 seconds)
  done (took 8.836118929 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.068662879 seconds)
  done (took 8.915128751 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.286990555 seconds)
  done (took 10.093828563 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.897871897 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.897917337 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.879326958 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.880170534 seconds)
  done (took 29.382723699 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.019370557 seconds)
  done (took 8.825470013 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.894402892 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.871824979 seconds)
  done (took 15.602258613 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.036294987 seconds)
  done (took 8.85037214 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.925094367 seconds)
  done (took 8.755694785 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.876920474 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.899952094 seconds)
  done (took 15.59554936 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.85533004 seconds)
  done (took 8.66103829 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.493548469 seconds)
  done (took 11.399517941 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.889677737 seconds)
  done (took 8.801155949 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.924180189 seconds)
  done (took 8.730633589 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.907256358 seconds)
  done (took 8.713656629 seconds)
done (took 162.964507147 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.874573299 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.877246036 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.874554343 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.877632088 seconds)
  done (took 29.310374998 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.911941919 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.912077961 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.913065102 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.923403632 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.916957789 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.911919771 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.905581642 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.904603305 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.923096364 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.916433192 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.915703833 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.915875941 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.913156628 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.905519432 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.915211911 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.915284523 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.923747646 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.914077317 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.90540435 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.916739678 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.880364361 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.924145655 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.91608432 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.88028521 seconds)
  done (took 47.687885121 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.079967334 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.951611705 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.034310494 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.93341381 seconds)
  done (took 9.806931414 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.931607187 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.933753081 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.945487976 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.984388202 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.008404188 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.943296115 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.907358719 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.902446316 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.888621596 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.935158892 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.009917604 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.927947218 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.029223597 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.88069339 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.067666918 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.881316691 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.881032531 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.933118217 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.984370091 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.997634009 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.882023565 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.933247824 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.937153823 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.933725067 seconds)
  done (took 48.468830936 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.879831994 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.887817205 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.88689745 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.881003167 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.879935697 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.880196678 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.8862773 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.882051237 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.90218094 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.882027896 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.879379446 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.879686857 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.879603825 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.881505745 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.879473886 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.893305066 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.893991969 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.880926516 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.884529816 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.88827261 seconds)
  done (took 39.49853678 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.873897989 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.729770123 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.227668496 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.130651757 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.876995724 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.876195519 seconds)
  done (took 31.525224252 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.895829348 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.88822216 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.882013634 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.939151532 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.021498986 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.888967755 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.882535937 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.894990263 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.930666893 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.946246914 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.903600825 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.911385497 seconds)
  done (took 24.79522504 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.878844126 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.894195039 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.87957775 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.91081774 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.894033928 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.891525694 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.890428099 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.880210464 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.897309718 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.902175735 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.891694347 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.896652682 seconds)
  done (took 44.521802279 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96850174 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.768007997 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.909282568 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.601852177 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.415194482 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.091005475 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.409758211 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.218103058 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.882355068 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.153081151 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.917352101 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.129128478 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.137281005 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.882042886 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.952412337 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.33318459 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.183242258 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.108715388 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.909096181 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.550839628 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.076072714 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.475444159 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.655035752 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.082939923 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.166721277 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.085473674 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.21491209 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.91286856 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091968108 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.996721328 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966009664 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.95666732 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.228789443 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.331962343 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070675894 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964886887 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.608673754 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.672795337 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.942962406 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.728654454 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.899926 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.088707946 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964040418 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.955237393 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.891034278 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.352545698 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410965165 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.961226752 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.662392306 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.95592707 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.965947571 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046954298 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.95964189 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.771782566 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.912565904 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.236248461 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.953419274 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962107878 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.524376406 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.025985237 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.450687492 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.992943536 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.051220755 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.631561429 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.427206653 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.108770836 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.960299672 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.959815997 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.891608921 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.707423546 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.082363678 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.102991105 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.976729819 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.606691133 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2590958 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.014642041 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.043141941 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.244101663 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.618002709 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.993774841 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.185383227 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.914679819 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.891435829 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.817095361 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.892363098 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.22068798 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993566243 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.576594167 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99552762 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.296528659 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.970626073 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981652723 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966864044 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.183267195 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.841986122 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.959649877 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.745963284 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.244685732 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980255858 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.295183169 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.894127458 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.963029211 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.214904202 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.170266783 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.067816385 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.50570669 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.124162622 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.959642621 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.04857497 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.744950295 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.071745341 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.235835586 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.020124252 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.029011532 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0916333 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.918626758 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.260100665 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.985245307 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.136363817 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.017333639 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.22521241 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.278708036 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.210770224 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043095334 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.96610681 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.960406592 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.660762106 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.588231892 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.184705005 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.961262095 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.332070656 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.071459257 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.96298273 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.896704722 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.635022967 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.994846012 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.070805392 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.186092032 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.796321055 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.33706571 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.897050209 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.122742928 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.076966408 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.185100069 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.614877693 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.046323535 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.223978744 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329934815 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.171931143 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074034524 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981915212 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057112763 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984086841 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.271979991 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.319563506 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.966390318 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.966347719 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.663047705 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.034895032 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.970421727 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.967788275 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.76275446 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246108391 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.992086552 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.969864765 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.851325223 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.977337107 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030459301 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.968570982 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.972808085 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.491689728 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.717408795 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.975118517 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.702214005 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.222732378 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.973814295 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.714035453 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.15742417 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.047647038 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.239918848 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.027677757 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.899492258 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.667150644 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.667065993 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.963494263 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.899190199 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.963673671 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975531274 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.975410643 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.164202839 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.245798026 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.012661494 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.711317534 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.08144948 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.975369507 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.968659436 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.96513065 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.465225375 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.038359876 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.455506729 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.076012102 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102002963 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.97864393 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.899052459 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.968758782 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.970196239 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.966051215 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.924888554 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.018979844 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.632143762 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418002809 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.2284553 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.613467933 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.983138359 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.730379491 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.096250269 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.988421841 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.74412678 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921293491 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.063358974 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.034396598 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.977408993 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.724618773 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.737424616 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.545372111 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274658799 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.275836173 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408952773 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.334840717 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.288547206 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.308179125 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.202530183 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.496873561 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.028633367 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.311606289 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.914624061 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.052534504 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.618137652 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.327494716 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983451177 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19585656 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355939012 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.827047623 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.129691988 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.178850273 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001603405 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.782026217 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.996071415 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.171486228 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.123616938 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.798268457 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.196456386 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300429 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.74382841 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.078080832 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.967569983 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.656880586 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.047467761 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.681218057 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.330926815 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.369749176 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.094555341 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465950049 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.978203101 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.41832986 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.322081927 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.161065769 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.156283582 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.905275076 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.979839812 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.979665436 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.96964912 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.960721099 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.92601271 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.267020201 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980813592 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2042853 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.100546564 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.331103838 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.876538735 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.975846242 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.971007432 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.27091031 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.631156261 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.219429876 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.299785413 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.587044233 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.992435644 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.90429073 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.904975661 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.671042031 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.971467946 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.945004893 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.191611854 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.077589161 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.9272676 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.350072216 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282274717 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.226188629 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.984425751 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.246146815 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.249941136 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.706905616 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001216797 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.072127323 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.758009054 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.722710492 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.193784117 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.20709297 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.770273506 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.203435021 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.004510022 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.933169571 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.971246563 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.188293929 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.195615973 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.000616054 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223053038 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.695728875 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.977083915 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343428359 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031591268 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.026299581 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.188395591 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.066579431 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982803988 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053484872 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.982382142 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.984547597 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.983407073 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019054332 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.032844201 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.108561412 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.98609229 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064069648 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.047497331 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.610315653 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.998737045 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253201167 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335691526 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.304660353 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.036646238 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.973708704 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.975839662 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.908341398 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112111984 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.418862028 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.246745445 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.10453902 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.115523499 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999612038 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.751096605 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.242277421 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.284003931 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.248837102 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.869877234 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.974342686 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.066330835 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.198804408 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985415106 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.185972193 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.200856873 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.287425392 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.442229197 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.107467587 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.411031437 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.248851301 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.34908244 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.975692446 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.565430124 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.986787031 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.7222553 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.015076397 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.986417589 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.263364124 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.986059012 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.355014278 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.997177451 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.170688434 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.492614379 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.649048358 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.341847235 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.9759956 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.036128662 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.255814187 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.367461381 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292093315 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043708512 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.98650463 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.673130438 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113543716 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.965625678 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.248099745 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.976162908 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.187463374 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.69005782 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.986968584 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255210834 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289713771 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.975365952 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.971146014 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.046096752 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.987295695 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.202278349 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.234705604 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.228125767 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.987508224 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.977944041 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.795940249 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.252505277 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.035285013 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.912624558 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.98059851 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083756353 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.225584359 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.999466539 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.494351763 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.679812471 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.269794509 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.89469519 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000558174 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379593136 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.413304587 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302540899 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.539949032 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.214878222 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.536589639 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.833320117 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.349625267 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.983702163 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.379930912 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.354287808 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.983896948 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.472737376 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088037146 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.249167626 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.300349475 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.99435873 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.774730018 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 4.024243288 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.202744163 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.573073549 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.923576036 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.985912747 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.040832076 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.978697115 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.110645818 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.990615643 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.99445845 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.853380041 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.815968219 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.471658383 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.984547791 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.965347927 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.197530284 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.978088972 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.100586928 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.136584765 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.984246632 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.704210288 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.273542022 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.236248382 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.560555419 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.058941833 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.985857025 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.982139001 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.910642995 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.178372913 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.180541266 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.272883118 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.413281816 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.102826611 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.985432574 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.197490106 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.193923835 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.959330033 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.142752097 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.457155107 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.104900997 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.901350757 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.695947135 seconds)
  done (took 1733.131663779 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.999109634 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.99487279 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.992293847 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.990256391 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.99993048 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.995685812 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.042145499 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.072998236 seconds)
  done (took 58.003392717 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.982374041 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.212477652 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.991648871 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.983075052 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.015379745 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.983554416 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.189806288 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.996105852 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.011044226 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.994081662 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.984324979 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.989173061 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.320861205 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.010785413 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.985105843 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.00443179 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.021878976 seconds)
  done (took 76.599265476 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.98553784 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.342646684 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.002824597 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.00313402 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.864705444 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.987830082 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.979285634 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.023571446 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.988471514 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.162026548 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.325637307 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.998840631 seconds)
  done (took 91.581789359 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.999258348 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.990151247 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.990585675 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.991752834 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.991791008 seconds)
  done (took 11.888104254 seconds)
done (took 2248.638830868 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.402499301 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.208942402 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.222917487 seconds)
  done (took 6.350774652 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.132475582 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.178911669 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.298897261 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.320116428 seconds)
  done (took 10.853545514 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.272548236 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.353983749 seconds)
  done (took 6.54130859 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.319073996 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.011416746 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.371828257 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.984122097 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.98499626 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.986318951 seconds)
  done (took 22.874870237 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.986640944 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.990136458 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.986893951 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.991476684 seconds)
  done (took 9.870243722 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.966133256 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.70378901 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.970130437 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.983999452 seconds)
  done (took 21.539627878 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.735777303 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.385108782 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.730548516 seconds)
  done (took 9.76687627 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.61940177 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.58557642 seconds)
  done (took 10.120439409 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.240882897 seconds)
  done (took 4.155791743 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.015912196 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.258003158 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.526004905 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.541014571 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.631854963 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.227949014 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.336146285 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.227419984 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.430883123 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.475737025 seconds)
  done (took 26.586715914 seconds)
done (took 144.684509357 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.6253939 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.014891069 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.214679141 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.364400177 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.220030969 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.208109921 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.20313378 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.367187396 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.912606394 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.877999465 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.355496135 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.221632452 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.157304779 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.005492899 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.162262016 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.003692215 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.216356074 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.44040037 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.072037969 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.259895729 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.216849046 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.999358081 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.194257408 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.014632869 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.222710875 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.138225345 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.545513136 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.00841618 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.207982655 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.556504428 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.141415861 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.395611048 seconds)
  done (took 172.462630024 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.98711774 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.987057722 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.987491636 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.987708947 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.341865683 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.98842113 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.988918611 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.987624651 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.05532918 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.040327832 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.98930376 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.381819808 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.988165645 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.988460594 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.987901357 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.987815453 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.222704574 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.989254353 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.988454486 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.987030835 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.989746671 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.193315965 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.98937606 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.255814883 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.165258411 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.990667274 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.98903598 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.988553545 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.987873547 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.987503753 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.989857204 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.990812189 seconds)
  done (took 211.30124892 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.987619126 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.98991322 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.991120401 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.990633788 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.991151039 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.992785068 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.992992045 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.990516694 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.473358132 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.465407473 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.989696716 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.990155975 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.991080489 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.988398623 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.99585567 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.990015554 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.997337853 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.998883686 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.001250943 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.004081169 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.008326227 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.644957083 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.008774039 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.647652879 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.003271017 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.00386761 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.989828196 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.008351872 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.011547427 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.006385616 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.00959289 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.990482715 seconds)
  done (took 224.06606983 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.180297512 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.996399283 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.998007249 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.909356457 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.998101931 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.997985812 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.990437849 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.180159547 seconds)
  done (took 20.197329515 seconds)
done (took 629.952905238 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.508401902 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.348522986 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.180377953 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.022899156 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.267561254 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.058055844 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.017417952 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.088900198 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.743785227 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.092814971 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.707530587 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.042672314 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.803037639 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.048809402 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.137510906 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.081037497 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.610048081 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.7066278 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.199739716 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.08590957 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.192713129 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.982983374 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.107954452 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.77731871 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.828453529 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.0277815 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.187672438 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.616500163 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.030508302 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.179176939 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.787070558 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.40729061 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.035036309 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.017078155 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.078260457 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.051765781 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.354749593 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.034038717 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.143874964 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.78509506 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.094125427 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.626730788 seconds)
  done (took 109.021861226 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.988045011 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.986126303 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.985881396 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.986715204 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.987010292 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.986367068 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.984825117 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.984638341 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.986139126 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.986052455 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.985015924 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.986289791 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.98573188 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.986971372 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.98626176 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.985491723 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.986235897 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.988681311 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.984487768 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.9855723 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.986625526 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.986000968 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.001985479 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.985911666 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.988166265 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.987322871 seconds)
  done (took 53.595277628 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.000082527 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.156113036 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.245017794 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.02268899 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.000062915 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.003880019 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.020235584 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.006227952 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.002925208 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.003328318 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.112397051 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.008213273 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.022309724 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.244009503 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.020239024 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.001817558 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.002866178 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.002892166 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.162349117 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.019386903 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.02222882 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.007551042 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.023366418 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.016691124 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.003588993 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.002371795 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.005667107 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.496043576 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.011902685 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.111704083 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.060427494 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.030240436 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.414155623 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.252792946 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.061489891 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.01591246 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.001983506 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.113526794 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.010380319 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.003148533 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.021211498 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.008788986 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.242349991 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.504154543 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.018111421 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.002848852 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.503688125 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.126670396 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.047787671 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.014650898 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.245196442 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.022693817 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.006116512 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.004802884 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.040410687 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.008428546 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.004136563 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.351407835 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.016740501 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.023166509 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.012738586 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.005216158 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.170606906 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.015964737 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.156513976 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.018300293 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.010383828 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.005073831 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.245229875 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.023736348 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.500312069 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.022118962 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.005017663 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.114938086 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.167324608 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.536748587 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.018852278 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.170407043 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.433421633 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.033129657 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.014375572 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.483957551 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.039168374 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.016825912 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.007030614 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.006704882 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.006008702 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.05128256 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.021919389 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.439686224 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.508335391 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.373520724 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.034198953 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.023745368 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.005731715 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.355526724 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.016427634 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.006600832 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.239872627 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.516210927 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.021417458 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.012853258 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.488513977 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.024529017 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.027208266 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.019178243 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.248693277 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.024023219 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.051599103 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.006348156 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.0131268 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.009067645 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.026200095 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.01727381 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.006601665 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.48203304 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.138030529 seconds)
  done (took 248.315518798 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.002878913 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.026712938 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.00214019 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.029866854 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.999721795 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.005947895 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.999683034 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.001319448 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.006611734 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.00053005 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.000113025 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.999740819 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.012471524 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.007028052 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.122393846 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.009212702 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.61041703 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.002672109 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.002166721 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.009479611 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.748153351 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.008726607 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.00202017 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.007687936 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.014768011 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.001006249 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.006693711 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.10794435 seconds)
  done (took 171.684271343 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.008819022 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.12587273 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.029903145 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.037436329 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.017495088 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.006810624 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.033239842 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.024444042 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.013801862 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.00638642 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.005425753 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.070820128 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.01945961 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.108691604 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.04176302 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.039550572 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.112524865 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.017902931 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.006508842 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.007604042 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.037648714 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.002902934 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.07027606 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.136204747 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.032354687 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.127524871 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.014632148 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.010611225 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.009425686 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.127082712 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.025944439 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.070192127 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.038167352 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.028082396 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.131016998 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.128061245 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.117854842 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.040643605 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.01415164 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.007351437 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.007018964 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.99616105 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.12884877 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.029791045 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.010584521 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.118349463 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.030634308 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.011409704 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.018499562 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.008333143 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.02310377 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.028912131 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.078665129 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.148288942 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.046320366 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.036208271 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.035915274 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.304521271 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.021935927 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.110470127 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.004659835 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.129969036 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.03390135 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.998190631 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.011067222 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.016652192 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.040412065 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.042840313 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.116151312 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.020995995 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.110396861 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.04810027 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.017034845 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.011227126 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.012403111 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.128378338 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.132039441 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.048431901 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.049658254 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.043041122 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.006275364 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.011536258 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.998987449 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.029447316 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.015217021 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.126382891 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.131657411 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.020982182 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.013929791 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.01301968 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.013615691 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.037669087 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.140063401 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.049796968 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.108205758 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.082411627 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.092170121 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.030452031 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.024064363 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.015452156 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.076658493 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.032116327 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.024246448 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.353392295 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.083553885 seconds)
  done (took 217.583799817 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.456096946 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.068728619 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.070707091 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.340298595 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.441801561 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.876762592 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.063808163 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.061827332 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.086497073 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.249843647 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.137076622 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.08114223 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.049011559 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.035148901 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.060690053 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.085308558 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.071823308 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.40234025 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.194393003 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.150510361 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.044065172 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.346042293 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.381841166 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.463539836 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.098076726 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.39135402 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.743725943 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.203713934 seconds)
  done (took 65.601443287 seconds)
done (took 867.725901712 seconds)
SAVING RESULT...
DONE!
