cset: moving following pidspec: 330
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.320430343 seconds)
loading group "string"... done (took 0.594926134 seconds)
loading group "linalg"... done (took 7.250693375 seconds)
loading group "parallel"... done (took 0.169017078 seconds)
loading group "find"... done (took 1.150836771 seconds)
loading group "tuple"... done (took 2.038196097 seconds)
loading group "dates"... done (took 1.295303787 seconds)
loading group "micro"... done (took 0.239641351 seconds)
loading group "io"... done (took 1.010092069 seconds)
loading group "scalar"... done (took 39.859795789 seconds)
loading group "sparse"... done (took 12.957229802 seconds)
loading group "broadcast"... done (took 1.020631812 seconds)
loading group "union"... done (took 13.791140339 seconds)
loading group "simd"... done (took 4.751500906 seconds)
loading group "random"... done (took 9.606295353 seconds)
loading group "problem"... done (took 2.025935996 seconds)
loading group "array"... done (took 22.960386043 seconds)
loading group "misc"... done (took 2.010554725 seconds)
loading group "sort"... done (took 3.52016093 seconds)
loading group "collection"... done (took 18.917551043 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.527162282 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.13986931 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.115203886 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.136319193 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.182816692 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.130814689 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.14387104 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083816277 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.012659831 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.165074064 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137256959 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.471666317 seconds)
done (took 5.008917818 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.214587792 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087139429 seconds)
    (2/2) benchmarking "String"...
    done (took 0.097214374 seconds)
  done (took 0.882355926 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067004586 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126254993 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.080518058 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068136655 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066815669 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082141237 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067953331 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066033778 seconds)
  done (took 1.271030573 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074228412 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068761391 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085264582 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068068245 seconds)
  done (took 1.008745847 seconds)
done (took 4.165438007 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.893536462 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.239589323 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188141939 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.450114766 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.150195065 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.186998099 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.675093488 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.322328565 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.213315803 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099710082 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104990275 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.374890103 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107638789 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.668466989 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074187661 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.104362436 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.158560043 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.42950286 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080174877 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082211259 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104159392 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143753065 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.102623762 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078818366 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.166397216 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068704243 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.145641271 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.095119729 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067497318 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.240925192 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.190178173 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.697246782 seconds)
  done (took 10.453077573 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101150002 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.117988613 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069162283 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140935154 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.102831225 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.087417942 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071546721 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084136794 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093384961 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.159489202 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.116445648 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.106556984 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.083623261 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070910177 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.101277755 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.212609644 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.105644251 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084913322 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085446484 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075373464 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120725603 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.08374885 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.094728284 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079173071 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.153331028 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.197141626 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113979244 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112397319 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070723252 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080950156 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.133165725 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144393045 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06757033 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082218756 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.141312718 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.112619408 seconds)
  done (took 4.581124768 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.022469957 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.161670671 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091679378 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.151029839 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.084264815 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108771485 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082419558 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098432467 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.243706377 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.150554699 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.453903696 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128092589 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100857011 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066800068 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082255054 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067662644 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.489707753 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.144685481 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.119194813 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084936435 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.088980776 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070311709 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364566455 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069455731 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066691775 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085905031 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.06002358 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.103003008 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148432038 seconds)
    (29/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.093440907 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086981601 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.177917604 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.105045462 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068919493 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116268141 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.18008801 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096829941 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121830549 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080776631 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065655214 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.166339433 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072851689 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.081717004 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.086457507 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11872493 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118572482 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068060789 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081279845 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.178276636 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06602381 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.098035903 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.868331082 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.164892495 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078851461 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066954934 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.285483173 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.082703386 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083183186 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063338851 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.25855184 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.148047428 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066329494 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.08223475 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065177279 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.067990377 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.084946498 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.378806572 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069366403 seconds)
    (68/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.06520512 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084909795 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.0790865 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.73493981 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071335244 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083225723 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075070405 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072582 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101387773 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.064331099 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.085418514 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066902211 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06591908 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084682699 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.097696493 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.200120514 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067218095 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065083516 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.079999962 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085733198 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109320273 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070447848 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065195788 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117213986 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066958904 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082452535 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.099182299 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083039895 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.098561553 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069492087 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.127418964 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066951282 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.136918572 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066741603 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.110217606 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.075848537 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112988659 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.092121404 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067199803 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.150944003 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063467467 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079850511 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.065367049 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.063809056 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.083883254 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067184686 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.097202859 seconds)
  done (took 20.803779357 seconds)
done (took 37.573699689 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.297125501 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.091431441 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.089023996 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073813103 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.090350451 seconds)
  done (took 1.431593523 seconds)
done (took 2.189831466 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.121361166 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11497152 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.062842748 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111070276 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063248234 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115705946 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112234624 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080364738 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116503854 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063621219 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110888288 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063016031 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062661508 seconds)
  done (took 1.988471813 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083459331 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085006888 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086298559 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082737747 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07925979 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084754514 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080445828 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106390707 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08152252 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089076692 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064360384 seconds)
  done (took 1.67955064 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082830127 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085045897 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085921552 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081908263 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079442263 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083139617 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081085389 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103037523 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081633738 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090027836 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064666846 seconds)
  done (took 1.677217248 seconds)
done (took 6.091158971 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078743804 seconds)
  done (took 0.830326955 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.689699909 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.32182827 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082309045 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.134997714 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.226021814 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.150914647 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.422551264 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.107995294 seconds)
  done (took 10.065806844 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.104555864 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.084691203 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068646826 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.088015293 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070549914 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.085518317 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068207821 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071741528 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085803656 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.06854766 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.086121686 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067589872 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.083802017 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.06902626 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069545119 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085326673 seconds)
  done (took 2.076658084 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094532127 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092837846 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.08992102 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075396841 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087695069 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072225585 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.090291848 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074199978 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.085933366 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.0718966 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089868776 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074076962 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.086943657 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065703441 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.089554864 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075505597 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086135014 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075497198 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.090291314 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076005688 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.089817109 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065259119 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087133786 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075038433 seconds)
  done (took 2.823976758 seconds)
done (took 16.553455078 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.130252704 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075537518 seconds)
  done (took 0.966331894 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083828946 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098764959 seconds)
  done (took 0.947937799 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083202926 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.080527599 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088114219 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.092646079 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080728718 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065808697 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.101178496 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065942802 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080305234 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065930535 seconds)
  done (took 1.570619132 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069179793 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.092829201 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070010409 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098241771 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073764111 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.079324001 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073094301 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.08330814 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078203052 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078130186 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070470483 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.098086294 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070563588 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.099505378 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073276831 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082505986 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.086202986 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067895784 seconds)
  done (took 2.20967764 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067236998 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068236823 seconds)
  done (took 0.901324115 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068786038 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065564682 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082371425 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067782568 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079547931 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06512109 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.07979791 seconds)
  done (took 1.278985071 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.40482059 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.10954683 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.247294976 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.089183725 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.102167395 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.260930112 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.08194444 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070131537 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.08693227 seconds)
  done (took 2.260042433 seconds)
done (took 10.899317737 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080600963 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086139001 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110454707 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.415477283 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.104616561 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066429661 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.140482639 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.203793741 seconds)
done (took 1.974706874 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.126794024 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.605365417 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.399284435 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.210451967 seconds)
  done (took 1.989181807 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.369614561 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090664453 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073995801 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068244207 seconds)
  done (took 1.377363259 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067097204 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070250926 seconds)
  done (took 0.914498512 seconds)
done (took 5.180725684 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067442612 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.105299097 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066459843 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063265476 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.082763163 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063077344 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063144881 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.079209616 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065161493 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065502787 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.07788043 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.068357026 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.080584969 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065310512 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063355877 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078497954 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066503533 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063311798 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078518672 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063189677 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065676247 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.078787519 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063820842 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065412404 seconds)
  done (took 2.512005054 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085435845 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.081807588 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071414261 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086594971 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070273692 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087113467 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071075454 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066630808 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086998746 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068582297 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084863434 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069481923 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.083351255 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070219123 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083845873 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070173111 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086355346 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067020234 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071942292 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.085652737 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071493056 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081775488 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070520281 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086218363 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070604809 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085210952 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067864736 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.081919704 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071056344 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084774575 seconds)
  done (took 3.100083917 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072065015 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.0654967 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.082248046 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072161202 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065159314 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082509461 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064937726 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.081834903 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066392243 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065370203 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082847793 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065125736 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065179005 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.08158855 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065893296 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084667885 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080941627 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064603506 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.080535724 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064973932 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067506787 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079894407 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063578254 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078717775 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.0638905 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062802393 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.079777423 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062974698 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063960424 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079197329 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067015421 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066653246 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.079817608 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069951581 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.082887393 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063724632 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068016012 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078557525 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064648478 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062900224 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078981244 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063391069 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063762829 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.085684674 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063986722 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.081616387 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064123502 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065081176 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080012194 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06682392 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078752675 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063310553 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064971235 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.079526086 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067621268 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063372837 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.079669465 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064067947 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.079825709 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063043152 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063275096 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079032779 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065701596 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064022673 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.094197032 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070262881 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.078282841 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065480595 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064732696 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081994728 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066282169 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076257739 seconds)
  done (took 5.925889007 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.116990773 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089944932 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081617054 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065986853 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078149204 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064121056 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06706993 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080392501 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065549838 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085491068 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063880846 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064659007 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081146622 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075990929 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079689712 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065469539 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085118685 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061964401 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064064165 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08294842 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064007392 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.082399929 seconds)
  done (took 2.448863776 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.18416224 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085920927 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108346742 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089252571 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083492962 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073506759 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.085075184 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069669274 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069422235 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083881419 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068208625 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084917749 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068066043 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083711696 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067991238 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084047268 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07004552 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08394594 seconds)
  done (took 2.327337189 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078585453 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066440865 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105222376 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065884413 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.082276647 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068637382 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087116225 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074140858 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083806916 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06659475 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089633443 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06836091 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.083626024 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066715141 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068078661 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081590071 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068774 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081240317 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074084561 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086725391 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070686822 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089179384 seconds)
  done (took 2.492334894 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08120505 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067756345 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.099795979 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084657714 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061578283 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064574661 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.08822375 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066453162 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.087757914 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06763401 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065569193 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079893775 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.07103795 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.08194853 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070599475 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082027406 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067899108 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06567373 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084190924 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062222804 seconds)
  done (took 2.283675122 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08599411 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082407794 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066807707 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090768373 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06685927 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082596962 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075242695 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.082733369 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067517397 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106579261 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067411649 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084006234 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07546896 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.087871162 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067430192 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090704327 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075624119 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091145619 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067314537 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083400682 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.216681091 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067638593 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089954351 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066567474 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08276418 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066572197 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067198115 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088140365 seconds)
  done (took 3.125346528 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066183001 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06567387 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079567184 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063400779 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063631229 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080389574 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064162694 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063462539 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083030283 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064279643 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064943546 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.081108443 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066805378 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.081364444 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066205005 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066101224 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081541348 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064090877 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063965118 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079575106 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066391086 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066296841 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081924563 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064261211 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079849832 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066233582 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063972264 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.079079339 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067070052 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063992558 seconds)
  done (took 2.894989069 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077291627 seconds)
    (2/2) benchmarking "in"...
    done (took 0.089684171 seconds)
  done (took 0.958353971 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064854037 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080328165 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080117546 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070363293 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086223252 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06696655 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.089891475 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070677019 seconds)
  done (took 1.397664448 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083712253 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078309932 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084698966 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077114461 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.092439289 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084307058 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.155028455 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.083200758 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072750556 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.080529254 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.08024823 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066685799 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090134053 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067054843 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090110153 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073838019 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065307347 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089361716 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.06955827 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.081636264 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068341644 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091357886 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068500384 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063420695 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084662869 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.075573281 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.093056574 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067735294 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085524902 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073349579 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087552989 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060217761 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066648079 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.082366571 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06517196 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.092404988 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080934785 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084965117 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074412694 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067154447 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092339613 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061221964 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086655828 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073142161 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091387699 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067893901 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.082566678 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061674352 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063932302 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084308038 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061500238 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066069704 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.077416884 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07283617 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.085178189 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076497355 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.082967408 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067795773 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068796 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.085662527 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072351774 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.084245114 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068426217 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065666509 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091846411 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070523119 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091159894 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061750421 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060588586 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080921519 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076448206 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104347757 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071746088 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083087557 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068081948 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079625674 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069128784 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067311449 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087483566 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072538711 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082542874 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072643206 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089532166 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066937852 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068758346 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.090168576 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064853885 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084648238 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064402946 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098062508 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066161411 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080542335 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064215289 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075930562 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085986725 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066860328 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.08042749 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072697252 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061092007 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.082414601 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06788632 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082903953 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076359229 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087628614 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071665315 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.09062511 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074452231 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066469547 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085451441 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063884806 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083450322 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065354234 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073115243 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076930901 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069398265 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083145236 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067102618 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090464503 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065022183 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066575242 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089273443 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07234649 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080992248 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063172727 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068936853 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082362861 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070004603 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.089935729 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.0656734 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061219786 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.078009615 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070426544 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082278713 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070532507 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087306164 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069407385 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061972046 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.080492081 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071307148 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09115096 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067021002 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.08361978 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072674648 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067723943 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082128362 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073299079 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085234895 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065549702 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071313847 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.0839429 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061595158 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085883398 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069083527 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06486823 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086711482 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069816949 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.084853814 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067712033 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081674645 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071279898 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066974277 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.08188561 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066179989 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081210068 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076665436 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.06868057 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.07847593 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063908802 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.088942796 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064958563 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065347259 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081849962 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069210649 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083487999 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065062066 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065333003 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.084550256 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076750293 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086633927 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066778095 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087969596 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077338402 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08219327 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069044413 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065021556 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083717585 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067065626 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090903982 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072054428 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088144492 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070202896 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06280657 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088045956 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073927077 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081416281 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064642926 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064985329 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086471438 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071392845 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086066333 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067407638 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08067597 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067796436 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068524904 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.08585733 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066348075 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081262446 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.070811357 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.082375748 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072835663 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066303659 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092165927 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069250056 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078441644 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070538036 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08093811 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07272526 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061563014 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.081009915 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066156164 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083668706 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065457365 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069524727 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.07690805 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07320017 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090183338 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066302132 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066258011 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.082364951 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073582653 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.08389831 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070215589 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068653701 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.088911973 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076227529 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082746865 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069608875 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093047992 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066353581 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060385214 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.088201828 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065517457 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.08150766 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065171453 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064113693 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085372758 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074193288 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.089893932 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061069704 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085041354 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06548652 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065384097 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078648465 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071485229 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.085645657 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066848517 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072869795 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084695642 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067301569 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086767308 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066483867 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066632224 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084548466 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069387512 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.08352335 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069754045 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.0823768 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069785509 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065291377 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080742489 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.06835178 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082558538 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06681807 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071972549 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.08321874 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067441884 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085457216 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067116343 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066984162 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084107433 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066078146 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086191217 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067990469 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067174148 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085562562 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062408643 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091337391 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067332192 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074960693 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084714343 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064077928 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088525642 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069749841 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.088177622 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.068296685 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067395317 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084820677 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067061924 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.0857123 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072839932 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064305217 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093591533 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073901119 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084052821 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069366893 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.08362514 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067509114 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065255116 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084833353 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067799355 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.083532639 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066553544 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07121836 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.084920174 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067538469 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084948881 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067717441 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066092876 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.084233784 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061216937 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065585698 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083382955 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067068634 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092002219 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067090742 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.082849567 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065967691 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067032101 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082831039 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063155396 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.089934519 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075393619 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084179684 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073807907 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082502459 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067567158 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076121085 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.07706972 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064681162 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081101845 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064596524 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073579237 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.083914059 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075607761 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.08323441 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066036828 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063342747 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083457327 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065190009 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.078155351 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064324432 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06982603 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.082233636 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065733764 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.083205302 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069889558 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067196601 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091832594 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065983129 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084233725 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066658721 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063220569 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.082626625 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066003122 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085743386 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067820134 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064005345 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.081657975 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067590165 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.083730519 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067855696 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066502719 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.08462994 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073779161 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083168476 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069537523 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068968132 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.08074815 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069378761 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082355451 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066382586 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065662121 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086311221 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069804482 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085030457 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074898982 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083107834 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068169583 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066710174 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080879815 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066471593 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.083186127 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066575565 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065878769 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084031013 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073989259 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081346245 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069409736 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066404223 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083196637 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073195855 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084564037 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07027133 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090410175 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067112172 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068193697 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.090927458 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070531875 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086770685 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067540944 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084117345 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072368826 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066003536 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.089500273 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068028324 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.08511485 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068408808 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064787921 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082842846 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067805522 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082709555 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072916096 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066949641 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082415507 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066177834 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081367591 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06820196 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069254622 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091293813 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069493545 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086699225 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062880629 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063121047 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084739411 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064750107 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085362413 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069552132 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071844123 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085742129 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066824883 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082274203 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075498366 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08891881 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070012152 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063848214 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.087000318 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067861589 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086210438 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067627839 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066247697 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08555945 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070795736 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.084731858 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066521486 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073409645 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086528604 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068083962 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.084725529 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068275954 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065943677 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079013726 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067503526 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085541709 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07168835 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085363633 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066500769 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075894659 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.081171276 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067624927 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086322211 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06607677 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070623967 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078840778 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068034073 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08450252 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06824248 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061185146 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083277833 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064953052 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085195231 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066421588 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061587095 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093725509 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07508248 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086989451 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065681635 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082559358 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06190071 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061675956 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.082639767 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067504736 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.084392344 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076225692 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065299138 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082584761 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062288187 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08319393 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069524529 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069597357 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081019187 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062009619 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064483083 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.087518797 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072085186 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081979495 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066459063 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086322567 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.06923179 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064447406 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087104967 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064279034 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087409067 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079577171 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084096802 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066687073 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072439367 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091174958 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067328477 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079389195 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06703377 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068680891 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.084192054 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068198757 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084612728 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080749485 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086576208 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066508188 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065128998 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.086409827 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06659587 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.091267497 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067563366 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.083818204 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071205269 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068109084 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092306452 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069319819 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091313587 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069960167 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086686422 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065871839 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065890594 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.081774573 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065634257 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.084701473 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067352279 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07104977 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.091963062 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065043123 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094306899 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074539613 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.085993088 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064055952 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065246371 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.083330167 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062551008 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.084166759 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064895265 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06478697 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.081986656 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06582549 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.084167638 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073087462 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066648211 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085124421 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066283193 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.07816119 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068810755 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068543914 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084684919 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063885248 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083400783 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068374125 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07000168 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08672451 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064845113 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085234914 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068099137 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066941583 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.078915486 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073650107 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082613415 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069026606 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065582492 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083874377 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067638319 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086696528 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072293606 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084822888 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069193733 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.074987694 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085521638 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064334528 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.081082465 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071982125 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064308979 seconds)
  done (took 45.740627928 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107186823 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081118108 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062964902 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079109097 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073954361 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081156819 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06199387 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063324728 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080802972 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.0655866 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078772139 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06225507 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.088230176 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086084518 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0915495 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066152135 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080265887 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063031795 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079418201 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063105844 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088473736 seconds)
  done (took 2.433061172 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074934048 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.08834473 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072473544 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.093102268 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067300431 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.088442539 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072512903 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087994209 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094028422 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068225786 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.094098181 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070816766 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.084135901 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067137628 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0842847 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071089704 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.093701611 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068247238 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.08728199 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073375744 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08840125 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072634697 seconds)
  done (took 2.59081255 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067926313 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065490761 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08513874 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061536948 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064856412 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.079074566 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070447716 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.08184285 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069513329 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064152829 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.083025218 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.073467242 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.084670359 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062239239 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065710199 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081845485 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.129239118 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069702225 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065237603 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.085551554 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06187247 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085773176 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062842775 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06183734 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.083174624 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069906121 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.084219598 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065055434 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066054466 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082216614 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066730143 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081158336 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068312666 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066202162 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083161944 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065477731 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065784916 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.082881116 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061807797 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.081101835 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066924387 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061952929 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083724956 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067652919 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06288986 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.082052901 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067904557 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.083992406 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061423705 seconds)
  done (took 4.428504557 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.085365233 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.129042991 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086758528 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091325491 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.100261226 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.091370527 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069734754 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109781903 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063225685 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082969861 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081320768 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.102097564 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.084346038 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072241543 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.089809909 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066692725 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066424373 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083243645 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069965487 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084066968 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069875999 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090992972 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.09869412 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.07963818 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.087808 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06618332 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.083366828 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071318163 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.096605719 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071479939 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.087925539 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071985027 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.098927554 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071420648 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084099415 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067928378 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.100735779 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.083621882 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069847401 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063110326 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.08634429 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070061591 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.090596313 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.100650418 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066595879 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070259208 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084174693 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063130334 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.096584209 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06824051 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.092603487 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.098645723 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070438899 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084660087 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071036449 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.098329267 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066955767 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.081743611 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069253294 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.096489282 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.0646295 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087115008 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080441704 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.085580612 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073366437 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.098171599 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07039416 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087721333 seconds)
  done (took 6.564889368 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075026029 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.090707054 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080638578 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098791216 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090112871 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07241336 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09106622 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072319003 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.089622912 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078045639 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090669922 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110612287 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.0688455 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093263052 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072768015 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090329577 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07258242 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091042694 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072033459 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091896097 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.090267794 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08005648 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090589147 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.097781969 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.101912644 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085715968 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072681813 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.089921139 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08035313 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.092367342 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101056469 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07358808 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.089975048 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.098968171 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.084437552 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.089564583 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065952699 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090953262 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073144949 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.089949802 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068050058 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.098550658 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071680554 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.086554242 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072258643 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090193928 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.09893692 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083625606 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093717552 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.094408004 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072440638 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.098283266 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072251051 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090666054 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.0983281 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105658852 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09950308 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098934567 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072420589 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099343061 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.098379728 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.105681574 seconds)
  done (took 6.253014815 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087799382 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.093196371 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.096287884 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.0619703 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064358895 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088581066 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064389322 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.082096405 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076187291 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.092654574 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077676151 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088003736 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072335312 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095814229 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087803916 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073228176 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088449109 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070168616 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092703242 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070226901 seconds)
  done (took 2.470463141 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076544024 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.101928965 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067237378 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071176559 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.088152929 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071825662 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.087532017 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069215371 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084406194 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069672594 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094960232 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076816185 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08459413 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072545195 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.094171115 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072379055 seconds)
  done (took 2.136140494 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.079124564 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.094972397 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081766338 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085619609 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065234452 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081620539 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067195981 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062246677 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081590232 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.08114245 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085352514 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069582834 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.085403185 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065767355 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062333378 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087586999 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063583701 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082536771 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066907127 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.099203863 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077645321 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.083278901 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067604613 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067306158 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.085802101 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070923915 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.085094243 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064675166 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08268547 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067330025 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085118003 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074160701 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.081088061 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06529572 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06433725 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.081715264 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066525311 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084444859 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.06934592 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065336258 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083644621 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065723206 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.083688564 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067416597 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080872547 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067200638 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061980078 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090062993 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064412577 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.08405406 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066574383 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.085466531 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067703629 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.075347571 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088562722 seconds)
  done (took 5.028475797 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081903346 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069061358 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080727347 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064180608 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087295955 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067940619 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06871574 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.086865635 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067549188 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082777552 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068399696 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.086938165 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068389955 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069022205 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085815676 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069843197 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080315165 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068863973 seconds)
  done (took 2.215605547 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073451643 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066585242 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092287787 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066649927 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084694999 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068734361 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06249632 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.083139329 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06517057 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084521597 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067333151 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067528315 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083317981 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069706067 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084579425 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066200387 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.0683875 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082408732 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066913927 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.079877924 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068839109 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064926545 seconds)
  done (took 2.481146908 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073704945 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.093282513 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.16005762 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.106410241 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.081321978 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.097571469 seconds)
  done (took 1.474889833 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090825582 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098038519 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066913203 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105381225 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074541609 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086405839 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068000824 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086575345 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0773545 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099928277 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067952312 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095461451 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094294747 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075825245 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092762057 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07378494 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086773062 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067526337 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085008042 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104537198 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068960649 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094030314 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069311964 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08633118 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068215105 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094118781 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076437169 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100354177 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085843538 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076814402 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091870394 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067863551 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095706274 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099392377 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070717007 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094647806 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068271636 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104674205 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073207257 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094720568 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068985438 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093166273 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094168808 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073365979 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094861064 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068097234 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092064774 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06756494 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087735494 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111899402 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074175733 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095448075 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093279305 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077940892 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095013504 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111811362 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081887832 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096117934 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092324122 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081780458 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095382771 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072755789 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096047956 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100263031 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074375071 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095803147 seconds)
  done (took 6.529469349 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085735014 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104740726 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068909731 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100842621 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094026914 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068708621 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086776561 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069207687 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086258854 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068723392 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127293823 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069546337 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096184612 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095155691 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068928049 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086300309 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06911809 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095215584 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068042728 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112053251 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086312485 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076178667 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09535417 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095263463 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082756305 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09311643 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068755492 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087046365 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068214097 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086892267 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072513395 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087582079 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09560244 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068585645 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094475027 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069751703 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086426497 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073741523 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08662018 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074602478 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095746886 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103789 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068981577 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087447658 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0819444 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087336452 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067662994 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086938125 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068930149 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087435831 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10059118 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082306252 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100727547 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094536218 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069158318 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087599715 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069830563 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087135025 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069420696 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092365341 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076579232 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08744324 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110850617 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069564852 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087036711 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076624352 seconds)
  done (took 6.433912554 seconds)
done (took 127.023490119 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.208333827 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.187602266 seconds)
  done (took 1.260678611 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.06993344 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094744525 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.097542434 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128330746 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085867648 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100200603 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.117680983 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078407295 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065737579 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085391632 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067136107 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087359836 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132673033 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066462481 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.085101078 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.06900373 seconds)
  done (took 2.300327071 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103400106 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.195235708 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107843016 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065293695 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098312065 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078383345 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084306155 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076663559 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093724124 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066022704 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077526601 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094703033 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064479147 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.094881911 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074172344 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.096220249 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065336988 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.096632823 seconds)
  done (took 2.505060636 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104708617 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.139921625 seconds)
  done (took 1.115179976 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.198973687 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.121816648 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.200749154 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.407135994 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.203299742 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.27499579 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.170561181 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.17049484 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.156556674 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.168219178 seconds)
  done (took 2.939168866 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100014936 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.168479419 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.308024214 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.136976747 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.085478182 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.114714389 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.137201762 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.088457875 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.100706617 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.098696278 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.0803183 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096988698 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.096307616 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094039137 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074311246 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.096803173 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.119487426 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074741706 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.095249221 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076255933 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116609793 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066696376 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.093222556 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07405096 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076830027 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.097086988 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065285613 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.084779655 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075341134 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093325252 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077668848 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.113515934 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.09593899 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.12951101 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.081270371 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.129436054 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097313335 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071331553 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.094133931 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.071820444 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.096588531 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.07651752 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.102774507 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.094950376 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066168655 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076166062 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.084511164 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066601424 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.097842478 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.076673276 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.097675223 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078548171 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.1289458 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.095735015 seconds)
  done (took 6.155494376 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.739346549 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10943917 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092641931 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.805417195 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091091827 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10670297 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.707765947 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118347435 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.208367349 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.760808906 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088654001 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.097010763 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.17751166 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.231228933 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.872935786 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.278665815 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.630052414 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.107337074 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109651252 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.132596388 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137186415 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.17390892 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.147023659 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.406788775 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.073503781 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091426791 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.135399124 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.093622817 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.137915812 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.084575031 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092515969 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.153832194 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.222346124 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.1525438 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.095549611 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069520928 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090052712 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.145972689 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.235586295 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.168488163 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.157049766 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067056033 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089848251 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.1384645 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130777592 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067910196 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.136951828 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.169999546 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.147462676 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072630168 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.094495452 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.141546654 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.136469115 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.140187264 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.099850341 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.258875105 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.285534291 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089234311 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098924145 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103137593 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.230237666 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082823097 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.195741871 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137486781 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.164181784 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090274478 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.725930342 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.144801558 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09025089 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073429061 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.116718935 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093223889 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.136818291 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.143065641 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.3834163 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.139838548 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072589418 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08984011 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.181273 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.10166196 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070896487 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.139682392 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.093569211 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098998224 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.161471724 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139717505 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.144366262 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.205789835 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.140048076 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.156657413 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073422845 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.121755581 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.094231034 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.187168071 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.170387964 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.138691898 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.206873658 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.138520779 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.140098452 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.144789973 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095466787 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.148876549 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118044444 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079890062 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134466348 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.187908023 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.121527438 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081129697 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093801608 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.137879249 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.12380142 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083594888 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.15811223 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.148437414 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.428777524 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.143666558 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.087625173 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085383235 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136583968 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.158659253 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075366811 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.231651796 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099589248 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.165628985 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119366162 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068445786 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118586245 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.138182855 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075707561 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120101033 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.156799698 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077126665 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.210746463 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.186071491 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076921215 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.213119075 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.16005569 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074887883 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.146955484 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117450978 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.143757252 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097102048 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138155477 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07425288 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.743348819 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.140188537 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119850296 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071948259 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.164650227 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090000335 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081859225 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.103262181 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067106425 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.765329092 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084148113 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.100672935 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101208421 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07503103 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119190575 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134009499 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092588086 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139022282 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.177600128 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096263209 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118135388 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.081575864 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.13697899 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.096020397 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102018808 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08306572 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103133946 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120046691 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073942236 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10321717 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145651489 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.139040268 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.189328749 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.546414075 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068745095 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.103599754 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.199221325 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070712625 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.254711704 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135184502 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.194639565 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.139708311 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07841213 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.28666215 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.140896355 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.164886789 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.103853044 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149877741 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068399373 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.134885482 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.139527369 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090913119 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074350872 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.13910964 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.162762896 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.140914173 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.907354555 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070987652 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.202739733 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067040272 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.167862221 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.076394328 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095359105 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.237336346 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090775639 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.145128834 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.140555162 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092039549 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.083458873 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.811969447 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104050117 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136316224 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093655893 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.169461846 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.160545769 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.135119614 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.137026165 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074864039 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.137087097 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.205407873 seconds)
  done (took 39.973993286 seconds)
done (took 57.120365074 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.257929588 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.17679365 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.238602354 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.141558065 seconds)
  done (took 1.779531213 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.142851536 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103593822 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.115785202 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.084326364 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103086914 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085540929 seconds)
  done (took 1.526205085 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.399808429 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.263013985 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.227171245 seconds)
  done (took 1.786388308 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.260093499 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.211285415 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.44342103 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.293217537 seconds)
  done (took 2.230490643 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.174530264 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.111380086 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067137467 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.105034735 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.155634077 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.248945507 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.125676351 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.184380989 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078507926 seconds)
  done (took 2.19152845 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.194869028 seconds)
done (took 10.603840703 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.213545312 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.210627239 seconds)
    (3/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.096937605 seconds)
    (4/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.22191538 seconds)
    (5/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.249703281 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.085009008 seconds)
    (7/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.113334176 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.109176424 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.102213838 seconds)
    (10/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075483135 seconds)
    (11/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.23039137 seconds)
    (12/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.194443823 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.119667359 seconds)
    (14/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.234188391 seconds)
    (15/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.202331734 seconds)
    (16/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.127193227 seconds)
    (17/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.074070589 seconds)
    (18/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.094316847 seconds)
    (19/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.076627269 seconds)
    (20/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.215946617 seconds)
    (21/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.132516113 seconds)
    (22/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.1668523 seconds)
    (23/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.235403613 seconds)
    (24/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073634913 seconds)
    (25/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.11189513 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.117581277 seconds)
    (27/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.094646656 seconds)
    (28/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.19882912 seconds)
    (29/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.174522292 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.112701426 seconds)
    (31/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.230190785 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.117927567 seconds)
    (33/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.104612106 seconds)
    (34/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.173322827 seconds)
    (35/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.183601198 seconds)
    (36/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.054084136 seconds)
    (37/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.067607296 seconds)
    (38/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.100158731 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066435714 seconds)
    (40/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.202304061 seconds)
    (41/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.076800595 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.112965269 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072959864 seconds)
    (44/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.092276886 seconds)
    (45/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.073892151 seconds)
    (46/309) benchmarking ("sort", Int8, false)...
    done (took 0.171085346 seconds)
    (47/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071810728 seconds)
    (48/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.095564783 seconds)
    (49/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.103722502 seconds)
    (50/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.171417114 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.107583612 seconds)
    (52/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.068172369 seconds)
    (53/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.06705831 seconds)
    (54/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.095642592 seconds)
    (55/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.078794264 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.115678298 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.143812766 seconds)
    (58/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.196098779 seconds)
    (59/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051192594 seconds)
    (60/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.104510657 seconds)
    (61/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.122499502 seconds)
    (62/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.21147608 seconds)
    (63/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.054191311 seconds)
    (64/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.116015725 seconds)
    (65/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051835978 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087307535 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.088651391 seconds)
    (68/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.105179583 seconds)
    (69/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.10001438 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089274629 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.087202477 seconds)
    (72/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.188720121 seconds)
    (73/309) benchmarking ("sort", Int64, false)...
    done (took 0.066938885 seconds)
    (74/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.07391464 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.109233547 seconds)
    (76/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077153484 seconds)
    (77/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.074066263 seconds)
    (78/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.069071757 seconds)
    (79/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.073173727 seconds)
    (80/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.08809794 seconds)
    (81/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.143617266 seconds)
    (82/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.097006531 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.095149762 seconds)
    (84/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.178388533 seconds)
    (85/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074417684 seconds)
    (86/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.114829421 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.17144058 seconds)
    (88/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069799225 seconds)
    (89/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.194387072 seconds)
    (90/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.10369207 seconds)
    (91/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.192899807 seconds)
    (92/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.101968311 seconds)
    (93/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.109150299 seconds)
    (94/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.092791908 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.109233281 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.135478366 seconds)
    (97/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073496741 seconds)
    (98/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07742178 seconds)
    (99/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.156630767 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.115648421 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.096352672 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.144092165 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.174371514 seconds)
    (104/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.165482048 seconds)
    (105/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.160351187 seconds)
    (106/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.175786517 seconds)
    (107/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.156907715 seconds)
    (108/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075787167 seconds)
    (109/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.16980666 seconds)
    (110/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080505133 seconds)
    (111/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.130749746 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066704181 seconds)
    (113/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.05123433 seconds)
    (114/309) benchmarking ("sort", Bool, false)...
    done (took 0.156558582 seconds)
    (115/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.094843918 seconds)
    (116/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074540459 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.138585693 seconds)
    (118/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072874761 seconds)
    (119/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.119429831 seconds)
    (120/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051954612 seconds)
    (121/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.07042549 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086514939 seconds)
    (123/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072962454 seconds)
    (124/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.102214309 seconds)
    (125/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069525828 seconds)
    (126/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.050727672 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.112016638 seconds)
    (128/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.05198056 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.122216447 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066027715 seconds)
    (131/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052022907 seconds)
    (132/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.093543443 seconds)
    (133/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.16762633 seconds)
    (134/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.087770014 seconds)
    (135/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067345172 seconds)
    (136/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064979604 seconds)
    (137/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.093006128 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.155070611 seconds)
    (139/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077512597 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065376622 seconds)
    (141/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.090853624 seconds)
    (142/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073726078 seconds)
    (143/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.094858839 seconds)
    (144/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.176256706 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.113329537 seconds)
    (146/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074584018 seconds)
    (147/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.157792171 seconds)
    (148/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067867482 seconds)
    (149/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.072485907 seconds)
    (150/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.067464459 seconds)
    (151/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073304809 seconds)
    (152/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.095019879 seconds)
    (153/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.098182811 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.145730312 seconds)
    (155/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074776088 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.112605855 seconds)
    (157/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.053101122 seconds)
    (158/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.052146499 seconds)
    (159/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.089915537 seconds)
    (160/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.14815679 seconds)
    (161/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.073718657 seconds)
    (162/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.052474485 seconds)
    (163/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079335161 seconds)
    (164/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.07350647 seconds)
    (165/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.1688484 seconds)
    (166/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.075398106 seconds)
    (167/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.137041706 seconds)
    (168/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.093808956 seconds)
    (169/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.051683615 seconds)
    (170/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052191014 seconds)
    (171/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.085858661 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.092146956 seconds)
    (173/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.099866897 seconds)
    (174/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068091076 seconds)
    (175/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051422852 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.118512517 seconds)
    (177/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073303955 seconds)
    (178/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.14173215 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.147542679 seconds)
    (180/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.161032042 seconds)
    (181/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.100542282 seconds)
    (182/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075494614 seconds)
    (183/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.070020716 seconds)
    (184/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.077158738 seconds)
    (185/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.08932717 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065599724 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.112573256 seconds)
    (188/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.189684387 seconds)
    (189/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.145649694 seconds)
    (190/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.104939396 seconds)
    (191/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.073223637 seconds)
    (192/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063629903 seconds)
    (193/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.083370688 seconds)
    (194/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.141918523 seconds)
    (195/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.121084228 seconds)
    (196/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060367725 seconds)
    (197/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.076814186 seconds)
    (198/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.102868448 seconds)
    (199/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.091606451 seconds)
    (200/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.06924761 seconds)
    (201/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052794558 seconds)
    (202/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.10871641 seconds)
    (203/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067105302 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065080631 seconds)
    (205/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.073641878 seconds)
    (206/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.327432886 seconds)
    (207/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.096571611 seconds)
    (208/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076308104 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.11952033 seconds)
    (210/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.07709012 seconds)
    (211/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051174248 seconds)
    (212/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.18476133 seconds)
    (213/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.07929252 seconds)
    (214/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.088232701 seconds)
    (215/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.053261709 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068464396 seconds)
    (217/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.194760774 seconds)
    (218/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.15683579 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067060121 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.091642001 seconds)
    (221/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.066140859 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066487171 seconds)
    (223/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.073868635 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.113238218 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064339802 seconds)
    (226/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.094379805 seconds)
    (227/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072090474 seconds)
    (228/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052384167 seconds)
    (229/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.08817702 seconds)
    (230/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063328003 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.162895149 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066352496 seconds)
    (233/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051037356 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.133084027 seconds)
    (235/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.096051657 seconds)
    (236/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066729538 seconds)
    (237/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.107682907 seconds)
    (238/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.157969082 seconds)
    (239/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051568418 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.109334438 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090139011 seconds)
    (242/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.086464598 seconds)
    (243/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051315749 seconds)
    (244/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067253638 seconds)
    (245/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.190875752 seconds)
    (246/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067485988 seconds)
    (247/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.075337397 seconds)
    (248/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061819826 seconds)
    (249/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075468803 seconds)
    (250/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.074906062 seconds)
    (251/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.054600589 seconds)
    (252/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.054327383 seconds)
    (253/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074448296 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.118696728 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065424038 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.08702378 seconds)
    (257/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134960038 seconds)
    (258/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.073169064 seconds)
    (259/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.054370833 seconds)
    (260/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.053553205 seconds)
    (261/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.097284213 seconds)
    (262/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.063717471 seconds)
    (263/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.19864741 seconds)
    (264/309) benchmarking ("sort", BigInt, false)...
    done (took 0.208676024 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07242516 seconds)
    (266/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.124856235 seconds)
    (267/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.069335905 seconds)
    (268/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.112205203 seconds)
    (269/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.066139656 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073381249 seconds)
    (271/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.073496097 seconds)
    (272/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052787054 seconds)
    (273/309) benchmarking ("sort", Float64, false)...
    done (took 0.145755691 seconds)
    (274/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051234859 seconds)
    (275/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051679786 seconds)
    (276/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.094475923 seconds)
    (277/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067793913 seconds)
    (278/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067831217 seconds)
    (279/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.073440547 seconds)
    (280/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051259096 seconds)
    (281/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071292347 seconds)
    (282/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.087171148 seconds)
    (283/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051389782 seconds)
    (284/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077356062 seconds)
    (285/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.074389172 seconds)
    (286/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051281464 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065528266 seconds)
    (288/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.072976066 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.074135042 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064462665 seconds)
    (291/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.090113686 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064506224 seconds)
    (293/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.0666736 seconds)
    (294/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.086476268 seconds)
    (295/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.073096359 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073075138 seconds)
    (297/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.111990237 seconds)
    (298/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064483419 seconds)
    (299/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.088519049 seconds)
    (300/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051252917 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071192696 seconds)
    (302/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.074794244 seconds)
    (303/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073041269 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.115469333 seconds)
    (305/309) benchmarking ("sort", Float32, false)...
    done (took 0.128230604 seconds)
    (306/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.072160343 seconds)
    (307/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073401296 seconds)
    (308/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087760485 seconds)
    (309/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093428572 seconds)
  done (took 32.938391608 seconds)
done (took 33.846118226 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083411418 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115358686 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076571831 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.114281285 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081118239 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.099417076 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073010169 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.099594273 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081111236 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081152762 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.101582088 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054779084 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096471377 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075758203 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.095982989 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091976986 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.09989074 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072712051 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073652077 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086484445 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074346292 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086858606 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067448947 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055768982 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.099014058 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073449371 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071625169 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.097542496 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065648674 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.087188785 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068852073 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072674136 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086584219 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078945385 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092905969 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073672942 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074675347 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.098271431 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067324275 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087081967 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073283796 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065921139 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.093327425 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073631192 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07099774 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.09252268 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073201778 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.101168385 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09230595 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089607515 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074012065 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.097254952 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076996652 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.093830172 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069090616 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073452256 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092037285 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091677727 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.095928674 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069018088 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072499017 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.09518324 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071094052 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095193888 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074674595 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.097073216 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076269375 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071075041 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09692251 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071669674 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064804083 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.096300262 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068898803 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.087383469 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076231402 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076010018 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.08668844 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071639127 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.093747204 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072003889 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064755783 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08948456 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067606737 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071232942 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090159004 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055591033 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069395326 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092969227 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065502935 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095210696 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072600717 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072799578 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.089047244 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07723034 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065031908 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092708282 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066121394 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086761257 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067804275 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069643997 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.086796963 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06851364 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074640972 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088485686 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072724304 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.101151391 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065621661 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072362684 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086163768 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065601336 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.10309759 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075911291 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065908804 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089661748 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065925257 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071993605 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086654682 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066265591 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086794652 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065623422 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071516311 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.0868511 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068252964 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072840853 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.100887821 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066403284 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068384753 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090127628 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066083105 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092514914 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066183809 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.0660526 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.0897524 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06353411 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068080486 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088140121 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073212438 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067307551 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.096334907 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06834315 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.09530881 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070332461 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070974894 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092624324 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065296745 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058800618 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090010495 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.0680562 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067108477 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.088166422 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067515296 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086882957 seconds)
done (took 13.098048855 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068310811 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.167578913 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.12490835 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094965665 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.109288102 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066850201 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.09964574 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102755361 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.089665142 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.125641147 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086963258 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.107216041 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114287753 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086889369 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066503073 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069200755 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.089149915 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.088300302 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.123645663 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.108297257 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116384089 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.088236181 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.118735266 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089819607 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.110526973 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.10285889 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.088850083 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069965868 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.09093654 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.092481187 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.107626814 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069622886 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066267012 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.121336636 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.115771202 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085378065 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088168844 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084166837 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087726499 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065989031 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.114119803 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099915682 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.104093481 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.104050514 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072572394 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068860398 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089599399 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085660064 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.113566412 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080268746 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109879102 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132310334 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068487133 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.10435618 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064969147 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.109395669 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.10400654 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068677703 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067352188 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090550887 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066730382 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069886676 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110702021 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.113912886 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069955342 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.103816267 seconds)
  done (took 7.193560317 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08693358 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.118293401 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08410945 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.106072255 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06597403 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066837999 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.088647909 seconds)
  done (took 1.580185445 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069214315 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090479474 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11464609 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090480254 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.110465811 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089324778 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101849068 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069632391 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.10911275 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069995046 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089188778 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.130772838 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.092508931 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076144441 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09382799 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.092354439 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091456231 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091718192 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07236455 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.115695969 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07240154 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.112621478 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070796503 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068828687 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10714275 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069209157 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.142051573 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073728233 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092503776 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071740559 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06757107 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.141661093 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102775018 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077958839 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067056354 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.10414906 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082367552 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087168426 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083359844 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.09476165 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081457302 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067668164 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.091102424 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065808728 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07111659 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.100224326 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068382494 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.089588552 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069736608 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086450808 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.091235409 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081040434 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089165776 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071230456 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068955096 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095475071 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07702079 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090056156 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087098401 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068307809 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.106496048 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082715808 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.103384988 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084027047 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091839088 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080695076 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103512418 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069981821 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069027456 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.093167345 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083424536 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087059514 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068300565 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077408392 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.091407779 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089927251 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.112912752 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068683067 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.099408694 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067280974 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067769679 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.090245693 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090798574 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093409729 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066859483 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071444644 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092383755 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065390621 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066072444 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.093262317 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06572562 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.090855395 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070643074 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067952881 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092288251 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084994139 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.090379534 seconds)
  done (took 9.321164536 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071033225 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070206151 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093515854 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068473495 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068073161 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.090395023 seconds)
  done (took 1.437873986 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.099959614 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.091743183 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081590181 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.095260242 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105960567 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104392116 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.082780874 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.105312248 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084431109 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.10243615 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.082433243 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104690916 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.088575028 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.096661445 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.081817887 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.094928251 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083049688 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100059707 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078921415 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096224977 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.088819164 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.096011512 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073816735 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.105273963 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071347546 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072808698 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099723469 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.07940537 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.10172361 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.083464915 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095649605 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071603646 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094186985 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.08245973 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.104882335 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07298708 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095523427 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073886355 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101435715 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.073758542 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.108938345 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076246271 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.080507903 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.098185521 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.106441907 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072778744 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071241896 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.09992694 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.081051581 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094068811 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072330313 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094966327 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071164235 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094653343 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072318659 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104835275 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.072060575 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.105028204 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073468575 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072562568 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.093441483 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.070695956 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.105477074 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.070660156 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103549689 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071656136 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094888733 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073672738 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095764031 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073313075 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071373996 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092511059 seconds)
  done (took 7.317191887 seconds)
done (took 27.806784902 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.643351942 seconds)
  done (took 1.618622805 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.770181854 seconds)
  done (took 1.746632954 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.614874311 seconds)
  done (took 15.599071139 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.609294704 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.748936385 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.802208345 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132970975 seconds)
  done (took 3.272258159 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.884438382 seconds)
  done (took 1.890209813 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.237013428 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.244632446 seconds)
  done (took 1.465379529 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.73168421 seconds)
  done (took 1.718638362 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.240688985 seconds)
  done (took 2.224937393 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.32083074 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.179973818 seconds)
  done (took 1.494062345 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.521751951 seconds)
  done (took 1.510386874 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.53181759 seconds)
  done (took 7.530537939 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.230472525 seconds)
  done (took 1.237006583 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.268980927 seconds)
  done (took 1.263049307 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.076697981 seconds)
  done (took 4.068308406 seconds)
done (took 47.622912832 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079786926 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080702853 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10268784 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079164174 seconds)
  done (took 1.333369583 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079638671 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07391883 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099456883 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072841602 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.099642333 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073882998 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.097364409 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077993289 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072387872 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097113717 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073258225 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.094775414 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076441605 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.097769944 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071064712 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076236512 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098390647 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073640506 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.098904273 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073699299 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070923633 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097666825 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075839723 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.095390567 seconds)
  done (took 3.022257976 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078962016 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073215842 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096579886 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072633194 seconds)
  done (took 1.318077879 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07917722 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.115312433 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089695421 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.10003305 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092232928 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.109660973 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069866581 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069288717 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094200322 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077808988 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091126038 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.097682912 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.110576404 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077799875 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101108562 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066887288 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068794974 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.110391213 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077582761 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.1002886 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07048299 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.102834502 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068180451 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089878513 seconds)
  done (took 3.136886958 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078196491 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126531427 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078103566 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.113861043 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092365666 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089290589 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.075530614 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.114875889 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.125448761 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.089415193 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069718802 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066114341 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.096109078 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06577274 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076576522 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.133226466 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.134760796 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069367579 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.120546616 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065771489 seconds)
  done (took 2.888599472 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077117994 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070810058 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088381983 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068925729 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076829832 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.095453127 seconds)
  done (took 1.487871731 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070530082 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067503078 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090541705 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06664339 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071663431 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.090307966 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06666766 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066969114 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090234755 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067279173 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065769707 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.088627764 seconds)
  done (took 1.906301321 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.381544384 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.091701959 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069518803 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.087936435 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071170877 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089052016 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.07935847 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068010088 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.114070419 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066453017 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.090352113 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.06837674 seconds)
  done (took 2.285300653 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259381429 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077524942 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.321510553 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167230235 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13956247 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1543356 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105734283 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138234437 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.19748522 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137248657 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224426263 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197804894 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132645757 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164578729 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113564418 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.130774675 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184072941 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217194003 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12904817 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196114508 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203289827 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155454278 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178234533 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125948969 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132333963 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148780971 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.09527867 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080484161 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228721002 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159952046 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198711236 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136967046 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119707215 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229922485 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225731216 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169862229 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162081471 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084528082 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.156209647 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.161383657 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252916258 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113390536 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215991415 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108721906 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10473533 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170784683 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144481043 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.146049436 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.134584655 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113435749 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172599051 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236349675 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.188066649 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08650608 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135971819 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140062146 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.141644991 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128878437 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24132333 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215337053 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157276197 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071441704 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123880517 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18506748 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15871795 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.140054 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.17624444 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094300295 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191905694 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186051001 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143951176 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197876215 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.15516859 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113362857 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145772857 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169169142 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154457366 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225986376 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153222159 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073693573 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174881658 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10404381 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106096967 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.170043393 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076825215 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231086685 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12447856 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.114376466 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138966746 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134642232 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135508132 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218442759 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175318808 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128832544 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066420445 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12932033 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.148463228 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201066088 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088739164 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134357149 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145439766 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.103315797 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165246958 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075604637 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175532288 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.07916407 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151300161 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161818261 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.1004621 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153750418 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127173735 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.103597785 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186754069 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193973414 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114116105 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083070775 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223997007 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154366181 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.130574776 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172309462 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.211734156 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.126067175 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128511115 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178705063 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239285735 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113976195 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194535 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131989664 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107984623 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088298004 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176786278 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137780273 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.12199594 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107077274 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.151782885 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223968247 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075192939 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119993409 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163714486 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105974107 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081423818 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137004917 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125601614 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.119607098 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.125536807 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.131151706 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168685865 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152702109 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132538533 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151914487 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124563949 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22296476 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090200925 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.128804894 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128844071 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070233768 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.187335829 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190454191 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104436572 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197724857 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.177235173 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105321948 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146089512 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108684583 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168088763 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078812657 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.095286849 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172201367 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135299914 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134869008 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.206610802 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103880809 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.152503128 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.175124192 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16175405 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159705664 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.159868449 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131357122 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.112267539 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138653094 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152708945 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073667959 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.119408097 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.10797152 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130432327 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0961228 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107498161 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169743572 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152786511 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12531808 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138440687 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121979513 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179067786 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102153666 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1566022 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.145889563 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119558583 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.184432185 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209595838 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16469864 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125258769 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173898988 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.09595932 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074086294 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.115960114 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154201401 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083476422 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108874898 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143104796 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202759577 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157177741 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164811013 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137517847 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149736852 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18529639 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.096231145 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.11721313 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202624438 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153695796 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.154145448 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090654149 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.123670131 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17351225 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134529845 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242618252 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141957836 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151480288 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205296049 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.129158346 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080716676 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131973207 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165342996 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131759294 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204298518 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126170707 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08945079 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135596569 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.106538737 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129306759 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155016897 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147877543 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161733554 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.14346321 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185440621 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077659586 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144792933 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15055269 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149195289 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.089795756 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147258281 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19273179 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120262228 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143995535 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208856908 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080391272 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.152047404 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235542321 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198898473 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086137767 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136506515 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154032791 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156401981 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145068312 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192474496 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13841725 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16336503 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135731461 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08544738 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113224339 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09932263 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132121715 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.122188672 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.138085374 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.145096417 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.119613482 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160088565 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137164069 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136488196 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147119275 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099222869 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.11654404 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123456135 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207275747 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149435962 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230249188 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.126621351 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.204322188 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222363672 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075754894 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079094823 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.105618093 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169292183 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109465161 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162315924 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.123667096 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106682817 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179756294 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173434534 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122514041 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069088772 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137632713 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163989073 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138443919 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124049114 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.132402358 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195293173 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.13002926 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080021428 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151520106 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130158113 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129069509 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234016558 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062529058 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124887959 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076494844 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106104706 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157641871 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212935345 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083480508 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.152167478 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14585452 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147767899 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157364267 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128368552 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125681389 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141481494 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179535958 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157437617 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.116726068 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139561105 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159056922 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212748989 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13286151 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095920073 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230545926 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210529181 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.19478394 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.116702548 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14449405 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142883242 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136655752 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168881345 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109090618 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225406042 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083348885 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191475841 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131432957 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093766253 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182297103 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098736432 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115857049 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178839421 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170264322 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100178633 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105186617 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1463456 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150101384 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134134117 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.076292617 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194712807 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073261977 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165727496 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22658663 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082349601 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132049192 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122561162 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10723396 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133625969 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104133522 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112876072 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.12164655 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224508067 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.116146836 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206827694 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170173921 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142303005 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19246158 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100672333 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.661163194 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.103820244 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185426665 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147221791 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26023481 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098124175 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149575794 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138289843 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150982393 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197628848 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131663273 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.17792232 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185587716 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.148735384 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080641489 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130729598 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138348787 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.117418857 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13326855 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142026944 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143154793 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.102003951 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.146927192 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180041177 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082026146 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122432879 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214782147 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144797242 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172986813 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168994798 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111134982 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14535417 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167599585 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106281586 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.150041164 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213288738 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134508527 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098708967 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.107389585 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.132651114 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230447374 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074131371 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218426213 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152490346 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136789065 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141984076 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146832897 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160916469 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134633825 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152392413 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121173403 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.139596271 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14344055 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110294295 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07782366 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132675551 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138956607 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.12550688 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128847432 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.120235487 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206331039 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072262073 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122118667 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128620096 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17471044 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235745715 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.114173352 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084556309 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145848068 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140330179 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.142740255 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153083204 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.108013419 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082827448 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.108356525 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.113752379 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.133499355 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142067386 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13102724 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137523289 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224654647 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.085308198 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.251172321 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121153533 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10725303 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.095249919 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079123676 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121702565 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123944046 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134724469 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126247851 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204717305 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.123452881 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.116162522 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0935077 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.098650595 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083575898 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156818588 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135983689 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147927072 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123408508 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.088848765 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135430323 seconds)
  done (took 70.727465289 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.134981141 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.103686129 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.115925764 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.171330496 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.144053276 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.236758402 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.180159115 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.221071764 seconds)
  done (took 2.397874266 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070401425 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.115998262 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102894175 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.11533924 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.088680293 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069338513 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.291387145 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.108736353 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066485523 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.113343928 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.11835117 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.090982649 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.468981707 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067481874 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.096787943 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.083318187 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06679253 seconds)
  done (took 3.21420353 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.426074845 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.623840271 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.448250822 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072853656 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.892644967 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.106652186 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.384616322 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.160305575 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.089659124 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.42691799 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.722429541 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.153124251 seconds)
  done (took 17.597421442 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076368061 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071499896 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.111434793 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.086073707 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.100430799 seconds)
  done (took 1.537334847 seconds)
done (took 113.845509181 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081840394 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.342481301 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052810801 seconds)
  done (took 1.522113606 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086145704 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087018821 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.112043506 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082838896 seconds)
  done (took 1.467597739 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.076480663 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077146754 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109763443 seconds)
  done (took 1.358609414 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.275475112 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.163891115 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087377372 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084220294 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077341567 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103233055 seconds)
  done (took 1.361605565 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073401337 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074813387 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098223608 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.07608819 seconds)
  done (took 1.41200769 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077958366 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053954738 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055398925 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.080810184 seconds)
  done (took 1.365065291 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091380446 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.10565159 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.08070481 seconds)
  done (took 1.370872919 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109073278 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.11086844 seconds)
  done (took 1.316108264 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084145115 seconds)
  done (took 1.175573811 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09547938 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.138407077 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.154523133 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.135659523 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.163998307 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.135566725 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.11254862 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088342404 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.102573804 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.114450755 seconds)
  done (took 2.341309709 seconds)
done (took 16.387093411 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079764645 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.481247194 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360579299 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115161296 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.666496475 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355898572 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.006160975 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120058401 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120437543 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09321386 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083144546 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673125931 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.972926608 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.439270541 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.959879107 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.32344497 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675136157 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06802748 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092312689 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068389002 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.969046791 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093615712 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06748582 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067711493 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.67451943 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.369300288 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093329416 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.317468812 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066862525 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094949257 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.353876958 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093815766 seconds)
  done (took 16.105936408 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071237708 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.143046051 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073963906 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083288146 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.096027451 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069092017 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.097500579 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068676838 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.150874291 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067342502 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109774662 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067429155 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.096590401 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069550081 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086269623 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094649985 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068954765 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068291897 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094140469 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068428718 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111709605 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068057943 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06826701 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093744521 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067938984 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.105596503 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06851275 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067684991 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093525576 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07023227 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.096365747 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068824915 seconds)
  done (took 3.821381621 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116179074 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.15198061 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073853131 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127632268 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11263033 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096437525 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.168760421 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093264289 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154190012 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068122842 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110179002 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068099547 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126308068 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069920606 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.113126415 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068727133 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068542809 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094188356 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068201114 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09341169 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086403631 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092474471 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068262466 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068633947 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093319856 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081509876 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.092980808 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068243925 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068037042 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095377581 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072144361 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093633313 seconds)
  done (took 4.129033643 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074406369 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076079445 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.107708596 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084562717 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095973339 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072192064 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072509376 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.094602246 seconds)
  done (took 1.776807027 seconds)
done (took 26.925109276 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.08093841 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071230777 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.100721927 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080824664 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.097768228 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078407738 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067205872 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.099983211 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076910465 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072798524 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.102171181 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067454977 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.097448491 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067516766 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.0738935 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.093673631 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079992966 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.097144651 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079537324 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078940829 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095814288 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076595637 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.098708466 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078786742 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104943792 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079312233 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082026404 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099944028 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069339867 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096528979 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076510728 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.113505031 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070381558 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081019211 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.095410618 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068492077 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.067172808 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093431137 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079799707 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.099392732 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070780217 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.100271153 seconds)
  done (took 4.657290876 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089891311 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093890134 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.112882194 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.066183167 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.095991413 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064917467 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.114005666 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.064074177 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059470726 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.113799522 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055898477 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058737927 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.088418312 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054324619 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058885855 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056171906 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.087127065 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056249913 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058925849 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.084738161 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057862794 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053717303 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.086071881 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063440678 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055934195 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.087321066 seconds)
  done (took 3.045409741 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076848687 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084836979 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113362609 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.1269944 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.131758389 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076637654 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.104976686 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.086555846 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.111497289 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067365527 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070615885 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.120855689 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086980135 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.100367826 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067055931 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.113146808 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081815708 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.06926416 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.100070227 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090151455 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.110747166 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.076929047 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.118278325 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080730111 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066982464 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096083234 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071167939 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.106955913 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072755843 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077053807 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.098035664 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071559768 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.096085354 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078521687 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071812203 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095428547 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.088592244 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103239427 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077333146 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.06805563 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.097839825 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068838906 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113816493 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.111319611 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.094091168 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074011993 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075427443 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.102941422 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068243809 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112323007 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076015691 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066932278 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.096694134 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066484354 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.093209155 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080417645 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069288742 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.096067352 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07622074 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.096101263 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.079613688 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071452507 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109308677 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068060036 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101347255 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066802116 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068220787 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.092447224 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.090430335 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070910996 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.135014034 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070219778 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.095645294 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075866738 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101288206 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073672003 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068356427 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108756271 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077120526 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.096852459 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076192761 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070553632 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.096637932 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.08732701 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.095935033 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068965697 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068576505 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100278375 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071096582 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094946201 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080917672 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069388828 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.098018888 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084567131 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.09530831 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069349992 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073515276 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.098301822 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066445116 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105149534 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073001592 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069113598 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.10325476 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067548389 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.096928303 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076854592 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.071404574 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092919302 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072201717 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099915703 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06862482 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068648578 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.096574586 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069367086 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.103089635 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074093697 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071857843 seconds)
  done (took 11.222845396 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.191270951 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.182198318 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070665485 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.17584835 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075746781 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.106960401 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.184910978 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095527348 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.094780849 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067856642 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.0679665 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.128849576 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.123211551 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.105374736 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.105032622 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068292104 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.112846296 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.104265412 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.181739375 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.174529867 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.115234644 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076328148 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069566588 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.095987737 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070702954 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.104298872 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085262908 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.101942905 seconds)
  done (took 4.263733581 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083125869 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.127684656 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073927008 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.08913886 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.11867855 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067553196 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.099681846 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069370616 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.106826683 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079133209 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.094021423 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073882909 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073818072 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.104999535 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068673867 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104469822 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078096148 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069287453 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.097096467 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072330756 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.103802268 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080230071 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.098597958 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067089443 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074025424 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.093579953 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064425999 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.111745594 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068076574 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115874605 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066015473 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073942313 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.108035257 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068345449 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.094009463 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070172588 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070914687 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.098137541 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069581335 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066454964 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.093064568 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057745658 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066786215 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106999044 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073970314 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.086613125 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073017022 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072023849 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.099297342 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065228627 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097003299 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070491081 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07025807 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.102884828 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072272865 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072326919 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.098327333 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065495029 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.102132274 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071260298 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064421439 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.092860066 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072594516 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.06700331 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102280664 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071677314 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093520194 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071247113 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072019725 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.100815806 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070779274 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070171594 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.092430422 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069491227 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.099467709 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071908182 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071546264 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093288879 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068111696 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068135315 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.082346009 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067588761 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05329728 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.0975506 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066045154 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066275929 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.097920581 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073659099 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.107750969 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068552104 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.10007431 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068778339 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066300952 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097834771 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063964758 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070468745 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.109817758 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.110008039 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068310561 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06517401 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.109834209 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072341566 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066119137 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.083817912 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075228077 seconds)
  done (took 9.748323192 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.097410745 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092338253 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.096641791 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083153073 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.122478633 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.093127823 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102364383 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.074398621 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069466498 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.11242369 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.068508477 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.102766344 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068063918 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076142217 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.123587512 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075562895 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.09661566 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076442223 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07146683 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.134301449 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08209692 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.108920302 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.080292373 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.094984574 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07249954 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079714552 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.12264283 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079431376 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.105841557 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085292133 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079783743 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.12247138 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.08484166 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099186523 seconds)
  done (took 4.273092595 seconds)
done (took 38.308900931 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.206063129 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.39298837 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.180260353 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.063608611 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.194683421 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.182513765 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.191449383 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.187880778 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.390266154 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.180388627 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.441289377 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.801469999 seconds)
done (took 58.538573908 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.202102886 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.319858391 seconds)
    (2/2) benchmarking "String"...
    done (took 1.447950186 seconds)
  done (took 3.889622821 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.522100672 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.055621865 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.437822429 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.180889136 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.177149447 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.478731562 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.764326831 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.009077274 seconds)
  done (took 27.225893782 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.181249842 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.536388027 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.465862993 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.468325943 seconds)
  done (took 17.777056179 seconds)
done (took 58.741342315 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.215269413 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.23452969 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.188948872 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.175089373 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.281470252 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.209383017 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.531663331 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.447811207 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.182387702 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.166503378 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.19634219 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.188455935 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.181565077 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.532174308 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.192314222 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.181247293 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.243571814 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.727206304 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.568036268 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.193727982 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.197538967 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.243635866 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.182346423 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.187275277 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.225241597 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.191454644 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.193962484 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.194656892 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.345925399 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.184192917 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.266597223 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.685865772 seconds)
  done (took 191.059128798 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.183219945 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.247175777 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.338734606 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.231066574 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.665900409 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.382931406 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.317936089 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.737252334 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.19748506 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.208481486 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.460452765 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.18416068 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.527116613 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.188843386 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.192156317 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.29362469 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.379916499 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.531409259 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.198408714 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.456979095 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.199318052 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.442200137 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.361289918 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.420131559 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.190249532 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.254400782 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.197001311 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.207765808 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.371784909 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.317838455 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.206565461 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.192917678 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.738818113 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.040993029 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.194536354 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.190015068 seconds)
  done (took 149.574548796 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.439485111 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.183933193 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.184522941 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.183899243 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.213203748 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.183072412 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.707253116 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.703917868 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.686165796 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.612070338 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.243666825 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.376153342 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.180912991 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.275983165 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.193944787 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.183246047 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.201124507 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.212394032 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.183432683 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.185181434 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.706092748 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.197409558 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.224860283 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.193656806 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.187206219 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.217343337 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.58099777 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.184982627 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.186660658 seconds)
    (29/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.186353313 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.215763655 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.503935289 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.227254064 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.184826632 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.459779152 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.25822151 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.290900976 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.184806016 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.216454934 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.18723736 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.456912314 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.184459711 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.188334994 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.191636095 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.748465324 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.182838847 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.710913057 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.18739546 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.072100206 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.184704316 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.187975375 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.605304155 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.617501785 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.183999397 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.188152561 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.190594273 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.188532837 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.188238375 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.217880145 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.514919251 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.28379988 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.189324357 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.191406498 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.217074831 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.188810725 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.188090097 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.204877793 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.188966961 seconds)
    (68/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.18867345 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.243604388 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.404666767 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.4062174 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.710184963 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.189978986 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.280725362 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.303116084 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.18562725 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.188813054 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.188600025 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.189814774 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.29467236 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.186396176 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.574522084 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.190616426 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.190340385 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.248356614 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.283474038 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.185110113 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.480405649 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.18858011 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.190017903 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.877573572 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.278303212 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.185291757 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.189808109 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.189646497 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.574599821 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.709296731 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.376740157 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.190397536 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.486513717 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.188874959 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.586724098 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.686727859 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.741847541 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.187540071 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.296335247 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.19027418 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.19145946 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.190528902 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.219383963 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.191667409 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.250921636 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.186262786 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.58654621 seconds)
  done (took 342.7113247 seconds)
done (took 685.91108675 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.85030237 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.832523646 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.961669926 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.828121398 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.812243409 seconds)
  done (took 10.416445334 seconds)
done (took 11.549468405 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.370229495 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.371684981 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.248978869 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.372530836 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.21940556 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.388208697 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.348266766 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.211752758 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.291023711 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.265207025 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.28906322 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.238210297 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.218696962 seconds)
  done (took 17.965407184 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.498990352 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.504089791 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.256714848 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.495376532 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.230561064 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.509212979 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.38502097 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.391498422 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.380974757 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.204666792 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.206179734 seconds)
  done (took 16.198654589 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.504640702 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.485987564 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.256529876 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.505432179 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.229737572 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.532776203 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.383155603 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.389977238 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.379002067 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.207034414 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.205067215 seconds)
  done (took 16.213486227 seconds)
done (took 51.513584492 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.200829599 seconds)
  done (took 2.334334124 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.23432446 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.395845721 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.216200875 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.205857476 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.202438705 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.203342648 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.206758816 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.201831991 seconds)
  done (took 11.003015825 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.201563567 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.198644508 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.197675817 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.201530967 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.202016181 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.198952462 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.198928653 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.200930811 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.201683931 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.199426837 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.20189639 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.198519629 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.199496604 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.201078982 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.201812374 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.202776957 seconds)
  done (took 20.342347508 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.201555983 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.199570231 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.199677322 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.200784858 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.19972508 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.199680028 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.201478752 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.200585249 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.19890748 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.200368013 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.201662593 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.200119285 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.20130338 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.201455159 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.200184482 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.201096972 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.200794176 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.201139109 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.20596947 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.200231168 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.201729305 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.201211151 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.201788456 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.202669033 seconds)
  done (took 29.961417242 seconds)
done (took 64.778030697 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.1706823 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.756749644 seconds)
  done (took 9.064513844 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.203191006 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.203889993 seconds)
  done (took 3.544956346 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.204103505 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.203157831 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.203540912 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.204161222 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.203519259 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.204054883 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.203556808 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.204089644 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.203536324 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.204879043 seconds)
  done (took 13.176266937 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.204634349 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.204437527 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.201594873 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.204323262 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.205653782 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.201469749 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.203279207 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.204488981 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.204916781 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.202255538 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.203602248 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.202693352 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.20520058 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.203503644 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.204271884 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.203574436 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.203517881 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.203728243 seconds)
  done (took 22.806234527 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.204345614 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.20609867 seconds)
  done (took 3.549419775 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.202705996 seconds)
    (2/7) benchmarking "second"...
    done (took 1.203283166 seconds)
    (3/7) benchmarking "month"...
    done (took 1.202597629 seconds)
    (4/7) benchmarking "year"...
    done (took 1.202278495 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.204468033 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.202923955 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.202056027 seconds)
  done (took 9.560150212 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.206076261 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.380472955 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.452159292 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.794191903 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.207483644 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.209469663 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.06267948 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.210050899 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.211907911 seconds)
  done (took 13.874975186 seconds)
done (took 76.71561784 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.19740659 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.198772713 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.005769848 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.215896029 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.214386788 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.498442619 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.248889483 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.322501754 seconds)
done (took 37.043467596 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.214576505 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.89022431 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.925447858 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.19675942 seconds)
  done (took 11.152511195 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.182381118 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.092254908 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.193933471 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.212435764 seconds)
  done (took 17.819717158 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.792067113 seconds)
    (2/2) benchmarking "read"...
    done (took 1.525944938 seconds)
  done (took 4.457203634 seconds)
done (took 40.785323146 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.206516934 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.207819761 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.206393502 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.20295493 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.205557717 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.20472476 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.2039806 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.20319228 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.20721668 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.206251194 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.203886242 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.206639609 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.205703332 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.20659344 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.204833663 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.20355162 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.205735849 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.204504676 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.204066328 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.204883284 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.207088517 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.203687838 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.204850564 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.206991153 seconds)
  done (took 30.066672107 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.208245756 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.206033301 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.207234549 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.207833741 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.205826583 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.207701828 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.207976651 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.204628505 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.209088082 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.20805883 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.205668294 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.204129849 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.208207891 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.205399659 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208585681 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.205962498 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.208195109 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206317153 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210517342 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.206044128 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.207963797 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.206253101 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.205003111 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.209625164 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.204680452 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.206547094 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.208978914 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.206683841 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.209149784 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.20681597 seconds)
  done (took 37.355420481 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.213707919 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.216400984 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.209725622 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.209125441 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.207707068 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.208369969 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.208767517 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.209133988 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.209532589 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.20899871 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.209023127 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.208372763 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.210634609 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.209154547 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.209183379 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.209605461 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.209502275 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.209727908 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.207963929 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.210105589 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.209736546 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.209220903 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.209168341 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.208909751 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.209963684 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.209487104 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.209463629 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.210278826 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.209655329 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.210308573 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.210277798 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.209390136 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.208627002 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.209328622 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.210708115 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.210795366 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.213761335 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.21833849 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.210344915 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.210877659 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.21121462 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.210689525 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.2112094 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.210282654 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.209891507 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.210888965 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.211079439 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.210580686 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.210991243 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.210815457 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.210762402 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.210355026 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.211579905 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.211699052 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.210791475 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.210739272 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.210728807 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.211505126 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.211868182 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.21188323 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.211507447 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.211526499 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.213370908 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.210951091 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.212657542 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.211629524 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.212427221 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.21220347 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.211851162 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.212056514 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.211826959 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.212453953 seconds)
  done (took 88.312157919 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.212458785 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.210646614 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.210628852 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.209148401 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.209837637 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.212115942 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.209364294 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21355581 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.210181344 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.213775929 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213342168 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.210585206 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.209589773 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.213516604 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.212777577 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.21075337 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.214036805 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.209614339 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.212910435 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.213557505 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.212790668 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.209674138 seconds)
  done (took 27.802108674 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.212888973 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.213394668 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.209895191 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.212566253 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.210151807 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.213371336 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.21274196 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.213533081 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214070307 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.211499558 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.210914585 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213508829 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.211789961 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211751278 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21125864 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.211756259 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.21474019 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.210534413 seconds)
  done (took 22.96747744 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.211790324 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.211779384 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.214401448 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.212803844 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.211128405 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.213850853 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.211616419 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.215040711 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.21501963 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.212116272 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.215282859 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214523573 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.214174342 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212048663 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215114366 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.213481661 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.215268292 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212329005 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.215699974 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.2132168 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.213401835 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.215860094 seconds)
  done (took 27.847819745 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.215577847 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.2152076 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.21278536 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.214141811 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.212784604 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.21557945 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.21592815 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.212568302 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.216242747 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.214997401 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.212904814 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.215222414 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.214724244 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.213576884 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.213382089 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.213878172 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.215474108 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.213535668 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.215824057 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.213110146 seconds)
  done (took 25.437322074 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.216946423 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.215658852 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.217778996 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.216751869 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.216308008 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.217211713 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.217419193 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.21831848 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.216152302 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.217482557 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.218640523 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.218549761 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.217809476 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.216847331 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.216991833 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.216617881 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.216299202 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.215785483 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.217090978 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.216622005 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.217039199 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.216136392 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.218408909 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.218415946 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.216935364 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.218091096 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.218460818 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.219205011 seconds)
  done (took 35.235118728 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.216886675 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.217694568 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.214547955 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.215989185 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.215486134 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.215799874 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.215414038 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.216029839 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.21721468 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.215559661 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.218661734 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.218490863 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.218887571 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.219035512 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.218470317 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.218361788 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219545762 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.216057163 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215024227 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215518866 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.218908033 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218377917 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.219670022 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.216583915 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216934992 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.219164507 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.215808771 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.216557519 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.219323555 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.21657629 seconds)
  done (took 37.669167112 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.236850476 seconds)
    (2/2) benchmarking "in"...
    done (took 1.239149364 seconds)
  done (took 3.627693375 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.217030726 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.220597156 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.219881844 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.218691752 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.217713771 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.220928825 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.221263765 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.21697662 seconds)
  done (took 10.905747712 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.219455288 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.219192511 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.220863237 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.220029216 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.220674696 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.221038583 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.230419517 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.236810033 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.224122551 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.221934074 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.22827841 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.229108297 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.226564561 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.220729849 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.221239403 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.223110021 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.219176201 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.221220911 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.220522577 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.220352837 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.220920984 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.2242927 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.223677427 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.218324227 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.222612095 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.23564361 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.227179335 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.219653615 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.221480487 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.228098879 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.22102202 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.218036689 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.221787135 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.221375273 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.220681833 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.222254754 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.233789135 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.238370285 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.231258733 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.22144929 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.222200313 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.220102257 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.225727854 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.224647092 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.224193881 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.222877694 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.223244456 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.220315153 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.222208748 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.225716553 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.2280015 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.221331726 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.220051363 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.230768305 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.224583605 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.231715916 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.237972261 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.226261477 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.231949279 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.235558201 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.236700984 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.230984047 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.225018982 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.222963616 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.233272636 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.248653431 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.233176525 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.236992381 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.221463682 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.224168752 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.233357728 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.237919142 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.234006264 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.224268361 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.224143418 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.22338963 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.224831858 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.225812089 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.236542781 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.245921008 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.225229774 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.22485057 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.235424713 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.24693449 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.223344374 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.225117684 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.224931728 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.225099895 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.225495901 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.237476056 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.24090604 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.224962657 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.224459089 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.224928392 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.227356316 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.224606773 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.224572597 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.227316268 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.223669982 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.226020648 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.225352379 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.229063209 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.235558145 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.225336354 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.22496924 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.234191745 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.226182394 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.226669157 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.237875632 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.226565507 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.226161053 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.227156778 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.235025395 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.22388145 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.229087641 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.235752806 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.226038564 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.227164377 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.226345945 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.226583307 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.236205096 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.254799774 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.225988011 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.226323674 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.231990349 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.239583049 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.226600978 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.231280258 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.227298678 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.224384068 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.224257973 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.230025912 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.227189141 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.228993231 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.227574503 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.230095967 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.225276043 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.226842226 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.227332371 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.229599885 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.23026781 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.228695565 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.230814332 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.231806035 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.227807925 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.229397142 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.237847641 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.228621173 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.231333885 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.230393264 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.226665338 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.228619924 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.231237782 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.228979911 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.229808242 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.227675174 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.228279578 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.228832499 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.229081023 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.228209811 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.229640491 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.229852522 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.233500741 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.229258911 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.235625794 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.228704675 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.226739419 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.229612056 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.228644729 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.229227143 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.229520611 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.22825655 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.231677679 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.237886483 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.228595361 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.229787557 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.233652989 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.228923089 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.229908423 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.229299723 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.233513037 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.238632518 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.230733112 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.238211413 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.228628397 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.229228013 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.230616982 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.230803296 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.229209886 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.2301981 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.232888653 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.237240233 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.24406263 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.23871837 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.231299537 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.234601647 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.23108355 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.233813651 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.23664957 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.229334377 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.230756385 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.232620644 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.231149762 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.232163309 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.233555036 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.231714036 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.230899657 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.230427225 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.230638054 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.231584201 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.232184493 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.233069184 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.234433959 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.228683048 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.23188425 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.231498509 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.230765021 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.230088147 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.230975187 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.231397546 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.231897981 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.23180841 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.241955327 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.22965498 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.233971005 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.234269441 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.232327206 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.231565003 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.232199143 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.235747438 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.232708419 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.242181771 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.249734353 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.23478731 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.241815028 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.248830512 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.232307878 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.236663376 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.234008543 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.230845943 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.235826492 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.241477762 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.233297863 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.232927896 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.233289908 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.23288464 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.233746867 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.242852041 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.230305163 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.232975096 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.23355691 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.236339199 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.231192322 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.235981441 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.235143811 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.235977534 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.237681968 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.234095588 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.23418105 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.236486657 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.234163607 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.233946436 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.233048545 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.236847301 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.242111938 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.240959337 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.235794991 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.239621607 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.235959403 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.237850356 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.235704333 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.233493414 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.235053531 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.249710663 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.242869165 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.243949186 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.238435213 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.235099438 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.242071721 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.235970494 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.240455445 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.234924738 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.236351502 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.235571502 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.234023457 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.232141151 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.237288483 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.235707651 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.237271973 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.236562981 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.239288087 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.235795583 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.234610163 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.236094347 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.235239185 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.236463764 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.236317523 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.235609538 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.241189394 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.238316168 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.236478262 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.23661942 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.244384308 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.253477527 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.239254234 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.235426229 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.237597902 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.236424019 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.23888178 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.235620996 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.240395531 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.244727041 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.239561715 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.247593278 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.239701108 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.2478798 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.236387217 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.240265151 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.246435489 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.234532888 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.23586765 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.237793316 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.23758852 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.245763848 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.251563784 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.236819796 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.240887182 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.235946183 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.236328815 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.236988368 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.238425659 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.237125169 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.238128101 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.247451853 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.253821748 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.24224106 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.240276957 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.234245965 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.237443071 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.236744074 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.236505417 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.245014828 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.237311467 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.237241635 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.237131226 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.239180655 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.237726702 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.237983572 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.237036683 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.236336313 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.238688668 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.246772015 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.254795693 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.242626235 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.238059736 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.249541938 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.237807722 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.247125008 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.252602441 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.239419161 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.238878067 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.238421564 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.24321015 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.240151331 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.241508033 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.238662823 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.240082749 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.244184428 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.24063865 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.243971312 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.239467328 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.239172297 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.23949551 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.249789712 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.261379306 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.240874859 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.245186025 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.237286667 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.241941077 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.244423798 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.240026805 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.237926447 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.243356606 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.251053281 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.247013512 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.242013212 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.24069893 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.241283126 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.241161684 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.239909645 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.241158908 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.241225859 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.239886758 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.244257922 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.241196699 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.248185258 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.240774358 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.242278184 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.242708506 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.241996844 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.253163238 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.240533756 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.243766876 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.241109192 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.242942678 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.244069374 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.243013945 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.241742994 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.244032195 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.242851935 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.242823489 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.249727162 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.249672228 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.246065816 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.241181618 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.24178156 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.243377466 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.244190922 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.241800031 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.241846232 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.241615344 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.243489451 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.242352711 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.245073456 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.242600145 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.242368167 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.24364726 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.24321009 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.246521494 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.249398355 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.244526573 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.239485017 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.243400698 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.242336344 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.241285265 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.244739498 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.254004903 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.245321636 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.254187118 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.252545746 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.248474289 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.24398481 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.24687131 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.251955857 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.242887337 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.245313011 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.243445902 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.24684725 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.245755485 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.248166774 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.244429439 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.254293597 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.242828356 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.243079153 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254371827 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.263086296 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.244489797 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.248839697 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.24816503 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.245797431 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.241633887 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.244975793 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.24387159 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.254688003 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.264205835 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.244900045 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.248165997 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.243362465 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.247059516 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.249359818 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.245423627 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.246811079 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.24327725 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.246573827 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.246127943 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.244731286 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.242225736 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.245366666 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.246308347 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.247864805 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.253002003 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.24229091 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.253537397 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.246219685 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.246994619 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.246498331 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.245106131 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.243054127 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.243107146 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.24810956 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.244639072 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.246548184 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.250253531 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.246725672 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.248776826 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.247046728 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.246774626 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.248693627 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.256223552 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.25382152 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.243757449 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.247783645 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.248432669 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.248096109 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.246906446 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.246910033 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.248716888 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.251015742 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.246385603 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.247536228 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.246457197 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.251122069 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.266718733 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.263242093 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.249058163 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.24757224 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.253339435 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.247208815 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.245622275 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.24792717 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.25199027 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.25110873 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.255499378 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.247639219 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.255337526 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.264864943 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.249406435 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.252030997 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.251793752 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.256971388 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.253011712 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.247047016 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.24689576 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.253641889 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.266024831 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.247416855 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.259036822 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.279712045 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.265198692 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.250073664 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.248470541 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.249040941 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.248517025 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.252521796 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.248731943 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.248729881 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.249237865 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.247851948 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.250614563 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.254675947 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.250767392 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.248529831 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.249834709 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.250095672 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.251525534 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.246644787 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.249845321 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.250011444 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.251763255 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.249505186 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.249431467 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.249626299 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.264419688 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.259664788 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.250217131 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.25058833 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.24697438 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.254952375 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.25316961 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.25988457 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.257356976 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.250418226 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.249818026 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.251830672 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.249958516 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.248072271 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.251888722 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.251216101 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.250148686 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.247703678 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.268727373 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.257344699 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.257483079 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.251818938 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.250821018 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.250847753 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.25398489 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.250648541 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.250637827 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.252802306 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.2523039 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.255760614 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.249596526 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.251025615 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.255607719 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.259630463 seconds)
  done (took 739.409201887 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.248442505 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.250052177 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.24902933 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.250297163 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.249933708 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.249296426 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.249725594 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.250326128 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.249486522 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.250614115 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.250054127 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.250805965 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.250439414 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.25063173 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.250562098 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.250495366 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.250457459 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.249698496 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.250930001 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.250447907 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.250403872 seconds)
  done (took 27.436462281 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.252278609 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.251297163 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.250415136 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.252591705 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.250256579 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.253336798 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.251317392 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.25360834 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.253806613 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.250750454 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.253614962 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.254633233 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.251068415 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.251823888 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251261309 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.253773053 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.254890354 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.251919853 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.253784866 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.253657027 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.253671558 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.251253323 seconds)
  done (took 28.739473192 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.253420835 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.255472688 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.254066481 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.251127535 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.255084407 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.251679882 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.254923877 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.254229273 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.255352938 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.257183043 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.254380123 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.255363993 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.261383306 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.260337851 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.257715498 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.25397418 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.399027384 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.255087582 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.255724557 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.255963429 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.253234717 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.262483549 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.25347196 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.253481422 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.254780453 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.254821109 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.255409984 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.255813642 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.256417038 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.25722009 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.259186466 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.255763886 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.25526013 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.257425919 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.254990131 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.257173606 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.259636576 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.256958411 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.253114729 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.256742121 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.26590714 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.274773554 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.256324092 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.264915195 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.255240763 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.257157109 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.259995704 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.26479082 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.253343752 seconds)
  done (took 62.91611002 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.255683255 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.256749057 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.254420785 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.257452009 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.258223375 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.257415124 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.2575227 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.256474193 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.254970504 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.254907397 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.257309739 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.254848601 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.254481563 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.257657012 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.258138048 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.253829477 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.255499177 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.254289527 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.255706757 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.255383468 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.255097158 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.257769673 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.257921498 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.254949562 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.257910775 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.254969733 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.25491094 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.258784827 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.254721024 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.25598013 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.258488507 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.258166753 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.258823835 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.255938024 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.255691818 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.258535493 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.258001366 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.256343666 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.259363514 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.256397262 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.259700096 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.259293429 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.258775275 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.259628209 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.256423932 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.256774749 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.257031495 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.256232974 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.256858465 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.259918105 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.258980076 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.256747736 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.260437994 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.257797834 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.259801633 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.259924705 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.256913615 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.257321009 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.26048531 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.257377765 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.258805346 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.259634103 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.257275519 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.259685485 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.259217337 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.257579685 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.257024245 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.26025408 seconds)
  done (took 86.686176982 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.260239064 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.259220275 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.259885371 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.260667834 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.259845424 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.259560957 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.260350002 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.259361625 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.260288756 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.260821373 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.260710473 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.261157438 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.260274472 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.259855171 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.260521039 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.259394232 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.259511804 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.260361793 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.259336817 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.261102521 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.26194376 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.260625499 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.26093163 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.260452438 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.259676776 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.259363423 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.259508203 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.260475267 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.260850789 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.260885076 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.261037268 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.25993243 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.261913264 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.260408113 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.262661427 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.260367474 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.261236795 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.260640715 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.260280121 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.260533959 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.259999842 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.26153095 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.26163338 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.262676199 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.262214654 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.261864933 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.262116797 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.262566408 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.261940073 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.261994043 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.262445681 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.260111191 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.262447495 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.26147641 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.261619674 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.262888027 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.263482839 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.262003281 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.263327805 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.26241546 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.261856137 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.262577818 seconds)
  done (took 79.375274772 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.262679093 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.262319435 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.259785497 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.260874358 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.262647616 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.261007439 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.263499685 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.264244181 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.263176302 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.262658834 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263948217 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.261667221 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.261250585 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.264087182 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.262183896 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261035859 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.262293231 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.26115637 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.263850546 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.261360818 seconds)
  done (took 26.441177843 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.261187197 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.264195839 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.260898794 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.262711137 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.263740004 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.261079265 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.264679818 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.264121028 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.261499772 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.264765158 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.264810091 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.265945473 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261811372 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.261767152 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.265076079 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.261832723 seconds)
  done (took 21.405760605 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.262838846 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.264642108 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.265699287 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.265533826 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.261625031 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.263641171 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.265558323 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.263672164 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.263962935 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.266732671 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.265092514 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.266130583 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.266364037 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.265740839 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.26241102 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.266141794 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.264310294 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.26391957 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.265614848 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.266289933 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.265189381 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.263547289 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.267038887 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.267594319 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.265575571 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.265285105 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.265615 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.265154896 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.264437005 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.267530793 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.264473504 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.265020347 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.265338957 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.264681539 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.267819714 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.264015361 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.267877024 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.267485755 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.26827932 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.267090415 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.269077382 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.264900315 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.267024534 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.267630113 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.264454821 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.266837137 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.264246984 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.264892436 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.264733329 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.264338022 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.267706803 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.265251077 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.266869794 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.268025373 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.267207051 seconds)
  done (took 70.805819912 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.267727148 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.267048356 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.264446453 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.267806984 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.268051464 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.265754747 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.267745374 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.264998085 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.266343938 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.26807237 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.265677153 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.269195843 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.265895669 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.267075622 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.265721329 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.267972664 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.265378206 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.265798277 seconds)
  done (took 24.000286029 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.265485641 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.266879944 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.268885086 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.265979547 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.26643649 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.26945455 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.266052501 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.269335833 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268870539 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.26687195 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26583959 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.268679964 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268455315 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.26937741 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.266509945 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265630657 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.268562801 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.268767019 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.266808483 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.267506126 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.269723947 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.269477919 seconds)
  done (took 29.09026561 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.267304782 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.268575781 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.286644531 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.311231474 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.298806738 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.267200537 seconds)
  done (took 8.901462952 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26822079 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.26959371 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.266483961 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270707004 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271514015 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268120691 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268464715 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267965314 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270480385 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268179419 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267494215 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270342871 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2706604 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26817144 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270862879 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270329788 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26881935 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26839278 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269619786 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272386095 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268711851 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270658875 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267943418 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268714005 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267646188 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268590865 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270673906 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26919591 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268814799 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270605757 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270876216 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269108615 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27113849 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269518859 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272376717 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272422473 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267971746 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270768877 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270828437 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26952139 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.271936314 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272169539 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273118498 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268607738 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271728555 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270397178 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268691242 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270379056 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269685325 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274005052 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272661427 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270552013 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273746155 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273455401 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273627835 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272784048 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271200417 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270282759 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272632437 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271898621 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270797901 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273357239 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270629864 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271761361 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273963141 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272114601 seconds)
  done (took 85.051437343 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270848693 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271527362 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270364197 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272736754 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271931898 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272272947 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270641918 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271640592 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271093453 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27234093 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274897692 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271704481 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272619423 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272004866 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270443935 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272568612 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272451574 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271969377 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272775157 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2756349 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272096035 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273335623 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271719149 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272655549 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272610312 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274204427 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272512917 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271331908 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273132519 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271727301 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272337737 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272108777 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272999969 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.274058355 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273163327 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273557915 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27361684 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273413926 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273090113 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275963335 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27273613 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27705278 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273599283 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272814641 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274657997 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272780799 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273648198 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27326749 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272870391 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2736418 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273674541 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273308284 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27298539 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274473129 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273517245 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272934219 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274973917 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274630029 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272837803 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277138141 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274050849 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273417072 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27767417 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274813687 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274388841 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274953928 seconds)
  done (took 85.235244722 seconds)
done (took 1723.861628102 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.369444055 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.279885069 seconds)
  done (took 13.855478004 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.444902815 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.392065691 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.275147963 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.31135402 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.273050977 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.270330028 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.289488018 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.272646936 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.27440468 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.275470583 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.275823793 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.464759898 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.285370024 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.272173635 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.275616019 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.367094154 seconds)
  done (took 42.229109875 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.304847698 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.28355943 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.392036584 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.295643414 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.304000066 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.456419242 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.331690906 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.280245003 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.447542655 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.320871801 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.867752059 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.305196944 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.280916496 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.407307104 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.297579805 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.455570451 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.521189947 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.810420898 seconds)
  done (took 29.571727741 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.718664089 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.271846989 seconds)
  done (took 9.198728492 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.330021574 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.279191509 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.279759304 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.280681883 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.297652122 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.288295623 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.35022451 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.282401424 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.317279904 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.306118982 seconds)
  done (took 64.221014247 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.299380128 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.2815581 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.279433404 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.278809953 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.272177133 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.272134586 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.279242482 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.278102762 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.828374085 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.402776926 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.293486039 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.287041007 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.279786789 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.281128998 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.278291334 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.316537362 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.431509802 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.277570568 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.277621865 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.287180445 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.280842939 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.369241185 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.321001121 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.278284911 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.40472031 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.83987251 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.28391967 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.28912444 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.418204365 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.277754569 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.28103959 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.281211198 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.283867521 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.855709541 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.762753051 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.287595344 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.302370672 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.28960827 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.279252514 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.413915188 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.281783811 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.28908936 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.27397756 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.754014542 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.442669148 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.394808946 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.527142036 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.280971554 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.28317577 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.344064943 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.28223987 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.281554271 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.309743595 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.031665996 seconds)
  done (took 108.272348843 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.309705742 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.76399463 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.443728619 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.300621824 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.059047972 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.970576648 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.274823337 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.56066684 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.301088652 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.274294054 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.616584634 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.777225051 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.283682727 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.27873604 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.911153243 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.335844796 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.27638053 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.066077055 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.275572626 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.277992834 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.700557095 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.291161629 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.290585257 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.446279834 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.314212982 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.749012946 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.749626698 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.74682317 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.279595148 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.274342773 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.741306158 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.283592198 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.279380398 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.273982293 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.550947554 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.629148313 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.609097464 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.278989457 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.285615325 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.276258261 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.298812283 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.731461058 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.613239962 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.274685626 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.274150095 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.733649151 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.275450877 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.28367076 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.279115615 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.476899613 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.006020034 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.278659266 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.749379917 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.276001598 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.586798789 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.344614071 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.329775363 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.758346253 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.273147393 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.361770861 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.27956226 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.27460244 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.278654323 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.278479875 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.277360967 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.608196376 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.372968547 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.271106613 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.606639817 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.716285346 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.272419149 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.789008144 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.199635486 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.277165524 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.340541403 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.276621299 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.865783063 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.746435826 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.276099846 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.271833883 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.594210814 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.272354596 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.593177326 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.287627439 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.272841374 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.704846189 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.292482444 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.338762878 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.275527704 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.283271227 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.905494881 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.275872659 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.534623527 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.339189488 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.272635587 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.275832243 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.309582241 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.27224618 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.272129598 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.278240007 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.789037786 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.272874909 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.564703739 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.289879893 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.269945962 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.273362559 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.273376564 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.272066238 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.487413298 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.802576856 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.275274592 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.271134891 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.281598998 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.27607417 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.420244307 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.271481366 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.556885088 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.270649364 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.270949247 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.270225205 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.987460449 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.318401625 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.27100056 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.27351604 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.104575381 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.480808815 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.290680245 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.270118452 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.272843583 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.284681719 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.550659341 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.270905211 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.294550289 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.27418344 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.951954502 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.276464745 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.280212871 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.651952599 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.274961443 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.122074551 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.284885477 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.270760305 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.570575102 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.538046431 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.3053298 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.268691206 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.280005872 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.923304484 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.310345614 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.408025715 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.286091839 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.269249586 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.46544213 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.679353153 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.269585491 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.839383064 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.270233024 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.477166492 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.27083337 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.581800439 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.731281906 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.26698629 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.268692207 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.941950942 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.93770609 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.893723708 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.273336951 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.590471451 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.264292265 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.724794846 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.268471399 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.267846561 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.696552641 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.271374741 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.27093879 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.267830727 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.269886044 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.41195441 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.443054651 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.023888779 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.273222484 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.69552188 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.278040779 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.263807959 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.273281781 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.261463314 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.615996498 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.332774284 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.269082472 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.268676124 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.26587644 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.273451773 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.698711783 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.187864654 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.268428835 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.420282108 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.859266131 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.268946693 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.265671309 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.907431746 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.538031431 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.731485217 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.294640461 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.529240666 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.263216513 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.294377072 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.936254631 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.280242713 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.73884254 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.265011579 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.264543671 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.82266848 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.262919016 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.606135573 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.260469913 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.262795842 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.751931134 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.265826869 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.263857026 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.4751004 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.265549229 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.515915286 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.264884288 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.311327603 seconds)
  done (took 1096.795059701 seconds)
done (took 1365.352192514 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.261747342 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.261608414 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.249047682 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.26377018 seconds)
  done (took 26.236770108 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.270568973 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.268911083 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.270070049 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.266145994 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.269228862 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.265915734 seconds)
  done (took 8.811920921 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.325879841 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.264849149 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.264408626 seconds)
  done (took 19.05807433 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.458476644 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.40487576 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.590758265 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.19074296 seconds)
  done (took 9.848552827 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.269917339 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.27019564 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.269881426 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.271613001 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.2724289 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.274032983 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.273717178 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.267778197 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.273913499 seconds)
  done (took 12.646467943 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.720191362 seconds)
done (took 82.524576559 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.300054146 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.104154269 seconds)
    (3/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.291018833 seconds)
    (4/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.609622009 seconds)
    (5/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.767121525 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.510159354 seconds)
    (7/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.334869109 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.813694556 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.3055645 seconds)
    (10/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.289415614 seconds)
    (11/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.231403758 seconds)
    (12/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.766926298 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.660415766 seconds)
    (14/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.271135517 seconds)
    (15/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.517370412 seconds)
    (16/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.247599482 seconds)
    (17/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.330848846 seconds)
    (18/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.285600956 seconds)
    (19/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.344394882 seconds)
    (20/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.554137494 seconds)
    (21/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.936919742 seconds)
    (22/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.063354812 seconds)
    (23/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.256097516 seconds)
    (24/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.004175571 seconds)
    (25/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.276474341 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.30452053 seconds)
    (27/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.392367109 seconds)
    (28/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.087074243 seconds)
    (29/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.959708781 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.202259722 seconds)
    (31/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.248409166 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.499191581 seconds)
    (33/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.254367087 seconds)
    (34/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.754541402 seconds)
    (35/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.467992204 seconds)
    (36/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.834183717 seconds)
    (37/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.27167364 seconds)
    (38/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.285340973 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.595367725 seconds)
    (40/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.467133438 seconds)
    (41/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.346452484 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.94200105 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.375268599 seconds)
    (44/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.660644067 seconds)
    (45/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.526437736 seconds)
    (46/309) benchmarking ("sort", Int8, false)...
    done (took 4.267704739 seconds)
    (47/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.016437136 seconds)
    (48/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.551431939 seconds)
    (49/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.266979506 seconds)
    (50/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.408058605 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.516918827 seconds)
    (52/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.325863431 seconds)
    (53/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.375323291 seconds)
    (54/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.327673863 seconds)
    (55/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.299537836 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.377821223 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.364903429 seconds)
    (58/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.669039646 seconds)
    (59/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.851486565 seconds)
    (60/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.517130647 seconds)
    (61/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.269914774 seconds)
    (62/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.550562717 seconds)
    (63/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.254784757 seconds)
    (64/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.283154378 seconds)
    (65/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.500525436 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.511104861 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.666328467 seconds)
    (68/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.607310454 seconds)
    (69/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.271941916 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.953338274 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.049149784 seconds)
    (72/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.268572539 seconds)
    (73/309) benchmarking ("sort", Int64, false)...
    done (took 5.402597341 seconds)
    (74/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.394001282 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.609897415 seconds)
    (76/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.296222619 seconds)
    (77/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.253925097 seconds)
    (78/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.724810024 seconds)
    (79/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.556608911 seconds)
    (80/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.408712066 seconds)
    (81/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.270581937 seconds)
    (82/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.281850266 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.658621827 seconds)
    (84/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.43658872 seconds)
    (85/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.294776195 seconds)
    (86/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.268871572 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.381935996 seconds)
    (88/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.33083964 seconds)
    (89/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.268317154 seconds)
    (90/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.601904191 seconds)
    (91/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.272397003 seconds)
    (92/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.43620915 seconds)
    (93/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.555940919 seconds)
    (94/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.315754705 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.279416758 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.343572958 seconds)
    (97/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.508754278 seconds)
    (98/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.387951056 seconds)
    (99/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.611939303 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.111649618 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.794960755 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.256723809 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.29239792 seconds)
    (104/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.268220671 seconds)
    (105/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.050198671 seconds)
    (106/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.803263827 seconds)
    (107/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.402029259 seconds)
    (108/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.273059566 seconds)
    (109/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.284536372 seconds)
    (110/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.394392724 seconds)
    (111/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.965096555 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.272877034 seconds)
    (113/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.603562114 seconds)
    (114/309) benchmarking ("sort", Bool, false)...
    done (took 1.771532841 seconds)
    (115/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.290473317 seconds)
    (116/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.366286262 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.389899439 seconds)
    (118/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.524737091 seconds)
    (119/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.803672764 seconds)
    (120/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.450738459 seconds)
    (121/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.937867281 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.116565691 seconds)
    (123/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.530432132 seconds)
    (124/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.755393463 seconds)
    (125/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.336251603 seconds)
    (126/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.419377372 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.629540388 seconds)
    (128/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.968003122 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.34701641 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.787733289 seconds)
    (131/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.263418456 seconds)
    (132/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.376752936 seconds)
    (133/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.269976055 seconds)
    (134/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.02061219 seconds)
    (135/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.283839051 seconds)
    (136/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.946339808 seconds)
    (137/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.298955707 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.370522416 seconds)
    (139/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.295172527 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.953288232 seconds)
    (141/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.355929959 seconds)
    (142/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.300751958 seconds)
    (143/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.299437724 seconds)
    (144/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.272399086 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.098033121 seconds)
    (146/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.286373783 seconds)
    (147/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.766892452 seconds)
    (148/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.427689058 seconds)
    (149/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.793596305 seconds)
    (150/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.419481316 seconds)
    (151/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.289132884 seconds)
    (152/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.300436015 seconds)
    (153/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.451762467 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.297591401 seconds)
    (155/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.296951241 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.369334639 seconds)
    (157/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.71256812 seconds)
    (158/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.807837301 seconds)
    (159/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.337583879 seconds)
    (160/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.782615467 seconds)
    (161/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.409969122 seconds)
    (162/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.479895103 seconds)
    (163/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.984162257 seconds)
    (164/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.453466386 seconds)
    (165/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.659033868 seconds)
    (166/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.275580335 seconds)
    (167/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.549032862 seconds)
    (168/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.94370702 seconds)
    (169/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.770456045 seconds)
    (170/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.605588553 seconds)
    (171/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.356593381 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.502824809 seconds)
    (173/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.267335985 seconds)
    (174/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.275324811 seconds)
    (175/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.695198072 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.324993594 seconds)
    (177/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.302737485 seconds)
    (178/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.273110941 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.275755669 seconds)
    (180/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.102523163 seconds)
    (181/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.384043856 seconds)
    (182/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.316349646 seconds)
    (183/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.690242847 seconds)
    (184/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.832969594 seconds)
    (185/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.292089518 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.703845812 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.368896632 seconds)
    (188/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.65894688 seconds)
    (189/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.489795894 seconds)
    (190/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.422068992 seconds)
    (191/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.534812092 seconds)
    (192/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.333234484 seconds)
    (193/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.401693023 seconds)
    (194/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.277992716 seconds)
    (195/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.27629203 seconds)
    (196/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.604065691 seconds)
    (197/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.25375176 seconds)
    (198/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.264003086 seconds)
    (199/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.297935963 seconds)
    (200/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.326622439 seconds)
    (201/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.324812879 seconds)
    (202/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.989186428 seconds)
    (203/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.290411043 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.706322958 seconds)
    (205/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.417360295 seconds)
    (206/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.421622105 seconds)
    (207/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.486111109 seconds)
    (208/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.825673451 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.263558649 seconds)
    (210/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.361045436 seconds)
    (211/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.036948656 seconds)
    (212/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.732706629 seconds)
    (213/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.278170656 seconds)
    (214/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.261133446 seconds)
    (215/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.472688769 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.299198594 seconds)
    (217/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.278151253 seconds)
    (218/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.276907945 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.868049113 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.299778515 seconds)
    (221/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.537160036 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.11939063 seconds)
    (223/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.825317946 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.368066386 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.315308901 seconds)
    (226/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.299129876 seconds)
    (227/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.465180797 seconds)
    (228/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.276226087 seconds)
    (229/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.282509523 seconds)
    (230/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.264472543 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.292965263 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.875585597 seconds)
    (233/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.576205185 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.263625909 seconds)
    (235/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.427475274 seconds)
    (236/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.724263719 seconds)
    (237/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.411450116 seconds)
    (238/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.540534797 seconds)
    (239/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.827929185 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.599067455 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.110121432 seconds)
    (242/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.521687055 seconds)
    (243/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.509604733 seconds)
    (244/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.773226229 seconds)
    (245/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.27194428 seconds)
    (246/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.277754815 seconds)
    (247/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.048063736 seconds)
    (248/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.570246547 seconds)
    (249/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.32058707 seconds)
    (250/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.428597305 seconds)
    (251/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.816464295 seconds)
    (252/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.484323321 seconds)
    (253/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.287344342 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.329308668 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.619241632 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.483259467 seconds)
    (257/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.294755608 seconds)
    (258/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.871987756 seconds)
    (259/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.266394245 seconds)
    (260/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.71090975 seconds)
    (261/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.29153489 seconds)
    (262/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.470863432 seconds)
    (263/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.293963075 seconds)
    (264/309) benchmarking ("sort", BigInt, false)...
    done (took 6.282272757 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.308092928 seconds)
    (266/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.429397416 seconds)
    (267/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.386107383 seconds)
    (268/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.36414992 seconds)
    (269/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.960604084 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.669909137 seconds)
    (271/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.64643283 seconds)
    (272/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.614868763 seconds)
    (273/309) benchmarking ("sort", Float64, false)...
    done (took 5.528013283 seconds)
    (274/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.589527621 seconds)
    (275/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.501405783 seconds)
    (276/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.363342309 seconds)
    (277/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.403609211 seconds)
    (278/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.365635772 seconds)
    (279/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.838956829 seconds)
    (280/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.949831177 seconds)
    (281/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.308118768 seconds)
    (282/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.280919199 seconds)
    (283/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.271830567 seconds)
    (284/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.30267378 seconds)
    (285/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.267775508 seconds)
    (286/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.115053 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.071965745 seconds)
    (288/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.030057265 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.36390805 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.365868891 seconds)
    (291/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.401502709 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.395988383 seconds)
    (293/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.282751972 seconds)
    (294/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.928893675 seconds)
    (295/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.368626374 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.458515436 seconds)
    (297/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.308104883 seconds)
    (298/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.366432264 seconds)
    (299/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.31918178 seconds)
    (300/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.402121258 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.325462495 seconds)
    (302/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.283177386 seconds)
    (303/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.308914484 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.916027197 seconds)
    (305/309) benchmarking ("sort", Float32, false)...
    done (took 5.265545013 seconds)
    (306/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.731617583 seconds)
    (307/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.294147245 seconds)
    (308/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.300721635 seconds)
    (309/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.30759723 seconds)
  done (took 890.216007647 seconds)
done (took 891.42261894 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.315913257 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.310084558 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.295052912 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.316648586 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.406785093 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.327120932 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.30446478 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.29722819 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.343129938 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.344779848 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.291820483 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.32642327 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.296023936 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.293986163 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.295133326 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.309224066 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.183753438 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.293012972 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.310902638 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.304437368 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.309798187 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.294215334 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.344563004 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.326682783 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.299806726 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.299094805 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.298140757 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.31468623 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.406992353 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.297285597 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.299091284 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.306045047 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.184250074 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.293645048 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.290564351 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.315368264 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.306715663 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.306501084 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.298534228 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.327356862 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.535404823 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.295413084 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.299014699 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.297623096 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.296529993 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.301440985 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.297382913 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.302311248 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.309109075 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.310275977 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.529578748 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.306767629 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.298451627 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.296621039 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.307597784 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.296054327 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.300297558 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.312031432 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.315719601 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.312060173 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.180043766 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.303450133 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.298806413 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.313579662 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.304112281 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.583563664 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.291025666 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.301892472 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.543894268 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.303819444 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.588542832 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.306133851 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.300419532 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.312303278 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.330146461 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.189653563 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.294960252 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.29988527 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.307272298 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.296201177 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.309033912 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.310921164 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.304736863 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.301272718 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.313276291 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.32934455 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.30885878 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.29976006 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.308318258 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.318262754 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.306681582 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.308246648 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.302376383 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.29504079 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.309503297 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.303414631 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.302745416 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.303404095 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.302450925 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.310801974 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.547747884 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.315275256 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.296141175 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.296429131 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.299744563 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.314526581 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.547753311 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.299625851 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.323151112 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.347676637 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.302237938 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.187965918 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.302812455 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.31465449 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.309471145 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.302916614 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.296119171 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.188640162 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.556033071 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.315601885 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.301763042 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.298687874 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.315721574 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.302378934 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.297186551 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.197332788 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.301751957 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.314051809 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.422260996 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.311004513 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.332558364 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.29977214 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.303923729 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.327560327 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.317907932 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.330512539 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.303174515 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.316802572 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.315781314 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.297502017 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.315650256 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.302841187 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.298396817 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.302567402 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.29221055 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.323526064 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.309152912 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.310631937 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.314741323 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.406136672 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.284290992 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.172959478 seconds)
done (took 217.338831415 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.344508915 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.279381027 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.375642246 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.283034527 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.37917999 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.381434027 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.279684113 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.279279896 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.279256803 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.661548391 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.280027384 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.280287053 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.276985445 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.280097668 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.366502632 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.283198066 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.279183082 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.623791114 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.28277261 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.353955177 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.276586225 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.280278185 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.281736 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.666732618 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.281968973 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.277922997 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.354676834 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.283141231 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.630281606 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.284093066 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.279722795 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.630411287 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.372935613 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.300301131 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.293571463 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.290048335 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.382269249 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.297996662 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.36581653 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.366330449 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.378795276 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.321819592 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.285521487 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.283596334 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.283769902 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.285475141 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.281374391 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.31106625 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.280649706 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.28167139 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.626581818 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.292956588 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.28279307 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.281356729 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.282123285 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.31271073 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.282465003 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.284744875 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.375068622 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.285320753 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.348166278 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.669379101 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.664315079 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.284754633 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.280288433 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.283562036 seconds)
  done (took 145.096197954 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.35448193 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.360198755 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.390424513 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.286362023 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.337058061 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.396006076 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.286486186 seconds)
  done (took 10.631582268 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.292060123 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.285831561 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.335334541 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.33513721 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.285673087 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.432719534 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.285197534 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.297324136 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.283344299 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.339116313 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.286643678 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.28688956 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.29276449 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.285595306 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.334336201 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.298353526 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.402047868 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.287365295 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.286986318 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.443724501 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.284375483 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.292959932 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.339142248 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.298784929 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.28778883 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.293654289 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.855582403 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.285998194 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.284547035 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.287040102 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.28463243 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.325983868 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.288259163 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.280923719 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.28429177 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.404358566 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.287355884 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.285039345 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.287410283 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.284667763 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.287552738 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.28814091 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.288750222 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.28568077 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.287072125 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.312817543 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.288191592 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.287899256 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.288518533 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.288827181 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.338136441 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.288780164 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.286833791 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.285350025 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.343470409 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.295293451 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.289440738 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.285072832 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.288527331 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.285415878 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.445786583 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.336743763 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.289022922 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.337012919 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.288528941 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.289072052 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.288289642 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.289343452 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.343872001 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.288573649 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.338326029 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.286892997 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.445209997 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.313310727 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.290263909 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.292916166 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.292573007 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.289337036 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.284793483 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.29590638 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.286664275 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.29235671 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.29651969 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.286830553 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.287591879 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.393254545 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.398796048 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.287090006 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.302705722 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.297201153 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.286943671 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.34290535 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.289611661 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.287602178 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.343057637 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.405372184 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.344073744 seconds)
  done (took 148.768127688 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.294705993 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.299066145 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.29246372 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.307528576 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.291157411 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.292431308 seconds)
  done (took 9.002928628 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.292657689 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.291092962 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.290748229 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.291175717 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.29107622 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.291795251 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.291901576 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.293747084 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.293782964 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.291623456 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.292304493 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.2935157 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.293466701 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.291755277 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.29153959 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.292060895 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.292852278 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.288830475 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.292030861 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.292783152 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.392191865 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.292230583 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.292197012 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.293627821 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.296008578 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.292736318 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.300263181 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.292360586 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.292399392 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.301401861 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.295219905 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.293234706 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.294509823 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.298318239 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.296075086 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.294837203 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.295156246 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.295096037 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.290937656 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.294049572 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.29520628 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.293907036 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.292823264 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.29512163 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.297058817 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.298407338 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.29879369 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.303022866 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.294037254 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.295574179 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.295881149 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.294152618 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.294712497 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.296283994 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.299246658 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.298602828 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.299567018 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.294254513 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.294791579 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.295916373 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.294431563 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.295685134 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.296818705 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.298162024 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.301787653 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.296553917 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.296930761 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.298091708 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.295105951 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.294862859 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.296553541 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.292958257 seconds)
  done (took 95.546578821 seconds)
done (took 410.256582176 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.433757101 seconds)
  done (took 7.663549803 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.460259231 seconds)
  done (took 7.691966024 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.874154433 seconds)
  done (took 19.113768343 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.315502017 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.334358198 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.303820562 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.289525449 seconds)
  done (took 26.474366451 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.42347314 seconds)
  done (took 7.654100474 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.283682146 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.27964306 seconds)
  done (took 13.791009628 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.696530055 seconds)
  done (took 7.919033235 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.093421392 seconds)
  done (took 8.315844233 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.289812534 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.284448563 seconds)
  done (took 13.809273869 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.276646009 seconds)
  done (took 7.500959519 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.87052498 seconds)
  done (took 8.095098679 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.28935851 seconds)
  done (took 7.514795656 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.34577565 seconds)
  done (took 7.568143524 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.322353161 seconds)
  done (took 8.541226134 seconds)
done (took 152.885108868 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.275426389 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.276780188 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.276262286 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.275434104 seconds)
  done (took 26.321320119 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.313589824 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.313466273 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.313674908 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.322252664 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.314394027 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.311566086 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.303791876 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.304440379 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.322648074 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.313909177 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.310111676 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.31622195 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.309364457 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.301200904 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.31111981 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.311142991 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.320273706 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.307448023 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.298629313 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.309257485 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.273327882 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.317044356 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.309411269 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.274124058 seconds)
  done (took 32.618083378 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.467765937 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.342657814 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.424860234 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.324000713 seconds)
  done (took 6.76781989 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.323348708 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.323538276 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.3356289 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.374602763 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.409121433 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.333339359 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.297867929 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.290832363 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.278049854 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.324321306 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.400258999 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.339863291 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.412034235 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.271285978 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.457117352 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.27062087 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.271082027 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.32365393 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.374020272 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.392360226 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.271571059 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.321806128 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.325788056 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.340693734 seconds)
  done (took 33.270502267 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.269662885 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.278564429 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.276381269 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.270974377 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.270428 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.270512504 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.276821608 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.272309225 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.292223875 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.271831318 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.269889457 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.270660727 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.270720912 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.271553084 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.271167361 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.284151931 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.284051741 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.271092799 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.274611633 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.277202897 seconds)
  done (took 26.702202293 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.265107074 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.204522327 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.616649986 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.521348142 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.265281929 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.268248598 seconds)
  done (took 28.349637437 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.331646183 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.448463518 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.276212785 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.585398055 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.664820398 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.275449734 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.272980145 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.478999701 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.746266147 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.74933195 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.323483943 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.335031203 seconds)
  done (took 18.696338486 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.277771238 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.267228142 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.276852179 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.282744584 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.317189431 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.276857522 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.276845151 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.263594724 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.321288537 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.32475444 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.277695129 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.31901227 seconds)
  done (took 36.690955561 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.352176627 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.3140444 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.14753785 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.982377647 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.643859278 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.476905786 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.132526387 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.68248698 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.270347381 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.539917653 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.891457985 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.369814605 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.518972418 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.266641303 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.269888558 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.200737471 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.492126858 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.707636897 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.269325266 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.905423336 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.293973705 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.269624038 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.057298297 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.293798513 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.47746298 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.395319407 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.581039565 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.266951613 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522835041 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.278981349 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.276753049 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.267443951 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.540216895 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89919554 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.359028071 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.2775958 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.945550828 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.980360387 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.26601721 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.986426275 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.682380098 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.271396604 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.276998283 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.267543542 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.201269933 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.275464828 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.690863001 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.273720812 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.978435224 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.266907322 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.277334256 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.361191357 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.27169663 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.084521979 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.265133309 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.268243919 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.265133751 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.27443547 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.836873722 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.365537635 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.277763926 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.204554154 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.372382836 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.991888527 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.836981302 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.370591694 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.271574342 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.272075568 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.202141657 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.969119737 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.288283118 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415192633 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.289376142 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.917340249 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911016925 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.928762306 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.211478316 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.772946754 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.27752033 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.204560076 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.496556704 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.269108254 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.203191261 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.2135289 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.202632106 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916792327 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.277408145 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.614094055 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.276757955 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.683026331 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.281159683 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287405895 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.292332772 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.491762343 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.155199639 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.26842559 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.679624269 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412617593 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.291220709 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.68576192 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.204762007 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.273851041 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.524317497 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.480909384 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.270349418 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.221637423 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.454619468 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271172807 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.289012165 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.280995586 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.282867446 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.793493217 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.283181051 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.377442177 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290342129 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.270279349 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957095697 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271661943 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.374306257 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.943014973 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.509226984 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.997299502 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.272514183 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.353449031 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.274302031 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.271045817 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.016393408 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.787811364 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.271958737 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.273109438 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.274729729 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.28305538 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.271664574 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.21739705 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.26868533 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.959945638 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.274953755 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.495312477 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.279593359 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.549544832 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.205455676 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418694575 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.327529773 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.493888347 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.390627941 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.270357201 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.529940283 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.275100067 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.274713442 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.286132883 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290494678 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.370910646 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.293588321 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.272213557 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.529047007 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.276289061 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.277073103 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.013314788 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.700313389 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.279328038 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.278170472 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.090991167 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.801469476 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251668511 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.281056315 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.162107777 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.28678125 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.337414445 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.279192245 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.283140245 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.910187396 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.063197896 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.280340377 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.273377662 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.499135863 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.283993846 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.0074008 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.356610247 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.454651966 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.803193602 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.287858296 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.207490677 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.98409069 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.966383248 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274075814 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.208566979 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.274248797 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.283706677 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.284632996 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.4971274 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.803188404 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.276663624 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.932758651 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.282529661 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.285955218 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.27964268 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274916202 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.877419955 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.392900211 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.284949544 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.288956756 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418240702 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.289574828 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.208685503 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.278065487 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.279936526 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.275675135 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.275272493 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307932294 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.939765181 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.741639107 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.534727245 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.00259389 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.287544713 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.093189993 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.305951043 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.280902494 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.725688311 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.293512259 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.288273709 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.286076804 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.286266971 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.99028094 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.937692367 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.84506677 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94576463 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.760100824 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.146304657 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.277867819 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.291959913 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.701430204 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.210927024 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.831914413 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.44588107 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.69931779 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.221916604 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.459762821 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.386343277 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.970425365 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.288990644 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.503994492 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.139605028 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.725961757 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.303302445 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.487723551 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.311377104 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.289061571 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.207856015 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.563979077 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.494981567 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.734186213 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.356912661 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.695442064 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.732805777 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.292852496 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.27707282 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.563249971 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436916707 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.996171698 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.4499441 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.280480987 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.969289711 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.752377561 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.287204969 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.503656696 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.850296337 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.280134042 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.477439797 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.216264185 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.289403848 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.289389377 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.279855138 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.399085993 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.237068304 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.546905733 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.288486445 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.21320486 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.278742341 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.760306991 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.13494032 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.284818052 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.280287235 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96672974 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.280568912 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540315864 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.281854176 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.876086816 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.2863492 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.213622992 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.213557675 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.971817415 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.285827312 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.256472077 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.728726652 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.367208966 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.259182556 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.302127485 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.123877576 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.533771266 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.295028989 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.811334598 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.505973909 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.070126373 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303356293 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.380903507 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.761038423 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.280192721 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.2796518 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.515603769 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.100119974 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.505505668 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.193853005 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.186018212 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.279787025 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.494807164 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.28110877 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.981193583 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517175592 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.998736636 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.288135828 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933344464 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306385946 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.982430482 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.21093143 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.386478317 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.28817346 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.360876871 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.291943896 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.291821172 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.292630349 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438933861 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.99591708 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.295318813 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.295303215 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.374573017 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.418961529 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.885316219 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.287479955 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.819445435 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.962011836 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.815501235 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.297800435 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.282569502 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286856478 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.216520212 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43128273 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.508047212 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.556499606 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411866481 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.425280227 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306825272 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.769666716 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.308616027 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.496677989 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.557806332 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.177305335 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282884006 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.298197573 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.283653811 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.293704172 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.494330018 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.736790105 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.796970826 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402767523 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.292439085 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.702475028 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.558834823 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.284455586 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.283601786 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.875582229 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.294691897 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.576346276 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.289360065 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.015117922 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433712374 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.293647521 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918785686 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.295011294 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.443539234 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.057262502 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.043346653 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.5416459 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.70347615 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.298925765 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.820850727 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.922675767 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.550905756 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.350775976 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.299234877 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.388401192 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431736585 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.283551718 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.287842484 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.285539166 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129539572 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.995550729 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.294921447 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.818890396 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.550216892 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.283264827 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.28441691 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.308967102 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.295839481 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.510029972 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949810184 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.511607448 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.296328475 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.29223077 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.102275652 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.818476057 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.30202572 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.220427852 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.291163428 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508446874 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.525401517 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.310526525 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.739983006 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.998345487 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.801049813 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.260397307 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.308000169 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.286811142 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.926474009 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.820269022 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.896148681 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.7401768 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.853603089 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.293717625 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.563763405 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.292302939 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.290359294 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.565651537 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.292095855 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.291771388 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.300386648 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.820280472 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.990247615 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.291953937 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.979678491 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.227296738 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.628065481 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.904023875 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.226601776 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.297619462 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.458922084 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.2915309 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41733654 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.300629779 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.294893892 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.288709601 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.045970423 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.562171508 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.294623514 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.27728885 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.82591025 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.303303835 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.297671813 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.510264789 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298174869 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.96129852 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.638296034 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.543043842 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.300533053 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.277296155 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.292504935 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.290792296 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.277126728 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.487961985 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.511708313 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.806603484 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.291738973 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.302627735 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.294664165 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.505859411 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.501023455 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.023714588 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.315793007 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.290929882 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.307345616 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.195713003 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.790887901 seconds)
  done (took 1547.697047949 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.302277782 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.306997405 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.312778733 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.366245541 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.295848792 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.391182038 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.333830124 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.368766315 seconds)
  done (took 51.90937189 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.298671218 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.512089528 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.323008473 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.303241655 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.300558548 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.292468354 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.69642237 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.295217205 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.301053431 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.301478017 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.304799141 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.294149364 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.869738838 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.304758124 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.300949754 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.287894176 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.298989894 seconds)
  done (took 64.518939734 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.297792777 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.486029518 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.382611794 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.295299408 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.971581056 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.309677769 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.466314938 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.325184655 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.293409623 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.308018283 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.938013278 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.319773348 seconds)
  done (took 82.627673015 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.298706776 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.297544891 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.298308776 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.298642067 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.298789013 seconds)
  done (took 7.725940887 seconds)
done (took 1965.117598499 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.547131507 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.921162532 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.906556906 seconds)
  done (took 5.060898982 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.440030278 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.487433224 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.608230868 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.614858509 seconds)
  done (took 7.383796972 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.56870896 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.682034285 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.482353915 seconds)
  done (took 5.967047816 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.566554351 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.308557373 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.370293809 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.291735426 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.29474301 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.296010931 seconds)
  done (took 20.116535028 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.295484101 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.298338859 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.295957926 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.298456521 seconds)
  done (took 6.422591891 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.277386541 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.002820273 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.280808151 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.295874989 seconds)
  done (took 18.09109659 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.042561906 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.054838715 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.039551271 seconds)
  done (took 7.371065131 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.293013992 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.140800137 seconds)
  done (took 9.667846805 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.607413166 seconds)
  done (took 2.841870243 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.427073151 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.561167334 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.253902748 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.178049376 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.261910806 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.708567859 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.743385587 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.377427318 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.165060964 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.212190641 seconds)
  done (took 26.123365589 seconds)
done (took 122.073996347 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.798563041 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.670899865 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.496485272 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.765698136 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.520148914 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.496139713 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.503678022 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.734825849 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.274345133 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.268779705 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.811356949 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.518860053 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.451862437 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.670393803 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.449169995 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.29640695 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.518745468 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.840001711 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.451110652 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.645654942 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.505027408 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.403798259 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.638769834 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.466111252 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.520780401 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.443924088 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.985011129 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.296977252 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.625753751 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.049297093 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.445160987 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.821139137 seconds)
  done (took 183.620169155 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.294053035 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.294313919 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.306994859 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.307171224 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.29423345 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.29554536 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.309803262 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.307532173 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.305666567 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.294274513 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.294906551 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.295630042 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.308928119 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.294580849 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.313851194 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.317444513 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.294170861 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.295673678 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.311251937 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.294660949 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.29759603 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.302310118 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.295494669 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.295515732 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.309044563 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.295951618 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.294770492 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.296472089 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.295618744 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.294653707 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.297742399 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.298718551 seconds)
  done (took 202.842162906 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.299522222 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.295144364 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.296737699 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.31146876 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.307169072 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.298067277 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.298621895 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.309679025 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.295828714 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.309244527 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.296547435 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.306093826 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.298471683 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.295798354 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.299213047 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.297724445 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.2995848 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.2984817 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.298073817 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.298626787 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.312323376 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.296716373 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.309435508 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.304977501 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.298430969 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.297212404 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.297033686 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.297438248 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.309365398 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.319487501 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.300522076 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.310140176 seconds)
  done (took 202.901631116 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.499108584 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.304814746 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.305039227 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.261511063 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.305507086 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.305541348 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.299699781 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.501622786 seconds)
  done (took 14.021881189 seconds)
done (took 604.621672372 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.491475402 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.214072281 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.497078729 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.327412537 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.992493283 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.328815459 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.324732966 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.478299098 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.205943175 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.485274732 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.481204721 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.325334646 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.617216325 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.324740528 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.561324764 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.416950677 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.13913633 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.251153884 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.624520294 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.78120848 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.564742467 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.697490087 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.480230919 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.197163378 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.628234043 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.698169855 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.937595561 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.140208848 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.327248296 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.624054636 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.856770667 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.243883278 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.376029425 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.35911482 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.416035999 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.397079757 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.1678753 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.356434554 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.496235308 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.466109632 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.77124433 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.026131161 seconds)
  done (took 88.337075337 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.295267721 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.294553132 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.294313253 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.294913947 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.296239736 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.295045764 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.295144422 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.295108463 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.294624075 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.294738088 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.294803839 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.296469578 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.29479454 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.29535449 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.295419096 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.29584481 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.295951188 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.297445924 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.29501129 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.295366327 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.296230563 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.295466128 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.296334325 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.295751724 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.296248453 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.296455379 seconds)
  done (took 34.925530701 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.308223757 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.530781937 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.69517912 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.316845784 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.30789569 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.313212329 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.377990022 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.311394749 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.312342212 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.312078978 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.456306081 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.313354662 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.343679253 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.702605013 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.314682157 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.309991045 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.309712862 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.309185167 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.537721815 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.321452399 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.380345146 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.314476578 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.378904003 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.323266597 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.312559567 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.310638577 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.314522549 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.798890029 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.314635083 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.45760663 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.990057387 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.379250931 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.756767065 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.71393957 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.989762525 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.31508988 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.310721258 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.462853532 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.313943884 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.310192178 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.380378092 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.314432735 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.703923294 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.920339347 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.328745858 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.311320926 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.826647055 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.460074184 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.529670297 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.319439802 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.725590373 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.316127241 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.313258542 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.312798302 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.528576471 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.32034028 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.311485372 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.815728132 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.317853411 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.380914083 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.314646354 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.313019208 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.546576999 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.315067198 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.536651598 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.316339211 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.321339667 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.313221044 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.707396891 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.31600012 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.954473574 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.328599615 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.312924603 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.459393149 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.538268217 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.852313394 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.315952983 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.551788374 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.769065777 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.380003169 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.31688908 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.791361468 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.38400518 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.317732936 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.316332145 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.315564666 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.313468714 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.358665967 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.380471363 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.869814908 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.933515292 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.834363385 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.385548938 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.327685426 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.314316313 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.819711267 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.327981965 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.314201607 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.701151817 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.937367939 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.327987396 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.322496733 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.923886394 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.33127982 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.383996778 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.319975719 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.713790309 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.317948319 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.357147816 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.315134796 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.323046257 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.318206267 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.383805102 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.323455587 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.315158631 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.912484882 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.481916469 seconds)
  done (took 171.933182442 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.309217073 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.307777709 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.307755566 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.309141161 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.308069195 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.314617114 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.314875008 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.309028347 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.313926351 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.308510134 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.307697378 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.308494975 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.309188165 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.312790752 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.319748519 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.316827682 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.918659071 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.309625155 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.308186475 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.311513665 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.082786289 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.311820447 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.3189063 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.31203416 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.310116078 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.312341561 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.332532357 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.312902563 seconds)
  done (took 151.368669738 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.316462058 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.823366944 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.319618687 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.43210652 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.336208212 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.314237809 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.430629654 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.369983986 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.318705719 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.314989213 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.313911181 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.588998652 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.320076378 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.77969898 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.487806176 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.434933422 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.782255172 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.320299068 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.314606945 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.314460098 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.43445256 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.324780751 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.590027257 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.822662704 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.317984332 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.826272486 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.308484592 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.318086398 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.316756112 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.829505101 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.317886456 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.590986895 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.389046525 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.374234222 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.829426869 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.783667797 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.780665825 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.447529509 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.320580516 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.315488705 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.315223017 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.306470482 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.828055671 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.32164374 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.318180787 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.821052052 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.334666151 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.318292084 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.326604012 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.316634304 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.371553429 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.371959441 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.595490743 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.836942277 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.388708545 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.340553984 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.435159902 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.687294997 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.323702338 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.777520358 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.306468253 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.831033325 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.32411003 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.309113608 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.318175742 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.323338575 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.449786809 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.436972075 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.787668625 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.322888051 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.783528147 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.453048526 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.320825637 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.31837483 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.321187944 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.834122086 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.786638437 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.453374196 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.439746528 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.492176095 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.311801121 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.318833772 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.308957304 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.387636469 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.319410625 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.836579284 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.784325785 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.320369584 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.320928342 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.320646922 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.320506886 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.475143335 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.837208037 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.389060458 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.778074442 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.609791547 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.598966175 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.322890186 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.372476646 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.321408232 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.597979485 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.324868815 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.371164485 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.750386641 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.600257543 seconds)
  done (took 155.974509969 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.540000077 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.434286079 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.405271363 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.425678078 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.824446769 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.866430347 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.45571165 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.441477902 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.4216373 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.551187478 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.3961554 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.407952736 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.490020624 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.392902874 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.007481608 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.384855931 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.407241845 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.43640096 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.42041388 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.29019589 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.919244295 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.590936653 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.479113744 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.306246493 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.409081719 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.034726545 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.840442039 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.822160521 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.477716391 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.483189318 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.814192972 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.393131627 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.207166524 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.947993975 seconds)
  done (took 62.980580302 seconds)
done (took 666.759535909 seconds)
SAVING RESULT...
DONE!
