cset: moving following pidspec: 29002
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.951616229 seconds)
loading group "string"... done (took 0.585183242 seconds)
loading group "linalg"... done (took 9.699882816 seconds)
loading group "parallel"... done (took 0.186555036 seconds)
loading group "find"... done (took 1.549191896 seconds)
loading group "tuple"... done (took 2.187441614 seconds)
loading group "dates"... done (took 1.513917402 seconds)
loading group "micro"... done (took 0.243559215 seconds)
loading group "io"... done (took 0.587439995 seconds)
loading group "scalar"... done (took 47.161849146 seconds)
loading group "sparse"... done (took 14.305249511 seconds)
loading group "broadcast"... done (took 1.163876285 seconds)
loading group "union"... done (took 13.035458628 seconds)
loading group "simd"... done (took 2.72022933 seconds)
loading group "random"... done (took 10.971949342 seconds)
loading group "problem"... done (took 1834.305523733 seconds)
loading group "array"... done (took 27.233975378 seconds)
loading group "misc"... done (took 1.192361337 seconds)
loading group "sort"... done (took 4.004013052 seconds)
loading group "collection"... done (took 19.901782068 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.776332311 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.147810951 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.220030712 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.377189999 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.243548012 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.169606729 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.177284202 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.585798321 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.018383496 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.290691695 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.159714442 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.600301159 seconds)
done (took 6.480248 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.268690307 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.390258586 seconds)
    (2/2) benchmarking "String"...
    done (took 0.181937314 seconds)
  done (took 1.227861102 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.080078569 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.187530699 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.11850035 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.116354824 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.10309953 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.116583353 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.117558147 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.117294682 seconds)
  done (took 1.536018704 seconds)
done (took 3.777446626 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.558202632 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.867289056 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.568844208 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.174233143 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.206183904 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.183082554 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.324259509 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.169599632 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.130252608 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.114341185 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.210463555 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.352771484 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.516388099 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.005675438 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.108237718 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.114459848 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.102572988 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.715088073 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.086595838 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.139530116 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.598719552 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.119259283 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.12305732 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.129230986 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.214235903 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.138766934 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.175256494 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.094824766 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.675433624 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.107165773 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.239875582 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.08816685 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.183349973 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.25644249 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.085030063 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.111690105 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679099422 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.188855824 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.123814583 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.119637133 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.657842375 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.086368608 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.244781581 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.113846095 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.117490105 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.19553707 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.125547 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.099607273 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092291485 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.103104332 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.163486256 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.467423954 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.110007645 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.175297034 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.113987322 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.713710721 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.101427416 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.161629085 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.142056332 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.114353945 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.088711072 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.116301585 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.160356946 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.116506652 seconds)
  done (took 20.440167273 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.164969953 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.171299025 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096963613 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.146533246 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.162817058 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.085207836 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.102927265 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082443556 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.133436457 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.19460756 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.143764709 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.190277677 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.079322607 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.106389964 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.146682165 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.25477776 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.110188954 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.126745645 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.104182056 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.109469217 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.130521953 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.11762495 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.112456529 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.114990108 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.173276294 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.207639414 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114320008 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126719273 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.102635429 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.120647898 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144481462 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.15195478 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095848851 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.088673378 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.206468516 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123682596 seconds)
  done (took 5.5232077 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.19518078 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.25319291 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121261373 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.223944355 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.200350407 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.15349021 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.171194454 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.16119457 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.290898198 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.30949579 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.187955428 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119073232 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.118813367 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099890211 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084239497 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.098785924 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.704211676 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.186286253 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.154669458 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.173364243 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107384663 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087129794 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.397743882 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10689239 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.084499728 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.107277401 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.098179137 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.209760881 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108931923 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.357119252 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123852069 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.114920781 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135195808 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.203479641 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.138260585 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.147784678 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091306762 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.102434525 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.224737682 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.11475274 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098576466 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.130950509 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12226086 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.137619127 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.106199929 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.117031966 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.249867849 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.088162258 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.127620899 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.155709553 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.219211118 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.139101037 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.085749053 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.387492866 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.103300442 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.109352582 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.101217711 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.363938939 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.143400475 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.086471363 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.099703169 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105689956 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.085002174 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.44901117 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.097653024 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.356612522 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.088050406 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.186684808 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10430884 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097765028 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106804853 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104262333 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.10661561 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.10082081 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.082854671 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.100649929 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098757584 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.089770367 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.124272735 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106664999 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083482935 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167252881 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.123769344 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.102131027 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130182771 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.104211203 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.099916618 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130970588 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.088568541 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.103148729 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084173706 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.104281007 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.177241853 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.109619329 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.124933942 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108107885 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145473893 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.086873114 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.248997922 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.101205609 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.130181672 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.104099598 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117089005 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.125725132 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102328131 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106115386 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.082412726 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.102341641 seconds)
    (109/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.102087225 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.08596091 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165899473 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.088879577 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.100692009 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.100099264 seconds)
  done (took 25.602112497 seconds)
done (took 52.220956381 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.521703408 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.126188254 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.126512338 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.125967194 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.12395229 seconds)
  done (took 1.766122978 seconds)
done (took 2.481789352 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.393361174 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.193494886 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.126975923 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.192542556 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.11042134 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.21700616 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.180897209 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.124465748 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.213274592 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.106179111 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.187647663 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.105751269 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.111169568 seconds)
  done (took 3.007449782 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.104844076 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.131118177 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.090548664 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.120899948 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.099941334 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103503725 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117793669 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.136262845 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103507927 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111539263 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084987736 seconds)
  done (took 1.916886385 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101213367 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.124290925 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092012474 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118493919 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.102131414 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103414783 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118391633 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.112631557 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.119445003 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114771437 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088092778 seconds)
  done (took 1.908981057 seconds)
done (took 7.539320487 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.176083821 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.909122997 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.15661519 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.205826347 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.387045593 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.252104913 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.619364185 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.168535997 seconds)
  done (took 12.7992041 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.18374305 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.106955626 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.091873576 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.109086191 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.092533727 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.108338102 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.106071174 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.091284819 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.106084144 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.094069293 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.10770376 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.108114978 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.092955502 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.108174416 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.093175272 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.109419222 seconds)
  done (took 2.489969421 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.146458487 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.147085125 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.098188407 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.120492468 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.112401689 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.098538032 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.116349876 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.113501916 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.098166583 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.113616774 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.120602028 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.103257454 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.120278565 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.111308057 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.116592605 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107811749 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.113587801 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.116502747 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.101216989 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.117585174 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.121664844 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.099614971 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.118048573 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.120164014 seconds)
  done (took 3.564075548 seconds)
done (took 19.570079415 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.18297686 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.106209393 seconds)
  done (took 1.010337334 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.155639334 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.158550591 seconds)
  done (took 1.039727022 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.117706143 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.102798865 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.146756976 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.124640373 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.104039708 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.08999027 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.141749648 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.10674641 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.091155168 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.108688929 seconds)
  done (took 1.863504967 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.095220824 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.10943215 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.116695386 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.154615895 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.102991482 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.109894126 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.112875784 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.095097165 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.112969506 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.106849455 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.09951666 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.12929224 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.113608196 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.134476285 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.097989915 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.118487801 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.120969596 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.114595355 seconds)
  done (took 2.777650664 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.089360061 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.10632515 seconds)
  done (took 0.924166301 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.095302299 seconds)
    (2/7) benchmarking "second"...
    done (took 0.105824192 seconds)
    (3/7) benchmarking "month"...
    done (took 0.096464716 seconds)
    (4/7) benchmarking "year"...
    done (took 0.111005505 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.10641777 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.090968537 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.107835792 seconds)
  done (took 1.442149275 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.553287511 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.280683386 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.383720379 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.128494097 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.150427637 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.403663702 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.152406728 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.122005191 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.122569688 seconds)
  done (took 3.069579497 seconds)
done (took 12.853873705 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.097455457 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.242862457 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.601721159 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.129505121 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.089227342 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.164233641 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.325187482 seconds)
done (took 2.385921474 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.365236376 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.163391411 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.097632897 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.104384382 seconds)
  done (took 1.464248405 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.084865105 seconds)
    (2/2) benchmarking "read"...
    done (took 0.11310852 seconds)
  done (took 0.936119477 seconds)
done (took 3.145100262 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088215327 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.138375555 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.103459941 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.087370496 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.10499291 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.089223283 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.109877238 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.089783053 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.105071023 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.089107873 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.10557107 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.088299765 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106336744 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104020387 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091846214 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104908754 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.090169325 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.105209963 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089598269 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.103668734 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087144998 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102113863 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.102281601 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.088044781 seconds)
  done (took 3.151309847 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.113597691 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.106564624 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.109863268 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.094695764 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.111085139 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.110031344 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.094260076 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.10788996 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.109752905 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.090998643 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109968901 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.112790877 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.090487644 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.111033061 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10646008 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.096563128 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.110505443 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106427944 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090243571 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.110245996 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.110080022 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091270134 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.10900115 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11055403 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.095415444 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111475271 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.104995051 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.091181754 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109970347 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.109613622 seconds)
  done (took 3.881930817 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.098184325 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.099149899 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08606488 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.113148974 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.085234541 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.104894675 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.099398861 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.086695497 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.101117666 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.086266296 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.104560045 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.086171311 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.101094963 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.088278389 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.103531963 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.108272336 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.105914032 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.102077573 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.084767319 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.102549108 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.106409072 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.086338853 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.103303556 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.085932586 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.100163117 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.084550311 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.101154633 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.086049803 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.101768379 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.100781564 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.091213121 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.108828679 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.085592955 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.116372705 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.108677778 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.086239719 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.111614787 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.09090201 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.104341676 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.087468601 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.104817928 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.103611488 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.087093581 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.116155579 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.091495981 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.105359254 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.089089278 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.105408691 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.103982133 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.093529832 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.214913513 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.089790948 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.107558339 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.0907138 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.110315136 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.103234095 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090261277 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.102702975 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.090570112 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.104272183 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.087208704 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.104550819 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.092403613 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.103122555 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.12859793 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.098753704 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.101139737 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.104132934 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.090923242 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.111270004 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.088280043 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.121868383 seconds)
  done (took 7.979492399 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091532858 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116265119 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.090865734 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.107752545 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103773808 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.088875516 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115494954 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087296013 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10785224 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.122897386 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086995158 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10562123 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090772769 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10539591 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10411973 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09176405 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113981853 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103720011 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.087884614 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10618852 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088924097 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.112984994 seconds)
  done (took 2.982783838 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.265933232 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097938485 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.158098608 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.122243194 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.129854505 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.123705387 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.094582774 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112509213 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109689712 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101705903 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.117410731 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113352021 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.129434612 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099807335 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.117943614 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.118821173 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110653254 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102586696 seconds)
  done (took 2.980132658 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.10838254 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.108796174 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.131773196 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092260906 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.108127554 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.0910339 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.114993432 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.124869186 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.108169963 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092632735 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.117873504 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108783578 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.0930919 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109161762 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092713014 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.108324523 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.108242687 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092298142 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117817898 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.117691883 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.116588269 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10330025 seconds)
  done (took 3.125043804 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108485625 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109137195 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.144148716 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096327968 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.104835761 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103900394 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.098034049 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.108605205 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.115938341 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.091754855 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109304986 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087647271 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.117775842 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10787248 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.099553541 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109190868 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108364983 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092792449 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108787363 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.087420887 seconds)
  done (took 2.870192029 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.185854857 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107366994 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.124712347 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.138233593 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123196092 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106857346 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135698464 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.125070237 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106422305 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138007415 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.124464751 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.125700592 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137083923 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117849385 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125983291 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137309378 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.135982542 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.136239512 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108340876 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124106649 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14116812 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106670025 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135424453 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.123598329 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.123212704 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108020251 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123001873 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132190897 seconds)
  done (took 4.321139071 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090143748 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105743571 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.089115155 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.106709232 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.089955838 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.105874857 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.089516479 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.105576771 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088438558 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.106212865 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.105353185 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.089843153 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105744121 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.089390635 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.107380792 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.089632993 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105874749 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.089166344 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105258908 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088755753 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.105705077 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106891461 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.089850613 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.105880837 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089849854 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.10730676 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089488014 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108730232 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090429366 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.110942285 seconds)
  done (took 3.723542229 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.103014136 seconds)
    (2/2) benchmarking "in"...
    done (took 0.133163379 seconds)
  done (took 1.003480985 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.091791421 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.125081352 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.086895137 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.11374062 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.117780645 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.090335777 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.119563355 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.116240159 seconds)
  done (took 1.630061632 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.160746845 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.159705763 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.096634381 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.123233467 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.157943437 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.151824845 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.176628234 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.1144119 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.093776981 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.104991545 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.155202591 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.105524613 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.09899101 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109790004 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.113857193 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103450859 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.106429084 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.101784796 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.116211717 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.109378376 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096254999 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.122780702 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.116484921 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.102131448 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.107903198 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.117138689 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.102457819 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.121956003 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109368865 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.10138676 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.112538988 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.103892986 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.095853594 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.114518596 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.090173409 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.159451046 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.124314364 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110969159 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.097139231 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113639342 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.118199532 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.088714101 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.116748432 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.110683216 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.100960706 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.11296381 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.114102247 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.08971762 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.104968777 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.099726566 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.105000866 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106710585 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.087920819 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.115634135 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.098104381 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.124861714 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.110819494 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.092389935 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.108932876 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.107283287 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.094490269 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.108521753 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115911269 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.095227439 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114880902 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.11273757 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096213099 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.105627441 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.087071268 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.106739653 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.11567505 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113061822 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.118237747 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.114513454 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098807293 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.107852713 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111006289 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09823546 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.121538991 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.115932042 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.096512837 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.117054528 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098831765 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108591746 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.109628307 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.09896654 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.110416658 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.09502176 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.105310791 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.129160491 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.091975229 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.106311818 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.107892328 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.100037183 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.11169874 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.097671749 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.108545872 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.115097552 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.086396181 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.113730848 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.11437927 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095618634 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.119802695 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.11484765 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098684568 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.114631927 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.15097622 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.094509754 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.109478858 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.104675141 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097168687 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.108232376 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.097063994 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.105541519 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110730232 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.092400169 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.116716849 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.117824253 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.092276105 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.114678409 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098567329 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.11871392 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.111299765 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.088334451 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.109895686 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.112925235 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100806272 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.119282604 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.093734993 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.108529152 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.106253747 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.097982643 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.113115843 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.112368437 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097280033 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112293143 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.088485859 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.108367799 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.115744906 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.101370347 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.110375821 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.112768313 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.100128295 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.113540564 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.094308921 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.116061657 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.109310713 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.089568343 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.119793333 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.111066644 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.089272788 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.120226007 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.109285417 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.094168608 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.110482893 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102154765 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.110450661 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.114574567 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094873116 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.114538156 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097368132 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.106742544 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.11150533 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.093167743 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.120978983 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.109665934 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.089415425 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.107610665 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.101019027 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.106828139 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.113930188 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.089098556 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.112077493 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.098323455 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.110913351 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.111935055 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.092822938 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.127327844 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.123939562 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.096990441 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.114362705 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.099755698 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.112668272 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.112747439 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.095837372 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.116529717 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.115175489 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.101588242 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.118137628 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09812049 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.109581715 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.107610846 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095147791 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.117589223 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.087639176 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.109516453 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.106791017 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.097767623 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.119978762 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.11460137 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.09893011 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.111466745 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095901125 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.121261468 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.110420751 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.097599205 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.107150445 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.098633833 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.122967664 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.116697137 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099487061 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.118974725 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112709332 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.090285753 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.119841812 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095089052 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.115751488 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.107240894 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.089292934 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.10747653 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.098099394 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.113567246 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.10862127 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.088855242 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.116883067 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.099038348 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.113051303 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.106053374 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.097248454 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121156903 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.108232241 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096883073 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.111114719 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.114460422 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110204587 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.107268961 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.111673349 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.10365256 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.11743944 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.089605609 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.115610076 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.11128988 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.092150749 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.11227619 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.09441801 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115331176 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119583666 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.095604971 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.111033078 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.096747751 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.117660724 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.110676712 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.095444179 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.123336822 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.097671437 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.117066343 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.128377706 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103210422 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.121512884 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116143691 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.097615038 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.118417786 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.117155645 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094756998 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.116355176 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090912326 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.107305904 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.111865779 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.09027834 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.109584413 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.092312682 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.115945304 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.112198124 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096325948 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.11383646 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117244874 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.094863177 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.12144317 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.137344607 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.091853332 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.108673563 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112382636 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096619753 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.111298866 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.111251602 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.091660835 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.117896712 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.096672718 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.119826655 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.111461199 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.089400621 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.117260247 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.09350318 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.117942652 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.116750224 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.098891432 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.112055443 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.097296995 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.111369548 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.122568975 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.090105394 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.123863124 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.117054469 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098889932 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.115214379 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.113217241 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.092736989 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.10774791 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.095460572 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.118134014 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.113471527 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.096299237 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.115159547 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.112905786 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.09694543 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.11502521 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.098450838 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.11530957 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.117698878 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.091329993 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.109928428 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.089613659 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.115606031 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.117229899 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.098739915 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.110248163 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.095131968 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.118445239 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.113773981 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.089673624 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.119648851 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100897977 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.117087528 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.123389521 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.089639409 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.112836807 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.124421949 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.089370831 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.113410553 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.089787527 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.108557298 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.118263155 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.099128733 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.118029072 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.112953237 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.090866808 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.108274845 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.099514291 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.115556847 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.10894335 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.091269608 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.120068294 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.092928337 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.120476006 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.121640103 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.104689509 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.124488794 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102470342 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.120357068 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.118034003 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.103105437 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.111910781 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.0908207 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.108545712 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.113493059 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.099248456 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.110072767 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.088882341 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.117226431 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.11331582 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.095616021 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.11569586 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.09257672 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.119942982 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.116297535 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.095310923 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.123094917 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.109126239 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.094678641 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.114944049 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.097859717 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.108465495 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.115816938 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09533631 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119921106 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.118601519 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.098836654 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115511091 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097428947 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.110959951 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.115451838 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.098376019 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.116854606 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.089838366 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.120320351 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.120011529 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.09201632 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.121159404 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.113957867 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.092712796 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.1146007 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.101617254 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.114112591 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.121011295 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.099770582 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.113736858 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.116800794 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.098698826 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115133546 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102009988 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.112020125 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.118902453 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.090851968 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.120596965 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.113801093 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.100048249 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.112508128 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.091327954 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.116782586 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.115583206 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097459362 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.120572961 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.099752959 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.109318409 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.108267821 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.093298552 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.114761667 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103520541 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.119512514 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.113587774 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096014849 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.112056147 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.108151145 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101683886 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.109145308 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.093181103 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.115772095 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117710178 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.095811716 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.110741141 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.095502351 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.119166672 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118243958 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.116589153 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.091917847 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.117392854 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.101469642 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.114154546 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.11167569 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.09554152 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118234987 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.09826636 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.113410531 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.109556818 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.105256994 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.119654603 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.119234024 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.093590275 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.116482527 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.112978182 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.09351337 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.11848392 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.095635643 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11770704 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.11410586 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098290756 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.126154933 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.108291506 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.09375556 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.125016399 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096568365 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.121556447 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.110554605 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.096789584 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.119172255 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118359107 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.092674797 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.111184994 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.093075463 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.119194315 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.110828844 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.093726983 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.126912041 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.119489716 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.096602255 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.11575335 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097453713 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.111698433 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.091910536 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.112438265 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.119265662 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.094597998 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.123668634 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.110263243 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.090832333 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.111378028 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099417494 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.115718093 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.115209122 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.091679779 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.110761473 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.092045168 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.114501324 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.122097112 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097716993 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.117262201 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115141691 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.097085879 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.111382939 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104772945 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.110247794 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.115164838 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.107163404 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.119798546 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116590293 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.100652935 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.122224966 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.119096804 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.09377935 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.118851522 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.097237689 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.116062048 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.119680098 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.1023563 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.131421913 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115596421 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.091181213 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.11908026 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.094773615 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.110729099 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.12280209 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100725296 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.120250166 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.116021266 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.094333371 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.120544316 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.122488429 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09941947 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.115040899 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.113915807 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.09831962 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.114834692 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.096805449 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.113848055 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.120779447 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.100851368 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.117535429 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.102922412 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.110100849 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.127790942 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.10244103 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.120139068 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.110368004 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.092583235 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.109661112 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.094309017 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.122357467 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.092044174 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.116643034 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.115054207 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.098297288 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.117576307 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097773391 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.116208028 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.120202511 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.100012297 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.110793118 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.099328182 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.115362417 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117459324 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.091369775 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.120299455 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.120368762 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.102099751 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.12470302 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.100411975 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.115356467 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.112955359 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098829518 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.111503703 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.116833529 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097863524 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.112763075 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.091297459 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.119246269 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.119032502 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098179743 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.121109265 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101506997 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.11628292 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.118937871 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103228243 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.111786397 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.093808187 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.120695083 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.115166128 seconds)
  done (took 65.48626963 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.171748457 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102051278 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11605994 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093814353 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.144070885 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115352706 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113240908 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095650665 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.117111175 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.131063091 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.096550177 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117758156 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.139951882 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.147423513 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.142689865 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110598925 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114564671 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.116167684 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093385214 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113424554 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.137694824 seconds)
  done (took 3.361058938 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.120416125 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.132353587 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.131980198 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.13509854 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.125513354 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.11243047 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.132725971 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.129569055 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.133897909 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.126547919 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.134821769 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11149825 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.127136836 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.127410852 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.12663017 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109627124 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.135234157 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.125169257 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.130268737 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.130991216 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107593625 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.132518059 seconds)
  done (took 3.610550989 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.10505016 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.118069145 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.102318062 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.11570428 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.09910757 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.115235569 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.123229807 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.095003594 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.123977269 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.096589669 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.112593355 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.115348987 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.101226984 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.11480949 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.09313926 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.115132708 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.124379878 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.099061582 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.122301976 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.09713106 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.142882012 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.116123408 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.096523605 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.113971989 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.127738149 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10107871 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.120027451 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.098726112 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.112677385 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.118485301 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.095316878 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.117560713 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.10011028 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.113316255 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.111571619 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.10066198 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.119299702 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.095731284 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.11592791 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.119223538 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.096325125 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.119106345 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.123078019 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.096125542 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.115171468 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.097905503 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.118737339 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.095706529 seconds)
  done (took 6.125111265 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.157251909 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.173832574 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.108733753 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.165128912 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.118933775 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.134436871 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.121002855 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.160791495 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.120188125 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.102278771 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.143762585 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.140830872 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.125011895 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.106594362 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.125286335 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.127514716 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.108521779 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.12440174 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.131598368 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.122748734 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.110761553 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.125079805 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.138931059 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.137262543 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104588255 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.125722289 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.122161586 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106930971 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.140469351 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.136185315 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.128524153 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.130263718 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.118190113 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.125955039 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.122278342 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.124930479 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.120153537 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.123728321 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.124936464 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100569214 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.124188904 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.131131376 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109787853 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.143683556 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.127058957 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.124679515 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102839921 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.122363551 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.13549137 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.122851504 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112276563 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.142136965 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.124915612 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.123716001 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110117769 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.143366766 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.125767497 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.122419336 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.105907653 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.135373317 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.123549231 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106787437 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.139405205 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.122293446 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.133002699 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.140386199 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.10685235 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.129343924 seconds)
  done (took 9.572902991 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110261255 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.147886053 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.140369174 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.139418681 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105580049 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.128235616 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.12597855 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.126819521 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.106487044 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.13485284 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126662568 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.213537933 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.120228786 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.133150671 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.107333954 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.128602251 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.127165612 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127465036 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106716586 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126762052 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.126437052 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.14084804 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107361631 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.140230433 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142803504 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.119734191 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106442497 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.127697295 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.139496319 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.126172872 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143561314 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.107647216 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.127218892 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.139004132 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.142567625 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.125776661 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.097014263 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128139785 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.127068281 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.10899568 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.120589378 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.140800753 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.126690085 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.100880361 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.127395678 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.126575978 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121662749 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.143281121 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.135612135 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.13541044 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.126739547 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.140138433 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107136429 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.126877232 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.140182102 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.15134987 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.139957908 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.140897036 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106746679 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.140190478 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.140429463 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.150146022 seconds)
  done (took 8.848780088 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096653242 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116279109 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097508514 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.116365714 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.097436592 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.117351167 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095629923 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.116040959 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095964754 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.116210441 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114876585 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097185128 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.116472428 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097648359 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.116548364 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097790565 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.116407542 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097217109 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116636759 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095440002 seconds)
  done (took 2.983229987 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110112771 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.139854381 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.120424872 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108112893 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.121667746 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.128261858 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.098907854 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1214376 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.120739338 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10196911 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.132468085 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.131215417 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10030983 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.130114077 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.131269987 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.128238595 seconds)
  done (took 2.782158816 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.123921677 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.136680529 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.177715222 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.125558385 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.119050021 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108192653 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.118760636 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.094736247 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.1173513 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.126633367 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.10530413 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.130450924 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.117281313 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.0962432 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.121493029 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.10537427 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.116190045 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.125936289 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.099160818 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.177665612 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.128905868 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.123722455 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.099835221 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.120131184 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.123362621 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.106256228 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.128482723 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.118895748 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.099589789 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.118613205 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.123613051 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.111387577 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.116884698 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.105535679 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.117956605 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.117830562 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.098637109 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.118693224 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.103569128 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.11978905 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.117726563 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103601437 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.118238036 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.119933525 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.097590968 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.118393131 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.096839949 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.128337252 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.122154159 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.105097821 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.118323034 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.127889022 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106874372 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.132065544 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.12935396 seconds)
  done (took 7.343863027 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114747405 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.122634086 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.126042891 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.095015654 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.122321499 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109112768 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.121915764 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.1230195 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104770307 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.11569139 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102739008 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.124668954 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.122440849 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102896858 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.124389815 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.122994967 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.096308185 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.123696605 seconds)
  done (took 2.935728953 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.106517273 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.121205873 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.105445909 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.12161167 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.121251177 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100101346 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.115474519 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.095979238 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115795285 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.09909809 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.122918891 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.120857072 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097487113 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.120782023 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100455225 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122324031 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.120345404 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096292195 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.122099797 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09562491 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.121109093 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117263316 seconds)
  done (took 3.322760367 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113156481 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.179157227 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.132383366 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.188598838 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.122293649 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.119410304 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.110357417 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.121915457 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.138700771 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.098528496 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.120538903 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.119242495 seconds)
  done (took 2.427890401 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13030873 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.161136315 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.120664069 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101236293 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135395177 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127676579 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12730909 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107281125 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138507022 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.143142615 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127088099 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138895607 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118857726 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141075106 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134148584 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134144241 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127019575 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109214048 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123400775 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.152265328 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128577564 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117405474 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129277568 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128033104 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128065174 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120638262 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140366834 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143209166 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127836173 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137913975 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133580398 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108569636 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138873789 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.143851224 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122448694 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1176018 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129671827 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.150105524 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13391324 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140170606 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.100588445 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135481423 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138903586 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134948839 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139501669 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107430127 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137833982 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127381014 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127132566 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.159110753 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135145969 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12032476 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135941953 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138759075 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138273273 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.15931157 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.145890047 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140691141 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133906918 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144025795 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.141061017 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113900295 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140744867 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145037437 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134573518 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143482317 seconds)
  done (took 9.608211051 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168601998 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099704558 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128372041 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.145506519 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141437794 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107414088 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128689172 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12924962 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107406617 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125545916 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.177439795 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128785123 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141635951 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141770968 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107589448 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129522914 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129410906 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140805408 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103813319 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.157467359 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129430145 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141193235 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141249511 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141904713 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.144570384 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112915277 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130257735 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128813773 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128821848 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107503235 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136074465 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128687575 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.141747214 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.100754951 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141145362 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129029003 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129665081 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116281278 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129701402 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134737957 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141204541 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.150693791 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108356487 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131647065 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143485883 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128594401 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129912539 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104586861 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128667471 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103557829 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145316681 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.146204021 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144802604 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140973516 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128061563 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129321855 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109158711 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128767203 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128916564 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114219859 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142379254 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129227064 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.159474329 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129389499 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12864255 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120317691 seconds)
  done (took 9.507493646 seconds)
done (took 176.303927372 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.164754418 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.18517103 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.162090876 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.158222457 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.116562816 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.152603335 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.13055195 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.160715191 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.117117009 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.095070283 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.116700592 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.119086549 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.161212504 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.115393443 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.096169948 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.119705183 seconds)
  done (took 3.044323043 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.217745191 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.31135131 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.13764228 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.121739838 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104361276 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.121637682 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.099562428 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.124355772 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.117750652 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.110639457 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.119185849 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.119618814 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.110317816 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.119932324 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.117765541 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.099063884 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.131698862 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.11909814 seconds)
  done (took 3.283112332 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.123675442 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.174904718 seconds)
  done (took 1.180783343 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.134672112 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.225171707 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.304234477 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.178694719 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.149039607 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.144044566 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.181226354 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.136145441 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.21148921 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.141853191 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.142131809 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.103992894 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.15129432 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.131222809 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.113393279 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.124897039 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.151760984 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.134820136 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.111522824 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.127102661 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.146550648 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.104233458 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.130851409 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.133197016 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.203483605 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.14339939 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.125593837 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.10502562 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.126750901 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.132741392 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.109795009 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.142415843 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.1417707 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.213038892 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.11034009 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.210976253 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.132545087 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.102383309 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.132563263 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.125184018 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.107555853 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.130293421 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.14219289 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.124518791 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.104710967 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.133266605 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.127095298 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.10428276 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.134598644 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.136414539 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.134655114 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.111863348 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.207556552 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.135299441 seconds)
  done (took 8.588022359 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.922678087 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.168530858 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101447904 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.04847367 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.156747037 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139314805 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.929305001 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.125783811 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.289980562 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.923205876 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.141880843 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.124203709 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.295568283 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.28052931 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.1944142 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.399856775 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.767238003 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.145637712 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.153700509 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.172649739 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130165234 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.153400949 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.123399856 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.479967449 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.103377387 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.122678033 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.13011141 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.114295072 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.209470664 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100411962 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127045447 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.232116645 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.293084789 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.239190119 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.125453521 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.100158399 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120896711 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.196977544 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.305188631 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.25393872 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.215879475 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096860866 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.122249538 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.135972669 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124127073 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.119368974 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.211201288 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.201869314 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.220566993 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.106176166 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.135698539 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.133300422 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.134429681 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.190601912 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.118743275 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.384932959 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.383959099 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.122554767 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110780222 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.144271606 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.301268792 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122521401 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.267346718 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.151406569 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.250953275 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098929409 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.82329713 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.215806831 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.121327415 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.111701312 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.130646564 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127698911 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.134911687 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.18886092 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.40336315 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.139547167 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104953358 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121500396 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.282859295 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.100187689 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12208079 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.18970987 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.125131966 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132332635 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118116031 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137711246 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.222328677 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.277661654 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.139753287 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.133045563 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.106348109 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138564967 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.125343768 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.242698203 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.279150684 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.184679478 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.23849504 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.137946204 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.213024647 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.192964657 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.134633658 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.221131325 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.109631334 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.141703789 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136924226 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.256048282 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.163287898 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123032807 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.106066534 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.131505533 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.166035394 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125591809 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.130589249 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.19638084 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.521883414 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.193717374 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.121717819 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104811213 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132634031 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.209655946 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109547151 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.299049078 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133573911 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.193887871 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.131935192 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.119431513 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109849903 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.216893095 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.140084932 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132575128 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.115258218 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132150318 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.299726381 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.258913317 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117197947 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.273188511 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.198377463 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.133779687 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.221687797 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110202662 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.219308983 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13342434 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.114956644 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12601589 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.816962607 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139114094 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.132130794 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.106083856 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.218766676 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123238377 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124828245 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.101121082 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.120343002 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.849666557 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10374201 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120080957 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10190015 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.134783494 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.133496902 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131163427 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.106658416 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.210643711 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.273861981 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.137150656 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.131140611 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.10141492 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.208906985 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.104320774 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.124064929 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.099968527 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.1247885 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.133305783 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105985224 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.123802057 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.200761748 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.20881088 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.262792472 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.585516459 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.12273991 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100802314 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.269638944 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122763106 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.347791379 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131409907 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.269122098 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.216888776 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097589446 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.378392396 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.21763571 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.219665501 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.125192099 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.199901274 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.119203474 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.110067005 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.211643985 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101255399 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131778524 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.206893168 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12103539 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.140008357 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.20091601 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.123782191 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256219598 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.120112607 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.196060322 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126242297 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135960307 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.351214227 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.122156364 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123160763 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.210497199 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.127383688 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.101199878 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.754119667 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.122641669 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113702514 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.133761867 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.264279587 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.214560975 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110696948 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133223071 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.137038509 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.188640919 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.260644764 seconds)
  done (took 49.879284884 seconds)
done (took 66.858349628 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.338492444 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.293337701 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.351421269 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.246151766 seconds)
  done (took 2.228781345 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.238396816 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.17349962 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.22600974 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.098804105 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.235001197 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.098806217 seconds)
  done (took 1.988958469 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.55108116 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.454704089 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.362833888 seconds)
  done (took 2.292975469 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.27934388 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.311217576 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.378213598 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.513977368 seconds)
  done (took 2.515107676 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.265600255 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.14733992 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.140504452 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.195479078 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.230487629 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.468744686 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.163804394 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.178478189 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.150275079 seconds)
  done (took 2.912889218 seconds)
done (took 12.861370374 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.318821915 seconds)
    (2/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.301799047 seconds)
    (3/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.22679378 seconds)
    (4/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.317106477 seconds)
    (5/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.225988833 seconds)
    (6/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.13142287 seconds)
    (7/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.346749324 seconds)
    (8/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.178347173 seconds)
    (9/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.192267763 seconds)
    (10/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.327024341 seconds)
    (11/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.310300621 seconds)
    (12/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.231276756 seconds)
    (13/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.242753212 seconds)
    (14/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.108127901 seconds)
    (15/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.138483527 seconds)
    (16/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.324638606 seconds)
    (17/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.147111626 seconds)
    (18/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.152865258 seconds)
    (19/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.264684986 seconds)
    (20/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.245446858 seconds)
    (21/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.131483234 seconds)
    (22/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.14080104 seconds)
    (23/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.212895341 seconds)
    (24/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.115070759 seconds)
    (25/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.159569095 seconds)
    (26/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.160003549 seconds)
    (27/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.235814891 seconds)
    (28/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.151410591 seconds)
    (29/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.140171176 seconds)
    (30/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.15355977 seconds)
    (31/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.177357138 seconds)
    (32/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.32634341 seconds)
    (33/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.14473668 seconds)
    (34/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.131183253 seconds)
    (35/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.220283133 seconds)
    (36/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.196631731 seconds)
    (37/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.150188655 seconds)
    (38/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.13040882 seconds)
    (39/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.214447197 seconds)
    (40/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.092870275 seconds)
    (41/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.140818056 seconds)
    (42/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.143665192 seconds)
    (43/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.222161054 seconds)
    (44/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.191235872 seconds)
    (45/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.099153603 seconds)
    (46/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.171064306 seconds)
    (47/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.132464916 seconds)
    (48/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.145394808 seconds)
    (49/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.121657781 seconds)
    (50/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.105753592 seconds)
    (51/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.170341295 seconds)
    (52/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.217850356 seconds)
    (53/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.257296841 seconds)
    (54/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.162468753 seconds)
    (55/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.205619228 seconds)
    (56/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.207431465 seconds)
    (57/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.22888406 seconds)
    (58/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.131140554 seconds)
    (59/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.112983691 seconds)
    (60/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.198241097 seconds)
    (61/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.093502682 seconds)
    (62/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.205755133 seconds)
    (63/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.132853116 seconds)
    (64/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.22802662 seconds)
    (65/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.091810542 seconds)
    (66/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.211175698 seconds)
    (67/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.113334964 seconds)
    (68/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.133873026 seconds)
    (69/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.206660912 seconds)
    (70/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.153878651 seconds)
    (71/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.156785645 seconds)
    (72/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.106671925 seconds)
    (73/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.115783685 seconds)
    (74/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.123337105 seconds)
    (75/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.214346913 seconds)
    (76/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.179866057 seconds)
    (77/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.205074085 seconds)
    (78/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.142512372 seconds)
    (79/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.129908919 seconds)
    (80/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.104175566 seconds)
    (81/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.140545951 seconds)
    (82/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.106973359 seconds)
    (83/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.114479168 seconds)
    (84/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.109385361 seconds)
    (85/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.120803363 seconds)
    (86/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.10894467 seconds)
    (87/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.13430423 seconds)
    (88/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.228642016 seconds)
    (89/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.122825874 seconds)
    (90/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.199548671 seconds)
    (91/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.227186366 seconds)
    (92/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.165632444 seconds)
    (93/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.115733463 seconds)
    (94/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.10830964 seconds)
    (95/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.146204373 seconds)
    (96/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.15847655 seconds)
    (97/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.128165976 seconds)
    (98/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.285315457 seconds)
    (99/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.146884275 seconds)
    (100/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.091516554 seconds)
    (101/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.116027135 seconds)
    (102/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.134338703 seconds)
    (103/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.13325742 seconds)
    (104/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.098972084 seconds)
    (105/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.135544064 seconds)
    (106/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.120634948 seconds)
    (107/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.138990239 seconds)
    (108/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.130849907 seconds)
    (109/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.136329451 seconds)
    (110/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.158144196 seconds)
    (111/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.203984051 seconds)
    (112/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.14297067 seconds)
    (113/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.09013118 seconds)
    (114/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.140317006 seconds)
    (115/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.17595044 seconds)
    (116/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.135603543 seconds)
    (117/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.205589149 seconds)
    (118/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.155427616 seconds)
    (119/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.132022035 seconds)
    (120/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.09184976 seconds)
    (121/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.130934239 seconds)
    (122/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.09188685 seconds)
    (123/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.173132167 seconds)
    (124/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.161086778 seconds)
    (125/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.131672583 seconds)
    (126/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.091028723 seconds)
    (127/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.179310714 seconds)
    (128/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.10825958 seconds)
    (129/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.13442993 seconds)
    (130/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.157259743 seconds)
    (131/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.091306797 seconds)
    (132/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.116484087 seconds)
    (133/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.109700192 seconds)
    (134/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.115465861 seconds)
    (135/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.156368121 seconds)
    (136/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.158604715 seconds)
    (137/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.136379092 seconds)
    (138/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.109310953 seconds)
    (139/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.145647651 seconds)
    (140/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.092254123 seconds)
    (141/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.131245399 seconds)
    (142/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.114929073 seconds)
    (143/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.104760818 seconds)
    (144/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.203561987 seconds)
    (145/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.097540486 seconds)
    (146/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.130554009 seconds)
    (147/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.09113373 seconds)
    (148/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.115984532 seconds)
    (149/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.093461919 seconds)
    (150/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.115570178 seconds)
    (151/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.093311449 seconds)
    (152/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.206621235 seconds)
    (153/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.128114137 seconds)
    (154/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.109075655 seconds)
    (155/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.130181765 seconds)
    (156/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.110265982 seconds)
    (157/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.116857241 seconds)
    (158/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.14637467 seconds)
    (159/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.091322158 seconds)
    (160/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.124252215 seconds)
    (161/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.123673903 seconds)
    (162/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.149634083 seconds)
    (163/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.09780842 seconds)
    (164/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.116568352 seconds)
    (165/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.105164699 seconds)
    (166/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.146613669 seconds)
    (167/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.126943072 seconds)
    (168/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.198726906 seconds)
    (169/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.124677635 seconds)
    (170/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.134727951 seconds)
    (171/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.092397428 seconds)
    (172/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.131438366 seconds)
    (173/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.091846514 seconds)
    (174/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.131164365 seconds)
    (175/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.161082343 seconds)
    (176/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.092873437 seconds)
    (177/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.115967747 seconds)
    (178/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.098399755 seconds)
    (179/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.132977214 seconds)
    (180/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.111996236 seconds)
    (181/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.132030814 seconds)
    (182/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.130540766 seconds)
    (183/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.092848822 seconds)
    (184/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.137586381 seconds)
    (185/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.108274135 seconds)
    (186/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.124788454 seconds)
    (187/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.09202953 seconds)
    (188/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.131591878 seconds)
    (189/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.125537777 seconds)
    (190/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.092058645 seconds)
    (191/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.124188145 seconds)
    (192/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.091590256 seconds)
    (193/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.132462747 seconds)
    (194/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.105621784 seconds)
    (195/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.167586233 seconds)
    (196/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.134120199 seconds)
    (197/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.093611136 seconds)
    (198/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.133758497 seconds)
    (199/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.109835337 seconds)
    (200/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.147536823 seconds)
    (201/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.115177864 seconds)
    (202/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.09237249 seconds)
    (203/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.114605807 seconds)
    (204/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.092446191 seconds)
    (205/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.162321012 seconds)
    (206/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.093211911 seconds)
    (207/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.115246387 seconds)
    (208/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.117340767 seconds)
    (209/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.117431133 seconds)
    (210/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.107871758 seconds)
    (211/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.135188958 seconds)
    (212/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.145564807 seconds)
    (213/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.092743126 seconds)
    (214/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.122297003 seconds)
    (215/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.098734048 seconds)
    (216/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.116222394 seconds)
    (217/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.092961553 seconds)
    (218/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.135104649 seconds)
    (219/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.092485843 seconds)
    (220/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.142534642 seconds)
    (221/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.107511969 seconds)
    (222/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.116084859 seconds)
    (223/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.092399386 seconds)
    (224/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.142989067 seconds)
  done (took 34.281333057 seconds)
done (took 35.210714971 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.518898613 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.14155245 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.111544339 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.136485912 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.193013659 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.138389944 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.120091303 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.141037578 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.140662664 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.10796569 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.125761326 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.139601061 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.110752532 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.193784975 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.139737378 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.130105759 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.103092874 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.141370295 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.143596844 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.120115985 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.217967782 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105018277 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.141511449 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.105033045 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.217847746 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104069596 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.13617546 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.112236557 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.141382312 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.134565075 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.111105529 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.128212506 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.14384717 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.120311321 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.12637766 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.132021917 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103171157 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.123066572 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110496104 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.134577208 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.141953543 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110286458 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.139639985 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.12893978 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.111491518 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.133303465 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102224701 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.139889929 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.125895518 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.111702629 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.12887253 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.14531205 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.108450149 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.127187709 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.102366026 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.129059739 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.140014375 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102879042 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.142758279 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.125599215 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.105459546 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.126199824 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.112425206 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.126528809 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.13192625 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.104588873 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.13335884 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.111691107 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.133114321 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128848039 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101068018 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.133340704 seconds)
done (took 10.67134135 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.109349859 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186642209 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.19304888 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.200084791 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.162049193 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.146319101 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.150061035 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.159408661 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.144966616 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.129343927 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.165305496 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.157638619 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.201238506 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.141913505 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.146830956 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.111402048 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.142725526 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.141691292 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.204323852 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.128922554 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.163515356 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.142699172 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.164685659 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.151660984 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.109959108 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.166288901 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.137719209 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.135218812 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.111432672 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.141939409 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.153343388 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.110239442 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.136718806 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.156710722 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.120024682 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.14060344 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.146182759 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.11027961 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.135398722 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.133629726 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.147507468 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.126463359 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.133708799 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.145048902 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.111187526 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.141094747 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.141451168 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.116950985 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.137150902 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.137004932 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.112647363 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.163687158 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.1418783 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.142454744 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.117019616 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.141496241 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.142647921 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.115541231 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.137068861 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.14003787 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.109475452 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.134953789 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.136530254 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.160532509 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.112728473 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.140904903 seconds)
  done (took 10.355741593 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.129425358 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.16761469 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.144660027 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.145029316 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.115569325 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.125876253 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.124257869 seconds)
  done (took 1.944097131 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.10115329 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.19632843 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.194945585 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.221738466 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.189100246 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.208053788 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.150227776 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101054359 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.16276371 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.138442995 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.197697184 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.227257343 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.135578174 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.145211228 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.199991275 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.101664462 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.223340922 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.101663957 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.139575619 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.196411681 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.142269106 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.132008952 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.144439107 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.127463801 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.191867002 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.102689753 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.278390176 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.144863789 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108514884 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.137618669 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.139359787 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.212632155 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.191843031 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.142735278 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.106475065 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.192689098 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.189806518 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.140001127 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.206336818 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.134093865 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.190486235 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.140564247 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115643834 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.141736526 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.13793718 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.178575689 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.118210501 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.141822194 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.136947747 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.198609304 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.139477574 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.192632824 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.111330652 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.138565465 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.139340121 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.114769436 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.145562322 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.138979201 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.198470211 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116871413 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.216445563 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.193915123 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.191362293 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.193053175 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.150092186 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.192748287 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.190598876 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.111729044 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.138272626 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.140257998 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.194233277 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.138455145 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114632322 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.177757969 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.145259888 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.193296148 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.193403336 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.136768447 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.114914025 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.133551808 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.136208051 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.102396669 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.179750702 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.137909298 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.110009724 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.148743681 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.142773149 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.139893932 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.106909747 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.153911619 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.139673729 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.142040327 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.118746977 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.13859308 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.145570166 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.195816177 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.141434086 seconds)
  done (took 16.069696111 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.103508923 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.128203209 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.109519329 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130321295 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.128951377 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.104414344 seconds)
  done (took 1.715690578 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.137445185 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.141209213 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.150460074 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.117988265 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.197447666 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.225136087 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.203463313 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.140384962 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.132271814 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.151384012 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.196578486 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.200395944 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.197982183 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.147670083 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.20152335 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.144543256 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.202543303 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.141224027 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.151735924 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.110952586 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.147577305 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.144269285 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111933955 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.191334096 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.144715745 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.143613607 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.114249495 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.151622646 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.149490933 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.141066786 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.119663946 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.143424422 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.138969428 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.114857898 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.230889639 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.111495243 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.13909612 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.146438083 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.11770467 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.144496311 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.202205906 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.137615567 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.150035786 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.119497984 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.142669659 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.138612312 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.120636135 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.1407169 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.20119777 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.145376204 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.148197625 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.115958392 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.145680289 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.149172793 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.13801619 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114308147 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.147595932 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.201807112 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.146052864 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.138761472 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.116587886 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.14639368 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.140776643 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.120141505 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.14409077 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.14667578 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.13833877 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.117355253 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.137934698 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.142426978 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121029882 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.142567457 seconds)
  done (took 11.715307658 seconds)
done (took 42.784276859 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.139460526 seconds)
  done (took 2.150029155 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.989481248 seconds)
  done (took 2.001489361 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.944272166 seconds)
  done (took 17.996190939 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.590643475 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.65808187 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.046482203 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.156211864 seconds)
  done (took 3.465917122 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.989125306 seconds)
  done (took 2.029758954 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.373742017 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.266281919 seconds)
  done (took 1.656550762 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.900426928 seconds)
  done (took 1.92765118 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.436035951 seconds)
  done (took 3.458128554 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.393992886 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.204855926 seconds)
  done (took 1.634194726 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.675154954 seconds)
  done (took 1.704932298 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 35.248669423 seconds)
  done (took 36.281139916 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.25540018 seconds)
  done (took 1.297672871 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.324742371 seconds)
  done (took 1.35756392 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.506231645 seconds)
  done (took 4.541142106 seconds)
done (took 82.52187796 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.113147047 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.142082259 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.115825784 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.140957986 seconds)
  done (took 1.535795655 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.12288109 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.141362296 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.145221367 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.114607255 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.151097724 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.141961539 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.114860067 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.14824118 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.140613307 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.117574712 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.14710821 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.1404394 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.11752584 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.139570939 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.112652914 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.144509371 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.144057633 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.115216512 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.142596985 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.142074707 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.114002909 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.142826604 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.144054244 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.115913584 seconds)
  done (took 4.24009744 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.114829272 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.133763852 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.109771811 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.133895546 seconds)
  done (took 1.534302033 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.12271664 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.15737533 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.155277915 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.122436912 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.158663051 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.156078666 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.110712203 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.137203597 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.14020195 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.123145744 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.139220968 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.160480266 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.156145716 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.107851572 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.15088193 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.104039924 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.13542979 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.15713051 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123393256 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.150673281 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.137109856 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.12275423 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.145643395 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.152281122 seconds)
  done (took 4.364182872 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.222762506 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128019595 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.16467415 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.193256244 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.168064098 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.138043167 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142203135 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.148206296 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.147086638 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.118435975 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.145557225 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.202885368 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.144323848 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.144292742 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116070239 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.149287386 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.146219429 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.118049554 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.146540891 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.154157469 seconds)
  done (took 4.077733053 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.1156407 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.133486081 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.102469335 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.133359164 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.140684168 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.109752901 seconds)
  done (took 1.776735292 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.103739922 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.127641944 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103875082 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.128225412 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.106583694 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.127525722 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.101344014 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.12840787 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.101379133 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.127638724 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.126332858 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.101021582 seconds)
  done (took 2.431269588 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.318633817 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.105927147 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.139730821 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.133275701 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.138011705 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.105805893 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.148294896 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.104818376 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.270216496 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.134607869 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.12238092 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.235028452 seconds)
  done (took 3.006774001 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239667725 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142085566 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273163287 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.40215985 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183664495 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191194817 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.302828705 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188367087 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.244404962 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162622419 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225269679 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181380673 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178386589 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206114591 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162539489 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.211184041 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202834826 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229288973 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17362163 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234425959 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189677681 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.221070834 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.208656475 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175452045 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134496129 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183494866 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.141452148 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149781895 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202004783 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196627853 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202282256 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173261973 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163946393 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257785349 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247049248 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232947842 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.342668359 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158905827 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.217404568 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.210597343 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.297601559 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13754227 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253501266 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177884737 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152189741 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207414134 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182263728 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.208183557 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.154399109 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161949957 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216397267 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203323222 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.211368079 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160800546 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.345648597 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171224262 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145731983 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231768497 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219699814 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217670674 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189945374 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.142250076 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.210370619 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231387236 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206602247 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.170232215 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.196465795 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120227669 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230356722 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.224258999 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207637691 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193352744 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.241461782 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154947331 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18791313 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196398243 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177134663 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20625853 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184156748 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.113499303 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176490032 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1595377 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148161884 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.211874841 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116128677 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.259118471 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130365379 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.211164986 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261025884 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182831363 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188659123 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192292126 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195209533 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171659603 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.140491424 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141776282 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.187294934 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181104818 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15406554 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182169042 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168509017 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.149828441 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176459178 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.116643026 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185549132 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.158760623 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194462782 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189853855 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.153464887 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190649816 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17560214 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.187855492 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198798557 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213881972 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154752063 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15369541 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221522616 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183210121 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.161054846 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203475403 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.219779224 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.191998045 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161426796 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198848747 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224862245 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166343715 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21693573 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166941306 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156854603 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.178550144 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185364155 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184226734 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.17918106 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122600614 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.179532757 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253879841 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.121086936 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160546218 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199918602 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151628801 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148829835 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167588584 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131062162 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.164236961 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.176985526 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.165108325 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182742694 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184001506 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17845165 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185890157 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167345502 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226710546 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155872052 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.185058254 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170591913 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.112994563 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.23806105 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213520565 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151176868 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214879599 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.198463451 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222597567 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188167843 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152859027 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.209405669 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152735232 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.142852612 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196172518 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18819488 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190064672 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.215553667 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24587367 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.199457904 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.180681076 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173408676 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197350691 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.201832999 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187021626 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.168814707 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188537799 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19770166 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.142317808 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.120033198 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.152073862 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162095851 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126661063 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156138564 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21008952 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218292772 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212954579 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187378846 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162907158 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211681208 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.148754432 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193347422 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.203019082 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16215811 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.21730265 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20808363 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192569694 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167239906 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198631364 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.144577358 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117624896 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.16025037 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.195366362 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157643557 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158343292 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168523526 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.21113378 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20277734 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172547816 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25668188 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199502455 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.223622817 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.143909403 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.157534611 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226135873 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181798743 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.186920233 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152719627 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.187358686 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20668316 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169438858 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223466631 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187417334 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225451223 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230691605 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.18215966 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153252195 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173932386 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194898246 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164533764 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190635543 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141696151 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159213944 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179100414 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.162362326 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151895073 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211464878 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166381279 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211142984 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.182272107 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231948975 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119486048 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168840316 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186799789 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168794394 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.111887809 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227346733 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219324361 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169545027 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185059222 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204508517 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152670228 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.337605571 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219986297 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243397255 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132524903 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168230833 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18670996 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185133959 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190716418 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.23893011 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139705629 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236172846 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184336537 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.13971932 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158376681 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172506153 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175169775 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.180543325 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.15970166 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.18115711 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139570499 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244496984 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167337391 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183519736 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19061767 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.143532218 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.181691587 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164506939 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230205509 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185132975 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205709296 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.179803573 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.196572737 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244562634 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117402122 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150064823 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.149955162 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212268971 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125510483 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184524798 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.236630054 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223709441 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184835362 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194400553 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161432489 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.147256701 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186116522 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172019765 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225555408 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167404366 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.162237617 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223185691 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.176197738 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152736932 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191765824 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.306246635 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169316678 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203988122 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.140923316 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.299282009 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120340338 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153754209 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186084715 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198669189 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.174096286 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.209954746 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192543958 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169457175 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186567539 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132930619 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.244995835 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235638881 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227918258 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205853955 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.168265871 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185240618 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191620738 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207510848 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167004745 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.143181407 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188276075 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239121126 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.219876076 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.157292785 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187803272 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188280641 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184982007 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206103091 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155884473 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218452414 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153076611 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195186453 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164449634 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120684608 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182939857 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.234504511 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128909112 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204558621 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183512548 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155101731 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152439801 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177764151 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185200834 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167893065 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.124650851 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23741869 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.120933324 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190002577 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209414313 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153131146 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181620746 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169081715 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127547755 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16863728 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168840877 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159339022 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.192501266 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215139147 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.155601071 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205789958 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202019397 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19257727 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184974271 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169585826 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.686991198 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.122633225 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238817016 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143095872 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250303919 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175070754 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191608444 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187297315 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145008416 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225082989 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17389062 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.219765666 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223756942 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.187789604 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126776003 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168941218 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169828113 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.156868063 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177015146 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187595388 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135476558 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.162552254 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.184728675 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170731809 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.170714275 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162437614 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214301987 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172034827 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214259253 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213327198 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164246902 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193304089 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206234166 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151553371 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.192017718 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200563539 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167277574 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180082308 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.155048406 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.131473016 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207854366 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.148641626 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189400501 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185860232 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187922134 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18830491 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.161099368 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186049913 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168889061 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190136162 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121710096 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.184083569 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184893127 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156821374 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.152962196 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181340251 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18893512 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.184298235 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122957225 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.196715251 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210686081 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.146132052 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12793084 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.333511103 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185298447 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224694712 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.179887126 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157514853 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137861461 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184460015 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.180358119 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186794604 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.1545428 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153882741 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.128667084 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.210629437 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.180622557 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185737055 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207556551 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187040153 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247888362 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.141009512 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.291398179 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163503285 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180806968 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.15448602 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.126325954 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165387096 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159314058 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171941993 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216576968 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207308928 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.179107355 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.171035726 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152759014 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.11827038 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156616783 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188283261 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181520646 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184915269 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170945651 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.112547846 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168760813 seconds)
  done (took 90.52023981 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177192167 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.163240528 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.167665961 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.219375052 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188341277 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.277350802 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.226026321 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.247811532 seconds)
  done (took 2.812962753 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.142739966 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.128559664 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.162875869 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.143682255 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.145771562 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.456337412 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.156357249 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.116351815 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.206829396 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.182794507 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.113156679 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.694236648 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.142801648 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.143094251 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.134378277 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.141937443 seconds)
  done (took 4.350314064 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.393918175 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.553779465 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.821067889 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.269835413 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.257185789 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.198153618 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.746751259 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.214513175 seconds)
  done (took 12.595651968 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.146046354 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.163265336 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.362249124 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.231152407 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.179829931 seconds)
  done (took 2.236835647 seconds)
done (took 136.508409833 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.118879592 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.164305998 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.118100375 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.165376914 seconds)
  done (took 1.708320374 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.166367813 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.13273723 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.10364998 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.129675635 seconds)
  done (took 1.690475063 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.550402352 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.101306636 seconds)
  done (took 1.839190517 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.147134125 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.164601882 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.164880046 seconds)
  done (took 1.640864217 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.12663905 seconds)
  done (took 1.282206803 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.115014051 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.146197758 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.198673988 seconds)
  done (took 1.617668093 seconds)
done (took 10.93408052 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140175603 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.440725897 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.433104781 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125338207 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.739586634 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.424893623 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.047041162 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.175296758 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.184905321 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.107021675 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.157955877 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.685538012 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.030211239 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.381521664 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.987000823 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.380607838 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.717160463 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.109616267 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.144056392 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.137684789 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.995499144 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.135365906 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.108106857 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.138311497 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.715193599 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.412714123 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.136762001 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.392871827 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.106557582 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.141781038 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.395546687 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.136601767 seconds)
  done (took 17.50985566 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.152935864 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.200394687 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145784428 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108868559 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.141421308 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.136910987 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.11800404 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.150245112 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202458022 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.136685453 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.12795877 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.135334223 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.141188395 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.108361351 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.159416633 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.133552309 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.110731701 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.138874241 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115573025 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.13871201 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.156143743 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.10618652 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.138737263 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.109834427 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.137933503 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.149948248 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.106849356 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.15044627 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.134672013 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114694512 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.14253802 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.107471483 seconds)
  done (took 5.525845227 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.157338436 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.211510524 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145891413 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.17210471 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.188774147 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.109211785 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.226310855 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.177238362 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202628972 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.138162403 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.156924928 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.106567674 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.178057202 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.138404761 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.131798518 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.136430671 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.137973005 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111123316 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.145124273 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.109119275 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.156275022 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.136375186 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.10912916 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.139087927 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.136016235 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.123081199 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.137053693 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.149916286 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10727596 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.142201777 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113577287 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.137113746 seconds)
  done (took 5.840544067 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.120626445 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.150817746 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.129474193 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.161960112 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.14521422 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.119604747 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.149108424 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.141851463 seconds)
  done (took 2.290265983 seconds)
done (took 32.322893216 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.133321875 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.155275328 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.126481069 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.150222449 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.211250822 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.138305336 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.124602115 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.14072952 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.121001532 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.158545315 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.106754808 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.143860362 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.156541469 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.116983407 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.19385131 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.152734419 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.200244162 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.195252742 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.112921614 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.151949315 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.142559503 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.201924283 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.118809611 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.144129905 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.206097257 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.111246918 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.192738898 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.149320292 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.146771078 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.110032632 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.193583569 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.148687582 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.114006223 seconds)
  done (took 6.128989262 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.211811553 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.223640354 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.109993356 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.139940579 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.221532273 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.138570742 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.212504185 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.109926182 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.140952321 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.109315853 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.139125626 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.213417126 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.220590162 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.232973512 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.251523305 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.222304915 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.208509949 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.220732151 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.236426296 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.225020013 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.211828592 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.108847894 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.220624889 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.225799282 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.139975565 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.108326263 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.277401131 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.220699443 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.248528975 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.208331644 seconds)
  done (took 6.941500401 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.120894245 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.154205451 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.133218289 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.208090593 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.181603256 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.152660427 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.121852028 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.161646166 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.163667862 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.108176045 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.148003653 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.173329658 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126585072 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.148428113 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.112714438 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.157769956 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.164277303 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.109801399 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.144911692 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.158966247 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.128873602 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.156302092 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.152693919 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.119269542 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.138587204 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.147448063 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.115622603 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.154075169 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.115209688 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.146580567 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.142645364 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.11343054 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.142462472 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.118491215 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.143586172 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.151604192 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.136774584 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.148716534 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.15125507 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.143676957 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.149118508 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.145520906 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.131002634 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.188845386 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.141511573 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.121684641 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.151506192 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.147604116 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.108136995 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.158386339 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124213677 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.141466878 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.162649665 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.108187712 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.139040547 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.146143486 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.110500407 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.141662349 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.118652848 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.142728967 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.165943857 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.117874697 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.146301561 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.111804006 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.145837633 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.138592553 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.1087487 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.145131062 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.162451776 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.114214642 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.172322788 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.109273188 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.149865919 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.147054702 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.115159164 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.148235486 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.108251173 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.147829326 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.146603433 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.116048211 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.148551942 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.112379635 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.143402847 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.158425557 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.160218137 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.12259022 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.150483593 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.12073541 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.143177423 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.141113761 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.123514202 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.142181598 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.113037955 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.150874046 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.141099597 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.112348486 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.15142856 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.147453013 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.109728868 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.158149168 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.114737545 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.13907034 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.156090598 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.112163881 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.143890646 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.119193243 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.151609532 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.138465031 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.118111283 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.150506985 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.107832159 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.144244999 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.142451157 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.110530707 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.157086627 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.119167746 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.146561662 seconds)
  done (took 17.422070476 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.312120446 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.323888404 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.219562764 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.41399755 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134024226 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.241928433 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.289989835 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.240179452 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.14134979 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.184989979 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.201280797 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.279821519 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.109564568 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.17354715 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.323956637 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.386809458 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.172361596 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.187470371 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.185103743 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.166035712 seconds)
  done (took 5.885171076 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.132685944 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.182992397 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.172722513 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.173540415 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.116692525 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.155641172 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.138498423 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.162998714 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.118529454 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.147384787 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.108731905 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.152188224 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.148848652 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.120358671 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.159491323 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.190126863 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.115497348 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.147734332 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.163031884 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.116666602 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.14732812 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.169282635 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.15060127 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.138251102 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.15255279 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.156252121 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.108104422 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.146772387 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.113389048 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.146135484 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.146154728 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.160718724 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.1172067 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.146153978 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.119526572 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.153384009 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.112564765 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.14229332 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.140947504 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.115103305 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.158013788 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.121453497 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.145569613 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.107845757 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.155132385 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.143053844 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.123582623 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.150800949 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.150767738 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.126340481 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.151915761 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.121847869 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.146663308 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.161976126 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.113315878 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.155576435 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.155099991 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.123479241 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.147407213 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.139305996 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.109196966 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.14589945 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.11561222 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.153223055 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.149829638 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.133880837 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.154610324 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.141124582 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.119167261 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.146511818 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.143554014 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.130332293 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.167118182 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.147089124 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.112856332 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.163600946 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.114007966 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.133833275 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.121362618 seconds)
  done (took 12.30862856 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.141275395 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.147613013 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.159815894 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.15005362 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.162678085 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.115686475 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.145315667 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.160998806 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.123113668 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.155629026 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.153950287 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.125188458 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.166919041 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.153822891 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.115789842 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.157928047 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.120164491 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.186905705 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.161332685 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.175758898 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.128198107 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.148937485 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.156242212 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.123502927 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.17877794 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.15397271 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.175193261 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.121434358 seconds)
  done (took 5.381471599 seconds)
done (took 55.233193946 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.30526355 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.484225913 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.271191663 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.282925307 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.294056908 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.273932513 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.271250593 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.463083494 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.974815989 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.25677113 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.271855649 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.269974875 seconds)
done (took 28.619600206 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.346104685 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.88623585 seconds)
    (2/2) benchmarking "String"...
    done (took 1.608031553 seconds)
  done (took 4.688518715 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.265439894 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.267697136 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.518299613 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.266621735 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.282264684 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.284776932 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.273736965 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.278387409 seconds)
  done (took 16.365376929 seconds)
done (took 26.860165661 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.322504143 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.488163857 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.524599956 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.28583514 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.288051058 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.268969031 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.263212529 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.295617738 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.273916573 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.264689946 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.268140903 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.567925939 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.261706943 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.704134906 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.260837586 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.299365329 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.292818826 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.506280847 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.27014871 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.317743631 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.268496274 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.261234015 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.296459987 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.304177052 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.275360692 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.274971775 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.27115873 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.262142326 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.496301677 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.304382621 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.315283467 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.269262069 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.272771971 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.271014483 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.374521145 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.301843312 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.457401681 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.263521114 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.268103847 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.273209689 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.45667784 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.653313968 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.273790574 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.261920137 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.298054381 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.33560055 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.265906234 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 2.009161442 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.277638326 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.262990765 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.279959643 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.660503749 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.278889081 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.280044453 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.289375029 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.515341817 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.299698434 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.292720551 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.295580191 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.276896909 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.271927034 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.283707673 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.291923968 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.273099636 seconds)
  done (took 147.987961797 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.271469905 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.276017673 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.275199472 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.296068353 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.275445852 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.276695915 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.271090565 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.271254016 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.275323077 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.281387722 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.272091347 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.27329399 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.277146502 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.257509763 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.278157742 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.286678247 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.271448396 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.275456743 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.294547661 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.27031296 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.291905502 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.271978765 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.292958911 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.277896854 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.302792587 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.355115778 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.297186887 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.286918076 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.281327059 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.272467318 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.313402946 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.336800434 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.842118936 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.13983862 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.285251332 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.282866519 seconds)
  done (took 82.855353703 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.268435814 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.267122813 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.268381949 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.268756709 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.299928521 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.267978614 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.795383248 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.799664903 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.991557537 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.732625272 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.487913356 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.470146384 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.241454689 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.333490082 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.25667242 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.23653167 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.251793511 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.277597444 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.239853972 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.236671108 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.766836007 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.254067449 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.269200894 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.397121453 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.243645655 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.257729258 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.630297161 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.229651055 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.259540208 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.554910443 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.276474814 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.226447037 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.5645723 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.287820767 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.339308317 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.230079504 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.259359322 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.230216813 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.507302567 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.229579454 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.229789433 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.232507203 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.865907642 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.22965137 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.75920128 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.232883143 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.148324403 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.230063636 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.230260331 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.414233402 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.831573925 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.245358012 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.228543295 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.230434279 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.229945777 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.230994294 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.261062503 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.474164492 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.345679633 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.247319939 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.235541084 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.262728131 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.232485212 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.269482599 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.230201375 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.933606172 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.290904393 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.450386708 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.758464816 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.231803557 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.324009881 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.3460824 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.228247843 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.228063951 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.227749939 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.225481869 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.335239395 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.22717707 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.62593847 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.396484636 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.242314651 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.474631704 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.321360159 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.226188042 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.587262444 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.227606599 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.224767977 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.945060372 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.226514759 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.225725877 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.322067498 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.226177846 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.226466036 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.224599724 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.630073278 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.75946102 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.44926425 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.227526238 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.826905768 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.233920298 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.636769619 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.751919048 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.854130829 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.227043226 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.338539926 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.395779306 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.243631369 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.226464386 seconds)
    (109/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.225855415 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.226521567 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.475207467 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.226073401 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.286402831 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.627171039 seconds)
  done (took 368.740765408 seconds)
done (took 600.779551276 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.950175976 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.906329546 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.041331975 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.932454989 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.903606036 seconds)
  done (took 10.890084792 seconds)
done (took 12.047559218 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.418068365 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.418670844 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.292188762 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.418890179 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.268662802 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.437343335 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.401799275 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.255191273 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.33509993 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.310318574 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.338365525 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.284751686 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.273383588 seconds)
  done (took 18.613760009 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.514783684 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.245753619 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.319135012 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.478857427 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.282438419 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.505736973 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.541483977 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.244130361 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.39033792 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.24953137 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.257133845 seconds)
  done (took 18.189643678 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.506130429 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.245689946 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.309380509 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.492373799 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.286048337 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.508359094 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.545625537 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.241263354 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.406066165 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.257163406 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.2571386 seconds)
  done (took 18.220851152 seconds)
done (took 56.187692854 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.281100527 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.408727481 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.274038982 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.257156257 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.253111698 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.25367918 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.257947739 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.251475854 seconds)
  done (took 11.401883659 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.252195838 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.251771393 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.252389672 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.255646928 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.254470662 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.252191869 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.252798649 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.253143766 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.254562662 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.253528546 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.252739152 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.252917037 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.254173972 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.251186945 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.251286874 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.255585802 seconds)
  done (took 21.218191721 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.256229861 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.254801182 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.253208017 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.252972393 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.25415563 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.255364448 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.255030828 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.253942426 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.252919545 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.251688628 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.252878545 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.254303204 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.253011371 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.253740103 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.253759652 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.252998754 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.256506405 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.25524348 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.258245244 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.255804402 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.254501523 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.255468437 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.253858405 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.255523914 seconds)
  done (took 31.27814714 seconds)
done (took 65.062125588 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.244571773 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.245422312 seconds)
  done (took 5.653843687 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.314774029 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.316339215 seconds)
  done (took 3.805444022 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.256827041 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.255902949 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.254939426 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.254503108 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.256739604 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.254664826 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.256882456 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.254116137 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.254718692 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.25392362 seconds)
  done (took 13.724786487 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.255255784 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.25316517 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.255851381 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.25485224 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.255851661 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.254428699 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.254872325 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.254772809 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.254458274 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.254926322 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.256877356 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.256680575 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.255642921 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.255267814 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.254579866 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.256361069 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.257216336 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.256061089 seconds)
  done (took 23.768419314 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.267562084 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.27718725 seconds)
  done (took 3.714839211 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.39698304 seconds)
    (2/7) benchmarking "second"...
    done (took 1.297702676 seconds)
    (3/7) benchmarking "month"...
    done (took 1.373137159 seconds)
    (4/7) benchmarking "year"...
    done (took 1.361153282 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.29630184 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.276846287 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.297246072 seconds)
  done (took 10.469621185 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.258591788 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.442746784 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.549031515 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.840782393 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.258563157 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.302823044 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.116805146 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.304123826 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.289807863 seconds)
  done (took 14.53497951 seconds)
done (took 76.841796774 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.240854127 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.325284875 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.266066586 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.272923513 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.554170957 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.297376024 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.246430068 seconds)
done (took 16.376503701 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.248470706 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.238988538 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.256068383 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.251777875 seconds)
  done (took 10.166611251 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.244801156 seconds)
    (2/2) benchmarking "read"...
    done (took 1.60641068 seconds)
  done (took 5.023306054 seconds)
done (took 16.363282288 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.256981653 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.260239977 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.256307777 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.25548923 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.257586133 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.259045353 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.259077932 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.259247576 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.258343038 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.256687267 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.258332349 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.257131868 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.258179497 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.259057442 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.258791969 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.258004078 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.256481003 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.257992375 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.257571846 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.257137338 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.257535263 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.257620418 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.256578618 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.256792476 seconds)
  done (took 31.360866435 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.257681068 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.25787605 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.258649308 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.256461933 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.257435697 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.257921137 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.258674036 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.258157448 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.25807807 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.258439585 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.256561893 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.257063273 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.258811529 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.258114805 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.258164573 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.257175229 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.258961568 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.259526561 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.258225166 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.259028433 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.259456894 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259386753 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.258324977 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.258628242 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.259283999 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.258426343 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.25887184 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.258684798 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.26046622 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.259704885 seconds)
  done (took 38.925361872 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.264937142 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.263455036 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.259850592 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.260346658 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.260712016 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.259774688 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.261088808 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.259413726 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.259570989 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.259913874 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.260925664 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.26058236 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.260268121 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.260698233 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.259397585 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.26035102 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.259375666 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.25933933 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.260009194 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.261506043 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.260197603 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.260749705 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.259590104 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.261635303 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.263409904 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.261034738 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.261220313 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.261403044 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.260987591 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.261093588 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.261442023 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.261538167 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.261141693 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.262343268 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.261285453 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.259792119 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.266223432 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.266508727 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.261721157 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.261730918 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.262668157 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.262419209 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.261837744 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.261916288 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.262047235 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.263083676 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.26299138 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.262248156 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.261834807 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.262753118 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.26260013 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.263477136 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.262353806 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.262442339 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.263359414 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.26242304 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.264839155 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.262704481 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.261978121 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.263983392 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.265646582 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.263159877 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.261701687 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.263389426 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.265016779 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.261910023 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.262694879 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.261902263 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.263205844 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.263718993 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.26426869 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.265335755 seconds)
  done (took 92.040810724 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.265629533 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.266228142 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.26427968 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.264680777 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.264540963 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.264873434 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.264234502 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265202659 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.265331405 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.266464176 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.265460242 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.264179317 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.263647349 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.265545287 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.265647106 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.263028935 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.264929676 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.266904574 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.267967116 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.266079936 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.265059724 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.265527553 seconds)
  done (took 29.01491071 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.266168962 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.267017808 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.266132036 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.265811826 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.267842834 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.266506025 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.266058392 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.266525719 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2652484 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.265542452 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.264738854 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266049171 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.26857666 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.266364908 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.266424667 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.267809487 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.267647819 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.267342111 seconds)
  done (took 23.977980478 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.267713091 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.265611676 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.266688433 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.265816135 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.266470056 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.266206792 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.266763909 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.267380762 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.266439476 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.266980211 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.264319744 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265066521 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.26531602 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.265950494 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267007271 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.267303535 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.265499572 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.26686982 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.266342176 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.265944225 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.265892617 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.266686447 seconds)
  done (took 29.040882735 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.266903121 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.266977573 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.265681106 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.266663425 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.265082032 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.267457903 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.266253267 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.266053332 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.268256534 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.267152466 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.266956878 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.267401848 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.267586846 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.266811801 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.26831434 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.267748276 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.268164858 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.26752914 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.268939333 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.268203751 seconds)
  done (took 26.525986787 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.268077948 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.267128011 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.26831882 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.267973733 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.268549447 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.268110494 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268384097 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.268286129 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.268583377 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.268773599 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.267953308 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.268092534 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.269831777 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.268330072 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.267551049 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.269328739 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.268292969 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.270053295 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.269102605 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.270469482 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.269755897 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.270497003 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.269883197 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.265994582 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.271217075 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.269214986 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.272003937 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.270517873 seconds)
  done (took 36.714167384 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.270810107 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.26983789 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.270714793 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.271552715 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.27204177 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.268839668 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.271076771 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.271556962 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.271853721 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.271955855 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.270992569 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.269648726 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.27174965 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.271990617 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.270573245 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.270390367 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268914352 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.273806437 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.271115045 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.270846333 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.27241337 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.271470009 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.271242571 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.272022111 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.271924234 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.271413175 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.273792189 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.272825379 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.271387331 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.272542636 seconds)
  done (took 39.326350789 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.319646538 seconds)
    (2/2) benchmarking "in"...
    done (took 1.317992394 seconds)
  done (took 3.822195402 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.271606391 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.273619867 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.273435322 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.273165896 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.271698589 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.273705359 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.272525579 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.270765932 seconds)
  done (took 11.366783571 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.266525288 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.271574498 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.272365449 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.274551541 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.27325618 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.269317289 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.274321149 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.291398264 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.268239842 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.267371804 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.270188215 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.274968973 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.268259147 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.26641204 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.266243795 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.268466798 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.273488992 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.273281566 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.271881241 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.271801341 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.269789515 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.267103104 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.270051607 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.274313026 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.26595415 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.277020256 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.273260408 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.275158726 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.26589418 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.270714361 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.268404021 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.27306137 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.273593788 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.272203339 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.27400809 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.275155794 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.276380022 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.288342805 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.275285983 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.27358916 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.276732368 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.274248208 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.268477414 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.268400367 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.270015795 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.273663082 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.275773635 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.274577363 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.267194486 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.270637634 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.279985928 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.267379804 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.275339504 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.270840019 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.269814219 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.275037801 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.292383774 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.271163976 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.276253979 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.279275481 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.28204381 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.291260058 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.269886591 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.276454214 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.277393106 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.288587973 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.274246288 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.292533915 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.276571908 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.27869156 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.276322778 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.281007574 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.293061769 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.27502966 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.274961959 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.277504504 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.270803022 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.276136878 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.276577891 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.289451675 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.277454602 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.277618677 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.277718641 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.285493303 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.269205344 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.275028789 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.27448377 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.27510176 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.272092336 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.281611873 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.29353625 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.27807413 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.270006026 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.267836033 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.272367423 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.276065145 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.270768035 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.271386276 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.279248045 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.279309169 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.276600928 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.274810957 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.277871963 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.276470789 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.273323679 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.279802516 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.276572923 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.271381143 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.277711606 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.276885691 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.276836492 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.274253045 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.277887996 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.279260562 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.274679376 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.277924575 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.277925208 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.274192796 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.277676539 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.280946565 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.280667084 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.290183454 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.278996338 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.277353164 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.275553484 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.286964211 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.276724924 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.276760337 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.280197885 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.277817638 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.279832189 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.273511168 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.279254489 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.274444802 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.277289824 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.27467506 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.279403903 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.280209213 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.27909557 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.275761551 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.274871008 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.272391406 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.273020876 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.274770772 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.279683643 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.273820481 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.277285113 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.273148156 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.274399665 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.273120686 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.280989791 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.280090382 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.276111021 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.278961395 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.271667476 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.277273543 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.273667124 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.280157671 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.282224207 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.280067379 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.278639495 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.275741061 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.277399358 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.278364805 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.279371733 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.27497156 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.27758646 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.282319711 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.282533334 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.274939057 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.281608471 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.275454272 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.2766309 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.285500168 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.282759802 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.278522893 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.277810845 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.279065815 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.278894176 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.278466325 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.279515968 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.284290993 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.279806594 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.285187495 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.283307963 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.281024074 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.282710718 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.27545733 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.27667951 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.281432626 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.278979589 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.290171793 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.287800594 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.300413596 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.273332697 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.285435825 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.277386311 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.282973111 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.281098151 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.282204801 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.285462719 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.278853273 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.277980517 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.280028797 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.279364202 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.282462109 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.277545419 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.284190734 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.286258486 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.282624125 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.282382386 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.27818256 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.278476359 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.282898475 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.280912494 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.282830981 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.276749295 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.284787352 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.278695806 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.276380811 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.284111955 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.281766698 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.285833942 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.283009834 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.281306134 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.278763765 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.276105903 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.279334002 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.28460273 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.280179739 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.28054045 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.286543637 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.296310607 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.281029417 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.287216532 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.298447613 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.276134891 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.282986683 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.286703546 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.283713793 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.284764324 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.291050169 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.287154781 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.28234823 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.284763491 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.278811613 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.288100939 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.285784607 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.285078626 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.276355187 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.288022298 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.282682558 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.286620782 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.280815437 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.281613549 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.282113588 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.283726574 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.285864985 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.288807408 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.279288779 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.28481651 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.284611558 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.283092716 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.28106441 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.292868053 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.284808149 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.278840282 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.281130717 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.280254355 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.291461825 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.281957121 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.284290624 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.281106809 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.284971423 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.305950817 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.286408311 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.29859818 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.286425487 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.287375444 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.300782799 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.28792999 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.284860922 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.283976149 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.282883959 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.279410451 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.288189954 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.28447312 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.285298366 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.282661298 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.283996222 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.290739302 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.288286434 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.281695668 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.287508623 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.29129064 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.290780956 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.28372407 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.287394624 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.28377787 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.288232046 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.281969319 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.281538755 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.289976739 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.300372296 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.28615385 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.283157269 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.28568898 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.284952903 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.285732616 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.290719186 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.285153798 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.292764453 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.288868938 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.29353084 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.288304171 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.293469621 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.290067979 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.28407932 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.295718328 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.290281329 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.283402475 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.286308527 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.289060817 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.292326796 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.307875279 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.287313493 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.294787556 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.292362118 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.290108151 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.292260055 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.286719266 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.292985467 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.290513481 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.290837681 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.303638542 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.285716475 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.286246512 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.288318797 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.293257019 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.292573414 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.286473987 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.288996256 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.291563007 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.288876549 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.286507173 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.288229429 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.294505204 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.288935932 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.290003312 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.291692853 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.291570882 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.294181615 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.307012494 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.295274434 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.292577798 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.291628876 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.292771286 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.293883347 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.308023935 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.2852096 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.291512973 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.294583289 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.285988963 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.284617308 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.28625786 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.289148945 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.290509718 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.297197958 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.287376746 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.286158751 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.286014683 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.290995608 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.287201526 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.292505426 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.305423582 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.284991284 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.296376332 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.292959999 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.287274699 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.29339357 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.290315745 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.282500602 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.287900496 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.297014111 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.301408926 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.288569108 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.291780272 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.285902873 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.295156688 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.290614796 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.292595926 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.292500702 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.292506429 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.290120938 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.29565622 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.29157376 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.295299846 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.289132973 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.29189343 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.290748058 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.294998781 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.288341289 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.288396855 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.293472475 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.29671747 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.286122319 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.284955313 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.295454168 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.284151505 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.293945473 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.285474154 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.290983566 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.296891222 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.294333507 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.291326626 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.296517454 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.292612078 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.294144274 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.297668086 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.295403874 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.297871591 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.292700375 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.296007329 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.292097741 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.290462824 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.297164042 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.291049396 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.299648912 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.294938744 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.297450253 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.28945857 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.296589134 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.299546537 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.299000883 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.291801045 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.293451972 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.300128874 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.292189395 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.302077083 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.301671929 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.302789557 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.293299276 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.293038698 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.299040358 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.293798834 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.296407375 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.298726831 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.296799135 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.29467692 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.294126713 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.30054811 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.299392129 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.294246667 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.294505443 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.302780239 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.312817257 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.299953447 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.295573199 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.295326681 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.291362938 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.299149439 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.301869229 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.292326977 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.298025237 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.310766017 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.299025777 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.295685878 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.294419126 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.296599343 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.304417196 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.302717624 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.298103944 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.300734011 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.295466632 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.300108472 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.299072584 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.300618152 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.291174947 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.296270815 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.296477091 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.301992536 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.299057292 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.296013516 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.294075872 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.294587376 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.30123156 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.303088348 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.301116646 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.302235134 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.294549836 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.297147334 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.293834619 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.299160889 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.294036251 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.296422259 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.305845547 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.30409146 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.300298115 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.304469177 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.310292695 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.303023604 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.294495018 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.297783921 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.297178799 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.3004856 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.302967975 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.297526553 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.296043781 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.302556538 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.301955201 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.303550864 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.300210317 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.308058949 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.324333137 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.298130968 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.297764904 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.297948998 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.302042918 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.303677673 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.301896888 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.299733648 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.295618459 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.309408678 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.296764117 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.302442196 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.313601217 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.297917932 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.302743846 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.299039602 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.304013393 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.302043514 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.303644572 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.303952543 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.301851168 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.307959854 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.302527726 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.306239516 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.321413635 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.313719539 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.299616883 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.303208167 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.295215775 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.303288903 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.294536425 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.300152777 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.303094434 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.30312299 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.299913286 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.293928073 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.30507194 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.299009316 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.302937805 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.304772102 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.299998505 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.298144349 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.305341784 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.305589502 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.303995052 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.303955596 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.30370666 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.303777762 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.300406632 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.311867368 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.323223018 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.306851781 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.306572622 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.305094436 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.299529702 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.301770414 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.307999801 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.315293098 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.306217739 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.303550997 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.299125107 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.303723329 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.306870214 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.30109915 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.302207423 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.302694396 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.306960516 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.312726787 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.325922992 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.305762843 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.300960328 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.302692559 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.307899342 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.302216822 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.308717786 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.302892384 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.29880278 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.303820655 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.310382172 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.303774422 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.307900879 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.303479908 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.31538368 seconds)
  done (took 768.940187049 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.310153233 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.306055584 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.307929347 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.306840982 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.304755858 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.305220776 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.307535546 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.303879537 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.307736439 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.309358155 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.309242219 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.307535434 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.310438138 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.311460058 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.311734191 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.305866768 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.310401021 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.30727397 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.307910598 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.309932796 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.310446007 seconds)
  done (took 28.688173227 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.308701731 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.311017291 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.307877628 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.31166395 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.31189494 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.310157717 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.311220203 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310070094 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.311267253 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.309250329 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.309583612 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.309068408 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.309809906 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.313136262 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311491334 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.313585071 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.31094612 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.313281446 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.311785279 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.31209471 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.311931387 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.312129304 seconds)
  done (took 30.0590336 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.308336628 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.307857096 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.302480072 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.313195728 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.310345402 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.309537249 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.310085427 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.310428413 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.313759328 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.304596633 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.304468351 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.304697738 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.312505001 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.318819086 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.308644807 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.312371583 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.311710552 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.312006113 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.310667486 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.312481435 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.310987641 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.331548077 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.314395128 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.307405247 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.312693566 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.313246451 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.314222123 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.311416855 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.306404136 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.31696904 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.314614691 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.30769706 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.311235811 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.306727644 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.308837338 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.319070744 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.314398794 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.314096379 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.313348608 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.313808935 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.332361344 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.313512097 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.312743333 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.332731906 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.316029039 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.309896802 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.319451662 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.314656847 seconds)
  done (took 64.233802527 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.919391459 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.938132162 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.937422782 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.933051 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.937240393 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.939496019 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.937890788 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.93628471 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.937802937 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.939350687 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.933394468 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.927373152 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.935658176 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.929050728 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.930318894 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.932764381 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.946086033 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.936586079 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.931297438 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.932897641 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.939603505 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.939026609 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.93367038 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.942672047 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.93642894 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.930319749 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.937518773 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.949541105 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.939850611 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.93194198 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.930752507 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.935164166 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.935279965 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.93715116 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.944079939 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.930275649 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.93623696 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.932557781 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.946861352 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.93738618 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.936568747 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.937336063 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.939784413 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.939211473 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.93560052 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.94142863 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.941861222 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.937325162 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.939426288 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.949960039 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.936205421 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.936231303 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.938002082 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.937114042 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.938506041 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.93413422 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.939619493 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.939989954 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.942273895 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.937116421 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.950886846 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.932276197 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.934737915 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.932239769 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.937004036 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.939336866 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.943339283 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.93805576 seconds)
  done (took 132.949364805 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.318326474 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.31699815 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.318537286 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.315934862 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.317668803 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.316681826 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.31945378 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.317651622 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.31526943 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.316891145 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.312777501 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.320043859 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.317312376 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.316785299 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.317429574 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.315720951 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.313414606 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.319188396 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.31378832 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.317587049 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.314722686 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.317842655 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.318938249 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.313385947 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.315642495 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.318350184 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.316694878 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.319401529 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.315537979 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.319242778 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.318714671 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.314501365 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.318479567 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.316841621 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.317910405 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.318583369 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.319151696 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.319713116 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.318541116 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.31963024 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.315222251 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.316103066 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.316418764 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.315118934 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.319284596 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.320061205 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.320662869 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.320090989 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.321113813 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.320610333 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.320260066 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.32165814 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.319464889 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.318051377 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.319875827 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.322714088 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.319565515 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.32223404 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.318865873 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.318968607 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.320275486 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.318840635 seconds)
  done (took 82.945928324 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.324026477 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.323766324 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.319959843 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.318712662 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.316849147 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.318481489 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.315783883 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.322118748 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.323707743 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.322617518 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.323319563 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.322770176 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.321521188 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.322912677 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.323844483 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.320345977 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.325219988 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.322824015 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.321078298 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.323815275 seconds)
  done (took 27.65969774 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.320936639 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.324151802 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.320992909 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.323126577 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.321617987 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.324814833 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.323606139 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.319462298 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.322827852 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.323178551 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.320650001 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.323358523 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.32219263 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.326769457 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.319277185 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.325020123 seconds)
  done (took 22.393542051 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.325046963 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.325327169 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.321175195 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.321786967 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.324603561 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.319602405 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.322895364 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.325481519 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.32413737 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.325636649 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.322925213 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.321246059 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.326331232 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.320913518 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.322442752 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.32520979 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.325456752 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.32399959 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.324314298 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.323266101 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.326676931 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.324335192 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.327129112 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.325752875 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.32496955 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.325677576 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.324655166 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.325539832 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.326197847 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.326162758 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.327572968 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.32785041 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.322709805 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.326522367 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.320046696 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.32503906 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.326580491 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.327015474 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.327295057 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.327832238 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.32599288 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.326552119 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.325770986 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.326746635 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.326761461 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.326929516 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.324537516 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.325583703 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.325314643 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.327727625 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.327105917 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.325044993 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.32600574 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.326488414 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.326162557 seconds)
  done (took 74.111287033 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.327835151 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.327941345 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.328020908 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.32467379 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.326903433 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.327948304 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.325272863 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.328979812 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.329823383 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.327575529 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.328134546 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.33141006 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.329278399 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.32823898 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.328702312 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.327802402 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.327958607 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.328422856 seconds)
  done (took 25.137997571 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.332525058 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.32993198 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.330080725 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.328772239 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.328572942 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.326317969 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.327517284 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.328544429 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.330104295 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.329142704 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.329773445 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.331942558 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.329345138 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.329732405 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.329106692 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.329238914 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.331519248 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.329776679 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.331201785 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.330873744 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.331845239 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.3277315 seconds)
  done (took 30.485894786 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.323364028 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.323117178 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.323383768 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.338345053 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.341502877 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.322785704 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.322746325 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.320206165 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.338373217 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.365696167 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.361184622 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.342279864 seconds)
  done (took 17.257932862 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.333624545 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328278451 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.330826824 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.332128845 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330941881 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332347012 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.332256323 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.332928491 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331528289 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330272747 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.332400812 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329444911 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.331276058 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332943031 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.332415375 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.331876872 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.33263965 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.333574264 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.331698186 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.332686426 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.331972616 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.332788964 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331709176 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.333195314 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.330408994 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3317388 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.332680173 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.332367782 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333421721 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333490455 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.333924755 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.33183498 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333654389 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.334407794 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.33188811 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333726028 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.332476993 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333408655 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.33419527 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.334672343 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.334141321 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333977367 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.332458606 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334035515 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333398796 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.33194581 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332153465 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.333746479 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.333445896 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334690245 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.332470968 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334888705 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.332712574 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.33309989 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333411894 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333643808 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33426704 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332866747 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.331875113 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.334306345 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334472345 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.333557864 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.334154831 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.334831497 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.33449391 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.335149668 seconds)
  done (took 89.207115598 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.334674623 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.332999346 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335106778 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336405723 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.335774002 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.335932223 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.335244866 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.334858425 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.335818089 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.335907457 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.336178335 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.334248234 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.336266325 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.33536186 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336827413 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.334907756 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.336377031 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.335465969 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.337828768 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337504119 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.334685431 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.335520366 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.336328947 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.335863966 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336560758 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.334743356 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336490891 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335428515 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.336659347 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.33548802 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33571691 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336377795 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33558123 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.337392519 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.336932842 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336822795 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336703685 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.338719425 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336911115 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.335773804 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336500877 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336599962 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336707569 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336918972 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33601177 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.338224673 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338537206 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.337703694 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337372861 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3375509 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.33650206 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.337103006 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338214278 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.337887022 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.336334872 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.337977121 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.337538576 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.337557442 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.338755433 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33770273 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.338292238 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.338330331 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.336552905 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.336770503 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.338449548 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338768594 seconds)
  done (took 89.456172928 seconds)
done (took 1846.816190638 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.495198248 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.449950799 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.330231434 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.339184175 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.32967623 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.354285312 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.344334715 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.330025695 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.331364154 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.33114581 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.329935855 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.525157308 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.323001953 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.32900323 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.332074317 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.426986819 seconds)
  done (took 27.145235447 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.35982261 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.340532256 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.449761712 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.355796763 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.361382159 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.524126109 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.394499644 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.339621893 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.510884918 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.358955446 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.335451806 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.358183193 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.339021211 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.331780618 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.357063708 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.528208338 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.587236471 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.33589947 seconds)
  done (took 29.413733999 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.795533634 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.339058826 seconds)
  done (took 5.378249342 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.355343798 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.337726899 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.339533389 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.337527124 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.328992802 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.326373112 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.335260995 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.331649486 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.336527003 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.467112198 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.338858813 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.349659713 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.358552339 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.336811512 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.341949276 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.381149477 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.47850579 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.339582101 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.340611162 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.340717759 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.336606328 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.453426721 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.38039919 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.345346405 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.460171479 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.340824578 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.343658923 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.34230525 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.545770878 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.342258828 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.338364289 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.333981243 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.336987348 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.336036763 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.7928093 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.347607966 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.362765406 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.366845121 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.344157033 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.512034227 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.339136787 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.347496171 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.331152232 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.803907986 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.474284861 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.460267283 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.344818825 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.342876366 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.336709507 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.403269959 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.337496337 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.339137606 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.396619932 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.136944916 seconds)
  done (took 85.713489435 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.335262199 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.327177169 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.513261967 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.351842951 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.331389335 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.329350339 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.332276507 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.620267225 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.356509806 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.333014503 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.620881958 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.919112402 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.355136095 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.390098077 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.197669774 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.404860662 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.329676705 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.345779941 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.332144185 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.338428963 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.893573047 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.333424189 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.346848572 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.501513133 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.369620105 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.850740509 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.332449289 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.357762906 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.339321975 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.330030687 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.868369876 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.356945512 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.39755855 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.329357738 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.60439622 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.711650162 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.673195334 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.333421222 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.357459018 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.3365475 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.341426012 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.835233008 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.695285679 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.333270134 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.331246533 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.848757114 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.334815788 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.335392199 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.334950256 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.586121186 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.333223494 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.335239628 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.364059761 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.332052906 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.335378383 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.342027181 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.447166623 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.855678243 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.330610316 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.334178192 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.358484423 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.336661957 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.335786676 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.333881164 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.354710029 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.697634637 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.484697368 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.343158023 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.700950181 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.861936601 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.346949505 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.941388517 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.349155235 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.345319862 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.551704578 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.333321027 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.349328938 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.867250284 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.337662817 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.332885293 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.678677586 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.336598472 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.632044151 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.352101056 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.333333236 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.904483805 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.336773977 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.340605717 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.335540004 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.347900922 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.337155534 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.338260814 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.612717099 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.388996319 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.334914901 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.336176954 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.348868244 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.33703193 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.333665686 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.340549819 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.928903765 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.351022106 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.337461717 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.337733947 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.334710417 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.334232777 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.334208401 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.336332535 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.610003234 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.348917717 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.33990457 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.340524858 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.335136011 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.337878202 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.499417004 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.343147397 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.651830326 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.332421635 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.34390004 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.335794351 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.337801148 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.389520585 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.335496195 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.336593769 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.23032327 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.634028154 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.358269834 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.352878832 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.334189505 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.357020366 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.334726427 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.338061422 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.380587351 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.337837928 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.133816937 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.355248722 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.353843394 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.335727724 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.345864449 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.334529066 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.339291168 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.336244405 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.635582122 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.613921598 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.482857341 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.333843392 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.334886859 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.115980886 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.386090357 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.521129104 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.356894302 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.337975055 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.589434922 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.562400349 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.341351082 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.335434478 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.335817609 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.598928076 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.338710671 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.665563303 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.894804572 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.354116253 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.345386597 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.13602355 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.033629916 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.340897938 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.33790357 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.632206991 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.355553281 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.341150309 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.338382844 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.339106325 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.360288931 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.360365019 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.340979159 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.33717842 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.340000215 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.38453054 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.533557716 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.359531003 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.339917926 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.854855516 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.362576022 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.343705718 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.339686359 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.341805897 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.342014178 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.410613691 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.3412698 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.394172465 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.338464368 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.341393857 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.910476487 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.339987664 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.339353113 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.533299938 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.053869194 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.353830136 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.340105209 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.357546252 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.254126762 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.878259183 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.379526912 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.658902815 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.350273099 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.382963624 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.342540966 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.407476797 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.919660684 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.342022323 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.35896239 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.01048584 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.358825776 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.800616794 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.339132914 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.342820075 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.957651007 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.355456832 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.349914894 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.34112408 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.34067121 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.644007097 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.344263263 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.371598562 seconds)
  done (took 499.677203249 seconds)
done (took 648.571250611 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.340133635 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.349543432 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.34010344 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.347009441 seconds)
  done (took 10.632203026 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.359614354 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.35121481 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.357621119 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.349340763 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.358277366 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.350798794 seconds)
  done (took 9.387874398 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.344790933 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.349463962 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.349098944 seconds)
  done (took 8.306215338 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.556776307 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.365326322 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.682567004 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.365077703 seconds)
  done (took 9.231026504 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.356082871 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.355563092 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.358163434 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.356260271 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.360240471 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.362362774 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.357479869 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.356368216 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.359025922 seconds)
  done (took 13.480663849 seconds)
done (took 52.295421683 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.503317724 seconds)
    (2/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.387336002 seconds)
    (3/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.382584059 seconds)
    (4/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.347842112 seconds)
    (5/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.430777522 seconds)
    (6/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.448095397 seconds)
    (7/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.338400884 seconds)
    (8/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.427856918 seconds)
    (9/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.346424979 seconds)
    (10/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.592964229 seconds)
    (11/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.459360468 seconds)
    (12/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.336187938 seconds)
    (13/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.028427845 seconds)
    (14/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.381564319 seconds)
    (15/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.396746345 seconds)
    (16/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.555128732 seconds)
    (17/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.38873389 seconds)
    (18/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.397351141 seconds)
    (19/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.340226667 seconds)
    (20/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.552169764 seconds)
    (21/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.393878218 seconds)
    (22/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.346476063 seconds)
    (23/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.417624375 seconds)
    (24/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.425878881 seconds)
    (25/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.453763606 seconds)
    (26/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.439120589 seconds)
    (27/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.481930529 seconds)
    (28/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.40866955 seconds)
    (29/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.388738975 seconds)
    (30/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.494047354 seconds)
    (31/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.529947241 seconds)
    (32/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.509927438 seconds)
    (33/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.393474526 seconds)
    (34/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.392131217 seconds)
    (35/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.476143796 seconds)
    (36/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.562073304 seconds)
    (37/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.405454866 seconds)
    (38/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.458860785 seconds)
    (39/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.499361481 seconds)
    (40/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.063601131 seconds)
    (41/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.396831641 seconds)
    (42/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.428119638 seconds)
    (43/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.515212444 seconds)
    (44/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.340321913 seconds)
    (45/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.528401566 seconds)
    (46/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.436292661 seconds)
    (47/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.403255313 seconds)
    (48/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.439384215 seconds)
    (49/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.461864006 seconds)
    (50/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.461790572 seconds)
    (51/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.449814238 seconds)
    (52/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.515854036 seconds)
    (53/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.034404042 seconds)
    (54/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.385729001 seconds)
    (55/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.061165638 seconds)
    (56/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.453235773 seconds)
    (57/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.353026393 seconds)
    (58/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.352177983 seconds)
    (59/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.561393964 seconds)
    (60/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.623825304 seconds)
    (61/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.138988869 seconds)
    (62/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.495145267 seconds)
    (63/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.717003109 seconds)
    (64/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.158796616 seconds)
    (65/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.109078617 seconds)
    (66/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.341022544 seconds)
    (67/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.521692207 seconds)
    (68/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.366623802 seconds)
    (69/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.502800437 seconds)
    (70/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.577172735 seconds)
    (71/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.464940661 seconds)
    (72/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.453794735 seconds)
    (73/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.04009377 seconds)
    (74/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.370352144 seconds)
    (75/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.230854223 seconds)
    (76/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.45050993 seconds)
    (77/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.997089794 seconds)
    (78/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.395368068 seconds)
    (79/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.433813908 seconds)
    (80/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.38636208 seconds)
    (81/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.465613496 seconds)
    (82/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.372132782 seconds)
    (83/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.342779481 seconds)
    (84/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.412467373 seconds)
    (85/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.420879202 seconds)
    (86/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.389786977 seconds)
    (87/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.379371744 seconds)
    (88/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.277698343 seconds)
    (89/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.373217577 seconds)
    (90/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.346368922 seconds)
    (91/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.363908329 seconds)
    (92/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.4292475 seconds)
    (93/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.039464185 seconds)
    (94/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.457253108 seconds)
    (95/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.430911738 seconds)
    (96/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.351528601 seconds)
    (97/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.408548028 seconds)
    (98/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.52784787 seconds)
    (99/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.372788347 seconds)
    (100/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.436845323 seconds)
    (101/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.515403299 seconds)
    (102/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.687274332 seconds)
    (103/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.384562772 seconds)
    (104/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.464979269 seconds)
    (105/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.384499972 seconds)
    (106/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.412753618 seconds)
    (107/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.571036796 seconds)
    (108/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.562521771 seconds)
    (109/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.55947309 seconds)
    (110/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.344342963 seconds)
    (111/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.526229217 seconds)
    (112/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.415018349 seconds)
    (113/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.50184879 seconds)
    (114/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.500928339 seconds)
    (115/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.53368436 seconds)
    (116/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.402543131 seconds)
    (117/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.431271209 seconds)
    (118/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.583364213 seconds)
    (119/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.390177789 seconds)
    (120/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.453528977 seconds)
    (121/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.475291625 seconds)
    (122/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.467354288 seconds)
    (123/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.442633134 seconds)
    (124/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.516986181 seconds)
    (125/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.353006383 seconds)
    (126/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.570448504 seconds)
    (127/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.407617677 seconds)
    (128/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.380362439 seconds)
    (129/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.392049424 seconds)
    (130/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.540291295 seconds)
    (131/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.489005266 seconds)
    (132/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.343613943 seconds)
    (133/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.473104281 seconds)
    (134/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.721851682 seconds)
    (135/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.469316494 seconds)
    (136/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.403500186 seconds)
    (137/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.57301163 seconds)
    (138/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.394657914 seconds)
    (139/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.665170784 seconds)
    (140/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.348129239 seconds)
    (141/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.490791175 seconds)
    (142/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.397567184 seconds)
    (143/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.565776443 seconds)
    (144/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.521291005 seconds)
    (145/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.514625677 seconds)
    (146/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.434945411 seconds)
    (147/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.412596033 seconds)
    (148/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.368256166 seconds)
    (149/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.014710591 seconds)
    (150/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.102376046 seconds)
    (151/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.134607794 seconds)
    (152/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.524900783 seconds)
    (153/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.564204432 seconds)
    (154/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.404021174 seconds)
    (155/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.426903836 seconds)
    (156/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.476474576 seconds)
    (157/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.557653105 seconds)
    (158/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.500593536 seconds)
    (159/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.015330077 seconds)
    (160/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.43631473 seconds)
    (161/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.436592509 seconds)
    (162/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.374630368 seconds)
    (163/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.517458211 seconds)
    (164/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.372796906 seconds)
    (165/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.469745801 seconds)
    (166/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.377171396 seconds)
    (167/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.264293152 seconds)
    (168/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.026792133 seconds)
    (169/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.409231897 seconds)
    (170/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.388984295 seconds)
    (171/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.490076679 seconds)
    (172/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.522928702 seconds)
    (173/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.467568312 seconds)
    (174/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.452738569 seconds)
    (175/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.405541778 seconds)
    (176/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.379474024 seconds)
    (177/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.348532584 seconds)
    (178/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.539617893 seconds)
    (179/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.398212953 seconds)
    (180/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.403308322 seconds)
    (181/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.572346264 seconds)
    (182/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.47067903 seconds)
    (183/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.119802577 seconds)
    (184/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.594557641 seconds)
    (185/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.396319922 seconds)
    (186/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.466994267 seconds)
    (187/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.174226488 seconds)
    (188/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.498919803 seconds)
    (189/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.458695509 seconds)
    (190/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.393802813 seconds)
    (191/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.410925608 seconds)
    (192/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.119770976 seconds)
    (193/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.409699149 seconds)
    (194/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.360290862 seconds)
    (195/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.415813484 seconds)
    (196/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.396290564 seconds)
    (197/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.170087308 seconds)
    (198/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.415963507 seconds)
    (199/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.397139118 seconds)
    (200/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.46318998 seconds)
    (201/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.45516531 seconds)
    (202/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.493329333 seconds)
    (203/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.348588575 seconds)
    (204/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.359994244 seconds)
    (205/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.408420134 seconds)
    (206/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.564170342 seconds)
    (207/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.471453113 seconds)
    (208/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.471649954 seconds)
    (209/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.527221758 seconds)
    (210/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.355956088 seconds)
    (211/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.475496712 seconds)
    (212/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.580328395 seconds)
    (213/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.283749176 seconds)
    (214/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.497704264 seconds)
    (215/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.520088095 seconds)
    (216/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.618824917 seconds)
    (217/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.567079022 seconds)
    (218/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.568760366 seconds)
    (219/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.132102704 seconds)
    (220/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.397259142 seconds)
    (221/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.503304531 seconds)
    (222/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.1155891 seconds)
    (223/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.194494696 seconds)
    (224/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.38039613 seconds)
  done (took 377.781417141 seconds)
done (took 379.046748178 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.410525597 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.549909406 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.364449015 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.364598134 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.41020491 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.369166963 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.421320124 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.370602653 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.385616426 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.385719946 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.368475246 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.389599396 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.377233347 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.413541857 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.478753699 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.371732155 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.364413764 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.381095071 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.422670027 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.441611486 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.408753218 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.408902377 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.394562362 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.365819914 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.412290131 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.411922087 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.37155262 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.365551755 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.385059508 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.423882208 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.363770976 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.376242642 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.433588724 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.433901468 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.410272866 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.384425808 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.409894353 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.550202878 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.419629007 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.41493349 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.385613173 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.433689175 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.37769589 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.378704335 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.433094867 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.395254676 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.414787146 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.490412019 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.374067724 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.365995502 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.414396076 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.44396356 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.387366268 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.36724448 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.364552323 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.49133085 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.383844116 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.415282303 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.385734444 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.411311677 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.482992646 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.4155203 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.445306747 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.415242351 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.386448926 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.381186081 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.383927518 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.44459478 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.384213071 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.41504093 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.411617325 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.389202216 seconds)
done (took 110.534705518 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.496111836 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.367670313 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.513825967 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.374759973 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.532840626 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.517400816 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.373204047 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.375359132 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.374350228 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.208857917 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.375136966 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.37378946 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.369873944 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.376014255 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.497966186 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.374486162 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.374576183 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.096978081 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.37566786 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.512552653 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.36648267 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.376207581 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.373312451 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.184728031 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.36767016 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.363996922 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.512641903 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.376452903 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.079836305 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.363850415 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.365307273 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.078539612 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.515969061 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.395472019 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.385648266 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.384903745 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.536539948 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.395760561 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.498605755 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.498855865 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.516657455 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.413440244 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.36464242 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.369279032 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.378014551 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.375426473 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.376422078 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.406198886 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.369104865 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.375665375 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.099920844 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.387152632 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.385753812 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.377842773 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.377011493 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.394495772 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.380457229 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.376911675 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.517254992 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.377960601 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.499413121 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.190060752 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.212100144 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.376589538 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.368446391 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.379143846 seconds)
  done (took 111.2094111 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.43714423 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.445249262 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.486861669 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.389924639 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.422891969 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.491435681 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.390960803 seconds)
  done (took 11.345207715 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.377282307 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.378978809 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.42176652 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.4222684 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.376077272 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.527067572 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.377653711 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.382280897 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.379204741 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.424173405 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.378195809 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.379994362 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.387922577 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.370387909 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.419309896 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.384730828 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.4860742 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.375388424 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.377512525 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.529178266 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.378937972 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.38719359 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.424859692 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.384267053 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.377535459 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.377712085 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.143467369 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.37985483 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.380487617 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.378073221 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.380587166 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.426911596 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.380765633 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.371095294 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.379781114 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.489050683 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.377452572 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.379255369 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.378294614 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.374517431 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.381046749 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.381669838 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.378685433 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.380558975 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.37944557 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.399555188 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.38103311 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.38073237 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.381487481 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.3815865 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.424644485 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.381240583 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.381117752 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.379761555 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.429889731 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.390250929 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.381461543 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.381631551 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.381937802 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.381400519 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.529902433 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.422367015 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.380926853 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.422187442 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.38193567 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.384225991 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.382110804 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.382064523 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.469152277 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.381695584 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.423541173 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.381477617 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.557486433 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.400136346 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.381835032 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.378727068 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.377713243 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.379812356 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.37129652 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.381841944 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.382591618 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.377320057 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.382356265 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.382843867 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.380391788 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.537573442 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.486295843 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.382303983 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.387825704 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.382419718 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.382025098 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.4291167 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.383308466 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.381604342 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.428579524 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.494080541 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.430028442 seconds)
  done (took 141.911571563 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.388453722 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.389399587 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.380785693 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.40188871 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.379001354 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.378653512 seconds)
  done (took 9.604237592 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.378192808 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.387644426 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.384141011 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.383243824 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.382215774 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.383180511 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.383770513 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.377520568 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.384618579 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.383023431 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.381882486 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.384918592 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.383548115 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.381933946 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.382105074 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.38360083 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.38326357 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.384322438 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.382423146 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.38392437 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.37582083 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.382814357 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.383845226 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.38272591 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.386116197 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.385678044 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.398974406 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.384841195 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.385551888 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.385220065 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.404154927 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.384382153 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.408192426 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.384787122 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.386970595 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.384553615 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.388416121 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.387765589 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.386822232 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.383802755 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.385863844 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.384288746 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.386481072 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.386380773 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.382055198 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.386297528 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.390734148 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.40139986 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.386499843 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.386963543 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.38743572 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.387264276 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.383093103 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.386097919 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.382525658 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.402870079 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.391430811 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.38688285 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.384920493 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.382920684 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.39069718 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.384996658 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.382993476 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.389937229 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.387639319 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.386160271 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.381402318 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.389322177 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.386868804 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.387383387 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.385889138 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.3879325 seconds)
  done (took 102.094521359 seconds)
done (took 377.443412006 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.413272307 seconds)
  done (took 3.704096617 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.468880087 seconds)
  done (took 3.759662744 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.424884767 seconds)
  done (took 23.720550125 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.408834888 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.459885941 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.404356282 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.378508325 seconds)
  done (took 10.942013518 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.731050543 seconds)
  done (took 4.02033796 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.384906905 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.410872996 seconds)
  done (took 6.091292304 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.648044004 seconds)
  done (took 3.94072528 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.87636254 seconds)
  done (took 4.173381826 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.398457857 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.399420074 seconds)
  done (took 6.09527918 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.373156744 seconds)
  done (took 3.666341093 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 37.361411797 seconds)
  done (took 38.654230916 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.393841403 seconds)
  done (took 3.68902914 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.420933355 seconds)
  done (took 3.713303503 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.149169174 seconds)
  done (took 6.442624867 seconds)
done (took 123.90388667 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.379198423 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.378762246 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.378488629 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.376991322 seconds)
  done (took 10.807869319 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.444100081 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.443105702 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.444859478 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.446661653 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.444786353 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.4444202 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.418758067 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.433450722 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.444251108 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.443944634 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.449560687 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.444724601 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.446220666 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.43445305 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.44522656 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.445868446 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.445106896 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.447551448 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.418146169 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.444257519 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.391882849 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.44569702 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.446667302 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.394166063 seconds)
  done (took 35.802307597 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.905651556 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.457715522 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.540601588 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.438329643 seconds)
  done (took 7.638370417 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.4709729 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.471008806 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.483553958 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.522020999 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.537078965 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.484018505 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.419662378 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.415811724 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.400843527 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.47347281 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.524155616 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.463171 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.549906756 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.394128007 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.600062312 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.394067202 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.394865614 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.472665314 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.523662236 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.527261405 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.395011129 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.471460108 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.472366845 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.929721063 seconds)
  done (took 37.08671531 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.404744346 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.409832823 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.397100596 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.410566053 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.397814722 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.396270075 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.39824368 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.40316498 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.397033699 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.39483998 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.397149412 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.409860887 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.39986145 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.39804233 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.406046787 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.399368411 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.403860894 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.403002608 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.398470912 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.405360753 seconds)
  done (took 29.32806423 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.38129648 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.382289435 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.734505007 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.638847926 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.38460608 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.387053072 seconds)
  done (took 14.206971507 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.465778005 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.625107265 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.391269396 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.760641999 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.84804355 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.39313438 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.390721605 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.651335025 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.985466185 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.960058519 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.456613931 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.467716191 seconds)
  done (took 20.697133384 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.386128631 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.388799906 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.386414666 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.403749862 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.447727992 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.41121335 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.397977019 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.385807175 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.453535948 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.470737295 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.411968361 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.45039109 seconds)
  done (took 22.294370454 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488327214 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.393313907 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.390474128 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397475407 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393640941 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.259410355 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.412381323 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.110620321 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.416859798 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668897957 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403687332 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488446822 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.648606782 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400201079 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.396303203 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.381573244 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.626260341 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925668793 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398415261 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398391281 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430616997 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.397137346 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.398282903 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.619575913 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.398600049 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393025768 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.659218665 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.393804653 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.696174395 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.409978289 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404647757 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394675472 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672841797 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067101478 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517519772 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.614093223 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390329421 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.413968129 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.406027182 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.39827912 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398903217 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.395836497 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404635659 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39371149 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.39557777 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400052849 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.128366983 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.422848884 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.395161741 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.395250174 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.670173498 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496544489 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.402617025 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.394265923 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46799452 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395033001 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.402709428 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.522500916 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99980236 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404018218 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402246782 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.399869211 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.387561112 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420367797 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032626516 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.406342694 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.40331499 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.403993449 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397004507 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.401915216 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419562979 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396892733 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.423328134 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397297774 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.131454991 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.416547123 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399034691 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992455171 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415117893 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.400699816 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.629766633 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397229013 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396980017 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.397907911 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.397871279 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.159406151 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410246519 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.38243346 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441361092 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.140768354 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.63924185 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422507755 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428162576 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.622778389 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.383202281 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400323461 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.409170092 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400897071 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419987401 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.128119181 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417104327 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.404494187 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.658108663 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.611822453 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399376892 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.391760403 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.891451919 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431325015 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.42140546 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.403336349 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.620745027 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.006230339 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.435752927 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410101356 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417793775 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400140336 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200041801 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42043792 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.507104071 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.415085299 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686152749 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.245400086 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403789693 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468978157 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404094756 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.400377128 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410756033 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405368257 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.400526219 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.611448974 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.426667129 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.41135367 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.39980668 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399403708 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.415629326 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401846763 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.420368481 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.626081058 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416807916 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683739435 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401031953 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402302371 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401269022 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.625357433 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.401275373 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.739764425 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.663645531 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404277106 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407707322 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.412650644 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419395095 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505444838 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424563538 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.408002083 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.657796354 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.410315447 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.408658254 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414391708 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.408076738 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409073698 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.4114418 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403515076 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.026108642 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383723807 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.410303848 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.293156989 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.422697686 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471671825 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.41308833 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.626225364 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.406436845 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401010653 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.430913084 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.418064397 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630981957 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.412954978 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.416612437 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.487789467 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.888558357 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.025380546 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422558039 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.403472182 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.404171058 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.404388071 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402978278 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404062368 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.405436642 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.625289434 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.422011194 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.412346034 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.013873058 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427926614 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.415912699 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.416642265 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.416395543 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.414845822 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40523809 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.407839192 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421891129 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416953004 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.418300906 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55103924 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.422153116 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.404865071 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.925615861 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.413286476 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.406667809 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.404293047 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440095073 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.418245694 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.228186023 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.688010319 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406099141 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.683909473 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.419524818 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.428068809 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.405755102 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419901255 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415461618 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.421223354 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413787385 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.418542675 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.417640629 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41092871 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986711451 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.161096337 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971018368 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418191754 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.420550136 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.408981077 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.139438651 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427957162 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407862589 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65767558 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.153938848 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428411254 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907172782 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.432087413 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.208824671 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.690543716 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.645366812 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409986263 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.42957207 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.689593565 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.626052074 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445608479 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.417042538 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410758891 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.394276915 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979094854 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.4358355 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.492461076 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.139501078 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443152938 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.411440026 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.474301586 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.408871161 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834392304 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.434389733 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410309417 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.419862568 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.41014596 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.229676461 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.436724612 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410787113 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05349199 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.415611079 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.897896776 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428664765 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.632443478 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.425404712 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.413813306 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.410699993 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.418505161 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.670593133 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.690291607 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415969521 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.414717642 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976082442 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.287335395 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.419393761 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412289208 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.219201214 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417066064 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.720474051 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.421403735 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.415329232 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420221384 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.412686169 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412961513 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.415095593 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.42129389 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392880102 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951439225 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.434484024 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412918459 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.42240081 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413954631 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.671132315 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.430739737 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.024027633 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.649160761 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.42456074 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438801276 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.421448546 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414357683 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.401042374 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.413859997 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.4149981 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490803795 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.637182735 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.422319327 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.403033688 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.451995338 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.624144987 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.413811196 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.413440225 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.66522869 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.418548872 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.43657898 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.173194359 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468905731 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.414779565 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416733075 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.414719073 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452072897 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483658508 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.638196931 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.42846101 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.424562171 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837535605 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.438176125 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419513875 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.431526548 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.511113103 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415609956 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.426084524 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.193055993 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.025973494 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.194644576 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.036234579 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.701406072 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.421593613 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425608351 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416221812 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.577173549 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414847915 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690372936 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417555734 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.429692332 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43866134 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41578035 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437098115 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630766055 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694106583 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416457214 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432038334 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421246104 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.415745949 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.426543118 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.629184581 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955594602 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023969039 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423783036 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.430496486 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.156239122 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.712312308 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417335528 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418947704 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41749102 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.418111453 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.421079853 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.430899135 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423954392 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564014896 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.695850176 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10664109 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.451991626 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.447352395 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.938714116 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418670391 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.695029605 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.429911657 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.644538332 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.03622079 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.154213627 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.688372917 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488899543 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.642086251 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.421367805 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.581078944 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.432859319 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.42315865 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420437441 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419482654 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.419009636 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.430189275 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.039805205 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.707859165 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.425576476 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.432241218 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.454479987 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.429913347 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.64205495 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.197358669 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.648200443 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.430504639 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.426250861 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.419836957 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.043188604 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.705788847 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42090568 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.424188442 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.674128678 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.425921204 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.446879788 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.942033164 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.423401642 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022527623 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.39633527 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439999515 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424732788 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.159565043 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.045691249 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.437194642 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966729884 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.428154325 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420627683 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.717954358 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.430112966 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.428781871 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.701437969 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.427120859 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.432134235 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.652214376 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.043194939 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.235325342 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.452069422 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42398469 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.431136978 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422791665 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483242564 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423389276 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.42501657 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.859907992 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.444342407 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424963246 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.438816246 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.423404415 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440383007 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.427632647 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423263319 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.432542661 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.450207054 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.409610937 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.435610755 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.556432079 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.997340567 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.445686454 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.104832691 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.748487549 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.680200514 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.432421317 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.412788624 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.430467602 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423825429 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426360086 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424042277 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.420423318 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050400416 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.43762271 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.438690876 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.42991208 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.426553632 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.635682872 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.426097313 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.653863751 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436516625 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.447029908 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.410701087 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426608455 seconds)
  done (took 996.112852316 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.461872507 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.430878658 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.45744944 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.455413733 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.478247846 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.539476242 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.503096535 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.445050131 seconds)
  done (took 21.102598347 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.420004908 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.432382696 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.429210568 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.428890938 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.42698765 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.923509243 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.442784595 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.429159641 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.445137338 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.419858539 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.431676351 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.412950143 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.446840453 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.433428444 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.417882328 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.433360166 seconds)
  done (took 33.711392503 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.518327532 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.617394277 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.597733866 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.434116757 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.468535446 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.421340035 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.732607458 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.442125756 seconds)
  done (took 27.563690278 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.431660447 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.431773961 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.431225545 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.432933381 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.431060186 seconds)
  done (took 8.491071252 seconds)
done (took 1266.137973306 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.433852891 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.434524786 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.435358946 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.436612083 seconds)
  done (took 7.072258707 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.416615161 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.416535494 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.417613773 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.429285422 seconds)
  done (took 10.012178102 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.184981081 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.101199422 seconds)
  done (took 5.619293836 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.950319867 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.947877136 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.95218956 seconds)
  done (took 7.183167347 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.720870096 seconds)
  done (took 3.052658848 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.357302238 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.418391211 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.130740585 seconds)
  done (took 8.240068302 seconds)
done (took 42.512783518 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.423007627 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.670373504 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.577680039 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.422264702 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.583761708 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.578185671 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.161465972 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.42278438 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.432537851 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.427011029 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.424155565 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.585447347 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.142200914 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.672125187 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.14314502 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.668107361 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.586490833 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.42524222 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.432654008 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.428772542 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.163242513 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.42926075 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.427206362 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.430827796 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.586234307 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.563440243 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.422517535 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.673502279 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.422526932 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.435371433 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.570482498 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.435459712 seconds)
  done (took 84.102795896 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.433149708 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.423227721 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.426661769 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.446083689 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.424745594 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.423374332 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.445083593 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.438443185 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.435689221 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.426817547 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.422818641 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.436585345 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.425089645 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.422958418 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.426517232 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.42279547 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.42271086 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.458019817 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.426938164 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.424551351 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.442593073 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.423873839 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.423452099 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.441515312 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.425302763 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.439409208 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.442054456 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.425763778 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.452583699 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.422087445 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.429043005 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.444921088 seconds)
  done (took 79.161349721 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.424528866 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.430213657 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.426680469 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.442030152 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.424630554 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.448076975 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.430792963 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.427948062 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.439864762 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.432966902 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.424431201 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.443335401 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.445700569 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.437183241 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.424033654 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.427044266 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.440519923 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.434369201 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.428311976 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.430430735 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.448849425 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.42670066 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.44665666 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.42603338 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.459448095 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.430533212 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.426375679 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.425385242 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.440779396 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.436746562 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.434460614 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.431507747 seconds)
  done (took 79.233310767 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.715403994 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.438014274 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.444976426 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.434983028 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.439888143 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.440524694 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.436712478 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.721448931 seconds)
  done (took 15.408064839 seconds)
done (took 259.238639163 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.450716752 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.983016443 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.480411033 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.435939991 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.457788473 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.462747051 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.673243334 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.481953312 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.675177098 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.462085928 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.454171942 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.4483294 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.289250632 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.595081529 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.296701669 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.425930376 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.368116798 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.428363342 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.061394649 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.729110894 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.460384623 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.436785483 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.302150361 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.401839986 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.421400211 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.521703298 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.538383115 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.669319688 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.602517656 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.520537207 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.990551796 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.439230209 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.437040509 seconds)
  done (took 66.741225973 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.436773293 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.563809681 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.441883532 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.442782778 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.571888252 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.460318154 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.435880373 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.442808631 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.441137116 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.442748143 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.444116209 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.443363505 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.444705746 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.494311731 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.572569796 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.457524412 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.435853605 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.566368361 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.43696235 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.437385855 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.490215814 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.444876126 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.446261524 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.497104528 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.44316894 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.446364779 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.569782136 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.462297108 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.445172501 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.568039653 seconds)
  done (took 45.562624283 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.446805033 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.06637046 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.237123875 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.445192875 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.437921928 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.441758401 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.746212904 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.447023657 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.440549461 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.443742297 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.968576311 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.449107811 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.477407018 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.278684601 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.443887251 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.441794937 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.448523875 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.440931272 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.090244881 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.454982867 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.767712678 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.44845716 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.746515647 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.450720896 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.46282598 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.440815795 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.444019542 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.30727447 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.460608592 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.976062863 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.296647623 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.747055317 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.252167886 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.269423104 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.296642484 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.450675256 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.444485588 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.969943383 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.443518286 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.435331758 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.745934592 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.439888967 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.255114982 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.174986402 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.459360856 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.448799483 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.326043805 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.999658807 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.700824775 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.448856701 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.276426398 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.443439179 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.448462364 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.446493976 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.701803431 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.445580396 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.444216372 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.351730906 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.469096657 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.747833557 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.449652659 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.445441146 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.075759339 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.4454689 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.077729618 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.44631135 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.453397868 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.465045956 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.258692941 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.445472562 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.193844582 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.464267232 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.451012323 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.969537334 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.083666707 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.388687521 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.442039341 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.089616277 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.280751487 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.772286671 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.450135396 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.28396938 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.773210873 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.449123903 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.454358127 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.455338689 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.454047995 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.528396458 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.752704533 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.120330011 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.184974871 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.378037713 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.773734885 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.451635615 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.447781089 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.358538445 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.477435387 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.452211661 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.249815972 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.195299682 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.463664036 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.450386359 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.198902978 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.46596801 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.755158867 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.451546549 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.259080931 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.446250339 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.56698986 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.454897956 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.454227789 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.471036615 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.753944044 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.450149612 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.450185743 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.175292492 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.008760167 seconds)
  done (took 203.544962024 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.449439083 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.437885682 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.443962025 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.441440603 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.438957787 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.450452336 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.438952378 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.439640011 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.441451731 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.439463148 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.437549868 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.450492889 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.446044936 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.439308034 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.439863503 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.442259905 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.447536671 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.443977642 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.455513141 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.441197664 seconds)
  done (took 46.210761613 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.455312842 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.040039936 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.03170086 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.455622667 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.455086816 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.452796389 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.509968306 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.457855254 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.453986991 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.762612306 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.629490948 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.47668967 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.457038792 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.457301446 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.020560892 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.442328187 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.764652802 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.04145188 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.456275789 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.046799874 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.4434389 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.453332949 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.44772896 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.044437697 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.788494276 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.757953268 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.512539261 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.05171148 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.471281422 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.457050548 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.048234218 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.455661063 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.449040898 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.049832556 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.472868107 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.467944589 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.457875937 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.512775888 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.519235441 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.775867772 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.129630751 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.783023267 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.46512046 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.633282202 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.457317573 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.445839734 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.056086706 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.471031512 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.444790149 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.45905594 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.461288978 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.031901347 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.467127665 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.035766232 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.475364446 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.458428852 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.047179384 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.036789929 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.039996915 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.633189082 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.471106648 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.78979743 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.459876638 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.061721628 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.470045517 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.456784491 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.457793964 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.639564075 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.071444769 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.755095551 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.773321675 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.774747235 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.462756568 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.516528807 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.482659406 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.841480896 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.516476044 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.876871747 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.775026772 seconds)
  done (took 132.540567132 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.740028071 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.571391511 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.880205087 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.080887147 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.451214608 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.589144611 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.576322644 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.721295706 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.456123328 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.530875039 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.132163152 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.589616332 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.244013392 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.538102677 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.569177262 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.604951072 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.885457638 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.459198951 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.17747512 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.112717004 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.453862586 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.585063697 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.033628859 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.668536088 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.444315507 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.047181789 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.444649772 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.167550727 seconds)
  done (took 56.106989361 seconds)
done (took 552.046574103 seconds)
SAVING RESULT...
DONE!
