cset: moving following pidspec: 9264
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.396960066 seconds)
loading group "string"... done (took 0.585441905 seconds)
loading group "linalg"... done (took 7.324900286 seconds)
loading group "parallel"... done (took 0.160654371 seconds)
loading group "find"... done (took 1.146254554 seconds)
loading group "tuple"... done (took 1.765859147 seconds)
loading group "dates"... done (took 1.255811182 seconds)
loading group "micro"... done (took 0.218107617 seconds)
loading group "io"... done (took 1.023111527 seconds)
loading group "scalar"... done (took 37.93144759 seconds)
loading group "sparse"... done (took 11.936994478 seconds)
loading group "broadcast"... done (took 0.9475475 seconds)
loading group "union"... done (took 12.24076963 seconds)
loading group "simd"... done (took 4.513106154 seconds)
loading group "random"... done (took 9.093894777 seconds)
loading group "problem"... done (took 1.846989867 seconds)
loading group "array"... done (took 20.638540852 seconds)
loading group "misc"... done (took 1.650593746 seconds)
loading group "sort"... done (took 3.27283707 seconds)
loading group "collection"... done (took 17.726269046 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.531894902 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126791039 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.120415317 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120771885 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.149998196 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.115017535 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.128054773 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087092952 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.881442325 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.149682799 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.12095997 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.435553739 seconds)
done (took 4.195174117 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177725454 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086879811 seconds)
    (2/2) benchmarking "String"...
    done (took 0.086436571 seconds)
  done (took 0.2171905 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067898001 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126206305 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.069522684 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.070096205 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.070335489 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.069314664 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067564281 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067325351 seconds)
  done (took 0.58739593 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.079565929 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.073220471 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069624979 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069833777 seconds)
  done (took 0.340641472 seconds)
done (took 1.46145815 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.801418646 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.205593744 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.18903346 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.415731338 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.132428458 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.160920041 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.63876489 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.305450473 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.191297233 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081891271 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.110351012 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.333050403 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.112489605 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.633860995 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078573251 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091718487 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137283649 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.425878435 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.068043115 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082726716 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089759984 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128611663 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.089804784 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075319209 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.148420468 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068509715 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.138193683 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080791797 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066816369 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.21552686 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.173118274 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.651314175 seconds)
  done (took 9.200780555 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097432769 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.098054558 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069410258 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123904661 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099891303 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070404869 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071993414 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06868305 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.088597959 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129697846 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090710712 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.102354138 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06617721 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069840387 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086336396 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.205130788 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081659036 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.0818438 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072580416 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076141123 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.106212424 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078788296 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077875004 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078084547 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129778275 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180544511 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100332942 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.10030976 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068921072 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081042603 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115950314 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125966183 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068061167 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067664788 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.127272279 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.0977677 seconds)
  done (took 3.577683135 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.024078086 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.148238977 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091335097 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.135750779 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065969989 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110082975 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066619393 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081654016 seconds)
    (8/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.112809423 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.210982499 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.457574379 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.605925922 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112453107 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105106046 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0681096 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069090942 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067144259 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.524185957 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.101224913 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111300199 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084686904 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072885375 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069579169 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.357515161 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068803349 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06445909 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068866994 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058122195 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126697294 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068770394 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.962938187 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.127943467 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06744507 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10164271 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.169638991 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088910422 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.279101163 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0691114 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065326936 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.154581143 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.071285542 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067184944 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084766677 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104440022 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.114203316 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066172647 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067232442 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.167614691 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06486416 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080751315 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.649928091 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154418338 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077231099 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064705106 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.25601687 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.088651179 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069629996 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065265225 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.205443536 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136856474 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.070126952 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067435653 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068876607 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069812322 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.372393876 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068971846 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.092117252 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071095718 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077948672 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070226629 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070738861 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074239592 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073576622 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.088379031 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065225197 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06728689 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076250018 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066809231 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066704361 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067622467 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084109756 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.383164764 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067594619 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068819666 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065474573 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089463665 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09752522 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067450291 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06655155 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100962386 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064815846 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068592189 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066979004 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.107554226 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067110385 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083945508 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069931223 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11368804 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066881542 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.209340301 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068801344 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066376505 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097232803 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07101952 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099414788 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.082078059 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069050986 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.427443413 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066339992 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065529266 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069830595 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066563378 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068192906 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066876408 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.08019025 seconds)
  done (took 20.506685342 seconds)
done (took 34.354755003 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.245883891 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083142257 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079300467 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075724757 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075551653 seconds)
  done (took 0.636207926 seconds)
done (took 0.718586431 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.12715396 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10078546 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064801662 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098268501 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064755247 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103208178 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103230931 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083595369 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101537067 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065051882 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098015284 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065167006 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064814679 seconds)
  done (took 1.218618074 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086541716 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084624003 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07035457 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083541837 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064385339 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084232682 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083060507 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09006669 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082337591 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073621413 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064339002 seconds)
  done (took 0.937535366 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084469153 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085443507 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070318956 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083106209 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06517306 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082665205 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082879347 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086365553 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08229446 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07482277 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063856059 seconds)
  done (took 0.920901345 seconds)
done (took 3.137912287 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080906774 seconds)
  done (took 0.11140794 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.607566448 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.15178275 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082667222 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.113229763 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.190707039 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.120862968 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.279332063 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.088624004 seconds)
  done (took 7.870461797 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.102762584 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07335065 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.07211577 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069886979 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072337524 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072476847 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070725285 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070503334 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069591681 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069256848 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072346347 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070421459 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069299526 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069641911 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072423466 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071742399 seconds)
  done (took 1.360769357 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093320815 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092057876 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073714658 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07572228 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072633721 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072920263 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075060883 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074127794 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071506808 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072949506 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074997937 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073835435 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072351121 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065575585 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074719034 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076111478 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072425466 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074585708 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074847508 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075958485 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075143535 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064648409 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071995983 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074618491 seconds)
  done (took 1.959429737 seconds)
done (took 11.361397652 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.119381856 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075217063 seconds)
  done (took 0.225504544 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085333583 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086050583 seconds)
  done (took 0.222034476 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086410103 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.067941604 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.096192389 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.082046876 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068970002 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067627773 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089541392 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066879938 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066582438 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066482512 seconds)
  done (took 0.809859565 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071793642 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.0786121 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071601604 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082167724 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074157609 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06487076 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073306016 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068365899 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078132243 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06339953 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072786145 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.08353996 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071945098 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085594103 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072929036 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069360492 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072515453 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067993637 seconds)
  done (took 1.384693409 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065850643 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068138008 seconds)
  done (took 0.204777643 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069945116 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065770465 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067534004 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067611939 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064537649 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06338603 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063709486 seconds)
  done (took 0.51051384 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.393652056 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11431992 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.313024782 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07209805 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082330905 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.256684776 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065861292 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071285086 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072140705 seconds)
  done (took 1.538653008 seconds)
done (took 4.977191904 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080894676 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086945004 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096944746 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.379579367 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092456022 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066505271 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114138972 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.197005646 seconds)
done (took 1.192411661 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.216544208 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.653381311 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.406653581 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.206793948 seconds)
  done (took 1.317043635 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.343798567 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089557491 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.061260037 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068048117 seconds)
  done (took 0.63382065 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068589413 seconds)
    (2/2) benchmarking "read"...
    done (took 0.07217715 seconds)
  done (took 0.196243824 seconds)
done (took 2.43598336 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06877414 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068465947 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.086120904 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064324729 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06657486 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063500211 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064350591 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066822762 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066655593 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06643497 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068935374 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.06651218 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066192566 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06416247 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063641213 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063858474 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066695532 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064530253 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064338235 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064334363 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064924625 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067986076 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064916388 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06437853 seconds)
  done (took 1.67638997 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084735473 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067228396 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071675181 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072117727 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071130191 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072311961 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07233814 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066255087 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.072548195 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068851998 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069686362 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070741222 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068698472 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070381546 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068766127 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070745787 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072699175 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066527251 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068621212 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070892953 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072711488 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06671503 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070474162 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072351451 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069697493 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071359146 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069269131 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066621125 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071924365 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069626197 seconds)
  done (took 2.194971047 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070034759 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063489304 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064637785 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072089765 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064866095 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064879399 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064160345 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064603622 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064686907 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063927257 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06585891 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063330305 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064159282 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.065037838 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06457928 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067851407 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080739701 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064846875 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06460883 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065110335 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06774504 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063975818 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064174388 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063698794 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064237873 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064338277 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064536758 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06443774 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064377619 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064296854 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067031414 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067936711 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06384579 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071522256 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067344278 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064045692 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067884837 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063607662 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064664424 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063529752 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063548665 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064031309 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063978684 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071277398 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064482644 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065559696 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06426197 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065935329 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064136024 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06627983 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063417536 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063836091 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065982439 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065550796 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068460684 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063382945 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064902868 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063467895 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064485648 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063589579 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063426102 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063136462 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06685404 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064786111 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079231888 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070817524 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063961267 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065874959 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06468862 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067020753 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.179329302 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077899471 seconds)
  done (took 4.942903111 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092781243 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08800306 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066037541 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065585192 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062065337 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064154957 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069886915 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064185697 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065772568 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083176805 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064863277 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065125564 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065004005 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06806879 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064094485 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065712538 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072453254 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06200417 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065211678 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068162711 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064198695 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070042967 seconds)
  done (took 1.630335719 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.158382256 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070893324 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106336433 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077169887 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071360983 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075905694 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070174182 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070091155 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070894297 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067609186 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06834644 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071037529 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070257688 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067805966 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067782732 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067198413 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0713302 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06747158 seconds)
  done (took 1.465511122 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077655003 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066213785 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087480164 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066573764 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066789838 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068862902 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071229554 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075483016 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069028026 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066074155 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074884911 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069068231 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068697169 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06633982 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068893788 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066007512 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068957384 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065828112 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074257509 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071180561 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070869889 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074838802 seconds)
  done (took 1.629994262 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080357886 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068462695 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082247582 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068742427 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061727103 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064313109 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070718012 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066067123 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070515322 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067485332 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065867734 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06501705 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069927747 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066125776 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.06880612 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065876595 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068080657 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06616357 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06830067 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062135767 seconds)
  done (took 1.442689812 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087677581 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068552348 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068725366 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076709701 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068176469 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068295449 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076508716 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068246062 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06860069 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089131319 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068507429 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067982223 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077033236 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073512079 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068007387 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075673654 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075662443 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076423905 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06853743 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068430039 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088913055 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06846324 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075610098 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0681093 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067902675 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067632791 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068313876 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072647987 seconds)
  done (took 2.110419125 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068139627 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066570292 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064075515 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063688234 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063859798 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06389045 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063751137 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064204544 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066779216 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064509937 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06618767 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066037628 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066684266 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066273812 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066387518 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066847759 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066649845 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06394216 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063643242 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063852757 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06654722 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066040707 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066657822 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063404924 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064666741 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066276754 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063433987 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063665837 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066316224 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063721055 seconds)
  done (took 2.041917656 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07728625 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07371935 seconds)
  done (took 0.228028972 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065849977 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08331672 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.066136188 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072541144 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07030822 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067536453 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07404031 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070960006 seconds)
  done (took 0.624051619 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085106016 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080159023 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069903069 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080991907 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078426229 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084101801 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135539077 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067341835 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073751531 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065298988 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080665286 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065630974 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073509026 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067783497 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073471439 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073865978 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064183824 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073196296 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069310453 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065106619 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068466076 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.0750479 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069565224 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061681629 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068106655 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089504174 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.078056372 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066040667 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070247074 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074296624 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072858725 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060732034 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066888227 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067172847 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064434768 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.07660499 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081513502 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069677408 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075775062 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067742108 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076739644 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061596417 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072009299 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073290897 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077064094 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067210648 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067031066 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061047649 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064396998 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069220337 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061893159 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069687774 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060710114 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074248065 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070434921 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077236885 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065837126 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068578292 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.06938342 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069775026 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073083506 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068873319 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069868758 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066195352 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076234646 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071447242 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074664284 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061670355 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.06017499 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064382457 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076689066 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090234395 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073168254 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067349247 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067732981 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064243743 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071029493 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067418979 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072768363 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072957512 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066797803 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072333615 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074327735 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067066843 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069103206 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074481986 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064833568 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069687175 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064716931 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083027333 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065486922 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064367305 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064952327 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077610327 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070528774 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066308822 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064566001 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073860516 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060623066 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067075906 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06725128 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067471565 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076860868 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071473299 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071783101 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075316033 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074316994 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067329102 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069877805 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062714835 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067238402 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065638547 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073054719 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060229315 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069064012 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067087233 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066497018 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.074332996 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064165826 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.065279626 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073171449 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.070872473 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.063970587 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.190941775 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070514682 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068039205 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070180615 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075553922 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.066151267 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062675921 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062464942 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070507811 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066589068 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071620832 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07157964 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069852715 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061594165 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06502383 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072598152 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075990683 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068096517 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06824463 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073670675 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068277609 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06649831 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073525327 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069514108 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066249541 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072850219 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068280048 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061685781 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069903148 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070068658 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065522911 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070967563 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070069508 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069216308 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067929712 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065256585 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07338234 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067336739 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066270118 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066871143 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066144717 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077051387 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068820427 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061910543 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063713653 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074986476 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064646681 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066853318 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06606613 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069467429 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067358736 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064263045 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066263711 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069096473 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077447665 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070604917 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068126205 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072315389 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078351675 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.06643972 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069050614 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06689908 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067929557 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067105558 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075493819 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072244209 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071048753 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069000627 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063283005 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07169135 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074014241 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065550087 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064217972 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065698188 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070887815 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072901374 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071349868 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067070898 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065036658 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067014642 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069795856 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069181842 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066438783 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065731334 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072809088 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064972989 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073379747 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067489693 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076739158 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069675553 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061402345 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069822807 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064998697 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073243254 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061465743 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064311884 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065577612 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067314587 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065688463 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069223199 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060526179 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073275963 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073883806 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066957138 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065660819 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066227032 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073584071 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06796904 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070616449 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070615195 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072743965 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077918607 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066398112 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070133155 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.077683074 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066586391 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060145888 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072180479 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064642557 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064860732 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065173978 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064173532 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069440078 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073820958 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072838291 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060301944 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068672013 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064293112 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.197615732 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06257456 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07216705 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070375617 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068569556 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07455527 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067524682 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067325628 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071775469 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067035761 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068025766 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068789839 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071099316 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068392247 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069494099 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066910076 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070234498 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066232386 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064087194 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068880018 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06736455 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067317173 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072584998 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067015893 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066787369 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070442412 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067607825 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067946892 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06739958 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06625719 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070298844 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067809607 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067102206 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069353696 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062108037 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07434558 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066326105 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074253011 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067171088 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063751078 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07337518 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069334138 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072254523 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067309922 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067328996 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068426148 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066498904 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069414319 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073536503 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064734241 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077786685 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074464897 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067649574 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069997039 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067428314 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068216686 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06609627 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068591953 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067450529 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06720488 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066816404 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071727622 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069426287 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067019645 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068707278 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067588722 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067107764 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068366385 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061670877 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066261141 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066519694 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066957809 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076484164 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067551605 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067031775 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066553292 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068095937 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066569758 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063559954 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074909935 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075838618 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067816212 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07408363 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065889032 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068663852 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077798701 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061161226 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065396768 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064771715 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06522663 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074482324 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067801281 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07683514 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066896568 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066378852 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064662236 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.068063458 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065866577 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061321857 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064637883 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070177832 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065732992 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065920514 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066943053 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069038223 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06802216 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076254025 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066248755 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068066119 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.067286484 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063423237 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065962134 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065708653 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069888451 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067787949 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065009192 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064070975 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06650421 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06735983 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068440747 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068851101 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067943526 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072952179 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065988287 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068610196 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068557718 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060347444 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069142052 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065744703 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.0655126 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.064844492 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069489021 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068994793 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06628915 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074548337 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065408543 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066284019 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06645873 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063120437 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06495111 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065724178 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065135465 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.064949588 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066453104 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073425424 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063287795 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068215981 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065457141 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066349541 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07222479 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06597301 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068704694 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071801909 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066284372 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067409562 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073804724 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.06938102 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069071823 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066475387 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067406719 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071332834 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065546326 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072137348 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066184067 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066106245 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067186964 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064052425 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06529404 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065100732 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064343085 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071823857 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066878415 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064471988 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064619287 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063311133 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066326648 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068215054 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072880445 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.06775828 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068495923 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060582652 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062726938 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066533892 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063633675 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067302673 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068314913 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07078852 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067922999 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066007789 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064384395 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074613261 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071079547 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069481588 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063422653 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.068963905 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066259722 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067772133 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066570784 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066494785 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066441113 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.068617253 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.066649985 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064425355 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070565662 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.067790967 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065776334 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.065904655 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.065526581 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065138331 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060273407 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065024791 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.066232063 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070119878 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067610489 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064942923 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074834372 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.062831991 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06597491 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068125196 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063363033 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069028562 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060207853 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067375201 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065260197 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064658436 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.059827835 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064291372 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06259097 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067366669 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064037899 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059927949 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074590833 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.072538057 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.066977072 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065268135 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063409608 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059239708 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060206887 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064088223 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064956237 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067131895 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.074223991 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064401497 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.063527889 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.05915975 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064892083 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06802858 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.067113793 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061518687 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060181381 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064108502 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.067263961 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.069602872 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064140172 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.064724445 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067665436 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067118402 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062326581 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067383718 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061610848 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.068543466 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077118544 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.307651261 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069220556 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074614905 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07679007 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068955315 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063873372 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069496902 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071996443 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070000176 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070048341 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069773315 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084155531 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071706553 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067649814 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067305499 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070790761 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06797592 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076264808 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069504373 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06941161 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073161576 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069875567 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076882295 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071743899 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076236398 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071661106 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071585323 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067220906 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068417866 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066603025 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066931665 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068680027 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068112608 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072943722 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075849787 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067481085 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079706766 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077715351 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069728491 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064073743 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067603713 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067818225 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061864072 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068134642 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065575808 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066147602 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065894228 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066674711 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068882272 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073103445 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068791343 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067676286 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067655422 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061978537 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070003964 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069306767 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068861736 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063903146 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06696647 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067588934 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071415609 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071185835 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064833487 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068798313 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069019565 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068204584 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061863437 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073780228 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066415886 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069498553 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066482619 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067772107 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068003511 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070500578 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072691759 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068045923 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.06984111 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07152576 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069349212 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064585582 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064526397 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073479659 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065012605 seconds)
  done (took 41.485584291 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102760329 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063027899 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062546312 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062064349 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074863202 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063003069 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061812128 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062758114 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063352148 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065087365 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062180509 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062112437 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070723383 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078617562 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074307198 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06644904 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062585033 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063308734 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061920578 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063770776 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071760471 seconds)
  done (took 1.575933031 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073784388 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077817363 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076322798 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083262486 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071435895 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07164166 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076520059 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071541882 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079209417 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073569411 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080027292 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072067107 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.073509143 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072792844 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073492437 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071143144 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079497564 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072669726 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.07138174 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075862532 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071048041 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076212568 seconds)
  done (took 1.727033334 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067588513 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066088874 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068933442 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061582296 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066879644 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061166097 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069538069 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064536334 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070060823 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065883398 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066163245 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066370407 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068556591 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06117926 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06648167 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06405873 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110415185 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070179201 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066339999 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067312176 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062654678 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067892464 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062129113 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062470621 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065789035 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069473578 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067405398 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064068362 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065929893 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065509559 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067528132 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064061043 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068770651 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067550477 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065694773 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065789435 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066446914 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066352358 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061463661 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065084208 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067659447 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062148286 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067577438 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06817911 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064606954 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063707906 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068235853 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066576942 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061462262 seconds)
  done (took 3.35935213 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080566315 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110959749 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067987339 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092293157 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080027303 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07374448 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069777529 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091079205 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063764588 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064782985 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082478294 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079758625 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067849771 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070699832 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073476576 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065400218 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066729879 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064786752 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070344162 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065410426 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070171888 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073522406 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081131432 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079009337 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070034719 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065863442 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065234282 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070585891 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078057662 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.07090277 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071743229 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071940286 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081547978 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071069534 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065229021 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068351428 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081961881 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066329059 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068539374 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063525445 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068638558 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070416056 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072936583 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083583219 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066143207 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070931254 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065949271 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063053781 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079385489 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068893963 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074609284 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080098091 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07008294 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066461734 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070409652 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.082253153 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066251743 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065742088 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069748938 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078765342 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063055743 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070361716 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079943227 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067997278 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073585505 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080084967 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07106495 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070226572 seconds)
  done (took 5.186111273 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076756821 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.097147667 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08456157 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085382671 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07595852 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07619664 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076525574 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076645545 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.076324831 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.082059513 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076363923 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117388391 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.07151488 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080161088 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.077578461 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.077107707 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076901964 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076390887 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077024327 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076355866 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.077125307 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084102809 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.076369913 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.084520628 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081291967 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.071760427 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076982009 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.076408285 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08466695 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076257127 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088900531 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.076452989 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.0765321 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.083983879 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.081313094 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.076359432 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066209678 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076872707 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.077089894 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.077271033 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071555213 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08497765 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.077127741 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071353746 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.076886435 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.076329413 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.085350563 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080324259 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079431725 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081089712 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075977933 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083804057 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076115321 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075817434 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.084017068 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.086779828 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0841095 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083616116 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075822181 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.083901113 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084075369 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08629224 seconds)
  done (took 5.095558349 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084141525 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075059662 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082022003 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06253627 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065404197 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072858245 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06470886 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064791964 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075239766 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075289782 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078556897 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073918787 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075878952 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077381239 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072698216 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075674375 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073191132 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072555479 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075286135 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072542194 seconds)
  done (took 1.610665706 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075449526 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084282847 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067389905 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07305037 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070061761 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072100455 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069004193 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069899599 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067425645 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070172745 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077476572 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076124136 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067880576 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071860443 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076204234 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072277115 seconds)
  done (took 1.246940591 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.085705822 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.074882148 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081820346 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066774448 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067371284 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063963463 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066380875 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061565348 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063739204 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078699984 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06647216 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.07639099 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066626025 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065757629 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063484165 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.071968396 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062937966 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064363505 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.0662561 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079189785 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071125419 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064749798 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069796703 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066233862 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068476714 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070848601 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06564191 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066582816 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063036864 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066501658 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.069805017 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069808764 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063423447 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064129524 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064125495 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063776878 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06572626 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066423596 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.07100884 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066190587 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.06469749 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068864851 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065611955 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067203886 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063148805 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066951613 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062274153 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068462256 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063862087 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068818893 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065811106 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068940914 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066721036 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072991072 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.069232953 seconds)
  done (took 3.816162426 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080007803 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06992812 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062149563 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064127016 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.06981483 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067527961 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069980468 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067318801 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068303723 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06528351 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068698651 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069567696 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068324514 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070448831 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068016154 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069643055 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061968449 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067579317 seconds)
  done (took 1.345156511 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072658821 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066901859 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073243819 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066945812 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066830875 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068929899 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06227941 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.065433804 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065337602 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065977428 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066803212 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068153004 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064971168 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069462952 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067299916 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066805332 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069213845 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065024913 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066085538 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062035992 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06845408 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064676583 seconds)
  done (took 1.553030854 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094859956 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083202869 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.14183185 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079361359 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.085586219 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072148298 seconds)
  done (took 0.639127729 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091560729 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100861591 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066832303 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069890423 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076402253 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07002527 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071056994 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070655605 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079650871 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076893182 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070662682 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078974888 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078876117 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078610229 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076524816 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076619292 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070123958 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071038658 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066912557 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084669213 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071191505 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079615057 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07115131 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070580049 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070891354 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078251899 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079238096 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077058135 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070028781 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079267358 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076628348 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070522213 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079738535 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077452477 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069146477 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079043196 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070644375 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085601448 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076516639 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078896002 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069399827 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07613531 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078899258 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074874113 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079495859 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070288894 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076070954 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070722833 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070674701 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086830975 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076206125 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078335533 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078436133 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078901712 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078637172 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086256847 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076433881 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077751277 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076566924 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076488093 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078419718 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076309537 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077905196 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076635962 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076232921 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079244078 seconds)
  done (took 5.115516646 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103594683 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067848583 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070724972 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077316275 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078476174 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07238935 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071056478 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070018577 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070970663 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067408296 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109200187 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071033796 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078641066 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079485613 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071301702 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070127615 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070852137 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07910565 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067415193 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087990908 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070337748 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078155677 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079556246 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078408073 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077390045 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077512769 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07087148 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070537973 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070357031 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070399824 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076017479 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071353865 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079165783 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067474102 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078008493 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070369496 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070519629 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075634958 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070865089 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076311664 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07889216 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08478343 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070978438 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070077007 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076615837 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069906089 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071045646 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066630301 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070471338 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066762532 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076678899 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076399142 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076222874 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07774447 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0701328 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070592222 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070229503 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070534505 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070465561 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07613598 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078226798 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070261942 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086518167 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070458096 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070810087 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078323062 seconds)
  done (took 5.078088607 seconds)
done (took 98.869354766 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.186860618 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165582646 seconds)
  done (took 0.391330872 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071694499 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098317331 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077026304 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128667438 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066254783 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100326112 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099557215 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078073278 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066402397 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.067190796 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066961437 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069211334 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132411976 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067531416 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.06698309 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070012991 seconds)
  done (took 1.390862473 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099848529 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.162991554 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103261 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06520191 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100246635 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073463949 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.066278968 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076316376 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070860316 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06579883 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073166724 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071956055 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065475939 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07147018 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071523019 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073298938 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065150781 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073228014 seconds)
  done (took 1.528501513 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100756321 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092445209 seconds)
  done (took 0.277309572 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.158542143 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133732015 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202674483 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.357266336 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165669209 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.149020606 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.145868159 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.144006094 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116999583 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.139939573 seconds)
  done (took 1.779526216 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100208979 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.155373368 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.269079313 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119614628 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.073207181 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.096334217 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.119803308 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.079339448 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081224632 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080380021 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082349858 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.077658599 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100743546 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073478203 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074654125 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077143299 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.105114155 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073799028 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074775318 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077525752 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.101545681 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066533898 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073792296 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073746661 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078685742 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078539584 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06643486 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066405074 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077605621 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074770808 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077105858 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093850498 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078083706 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.108381214 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.071349079 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.109140073 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077227597 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073990177 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075020457 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073787086 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078884142 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078807547 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.073502529 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077608173 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.06623536 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077395996 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.066043062 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065907561 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077701672 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067296143 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07796845 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076831492 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106744705 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067580891 seconds)
  done (took 4.756389739 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102908619 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106491108 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072012012 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113547438 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104540851 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073149178 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.104543315 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097268491 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.105644702 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070925997 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069002746 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070846119 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083494375 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.0837582 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115999819 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107850022 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.0746651 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072137332 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109920147 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105985477 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069500659 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097840584 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.092302488 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103908984 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06850469 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071715768 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068793379 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071324764 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077870952 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078767425 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070047569 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081817737 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.086112546 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078971044 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06780488 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069099569 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069105606 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080838259 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07978747 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079520479 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078404642 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068072092 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068606588 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069870584 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07065568 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068164559 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079551227 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081478969 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079246941 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070387538 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070579185 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068849211 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070374389 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080528878 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078056858 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081346074 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081549836 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06945451 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069132907 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073485294 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081341687 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080046643 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080247041 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071149141 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07933661 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069268306 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080886581 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085165878 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068911072 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070772783 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069300194 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070232643 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070081407 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079237432 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078306959 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070063492 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070299887 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068808545 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080534959 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079485075 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069879032 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077825507 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068607531 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069616279 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070222106 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070447796 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078543377 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081618194 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070785756 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068969012 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070372617 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06944647 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067464156 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077553671 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080609576 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079930784 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079337746 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070084493 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.080400753 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080293792 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071105437 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.081433793 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069258057 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070732015 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070371541 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079260573 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078161826 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080523174 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070070454 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068607685 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.209175573 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082644386 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069615695 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078529671 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081732485 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079412035 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068765308 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082313938 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06960916 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08060392 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070433896 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081770482 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069411445 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081213394 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07032207 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069098654 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07021225 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080779415 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073394062 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07015768 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071491107 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070503296 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.08035174 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084547526 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071933873 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080239258 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079943435 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072236127 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079899685 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070416708 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07976699 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070678342 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07040353 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067469686 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083583461 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069255167 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069940919 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07036302 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080977161 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069272399 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081593825 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078892173 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069029749 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082706028 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081411077 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078039734 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08127079 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071663198 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.07000285 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069265932 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069923571 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078282797 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080199137 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071825138 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070733786 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078623702 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080098328 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067861168 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079175138 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079065013 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078531273 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069144674 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070492383 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08103389 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081023467 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078713983 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078774003 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079424492 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069123245 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078473704 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079098292 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068588601 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084820729 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068776145 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083496259 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079893766 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077845187 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079336859 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080850716 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080583925 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.081416003 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083495502 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06870167 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068655336 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080389428 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068946073 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070094367 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.07855193 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070659748 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070141366 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083881632 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069719619 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.080946991 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068749047 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.080101116 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06821047 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071309102 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084721979 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068998814 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070214296 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080269249 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070001248 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.07923394 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081453718 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079437016 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068731062 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070370579 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080017577 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079142926 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068152056 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067974173 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070889314 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.211238994 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078244272 seconds)
  done (took 17.626559205 seconds)
done (took 27.894424875 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.211802456 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154343287 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.184220618 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119555919 seconds)
  done (took 0.800668767 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.118777197 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102196573 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093766942 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065583516 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100273406 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066165395 seconds)
  done (took 0.633801196 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.314155284 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214765168 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.188828359 seconds)
  done (took 0.795202475 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.20278738 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.191185946 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.421819157 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.264855421 seconds)
  done (took 1.27448046 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.146385721 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089996913 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068285743 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084307246 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.135871207 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.162274922 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.102955427 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.127270708 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079942207 seconds)
  done (took 1.130345671 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.151719172 seconds)
done (took 4.864884508 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.207102679 seconds)
    (2/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.203058958 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.117187388 seconds)
    (4/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.237586287 seconds)
    (5/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.233295534 seconds)
    (6/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.228578699 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.0928456 seconds)
    (8/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.072378075 seconds)
    (9/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.230281088 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079091395 seconds)
    (11/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.082002437 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.136328241 seconds)
    (13/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070286419 seconds)
    (14/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073927669 seconds)
    (15/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.105738844 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073672687 seconds)
    (17/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.06343302 seconds)
    (18/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.16400207 seconds)
    (19/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.165324354 seconds)
    (20/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.083451657 seconds)
    (21/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.182608656 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.109135082 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090878254 seconds)
    (24/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.156551264 seconds)
    (25/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.161782678 seconds)
    (26/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.074639411 seconds)
    (27/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072708659 seconds)
    (28/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.151105326 seconds)
    (29/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.083294234 seconds)
    (30/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.18795326 seconds)
    (31/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.121664904 seconds)
    (32/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.160826676 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.09053653 seconds)
    (34/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066503854 seconds)
    (35/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.184429611 seconds)
    (36/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.158899731 seconds)
    (37/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.168323572 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072006297 seconds)
    (39/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.073635357 seconds)
    (40/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073494049 seconds)
    (41/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07091416 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.095278529 seconds)
    (43/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.101456098 seconds)
    (44/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050603933 seconds)
    (45/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077238322 seconds)
    (46/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.16022169 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07359282 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085992246 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089950057 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.094254954 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065467073 seconds)
    (52/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.227287823 seconds)
    (53/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.105893527 seconds)
    (54/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082296797 seconds)
    (55/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.163234681 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067554211 seconds)
    (57/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.155388128 seconds)
    (58/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.109797284 seconds)
    (59/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.062639263 seconds)
    (60/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.162920665 seconds)
    (61/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069234906 seconds)
    (62/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.10191629 seconds)
    (63/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081032979 seconds)
    (64/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064252018 seconds)
    (65/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070399418 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092962856 seconds)
    (67/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.195748009 seconds)
    (68/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.088041078 seconds)
    (69/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.163721999 seconds)
    (70/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.10156024 seconds)
    (71/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.074321101 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.125367066 seconds)
    (73/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.178210653 seconds)
    (74/309) benchmarking ("sort", Int64, false)...
    done (took 0.066761849 seconds)
    (75/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063303151 seconds)
    (76/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.109887177 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.089575408 seconds)
    (78/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.108124246 seconds)
    (79/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.175395547 seconds)
    (80/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060708596 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.135133396 seconds)
    (82/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.075089388 seconds)
    (83/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.203418876 seconds)
    (84/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074114044 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.092812765 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.072197442 seconds)
    (87/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.078761787 seconds)
    (88/309) benchmarking ("sort", BigInt, false)...
    done (took 0.337846835 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.138114977 seconds)
    (90/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.184407754 seconds)
    (91/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071782299 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091664606 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.096440132 seconds)
    (94/309) benchmarking ("sort", Float32, false)...
    done (took 0.1337398 seconds)
    (95/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.148763181 seconds)
    (96/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.078601976 seconds)
    (97/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.053264158 seconds)
    (98/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068903049 seconds)
    (99/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07336765 seconds)
    (100/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077997926 seconds)
    (101/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080375264 seconds)
    (102/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077015492 seconds)
    (103/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.15173513 seconds)
    (104/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.074968872 seconds)
    (105/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.163618284 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07428368 seconds)
    (107/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.0763628 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.143084959 seconds)
    (109/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.182017404 seconds)
    (110/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.08191354 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.145641234 seconds)
    (112/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.072711742 seconds)
    (113/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074944061 seconds)
    (114/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.206805929 seconds)
    (115/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.062190818 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.125124688 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090792865 seconds)
    (118/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071965487 seconds)
    (119/309) benchmarking ("sort", Bool, false)...
    done (took 0.13762578 seconds)
    (120/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074320977 seconds)
    (121/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.184325002 seconds)
    (122/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067096175 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066267331 seconds)
    (124/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.086683793 seconds)
    (125/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053473004 seconds)
    (126/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.063364504 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065977313 seconds)
    (128/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065977615 seconds)
    (129/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.076560533 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072204876 seconds)
    (131/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082485764 seconds)
    (132/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065654667 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072047205 seconds)
    (134/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090534354 seconds)
    (135/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.112040311 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.097795113 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066030546 seconds)
    (138/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.154317213 seconds)
    (139/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.05094294 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072123265 seconds)
    (141/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119587817 seconds)
    (142/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.06818891 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089350441 seconds)
    (144/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.141414946 seconds)
    (145/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088026507 seconds)
    (146/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052432941 seconds)
    (147/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068571841 seconds)
    (148/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051716456 seconds)
    (149/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082346959 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065071379 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073826887 seconds)
    (152/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050657312 seconds)
    (153/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054400834 seconds)
    (154/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073421098 seconds)
    (155/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051399172 seconds)
    (156/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.07118723 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074287591 seconds)
    (158/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066922378 seconds)
    (159/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050989406 seconds)
    (160/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072248659 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.092887829 seconds)
    (162/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.17689344 seconds)
    (163/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.155810743 seconds)
    (164/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060622926 seconds)
    (165/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.078150967 seconds)
    (166/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051332588 seconds)
    (167/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.054967557 seconds)
    (168/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067258277 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.077325316 seconds)
    (170/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.05251581 seconds)
    (171/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067385862 seconds)
    (172/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073669021 seconds)
    (173/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074572892 seconds)
    (174/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074424219 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.093896578 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.137112144 seconds)
    (177/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065763485 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.139362131 seconds)
    (179/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076665271 seconds)
    (180/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052530403 seconds)
    (181/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061622828 seconds)
    (182/309) benchmarking ("sort", Float64, false)...
    done (took 0.130422324 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.121876151 seconds)
    (184/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068003793 seconds)
    (185/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078629003 seconds)
    (186/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073735007 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07266623 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091572059 seconds)
    (189/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.10168634 seconds)
    (190/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067302544 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092779349 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075156742 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087359271 seconds)
    (194/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066490589 seconds)
    (195/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051112151 seconds)
    (196/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.098186065 seconds)
    (197/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072852089 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094230021 seconds)
    (199/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060892172 seconds)
    (200/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.05087461 seconds)
    (201/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052570344 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.0652779 seconds)
    (203/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050992263 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064195578 seconds)
    (205/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.05089659 seconds)
    (206/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061820987 seconds)
    (207/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077250468 seconds)
    (208/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.154913695 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.231936569 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07388029 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.078906954 seconds)
    (212/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074916587 seconds)
    (213/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.182956977 seconds)
    (214/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052967313 seconds)
    (215/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051672587 seconds)
    (216/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.175748137 seconds)
    (217/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067800546 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.116323832 seconds)
    (219/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.101539058 seconds)
    (220/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.066299419 seconds)
    (221/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066977786 seconds)
    (222/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076805376 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071556109 seconds)
    (224/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.052403172 seconds)
    (225/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069160188 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066567639 seconds)
    (227/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.185834749 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064579606 seconds)
    (229/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.186452628 seconds)
    (230/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.209016613 seconds)
    (231/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070442645 seconds)
    (232/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.197755331 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.139630745 seconds)
    (234/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073083807 seconds)
    (235/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.051644473 seconds)
    (236/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051969853 seconds)
    (237/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052760475 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067173986 seconds)
    (239/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.172741248 seconds)
    (240/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.051147606 seconds)
    (241/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.090496566 seconds)
    (242/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064772836 seconds)
    (243/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051445439 seconds)
    (244/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.118176337 seconds)
    (245/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051914908 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066347436 seconds)
    (247/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067580527 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.286423246 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.140092895 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065768999 seconds)
    (251/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.066276057 seconds)
    (252/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051632095 seconds)
    (253/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051749345 seconds)
    (254/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068262209 seconds)
    (255/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052610426 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066017599 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.0727614 seconds)
    (258/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089160994 seconds)
    (259/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.066088328 seconds)
    (260/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050947669 seconds)
    (261/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052610343 seconds)
    (262/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051816981 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.093406435 seconds)
    (264/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052765512 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07447639 seconds)
    (266/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.05232975 seconds)
    (267/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073541282 seconds)
    (268/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.0508868 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091153631 seconds)
    (270/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051626 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.140605816 seconds)
    (272/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.05343843 seconds)
    (273/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065297123 seconds)
    (274/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.067076299 seconds)
    (275/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052305534 seconds)
    (276/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061385537 seconds)
    (277/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07358849 seconds)
    (278/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052057015 seconds)
    (279/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.068743846 seconds)
    (280/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072288304 seconds)
    (281/309) benchmarking ("sort", Int8, false)...
    done (took 0.142396983 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.09716635 seconds)
    (283/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052149538 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073741749 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064920362 seconds)
    (286/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052136422 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063923593 seconds)
    (288/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.147344804 seconds)
    (289/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062250332 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066156126 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073005293 seconds)
    (292/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088845943 seconds)
    (293/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051384366 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065650401 seconds)
    (295/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052365051 seconds)
    (296/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051437868 seconds)
    (297/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067356875 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07197804 seconds)
    (299/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051055051 seconds)
    (300/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066329993 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.10091627 seconds)
    (302/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065692128 seconds)
    (303/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051306507 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090082159 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07121565 seconds)
    (306/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082357208 seconds)
    (307/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053658806 seconds)
    (308/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051383776 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090978063 seconds)
  done (took 29.759237739 seconds)
done (took 29.856682789 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082727433 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092232482 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074628168 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093573928 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081188935 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076125283 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07360007 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078908465 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080617069 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083003212 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.07895768 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.05428514 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07442184 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074820222 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075031329 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091496734 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078991762 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072893155 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07371124 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065043659 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073896451 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066434054 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067693724 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.053925692 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079781451 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072605062 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072196233 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074445979 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066078233 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066108352 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069088984 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074774718 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065264763 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078665999 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072898932 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073651984 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075569505 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.07697236 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068150838 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066270428 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07450991 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067039938 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073085223 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.0740212 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072133158 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071466965 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073581947 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078756373 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092231152 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067743531 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074997361 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076368125 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077138921 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073345292 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070659088 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073020156 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071453051 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092405832 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074339731 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067777064 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074473754 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074207422 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07130885 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073784462 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073342109 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075318969 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075605263 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071278715 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074741585 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071576638 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065324386 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073131736 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069278629 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065660889 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075917796 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077393848 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064231257 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071087304 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072845166 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07140407 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06463609 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067187963 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.0669752 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071939142 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067090079 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053981073 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069641839 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071732955 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064743102 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073744516 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072429569 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072663418 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066968367 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07654997 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064821913 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071241666 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065825305 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065626092 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067221221 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.06944108 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.0652967 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067887094 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074884901 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066969282 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07197324 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079770728 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065759739 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072079866 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064536181 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064604933 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080029682 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074910396 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065820599 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067917974 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064314878 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073220091 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064588903 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065061333 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064991052 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065589024 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071880215 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065658781 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06779684 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.0728098 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.07841078 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065536671 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069409517 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066896064 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065017907 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071242579 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065791333 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06520276 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066697937 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062066386 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06722247 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065396639 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07281327 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067030016 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072713496 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067117159 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074158707 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070249756 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.07168379 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071098496 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064361312 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058609521 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067370058 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067568656 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066430382 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065087967 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066637026 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064150621 seconds)
done (took 11.034957673 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071043086 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143690509 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098090761 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096999957 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.0869947 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067070061 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077195724 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102082955 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068073749 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103479292 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088386767 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.087080251 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114775849 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064647753 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066171052 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069878508 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067580365 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081992659 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101859273 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087067663 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.117391209 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065306179 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093393986 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090126905 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.089287801 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105454519 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069727792 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069585265 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070109387 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.093713813 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088907496 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070909903 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066407377 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099409973 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.094966797 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08419626 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066572517 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083643658 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066761205 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066186168 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067462956 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099394321 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080917529 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082775222 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071008259 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070597341 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067601855 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084727124 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.09028995 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079924726 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086887306 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102819546 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068481544 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065819391 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064489351 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086733872 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.06557763 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069409085 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066549806 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.06861014 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066337051 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069019236 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081209538 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081180632 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070242297 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080329702 seconds)
  done (took 5.432652291 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083607773 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091826868 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083856507 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084889712 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.0660778 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066732701 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067409771 seconds)
  done (took 0.696364671 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067814711 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088001912 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089446803 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090133755 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.082059127 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088500873 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075997698 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067078731 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.089048614 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067609744 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088341366 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.10176285 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070009817 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07517648 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09148894 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067590992 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090736552 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066547171 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070555103 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090943798 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069645037 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.096368913 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069763905 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067090008 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08151986 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067168785 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114502706 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071345479 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067927198 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069441946 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064197667 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.10831786 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080530808 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075111574 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066500269 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081584266 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081475832 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065788685 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08434729 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.076479903 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080985168 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067977678 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067920511 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064703408 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071590045 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077384272 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06791895 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067308839 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069034533 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087059093 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067423923 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080837337 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069799456 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072769692 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068025564 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074457968 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076892115 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067340402 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086902095 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067791733 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08449748 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083059309 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.081308822 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083152556 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069251731 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080330712 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080700852 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069181375 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068592125 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070037493 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08275537 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064940629 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.0679085 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077439642 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069155739 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090385099 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090089702 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068452654 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080901312 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067442832 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067168261 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.0667958 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090310135 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072058671 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066953045 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071321212 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070089109 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065184659 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065953596 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070620812 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064912341 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068388195 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070166167 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069802253 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069433934 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083865891 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069629413 seconds)
  done (took 7.447181098 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068437638 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068000089 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069924611 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067726653 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068053928 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.06840308 seconds)
  done (took 0.584010239 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095811893 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.06905311 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080966894 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072558135 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105374545 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.088113404 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087626738 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079094265 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084588946 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079166957 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.088475523 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08906415 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093198202 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073050508 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087441198 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.07185276 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087535021 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075653426 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078760798 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072640289 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087118941 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.07316737 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073213735 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082675421 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076797535 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071815446 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068151772 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079117609 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078986431 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078994752 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072788483 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.077583012 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071008851 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078738189 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087368167 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07132677 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071566817 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.078611449 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073077668 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07683444 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088417632 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072450109 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075168316 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077955515 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078608828 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070380747 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07729178 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075798738 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.087789846 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077752179 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076772174 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071725225 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.076116708 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077381462 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070667298 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078842535 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07706676 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087248517 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072780405 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071183011 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069300534 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.077209074 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.0786063 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07560672 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079319496 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077335505 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.071170605 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072692691 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072664069 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071481273 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.078001073 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068808535 seconds)
  done (took 5.702882499 seconds)
done (took 20.071442125 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.536761799 seconds)
  done (took 0.582205369 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.61497081 seconds)
  done (took 0.712069701 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.46892689 seconds)
  done (took 6.555870909 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.407237172 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.529278612 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.724596093 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133275875 seconds)
  done (took 1.900947449 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.699609687 seconds)
  done (took 0.820408994 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.215340917 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.204762868 seconds)
  done (took 0.534096145 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.377653202 seconds)
  done (took 0.459634624 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.13854769 seconds)
  done (took 1.219398481 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.261019685 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.176501694 seconds)
  done (took 0.530937177 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.475807012 seconds)
  done (took 0.560132917 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.886835832 seconds)
  done (took 4.970219941 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.213932938 seconds)
  done (took 0.356212355 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.237359587 seconds)
  done (took 0.313867942 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.726604079 seconds)
  done (took 1.803764677 seconds)
done (took 21.472878221 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083539108 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081828947 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080881168 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07944971 seconds)
  done (took 0.371082109 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077921802 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07294303 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.07656173 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072461307 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076861602 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072756277 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.075201358 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076692155 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072740627 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073593205 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073622514 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073284162 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076067304 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074740432 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071224692 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074909974 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076673682 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073163885 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076167822 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072891881 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071296267 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.07502081 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076218637 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071635527 seconds)
  done (took 1.864048967 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077548096 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073242469 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074885568 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072081151 seconds)
  done (took 0.397868784 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078348583 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095494267 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090476596 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.07784795 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093342277 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08727409 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069530269 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06941335 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071168341 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077974621 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068432087 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.097092673 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089708069 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077809422 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080077877 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066753964 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068292869 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087731346 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077813185 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078713255 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070065827 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078554974 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068196903 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089251449 seconds)
  done (took 1.988645432 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086906321 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105048447 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081941301 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088999574 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091533867 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065248621 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.08817881 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092017405 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.127600631 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065676936 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071058525 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065929737 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.07417777 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065379325 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080973373 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.108265336 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112128785 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.06921218 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096966456 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06578959 seconds)
  done (took 1.807350906 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072353793 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069807427 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065721764 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069731775 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076582998 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072772241 seconds)
  done (took 0.528921731 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068533764 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068186152 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067893699 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067060529 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071630118 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067525564 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066380584 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068019294 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067723141 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067547352 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067835754 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066027781 seconds)
  done (took 0.895541282 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.202284369 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068777633 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068807212 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066145009 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070930537 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066944557 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081593444 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068042037 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.092981701 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066582458 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067446709 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068895695 seconds)
  done (took 1.07596879 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211357648 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07678545 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243872795 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15326893 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112806978 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117178162 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114145553 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115347158 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.144630814 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102469619 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172368485 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168903636 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108123346 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139178482 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089496303 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100440156 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158285978 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164606448 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105576309 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168882921 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147154193 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127040268 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152840648 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10176175 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106464375 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122219931 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071060992 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080167045 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172147541 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134763045 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146192004 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111760105 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092895846 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179191449 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173053807 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142760971 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148028754 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084795532 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105525758 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.136171939 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202947364 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089068427 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164638676 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110769107 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080946712 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275339009 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122173307 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121287724 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107327338 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090563447 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147261254 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186924076 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138688535 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087823194 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126864943 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11554497 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116027997 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114937363 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18470094 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163841513 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129860477 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.0718669 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109327898 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155466168 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133923367 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109317898 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126372885 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092649956 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135824034 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15747823 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12107645 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145637984 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.117613119 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08928626 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120538853 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141364558 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129440252 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16383229 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12539096 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07245591 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125370452 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102306007 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081042272 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145076536 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075454573 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177828026 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100128096 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.110101112 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126393437 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11075145 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110198758 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162438009 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147078931 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10401695 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065664183 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104789135 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120954638 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291061344 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087362376 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110164683 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11988261 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079117167 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141134134 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075235893 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124495629 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077689184 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129036827 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131360268 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076902458 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123923272 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105233067 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101988268 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134310227 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162698283 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089100221 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082770449 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171864282 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123118763 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104390566 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145971661 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158735555 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102123833 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101276643 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151143216 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181565419 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09003888 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165016401 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107371289 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083532962 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088072479 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123974156 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112358408 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124611774 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081499149 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119598875 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170623665 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075448505 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096327419 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134674391 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078800756 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080991548 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106338597 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106313645 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.097050513 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100981432 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104311641 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139350787 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125408541 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105687487 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125077296 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0993507 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171847325 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087769397 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101813329 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104008725 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069460787 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.282523755 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159818226 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080153087 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168060148 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.12464207 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117933072 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120405101 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083552275 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141792293 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079782105 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070587677 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146214892 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1124968 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11058352 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.15421764 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117622516 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127015878 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119699297 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135045119 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132909606 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.13144836 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105371536 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088882636 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113462522 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12746455 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073212051 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090870481 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080981547 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105710175 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096989775 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082911357 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143462844 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125390808 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110491521 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11303944 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097053136 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148958163 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076440929 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129312718 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120275239 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096192324 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.154708783 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155112657 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132915496 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099806734 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13885478 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070613741 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074315207 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088925038 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124289619 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083125102 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083168804 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116792554 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148497138 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130694952 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135933714 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123999754 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120125454 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156264638 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069967528 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116813806 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147444895 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120620766 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103722569 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08917752 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098098727 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141377301 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105560887 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179407914 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115540478 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122052164 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152042405 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099625683 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078604804 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102068448 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134279682 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102706748 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142149899 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098437617 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087253693 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108786187 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073275213 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097209318 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124910679 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116882746 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133558742 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114272385 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130497399 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076234054 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113723812 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119658469 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119773225 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063067553 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118998396 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158638543 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093394549 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117204721 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151968908 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078290804 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.132594306 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17336705 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142840515 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083499194 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106808559 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117453805 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126359196 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118120885 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136657121 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102112498 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.394257809 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112664422 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.088329873 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090107285 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100025316 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107450759 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.096855911 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108781131 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.116864466 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.097079929 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135542915 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106683323 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112170806 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120328838 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.101284102 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092597109 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098753281 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180754801 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121429663 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17528964 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.100848844 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.147546484 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166298681 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075587121 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079623288 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078553023 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141925305 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085603109 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132282092 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.108361946 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118734267 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125168267 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144520551 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096379805 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069144786 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109625618 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13503801 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125189398 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098683374 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104316269 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166128473 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101372489 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079043 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114458137 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117100678 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103791434 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174944711 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061834867 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106606277 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076545024 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080876311 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12960194 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153987374 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080508662 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104455859 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119758739 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111944322 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129218264 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103189924 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108683463 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278040575 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15254241 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12918089 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09010585 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112991065 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129963462 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15862357 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105686209 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096877239 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174768411 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15388913 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162681111 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08752663 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115928411 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115002401 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109313904 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139982056 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083896822 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16619688 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082682407 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13707969 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104376024 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08974728 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13049356 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108872826 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088839076 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149710586 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118703838 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082987528 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077777176 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118984363 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120711817 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106474557 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075455256 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140542428 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073646924 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133966208 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162479492 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080987649 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108503898 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097226763 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080276997 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10753981 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103238934 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087849557 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099842173 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175998658 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088227713 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150642551 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133708135 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112972017 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137899193 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.253835209 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640956686 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079022793 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154903576 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117608891 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177529087 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100795504 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118792244 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110477741 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12378617 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145487114 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104667726 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.179151405 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133384225 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116027632 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079603258 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102614174 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104664818 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088057564 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108263259 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114877609 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116627309 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093971568 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116932514 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125627125 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081918277 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09656051 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158210591 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117676063 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145638016 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141923521 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085860589 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119409542 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139129125 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080255629 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122241036 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154504447 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107965537 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099927903 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.08128597 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101417627 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161181373 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073486033 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16290461 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120791792 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110666993 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114320949 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114196626 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130655785 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107032484 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121298064 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092398347 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110769879 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113815998 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081628723 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076917105 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.252956042 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113918612 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099005786 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099596009 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.100169638 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153582242 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072164628 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099254697 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115259595 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145507171 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17608192 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089491898 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082955274 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119661593 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115934553 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113835851 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12298154 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079474397 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082310551 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081380163 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.078282262 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109740598 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114004335 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115381748 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112139621 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165435597 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083259913 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.229523178 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096441126 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105860074 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069828787 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078780385 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096493038 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099200598 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108121149 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110486409 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161103345 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095893021 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090425787 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092622613 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074352516 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083566682 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129734382 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111267625 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11981945 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100318465 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062770388 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109349027 seconds)
  done (took 57.89289925 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.110312077 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083360594 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.093870374 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143705723 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122837403 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203202054 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.154386785 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189632659 seconds)
  done (took 1.293457821 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.06787869 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095357219 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103581634 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083484592 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067072543 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068522598 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.2332653 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081379411 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066879115 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.098395741 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079009333 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068658875 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.430414996 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066115284 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067633298 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061206566 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06772658 seconds)
  done (took 1.904008693 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.388665883 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.613116176 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.35085154 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07223966 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.470092025 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.083975004 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.139440436 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.128015693 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073367688 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.525679374 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.405109565 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.123926141 seconds)
  done (took 16.492715329 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075164044 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069386308 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084177903 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083978054 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072530702 seconds)
  done (took 0.473211526 seconds)
done (took 87.08222458 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080462156 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.615311593 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052901614 seconds)
  done (took 0.784188421 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082952432 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085500196 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.086375866 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08350649 seconds)
  done (took 0.442650578 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074513909 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076776394 seconds)
  done (took 0.240841944 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.234713778 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.163611443 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096841496 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083543607 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079520114 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079417727 seconds)
  done (took 0.341294709 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072512816 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075402088 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073481419 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075969199 seconds)
  done (took 0.383458386 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077233688 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052086967 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055075341 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.058230457 seconds)
  done (took 0.330753683 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086754496 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079514216 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078525301 seconds)
  done (took 0.332523049 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102850949 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.086468458 seconds)
  done (took 0.276533173 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082475252 seconds)
  done (took 0.170262538 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.101013709 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102208238 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133054715 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.113319332 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140955329 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.110604952 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085752861 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086751753 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077189086 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.0872026 seconds)
  done (took 1.123241147 seconds)
done (took 5.091940979 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082134803 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.463705557 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360916163 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090399023 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668113186 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356225792 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.97906341 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093575092 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116403657 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068520283 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085031067 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648356198 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.969187082 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.413997169 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.956395705 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323987116 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649358854 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068614361 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068010181 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068011764 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.964882892 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067849196 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067790135 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069094464 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647723145 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371639875 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067887627 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.32303602 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068571296 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069521787 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354977279 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068302552 seconds)
  done (took 14.725387487 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070592549 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120484983 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.0731442 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084630256 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071056477 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070501127 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071778611 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069208694 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121394308 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068631396 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085782409 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067896872 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072182131 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.085400814 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08798156 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06842655 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069401001 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069311767 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068128073 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069287073 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087234561 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067959976 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068303441 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068780558 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06881639 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080648959 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069025696 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068357221 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068849488 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070447866 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071668591 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069255303 seconds)
  done (took 2.544734778 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114578111 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126061855 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074162179 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103790913 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111607428 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070269966 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142792757 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094264656 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128280109 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068370977 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08549797 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068925699 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103165263 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069073908 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088546566 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068357079 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069535428 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069027291 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068860307 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.0686508 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08776791 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068087511 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068382489 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06889781 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06901275 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082249491 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068596136 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068743076 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068716936 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070347472 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071294119 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06883462 seconds)
  done (took 2.772908045 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07289599 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075759885 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083692192 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08415752 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069723276 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072016445 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073848662 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.06919244 seconds)
  done (took 0.721620375 seconds)
done (took 20.870961868 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.08124637 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068924487 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072723125 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083135808 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073326113 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078977821 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067279254 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.076004987 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072273041 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073467546 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075856451 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068724963 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072014903 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067974733 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074734986 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068259394 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081445416 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071859096 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079048471 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079613047 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069828349 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073813912 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074964135 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079521192 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079600088 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079678278 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078081838 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073490976 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06968828 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070725362 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076941016 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084137945 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068461589 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079426014 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067967817 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067933143 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071789055 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067813721 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079585679 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076971847 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069807953 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076396101 seconds)
  done (took 3.178483772 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087945153 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092962551 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085227485 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062045114 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067682728 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066200081 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089183154 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059902356 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060255785 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088483271 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055743491 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060156797 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.06621824 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054282079 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060557181 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056896739 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062120031 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055945995 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060070759 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060255622 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089380007 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053708491 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078402909 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063739705 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055942605 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061729277 seconds)
  done (took 1.883070139 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074634698 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085307068 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089809315 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131515336 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.106596595 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078927915 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079962476 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095300622 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.088719373 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066824617 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071692357 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092368801 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090536548 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074048912 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067996546 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086316635 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08409135 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069716259 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073795992 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.094612292 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087004692 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086465813 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095883052 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083748153 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067502973 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069756647 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072212244 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08199495 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.0728676 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077781248 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071470742 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071852835 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069953311 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079623427 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07178697 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069344865 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092426081 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078215914 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079419147 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068593084 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07599155 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068585898 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092917653 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.13731635 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067631986 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07418436 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.0718327 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077245569 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06773272 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08796403 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080572234 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067734269 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071094207 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067533515 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068266091 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081625423 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.06978783 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070636589 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077853169 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074197828 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.092959881 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072956755 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083921493 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067893183 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076829526 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067162536 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068821176 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067491694 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097021134 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070013237 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111734557 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069424057 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069455096 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077874577 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.076598436 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075236877 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069121517 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084036118 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079425846 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072685442 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077287242 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071612042 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071869524 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.091945434 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070497896 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069905816 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069346191 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074539329 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071464983 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069668396 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.0841558 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.06760103 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071188601 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08577329 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068062348 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069487316 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073870625 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072865696 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06814924 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080059603 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073533714 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068719512 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078041307 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068181745 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071078095 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081322188 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074475277 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067007121 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072329074 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074400362 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068799554 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069530916 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071247725 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069946208 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076867725 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075006533 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073026252 seconds)
  done (took 9.178415698 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.164066151 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.157316971 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070783171 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149606075 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07688747 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079735005 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151895083 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096113693 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069089237 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069546506 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069587936 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112110424 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107259594 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116741293 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079324945 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067684879 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.085663095 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116421176 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.15381924 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148563798 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.085285067 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077207325 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070190973 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069291514 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070717355 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078825797 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085759709 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077544689 seconds)
  done (took 2.962610361 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079999896 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.106428339 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07434861 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091353395 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091828948 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068660789 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071006751 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070021709 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081371479 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079524128 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068043969 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073349627 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074800506 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071380578 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069015307 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075035792 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075388969 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069732947 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071450559 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074002429 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079096904 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092530951 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072334643 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067359233 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072912471 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067620455 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064336561 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084738612 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068995856 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.096225049 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066187656 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07301247 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082832584 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068772027 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067332114 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068158279 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067655756 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.0677249 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069736155 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066608785 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066302918 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057287373 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066981211 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079545078 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075249863 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056348478 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072735054 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073360232 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072695885 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065542148 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070893966 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070621775 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070947955 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075894737 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071929186 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073101429 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069372194 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074824645 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077057352 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067925779 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065408482 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065968589 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072464792 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065893635 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076426363 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072256986 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066497113 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.06773584 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069594397 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074302243 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067697671 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071990618 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065335094 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069967578 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072264543 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069465937 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068780138 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06607487 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067688544 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067980321 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055508564 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067942091 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053455847 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070607003 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066039428 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066269343 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068010131 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072891103 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079880704 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068916782 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073686557 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069231859 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066838245 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070580374 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060196306 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070834137 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083801323 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083435383 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067710783 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066144194 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08129605 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072313821 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066865397 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056357321 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.072573316 seconds)
  done (took 7.659959926 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.08984549 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070807795 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085241193 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092329385 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088293722 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074990455 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078800481 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069638513 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084206928 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074345843 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077105401 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067837195 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079156266 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07762717 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069608177 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078594426 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072177066 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084722001 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083006027 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068228674 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076666076 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080688901 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090948528 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.081911724 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.0809746 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082329283 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090804801 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.077696525 seconds)
  done (took 2.419603539 seconds)
done (took 27.374221875 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 5.143984487 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.3353882 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 5.142914874 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 1.496416437 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 5.786128601 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 5.439004245 seconds)
  (7/12) benchmarking "nbody"...
  done (took 1.260633236 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 5.134541841 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 5.364235348 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 5.203067421 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 1.341542702 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 3.263891817 seconds)
done (took 44.973993398 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 5.153171856 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.274959224 seconds)
    (2/2) benchmarking "String"...
    done (took 0.371597438 seconds)
  done (took 0.710269326 seconds)
  (3/5) benchmarking "replace"...
  done (took 1.339128766 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 3.692017362 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.384378028 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 5.13334363 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 5.137456994 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 1.473598402 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.957656177 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.65897528 seconds)
  done (took 17.500370095 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 3.260449747 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.412347685 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.930870065 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.917130803 seconds)
  done (took 7.647041255 seconds)
done (took 32.511975337 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 5.145788752 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 5.187847222 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 5.147200488 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 5.113145907 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.185483358 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 5.14767623 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 5.214267735 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.343513697 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 5.129576174 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 5.115534007 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 5.162038612 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 3.559431626 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 5.132439479 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 5.251791152 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 5.140840499 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 5.13724811 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 5.15081201 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 5.610645208 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.287106961 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 5.136461402 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 5.150651702 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 5.178336945 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 5.145897135 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 5.144966986 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 5.180680927 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 5.13007343 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 4.548755356 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 5.141624 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.753142165 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 5.128874179 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 5.159843386 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 5.399091027 seconds)
  done (took 150.416322598 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 5.129974203 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.245526079 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.280538049 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 5.155201535 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.649311268 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 1.312736519 seconds)
    (7/36) benchmarking "scal!"...
    done (took 1.22350086 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.677142269 seconds)
    (9/36) benchmarking "syr!"...
    done (took 5.135319489 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 5.137230397 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 1.244719221 seconds)
    (12/36) benchmarking "her!"...
    done (took 5.133621406 seconds)
    (13/36) benchmarking "trsv"...
    done (took 1.263989123 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.079433316 seconds)
    (15/36) benchmarking "dotu"...
    done (took 1.161743744 seconds)
    (16/36) benchmarking "herk!"...
    done (took 5.222287697 seconds)
    (17/36) benchmarking "trmv"...
    done (took 1.401149848 seconds)
    (18/36) benchmarking "symv"...
    done (took 1.279741971 seconds)
    (19/36) benchmarking "dotc"...
    done (took 1.167027668 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 1.30905753 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 5.150012871 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.058443992 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.032212335 seconds)
    (24/36) benchmarking "symv!"...
    done (took 1.234288561 seconds)
    (25/36) benchmarking "symm"...
    done (took 5.174684678 seconds)
    (26/36) benchmarking "herk"...
    done (took 5.238077553 seconds)
    (27/36) benchmarking "syrk"...
    done (took 5.143111549 seconds)
    (28/36) benchmarking "trsm"...
    done (took 5.151173221 seconds)
    (29/36) benchmarking "asum"...
    done (took 1.323929261 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 1.386126195 seconds)
    (31/36) benchmarking "gemm"...
    done (took 5.137020715 seconds)
    (32/36) benchmarking "symm!"...
    done (took 5.174314382 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.262524231 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.000114882 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 5.145362536 seconds)
    (36/36) benchmarking "trmm"...
    done (took 5.14176218 seconds)
  done (took 109.023682542 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.51333537 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.131551449 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.131374235 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131188376 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.136837944 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.13091166 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.254046604 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.255670811 seconds)
    (8/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.1281677 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.745144836 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 20.891485359 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.180855785 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.958580114 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.12944471 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.199584684 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.142202591 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.130644646 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.145623155 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.15856054 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.130682459 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.130892248 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.262721243 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.144251662 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 20.120771963 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.136623874 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.132056477 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.137272385 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.504180643 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.130110596 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.137332482 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.375404391 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.130234877 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.132212835 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 3.022179669 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 10.372173591 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.213197525 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.131396407 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.137126088 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.130619058 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.351105837 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.129850575 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.132902635 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.135627522 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 3.298023659 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132243513 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.255888332 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.129721706 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 2.618662366 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.129537941 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.131067986 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 20.905106463 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 8.806166494 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.134033577 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.130328183 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.133654784 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.131169111 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.131752778 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.13861581 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 20.922521368 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.210907665 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.13269691 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.135035489 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.136985031 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.131035003 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 20.217318002 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.132563517 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 20.527405436 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.190556595 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 1.367784833 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.257579128 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.1284899 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.201439006 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.222985342 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.128873693 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.130339665 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.131935826 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.132511276 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.132391248 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.214157153 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.128916741 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 2.254817488 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.136216236 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.134290215 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.183741743 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.201022904 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.129340362 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 3.016951181 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.132568759 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.13149596 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 3.424919101 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.128545408 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.199169502 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.128544892 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132603568 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.131559345 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 2.25435903 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.250260157 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 4.90536981 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.132585171 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 20.878248458 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.139593744 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.13024021 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 2.269196751 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.129569914 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 3.317482768 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.13287041 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.215090114 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.133879327 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.135197801 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.13204677 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16501873 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.133746382 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.18989367 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.128861334 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.507413483 seconds)
  done (took 214.301640836 seconds)
done (took 474.342802312 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.801481975 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.756476542 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.870480881 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.781268938 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.750760669 seconds)
  done (took 4.015254424 seconds)
done (took 4.077566503 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.213970308 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.216245104 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.152626634 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.214491198 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.149180261 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.214591975 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.196169028 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.154731134 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.186084579 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.155762039 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.182648136 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.153211469 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.14178478 seconds)
  done (took 2.384790823 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.359268973 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.378021012 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.211170563 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.358097674 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.188118608 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.356377441 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.307109048 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.293198701 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.289517041 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.154819731 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.145394569 seconds)
  done (took 3.101288479 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.363255247 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.374284084 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.21773179 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.367260038 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.190301195 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.368492801 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.302901728 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.29221668 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.28928076 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.153564792 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.145109353 seconds)
  done (took 3.123326111 seconds)
done (took 8.675863484 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.140968883 seconds)
  done (took 0.195238161 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.165392098 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 0.319985393 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.144298556 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.145152761 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.142167561 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.142840281 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.144783556 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.141356889 seconds)
  done (took 1.407586503 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.140605775 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.140297303 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.139897081 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.137519421 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.139920019 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.139800393 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.137968477 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.137889075 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.137106946 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.13649224 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.140157908 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.137534374 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.136648142 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.137373266 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.139630219 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.139311863 seconds)
  done (took 2.278919391 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.139699419 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.13927143 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.137266325 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.138696376 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.138157336 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.137306767 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.138128708 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.137208101 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.13733616 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.137594861 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.137282009 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.136996532 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.138596187 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.136242981 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.137031459 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.137929639 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.137708743 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.138503119 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.142278876 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.138369429 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.138663543 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.137970663 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.137875268 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.138109671 seconds)
  done (took 3.376351491 seconds)
done (took 7.316793414 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.92288768 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.621260361 seconds)
  done (took 3.598825347 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.14218038 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.141412915 seconds)
  done (took 0.405537034 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.1411652 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.141670481 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138863928 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.139865933 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.140283662 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.13959023 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.139135423 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.139987111 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.140010741 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.14011235 seconds)
  done (took 1.459809407 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.14106869 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.141392797 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.13877906 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.1398159 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.140279723 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.13868624 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.140384366 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.139873993 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.140160804 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.137161891 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.140379039 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.137444554 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.139435039 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.137471002 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.139692255 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.137584883 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.137407016 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.138553679 seconds)
  done (took 2.56540272 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.140567378 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.142269406 seconds)
  done (took 0.341794071 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.137098711 seconds)
    (2/7) benchmarking "second"...
    done (took 0.138565024 seconds)
    (3/7) benchmarking "month"...
    done (took 0.137382891 seconds)
    (4/7) benchmarking "year"...
    done (took 0.137688877 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.137657897 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.136561847 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.137696732 seconds)
  done (took 1.021855174 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.141374907 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.300666289 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.372097443 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.775350921 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.140825722 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.142986762 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.067353949 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.143466828 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.145024906 seconds)
  done (took 3.288407857 seconds)
done (took 12.741905999 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 2.925347508 seconds)
  (2/8) benchmarking "printfd"...
  done (took 5.137056641 seconds)
  (3/8) benchmarking "parseint"...
  done (took 1.529898986 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 5.214616394 seconds)
  (5/8) benchmarking "pisum"...
  done (took 5.156217563 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.474344829 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 5.146161625 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.435789856 seconds)
done (took 28.08142316 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 5.187274536 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.698034172 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.761447896 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 4.503225573 seconds)
  done (took 6.020002844 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 5.12431846 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.658275907 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 5.197757695 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.708940303 seconds)
  done (took 11.865549804 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.505369126 seconds)
    (2/2) benchmarking "read"...
    done (took 0.486185594 seconds)
  done (took 1.060594769 seconds)
done (took 24.194661265 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.141617203 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.141772898 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.140768747 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.13803168 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.140033037 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.139278174 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.138532672 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.139688483 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.139524847 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.140035585 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.140205218 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.14108258 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.139980026 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.137526703 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.138134344 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.138830752 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.141436311 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.139462651 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.138724266 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.138562305 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.138234416 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.141298107 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.13829307 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.138526216 seconds)
  done (took 3.405572254 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.141724449 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.140472811 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.14073947 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.140303692 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.138128389 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.140834694 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.139967164 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.13829105 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.140608028 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.140085345 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.138357877 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.138862167 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.140150375 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.138765156 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.141708817 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.138224931 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.140427702 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.140324233 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.140702418 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.13881805 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.140667335 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.139224247 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.138369013 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.140820066 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.139535307 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.139448688 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.141655824 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.13915307 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.140095996 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.138298252 seconds)
  done (took 4.255062721 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.145133077 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.148725172 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.140151395 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.141906756 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.140736921 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.140671478 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.140325235 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.140334876 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.140373109 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.139938555 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.141441866 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.141025982 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.140316139 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.140621548 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.140447736 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.141292411 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.141145385 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.140241384 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.140555416 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.141269662 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.141294897 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.140721444 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.141533899 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.141322928 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.140373363 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.141296224 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.141217954 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.140374433 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.140617287 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.140709671 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.141878523 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.141111117 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.140592686 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.141233726 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.140998172 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.140982839 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.14585984 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.147575831 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.141013783 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.140928249 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.140288102 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.141921376 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.14183208 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.141403655 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.141848774 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.141243462 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.141914153 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.141471051 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.141125948 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.141300955 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.141424973 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.142343816 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.141887 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.142012708 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.141471991 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.141541882 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.140873883 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.141566505 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.141396784 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.141293767 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.140651862 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.141640978 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.141410457 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.141558708 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.142868889 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.142287513 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.140937315 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.140616117 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.141299075 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.141060776 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.140957406 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.141124394 seconds)
  done (took 10.247349509 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.141084407 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.140827357 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.137598758 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.138024867 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.137575822 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.140709001 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.13796527 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.140407007 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.138738388 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.141514375 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.141425578 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.138196608 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.139181962 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.141172327 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.140596108 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.138115875 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.14077893 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.138201456 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.140207991 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.141505314 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.142445259 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.139201037 seconds)
  done (took 3.136605935 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.140698224 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.142875272 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.138459813 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.140901446 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.139447737 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.14137837 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.140545594 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.141129061 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.141149143 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.138682914 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.139733184 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.142671106 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.13857063 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.138196738 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.138576574 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.138261025 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.14222658 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.138582438 seconds)
  done (took 2.582720076 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.138893003 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.140900267 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.141354174 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.139480419 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.139307081 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.14173401 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.138538281 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.140086937 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.142236847 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.139307819 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.142067912 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.14130672 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.141066352 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.139422429 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.140631227 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.138998669 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.141358523 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.138774321 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.140974122 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.138317635 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.139021327 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.141323368 seconds)
  done (took 3.146223815 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.141511996 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.141927481 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.1381224 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.138149957 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.138387237 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.141193488 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.140992934 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.138659953 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.140959283 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.140778178 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.139138465 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.141628352 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.138770212 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.138950535 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.140117186 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.138694418 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.141991061 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.139671196 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.140922477 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.138640274 seconds)
  done (took 2.859840963 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.144321309 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.144564957 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.142746214 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.142540868 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.142230862 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.14348019 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.14294778 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.142286643 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.1424494 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.14327104 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.141999347 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.143731313 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.142613888 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.14250535 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.14242562 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.142181924 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.142181613 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.142443901 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.142565789 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.142350507 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.142592009 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.142338241 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.142242583 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.142526733 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.142671162 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.143226998 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.142437549 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.142869629 seconds)
  done (took 4.057811384 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.143132662 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.143909693 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.139021745 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.139202898 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.13904886 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.139563361 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.140536404 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.140487262 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.141858811 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.138582139 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.142140218 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.141959094 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.141654242 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.141513364 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.141428975 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.141950018 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.142719307 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.138627091 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.139259178 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.138498373 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.141540037 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.141429102 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.142473939 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.1394046 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.138877733 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.141710663 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.139898751 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.140110523 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.141526513 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.138914087 seconds)
  done (took 4.28331737 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.16145397 seconds)
    (2/2) benchmarking "in"...
    done (took 0.160618449 seconds)
  done (took 0.382314142 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.139082068 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.143650052 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.140848478 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.13982473 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.139532026 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.142290655 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.143569292 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.139321973 seconds)
  done (took 1.188915755 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.140159368 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.145058592 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.14228364 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.141498292 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.142795514 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.141598491 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.149244867 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.14319819 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.142381812 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.142884464 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.147672687 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.148901548 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.144199253 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.142603643 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.141682468 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.14540687 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.142257506 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.142139639 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.142298718 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.14172756 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.142789803 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.143707933 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.145618908 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.139111125 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.142498829 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.151711171 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.147930038 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.142246702 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.14194308 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.146725084 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.142184924 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.139270431 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.144106868 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.14357915 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.141999618 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.143449014 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.151628059 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.144456406 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.149641417 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.146338199 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.1431183 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.140487407 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.144118964 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.14365807 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.143395201 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.143216652 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.143947187 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.139498365 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.143136481 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.146488368 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.14653434 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.141564078 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.141350436 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.145335244 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.143956579 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.148880085 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.144808619 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.144263086 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.149280756 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.151361478 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.156462224 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.149618877 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.14598376 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.142828114 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.151677802 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.163248787 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.148819221 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.142471366 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.138233233 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.143304496 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.150212869 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.156058506 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.151008109 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.142302515 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.142355158 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.143230167 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.141701392 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.142136529 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.149255069 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.146439779 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.143125248 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.144322672 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.150572889 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.160887659 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.141847131 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.142932618 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.144958443 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.141956537 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.142776874 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.15267345 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.145207113 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.141022353 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.142175324 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.142994056 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.145145655 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.143394218 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.142210235 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.144079782 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.138952307 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.141428832 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.143134024 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.14456088 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.14970888 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.142329099 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.142592183 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.14893854 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.143160293 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.141807395 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.149523584 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.142610328 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.143970589 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.142418492 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.148520269 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.139486811 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.144195427 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.151281734 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.142884926 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.144066544 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.1425422 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.142974914 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.151830298 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.165144434 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.142384474 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.142123114 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.147421729 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.153996632 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.142459289 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.146193569 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.142842983 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.140709186 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.138818879 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.145318278 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.142617595 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.143071838 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.142137238 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.144190718 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.140238416 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.142541359 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.144180146 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.143947464 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.144550191 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.14319816 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.143481776 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.144756478 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.142759244 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.144220853 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.150179286 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.144113896 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.145026642 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.144803482 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.140612404 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.142878129 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.144132909 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.144817636 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.14386308 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.143979602 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.143193555 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.143602626 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.142512533 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.143032706 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.143777623 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.142752879 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.145439413 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.144521138 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.14606835 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.142252717 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.139951392 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.142882205 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.142559381 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.142258688 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.144299615 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.142019902 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.145875278 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.148835685 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.142471448 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.142904289 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.146014947 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.143798126 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.14348422 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.143069122 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.145624535 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.149345806 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.143519037 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.149852261 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.145150015 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.14290432 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.144531686 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.144446818 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.142875653 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.145535886 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.145441865 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.150471181 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.154975622 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.152960184 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.144107565 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.14559975 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.143618455 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.147144358 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.14871774 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.143603251 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.14234404 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.144314645 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.143956563 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.143969986 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.145397672 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.144668042 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.141725622 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.144012752 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.142838851 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.143864658 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.144789532 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.14311047 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.144845187 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.140539917 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.142979839 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.144367918 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.144443062 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.142165827 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.143616519 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.145170791 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.144613364 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.144169846 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.151872267 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.140868833 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.144072562 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.145583113 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.143563297 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.142927238 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.144368958 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.146891888 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.143358606 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.150942315 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.147058452 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.143462407 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.1521783 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.144497332 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.144949335 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.148458448 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.144165234 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.141031073 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.146830822 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.150969584 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.142735122 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.144973256 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.144980527 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.145331931 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.14504986 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.150290971 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.140957067 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.143748618 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.145134166 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.145790743 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.142554023 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.145700624 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.143487506 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.14563115 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.145928784 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.144218984 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.1446757 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.145107859 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.145353362 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.143776695 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.144706349 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.145659423 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.150301432 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.148591054 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.143586888 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.14567371 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.143828463 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.146725747 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.143125123 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.144943435 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.14342955 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.156008854 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.152213089 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.149365259 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.146685209 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.143049873 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.148764278 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.145644386 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.146710212 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.142817188 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.144099173 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.142990351 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.142774528 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.141585936 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.14430699 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.143670773 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.14452456 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.144827238 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.14705199 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.142619395 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.143567617 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.144049633 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.143991186 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.143586485 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.143314189 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.143356051 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.145256693 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.147022286 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.143018776 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.144215853 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.150520404 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.145112701 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.143990838 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.143681216 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.143471275 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.143988056 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.146370019 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.144073956 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.146034014 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.151022599 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.146242239 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.152550663 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.14476161 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.153358914 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.144554438 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.146198288 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.151258035 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.140954911 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.142812501 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.145448069 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.145563357 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.152096634 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.145347243 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.144132803 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.147356002 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.145062874 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.144560856 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.143997774 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.143647735 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.143940604 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.144302259 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.152433607 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.147047025 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.1477087 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.146393363 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.141246283 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.144228241 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.144399053 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.143688564 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.14869019 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.145142627 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.145644918 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.143703896 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.144343203 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.144933329 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.144611773 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.144052211 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.141700766 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.144015601 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.15157848 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.147498248 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.149352279 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.145112649 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.152834309 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.146450805 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.15205394 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.146953084 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.145545563 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.145970232 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.145367634 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.146795587 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.145258306 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.147376811 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.145408671 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.14635068 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.147319025 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.144616289 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.147036197 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.144767304 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.144988036 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.143808306 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.152205791 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.165414735 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.144283942 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.148801823 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.140952794 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.144960644 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.149209381 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.144207683 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.143517839 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.147243165 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.154448482 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.150952942 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.14462896 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.14574273 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.146455672 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.146557731 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.145121986 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.143641968 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.144935897 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.144260674 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.146058693 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.145405599 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.149041176 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.144328596 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.145926725 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.145708927 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.145768411 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.154737865 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.146406976 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.146532241 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.145084885 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.14457036 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.144002957 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.144070752 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.144415044 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.14423624 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.145693433 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.145490908 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.150741279 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.14992414 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.148155645 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.14456342 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.146397718 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.145006577 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.145107789 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.146299273 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.145105384 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.14557552 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.146037933 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.144808769 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.145696835 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.14419966 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.145023548 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.146627857 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.145732749 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.147028449 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.15002666 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.143557037 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.142778534 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.143644216 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.144559202 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.14373775 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.145723141 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.152502118 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.148481593 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.152983516 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.151084423 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.149683846 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.145739329 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.147782022 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.15145213 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.143519235 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.146719167 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.145983541 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.146099121 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.144301491 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.147276458 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.146850728 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.151946149 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.145264328 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.144491038 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.153181221 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.148042847 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.144969001 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.146198797 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.148027206 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.145018 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.142692382 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.145084013 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.144124036 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.152160337 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.148255173 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.144919856 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.14781767 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.143110576 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.145394815 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.149398413 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.145197955 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.146015844 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.141147068 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.145352523 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.145041898 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.144712857 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.141187446 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.145641328 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.14404532 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.147440572 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.151831829 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.141840279 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.147163206 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.145121427 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.146122881 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.146172032 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.145182105 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.143064152 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.141699366 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.146431171 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.147081915 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.145963207 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.147792479 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.145622652 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.146260263 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.145512662 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.145662367 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.147618388 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.153784565 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.151526147 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.142488203 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.144535777 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.14529699 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.149063441 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.145669971 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.145373091 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.145414064 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.146482746 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.14538758 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.145729768 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.145016331 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.147737384 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.160125822 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.146424572 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.14487101 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.145304753 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.148886937 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.145076061 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.141520802 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.145073341 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.147710178 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.147156881 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.151728144 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.146244416 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.152025856 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.147771891 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.145442417 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.14691379 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.14887908 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.1516054 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.14826692 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.147009753 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.145409321 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.149795765 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.1600609 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.145219601 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.154231843 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.17143609 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.147326369 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.146075543 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.146362676 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.144496816 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.146327864 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.14572137 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.145798893 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.14555523 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.144779429 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.145385069 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.146250248 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.150426081 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.14646585 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.144879315 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.144080081 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.144107319 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.147036299 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.142049942 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.144809538 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.144576085 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.145018064 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.145875887 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.145827085 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.145918721 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.157382105 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.15514908 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.144224341 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.144887819 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.14193193 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.148810663 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.146884906 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.153061828 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.15067341 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.145087241 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.144883617 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.146956962 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.145441883 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.142397573 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.14447036 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.14436961 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.143928989 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.141519776 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.158590927 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.153174317 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.149362157 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.145176837 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.146258106 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.145432469 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.146788244 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.144752475 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.14559099 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.145900887 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.144603278 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.148577597 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.144732243 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.144193911 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.14799479 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.151477842 seconds)
  done (took 86.953131941 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.142663805 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.142836923 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.141767596 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.142621921 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.142420168 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.142755385 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.141799188 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.142958905 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.14246111 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.142288554 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.142610149 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.142492289 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.142141088 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142336006 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.142704039 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.141968341 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.142291048 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.142048596 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.14202513 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.142048424 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.142090011 seconds)
  done (took 3.052750508 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.144522555 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.142415158 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.14253766 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.144857182 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.141983806 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.145815032 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.142625285 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.144040038 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.144443179 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.141481593 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.144807804 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.143874524 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.141302151 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.141478889 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.141455345 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.144060304 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.144293407 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.14165924 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.144548263 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.141824397 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.14384079 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.142776036 seconds)
  done (took 3.21347565 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.146905484 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.146811156 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.144828726 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.142474857 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.145076284 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.142499872 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.146032659 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.145651933 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.145056219 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.145310093 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.144108978 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.146407378 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.150660298 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.148912956 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.147363701 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.144424351 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.290337519 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.1459708 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.146033504 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.146180115 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.142357919 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.151556073 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.143763209 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.141800933 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.144458629 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.14603819 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.145712807 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.144946831 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.145479501 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.146716032 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.149051558 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.144157305 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.145466599 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.146966876 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.145247532 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.144671078 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.148437201 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.146496626 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.142322831 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.14434888 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.1536922 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.161397475 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.145603656 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.151086363 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.145760733 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.143665189 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.147142087 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.150914499 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.141727432 seconds)
  done (took 7.375433007 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.145664412 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.144442534 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.141370219 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.14457081 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.14511556 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.144790234 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.144439719 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.144228268 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.1415057 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.141956873 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.14511323 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.142375549 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.141362875 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.144691475 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.145327029 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.142955557 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.142468688 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.142021741 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.142351124 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.14223022 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.142511288 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.145353232 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.144722625 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.142445683 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.144089768 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.141274094 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.142251354 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.143978967 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.142476818 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.142048403 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.145301505 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.144752193 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.14579146 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.142707525 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.142610515 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.145101522 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.144865511 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.142485012 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.145372064 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.142209794 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.144636929 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.144596419 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.145948621 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.145369286 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.14245975 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.142667639 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.142883835 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.142464202 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.14246281 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.144348778 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.144509931 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.142713038 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.145624331 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.142490258 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.145249612 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.145645185 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.142586369 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.141675857 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.144369474 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.144187603 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.141330416 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.143919761 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.142439577 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.14505584 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.144347545 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.142280301 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.14242286 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.144136239 seconds)
  done (took 9.828608298 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.14620274 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.145119041 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.145425631 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.145529156 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.145218593 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.146337424 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.145712792 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.146646743 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.145517311 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.145894309 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.145852021 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.145532818 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.14580058 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.144926748 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.145318252 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.146400688 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.145584102 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.145964896 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.146706574 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.146040047 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.145389323 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.146298425 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.146246814 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.145457082 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.145483746 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.145655138 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.146585029 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.146082623 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.146453313 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.146925962 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146275382 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.146805922 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.146004624 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.14631413 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.14654684 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.147006961 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.146020957 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.146895338 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.146500554 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.145943774 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.14607004 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.145747063 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.146513611 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.145892327 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.145939811 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.146276589 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.145655716 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.145744291 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.144712658 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.14556749 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.146137624 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.145964868 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.145994191 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.145734677 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.145936164 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.144941552 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.145489619 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.145587252 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.14551239 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.146537655 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.145062384 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.144782496 seconds)
  done (took 9.111104995 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.145668973 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.144028157 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.141225184 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.141202619 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.143516844 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.14130133 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.144142067 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.144183739 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.14362719 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.144599659 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.14381285 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.141646058 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.142482029 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.143830728 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.141894392 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.142503304 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.141518753 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.141628135 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.14401626 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.1414495 seconds)
  done (took 2.921721016 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.142992589 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.144182938 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.140953131 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.14166433 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.144049694 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.141653792 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.144431593 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.144313723 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.141754828 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.144322043 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.144020521 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.144138649 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.141079945 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.141399164 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.144128008 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.141706902 seconds)
  done (took 2.350387895 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.143265063 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.143920134 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.14509803 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.145147323 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.142547536 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.141261959 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.144719262 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.141481192 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.141586134 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.144967337 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.144355889 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.144231532 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.144166043 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.144946844 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.141753462 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.144247699 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.142224098 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.140967801 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.143865439 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.144829767 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.142597054 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.141481486 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.1441619 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.144558182 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.141919999 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.142627177 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.141399917 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.141964986 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.142072878 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.146008226 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.141844473 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.141854842 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.14189617 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.141932917 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.145797971 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.14290891 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.144773162 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.144485585 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.144172654 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.144268388 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.143934583 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.142371384 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.144024156 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.144055115 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.141973655 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.144121961 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.141659268 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.142278757 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.142292188 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.142112073 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.144744424 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.14498697 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.145305432 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.144439374 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.144131968 seconds)
  done (took 7.949546662 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.146186796 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.144883973 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.142039518 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.144385804 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.144004802 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.141900344 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.144347759 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.142148065 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.141474302 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.144363114 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.14272004 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.144706198 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.142261984 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.144600939 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.143867847 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.145528902 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.142151957 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.141726278 seconds)
  done (took 2.646814638 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.144065516 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.142227909 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.145076938 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.141335417 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.141795006 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.14488045 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.141600979 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.144651124 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.145068963 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.142227622 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.141982173 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.144798075 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.144630384 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.144749218 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.141932062 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.141911788 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.144473029 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.144643263 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.141471987 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.142017755 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.145199536 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.144455241 seconds)
  done (took 3.219200822 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.145412222 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.14379301 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.159304288 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.161362764 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.164785679 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.172027899 seconds)
  done (took 1.009997168 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.144306191 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144966687 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.142236926 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144947107 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144648094 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142460995 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.143509056 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142211716 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144917656 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142788181 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142095031 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145488812 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144285565 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.142567245 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144633585 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144716101 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14213575 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.141794635 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141926036 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144745865 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.142313561 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144702136 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141957469 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.141979613 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142170773 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142396728 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145340164 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142968524 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14201429 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1449364 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145945396 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.142403991 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144864059 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.142281479 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145328561 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145341817 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142113238 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144802423 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14512386 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142529213 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.145272169 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144673382 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14520549 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142782397 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145005341 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14235775 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142470845 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.142551204 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142087796 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1457055 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145015139 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142032172 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145132821 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145133855 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144643713 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145201589 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142762832 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.143170294 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14491038 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144018847 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142240201 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14511035 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142060678 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142520649 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145224844 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142801301 seconds)
  done (took 9.546063553 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144986997 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.143005844 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142624834 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142772989 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142446072 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.142365258 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.142441595 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142291453 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142759544 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142174753 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144788454 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.143461849 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142264544 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.144157038 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142252874 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141958094 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142344404 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142467685 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.142157838 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145164217 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142797591 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142155622 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142309477 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.143080711 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.142787989 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145681908 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142861129 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142319586 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142755236 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142380193 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.143350334 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1426546 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142600409 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.142392113 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142357692 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142196908 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.143075836 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.142952794 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.143028515 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145202808 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142737964 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144854771 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142769156 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142698586 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143409806 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142615328 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142446605 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142602166 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142725993 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142823989 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143215997 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.143104231 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143628643 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.143031241 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142647581 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.142412165 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142507368 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142575113 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14317793 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145100171 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142499968 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143151605 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145819954 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142526332 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142912715 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142992924 seconds)
  done (took 9.504076224 seconds)
done (took 198.28893694 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 5.176570051 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 5.216251717 seconds)
  done (took 10.450746987 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.308720558 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.259067948 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.143544999 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 5.176559541 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.142791354 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 5.166583905 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 5.156538847 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.142607109 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.143554593 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.143585733 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.144865037 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.33155343 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 5.158578623 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.143375788 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.144059728 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.235677085 seconds)
  done (took 23.012421386 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.149744797 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.149343881 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.159363969 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.149089657 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.146754128 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.158579292 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.180855067 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.15035553 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.18096902 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.159301908 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.215636024 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.156969985 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.146351884 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.195387041 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.159869771 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.161078531 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.240129296 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.220915911 seconds)
  done (took 3.144842968 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.224494356 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 5.14935247 seconds)
  done (took 5.447490204 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 5.174917929 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 5.19998141 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 5.19369604 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 5.171784527 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 5.461664051 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 5.445466385 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 5.149183097 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 5.183704807 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 5.16440133 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 5.174860063 seconds)
  done (took 52.392990148 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.156320296 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.150579976 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.150799382 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.149046075 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 5.142427559 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 5.142944077 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.149045099 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 5.143658361 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.830589307 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.198561727 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.157624221 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.15526609 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.150311294 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.151141705 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.148301937 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.172848201 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.286591684 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.147772443 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.146406622 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.155048682 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.151268495 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.205618552 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.165732741 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.151283626 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180217748 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.82545823 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.15603768 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.156295733 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.278100771 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.147987548 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.148560099 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.149742153 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.152464249 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.527081672 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.443933212 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 5.150588808 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.161763307 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.158849849 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.148120052 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.290268219 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.151024564 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.154917897 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 5.022975826 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.415827037 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.264323554 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.195552482 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 1.521036171 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.16731101 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.151532656 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.179744693 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.153259699 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.150513967 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.162224161 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.653225346 seconds)
  done (took 38.054423748 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 5.145948777 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 1.406287296 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.300617252 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 5.14580945 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.433552592 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.352362827 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 5.146279724 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.194192425 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 5.145875883 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.375612686 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.308835245 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.255488503 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 5.144772471 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 5.143873012 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 5.144345817 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 5.140504263 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.304553583 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.218902529 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 5.144286813 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 5.140303624 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.174338909 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.390283273 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.273096681 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 5.144317346 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.164617893 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.357940453 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.271117168 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.25309076 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.439539847 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 5.1417315 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.208171596 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 5.144138273 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 5.140479708 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 5.140458742 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.300742686 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.241465216 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.233338566 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 5.144541958 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.140667279 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 5.140753901 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.818082972 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.342273117 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.242398047 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.287783549 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.391632832 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.349299518 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.933027588 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 5.140918907 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.877796461 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.304532224 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.377906702 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.376994719 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.269496926 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.14438381 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 4.648516438 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 5.141211749 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.140557743 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.378655709 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.373741296 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.246888231 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.145631766 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 5.139576986 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 5.140167473 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.388141132 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 5.144000788 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.237228238 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.144601643 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 5.138895636 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.237292084 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.246550808 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.374277579 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.357089873 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.174753431 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.472172341 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.616948415 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.39040832 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.211088209 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.375460985 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 5.143400877 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 5.138796181 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.22752141 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 1.989002691 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.300384496 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.393326501 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.397210225 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.179704701 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.861843437 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 5.139100702 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.370313765 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.366449442 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.445802416 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.384377176 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.294918627 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 3.266052772 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 5.138396602 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 5.138380844 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.373551576 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.279345738 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 5.141775368 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 1.501049342 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.376282066 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 1.713946846 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.170302108 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.487635707 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.275263868 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 5.141917945 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.781770992 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 5.139875757 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.366168044 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.183101098 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 5.140257919 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.139737263 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.360856551 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 1.213546837 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.137798465 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 3.765472715 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.204127636 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 5.140543233 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.373540095 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 5.142320993 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.404716625 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.142077882 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.378373027 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 4.533618273 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.173480347 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.362947965 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.379713373 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 5.140537498 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.402691739 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.385953983 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.257732845 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.363803311 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 4.759733498 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 5.140125069 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.430393665 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 5.139884143 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 5.137235834 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.311230248 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 5.139167167 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.310016276 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 5.141655154 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.47899767 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.163390816 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.297048456 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.140790038 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.396833001 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.174643149 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.192759611 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 5.1405712 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.271428993 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.140040646 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 1.176168516 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.293698681 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.139205834 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 5.13625382 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 3.809552905 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 5.135853309 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.296828958 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.37256622 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.161841195 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.213159535 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.810199599 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 5.135693045 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.225591372 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.164032056 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 1.47744027 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 5.136663355 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.292487456 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 5.139285159 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 4.678833345 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 5.135150992 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.380448961 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.320934228 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 5.137346913 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 5.134954844 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 1.041553064 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 5.135253978 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.13571287 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.298939727 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 3.969610525 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 5.136040926 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.341980603 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.138292977 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.268786345 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 5.138335922 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.210877686 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 1.491988773 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.135172893 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 5.135443702 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 5.13553182 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 5.134785853 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 5.13434733 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.398966566 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.167455495 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 1.658792642 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.275962579 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.408747988 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.456476201 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.387686495 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.183692798 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 5.137933792 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.384608507 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 5.137819899 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.200786144 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 5.137688748 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.159491161 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.371996574 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.137500702 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.350986568 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.419447831 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 1.079423802 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.186527741 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 5.138290815 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.13566557 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 5.011820992 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.28825858 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.229371425 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 5.137541706 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 5.134203872 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.254152691 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.263541488 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.350735396 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 5.136688755 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.36643988 seconds)
  done (took 514.37421112 seconds)
done (took 646.94033846 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.137586956 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 5.134805574 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 5.122928671 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 5.138233638 seconds)
  done (took 20.589215496 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.145984148 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.14135097 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.143180796 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.141453291 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.142836036 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.140620085 seconds)
  done (took 0.914745873 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 4.179530678 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 5.135598232 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 5.136060841 seconds)
  done (took 14.509558099 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.211492106 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.527057815 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.256402588 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.578662241 seconds)
  done (took 1.63304508 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145700005 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.143558848 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.142969986 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.144963995 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.144931898 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.145687932 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142969794 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.143575408 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.145720422 seconds)
  done (took 1.362081884 seconds)
  (6/6) benchmarking "26942"...
  done (took 2.436068386 seconds)
done (took 41.506166769 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.356782519 seconds)
    (2/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.234813321 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.46211133 seconds)
    (4/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.425110906 seconds)
    (5/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.565202007 seconds)
    (6/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.6855664 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.275753888 seconds)
    (8/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.304446616 seconds)
    (9/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.67262555 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.181918096 seconds)
    (11/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 5.136260565 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.306945058 seconds)
    (13/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.198046063 seconds)
    (14/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.160476454 seconds)
    (15/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 5.333475038 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.258975783 seconds)
    (17/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.488920322 seconds)
    (18/309) benchmarking ("map", abs, BigInt, false)...
    done (took 5.299354617 seconds)
    (19/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.393577203 seconds)
    (20/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.526936217 seconds)
    (21/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.446429521 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 1.038662526 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 1.118642233 seconds)
    (24/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.271950038 seconds)
    (25/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.327291202 seconds)
    (26/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.263729849 seconds)
    (27/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.383253417 seconds)
    (28/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.475835514 seconds)
    (29/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.472551992 seconds)
    (30/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.316216237 seconds)
    (31/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.613087243 seconds)
    (32/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.368218631 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.523485069 seconds)
    (34/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 5.137335656 seconds)
    (35/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.855495766 seconds)
    (36/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 5.140732492 seconds)
    (37/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 5.119935885 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.361093841 seconds)
    (39/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.32709687 seconds)
    (40/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.158184338 seconds)
    (41/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.156877894 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.184479061 seconds)
    (43/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.64533217 seconds)
    (44/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.363907155 seconds)
    (45/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 5.153195221 seconds)
    (46/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.852992274 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.253616952 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.397761461 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 1.314839924 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.828176621 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.42408158 seconds)
    (52/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.112086423 seconds)
    (53/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.332094317 seconds)
    (54/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.647790544 seconds)
    (55/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.221592168 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.196248653 seconds)
    (57/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.282038094 seconds)
    (58/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.047194589 seconds)
    (59/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.243056822 seconds)
    (60/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.631619227 seconds)
    (61/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.205366939 seconds)
    (62/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.301225332 seconds)
    (63/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.706470248 seconds)
    (64/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.234398686 seconds)
    (65/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.216694278 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.775437161 seconds)
    (67/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 5.236317402 seconds)
    (68/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.283058741 seconds)
    (69/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.412889866 seconds)
    (70/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.27959776 seconds)
    (71/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.225970362 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.210391752 seconds)
    (73/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 5.136479938 seconds)
    (74/309) benchmarking ("sort", Int64, false)...
    done (took 3.826611036 seconds)
    (75/309) benchmarking ("map", abs, BigInt, true)...
    done (took 5.122340793 seconds)
    (76/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.424522453 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.427615376 seconds)
    (78/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.155165948 seconds)
    (79/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.035797898 seconds)
    (80/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.30844532 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.236972543 seconds)
    (82/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.220117722 seconds)
    (83/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 5.373489619 seconds)
    (84/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 5.275037984 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.024828072 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.358140483 seconds)
    (87/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.147503747 seconds)
    (88/309) benchmarking ("sort", BigInt, false)...
    done (took 5.135061892 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.17292935 seconds)
    (90/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 5.136181413 seconds)
    (91/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.154968096 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 1.053731068 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 5.138657687 seconds)
    (94/309) benchmarking ("sort", Float32, false)...
    done (took 3.943660561 seconds)
    (95/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 5.138292053 seconds)
    (96/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.225674541 seconds)
    (97/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.660954757 seconds)
    (98/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.203546426 seconds)
    (99/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.160672354 seconds)
    (100/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.144203503 seconds)
    (101/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.819318949 seconds)
    (102/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 5.141575133 seconds)
    (103/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.292260897 seconds)
    (104/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.190210265 seconds)
    (105/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.327859828 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.365835457 seconds)
    (107/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.243571949 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 5.135691535 seconds)
    (109/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.440115996 seconds)
    (110/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.2810279 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 5.13501004 seconds)
    (112/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.225930775 seconds)
    (113/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 5.134861607 seconds)
    (114/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.094063541 seconds)
    (115/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.46331436 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 5.127591495 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 1.173185145 seconds)
    (118/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.283998389 seconds)
    (119/309) benchmarking ("sort", Bool, false)...
    done (took 0.58419727 seconds)
    (120/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.157750032 seconds)
    (121/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.473848312 seconds)
    (122/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 5.139999061 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.541072934 seconds)
    (124/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.393232974 seconds)
    (125/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 5.119910813 seconds)
    (126/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.751085037 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.76235083 seconds)
    (128/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 5.140206128 seconds)
    (129/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.314375067 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.351640044 seconds)
    (131/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.964219606 seconds)
    (132/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.411728274 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.404494767 seconds)
    (134/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 5.136661025 seconds)
    (135/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.499281216 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 5.126252034 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.605907401 seconds)
    (138/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.23403425 seconds)
    (139/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.486526977 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.248377903 seconds)
    (141/309) benchmarking ("sort", BigFloat, false)...
    done (took 5.135309867 seconds)
    (142/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.295844424 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 1.326176963 seconds)
    (144/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 5.401039794 seconds)
    (145/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.27143809 seconds)
    (146/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.47593611 seconds)
    (147/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 5.124175835 seconds)
    (148/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 5.601816355 seconds)
    (149/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.164406426 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.379686395 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.164378512 seconds)
    (152/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.416782701 seconds)
    (153/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 5.124936109 seconds)
    (154/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.42871384 seconds)
    (155/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.17340419 seconds)
    (156/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.274312121 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.155132903 seconds)
    (158/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.26257303 seconds)
    (159/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.046660815 seconds)
    (160/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.152509385 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.234713198 seconds)
    (162/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 5.135659483 seconds)
    (163/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.369720833 seconds)
    (164/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.313120129 seconds)
    (165/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.253004777 seconds)
    (166/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.424853397 seconds)
    (167/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.686195368 seconds)
    (168/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 5.1403273 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.342897084 seconds)
    (170/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.527232854 seconds)
    (171/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.247178242 seconds)
    (172/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.161125719 seconds)
    (173/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.253858451 seconds)
    (174/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 5.135343391 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 1.588685444 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.247424223 seconds)
    (177/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.353701876 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 5.138819477 seconds)
    (179/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.156375766 seconds)
    (180/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.601859018 seconds)
    (181/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.63420065 seconds)
    (182/309) benchmarking ("sort", Float64, false)...
    done (took 3.920440853 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 5.122934566 seconds)
    (184/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.224192061 seconds)
    (185/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.057248059 seconds)
    (186/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.15092423 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.161185541 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.938168541 seconds)
    (189/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.275178273 seconds)
    (190/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 5.139221533 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 1.042934074 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.173095085 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 1.069326347 seconds)
    (194/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 5.13837809 seconds)
    (195/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.480579883 seconds)
    (196/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.267528877 seconds)
    (197/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.165696295 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 1.132894303 seconds)
    (199/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.310966879 seconds)
    (200/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.386672872 seconds)
    (201/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 5.121503572 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.524755865 seconds)
    (203/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.323788237 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.200945105 seconds)
    (205/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.715972671 seconds)
    (206/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.352998981 seconds)
    (207/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 5.145939163 seconds)
    (208/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.451197224 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.936404934 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.349245503 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.435038552 seconds)
    (212/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.157661591 seconds)
    (213/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.320673255 seconds)
    (214/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.164447328 seconds)
    (215/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.754823469 seconds)
    (216/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 4.374300789 seconds)
    (217/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.218852159 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.24556611 seconds)
    (219/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.289244788 seconds)
    (220/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.226748304 seconds)
    (221/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 5.141616083 seconds)
    (222/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 5.194157494 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.233614665 seconds)
    (224/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.485573569 seconds)
    (225/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.205361576 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.514885012 seconds)
    (227/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 5.138171162 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.179322436 seconds)
    (229/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 5.136249971 seconds)
    (230/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 5.122066691 seconds)
    (231/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.537899592 seconds)
    (232/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.557548419 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 5.138702793 seconds)
    (234/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.16838909 seconds)
    (235/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.23819936 seconds)
    (236/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.471749022 seconds)
    (237/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.466101708 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.473654396 seconds)
    (239/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 5.139171945 seconds)
    (240/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.238299853 seconds)
    (241/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.226521503 seconds)
    (242/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.218448175 seconds)
    (243/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.204149886 seconds)
    (244/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 5.23540446 seconds)
    (245/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.278337939 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.820525112 seconds)
    (247/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.238676714 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.379395486 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.233570561 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.223663695 seconds)
    (251/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.282081009 seconds)
    (252/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.30322882 seconds)
    (253/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.285322104 seconds)
    (254/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.245897906 seconds)
    (255/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.58946929 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.375785588 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.165615133 seconds)
    (258/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 5.156680494 seconds)
    (259/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 5.839239505 seconds)
    (260/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.325426984 seconds)
    (261/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.119050508 seconds)
    (262/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.440701332 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.242535135 seconds)
    (264/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.605117157 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.50429576 seconds)
    (266/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 5.120899963 seconds)
    (267/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.243615821 seconds)
    (268/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.718449657 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 1.219092004 seconds)
    (270/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.287471585 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.162127512 seconds)
    (272/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 5.437196207 seconds)
    (273/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.58872981 seconds)
    (274/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 5.138646571 seconds)
    (275/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 5.769165731 seconds)
    (276/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.145816114 seconds)
    (277/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.152531952 seconds)
    (278/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.461386345 seconds)
    (279/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.225368886 seconds)
    (280/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.16223058 seconds)
    (281/309) benchmarking ("sort", Int8, false)...
    done (took 3.143593784 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 5.184817036 seconds)
    (283/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 5.819991949 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.34855251 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.218276432 seconds)
    (286/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.617390345 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.29043532 seconds)
    (288/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 5.136386034 seconds)
    (289/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.415226785 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.430671556 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.869274581 seconds)
    (292/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.163359427 seconds)
    (293/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.494329431 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.470881199 seconds)
    (295/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 5.123389042 seconds)
    (296/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.818480625 seconds)
    (297/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 5.367576749 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.271635817 seconds)
    (299/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.45098354 seconds)
    (300/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 5.144875152 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.280942441 seconds)
    (302/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.518179153 seconds)
    (303/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.319535104 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 1.068415793 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.161056096 seconds)
    (306/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.967245629 seconds)
    (307/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 5.123921939 seconds)
    (308/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.560324081 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.502259245 seconds)
  done (took 468.736389089 seconds)
done (took 468.849685713 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.172210647 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.163481323 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.146319992 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.169070192 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.259429869 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.179629547 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.156973925 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.148918793 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.19416539 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.195819247 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.145331523 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.172882167 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.148087881 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.146799318 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.14587057 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.16048967 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.458597187 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.172867089 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.163233848 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.155418099 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.164037566 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.145783752 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.196039985 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.172648533 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.150467319 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.1489209 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.150507667 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.165898103 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.258494473 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.150102817 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.148727821 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.15841079 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.455230564 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.170104719 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.141359396 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.166219199 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.157554714 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.155615191 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.150546588 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.178559915 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.54754764 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.180692161 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.147920249 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.147429882 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.14686366 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.151087936 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.148297501 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.152941043 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.159651819 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.160695753 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.546227468 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.196412068 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.150150218 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.14731022 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.157322431 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.146957569 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.15071592 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.162844129 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.166805107 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.162932407 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.447466331 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.175506909 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.149002077 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.164073634 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.154380836 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.581337887 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.176660302 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.15134727 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.54869176 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.187014401 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.582826013 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.189854364 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.148425087 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.16171593 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.179202385 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.455768391 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.166954436 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.146580005 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.154985207 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.145750495 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.156974796 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.159830668 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.151999598 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.147631148 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.161413116 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.174640852 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.157607112 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.14849112 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.155976676 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.166833294 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.154341192 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.157768045 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.149909671 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.142760182 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.156635588 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.151101505 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.150279972 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.151107247 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.151810738 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.157934703 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.544782395 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.199786205 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.143502237 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.144016533 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.146545409 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.161427719 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.545629916 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.182542841 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.169401092 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.19484929 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.149194651 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.447004264 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.176383132 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.163731752 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.156788121 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.150673821 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.143380615 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.446808044 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.570367922 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.197246252 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.149312827 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.145883253 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.163820883 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.149294334 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.144027241 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.457644877 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.174040619 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.161374799 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.268953945 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.157612951 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.179440065 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.14592249 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.150785084 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.176045501 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.164121099 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.179231306 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.150074316 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.163342202 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.164108703 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.144536835 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.159182872 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.157934131 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.149155121 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.152474781 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.142449376 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.176244113 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.160571057 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.160371747 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.16856783 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.268472151 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.145444195 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.447378417 seconds)
done (took 30.327868005 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.216181559 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 5.137142196 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.245022337 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.144018337 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.225851535 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.229732502 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.141541212 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.14207955 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.141714746 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.574788351 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.141914307 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.143228135 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 5.137070637 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.141500338 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.226658224 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.144173767 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.141783555 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.483458679 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.14580426 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.21767181 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 5.136608799 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.142230844 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.145125939 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.517634251 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 5.142328236 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 5.14440016 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.216928551 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.143986546 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.483835078 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 5.137238818 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 5.145686367 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.482850757 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.236164203 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.1636254 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.155066338 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.152191646 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.226588336 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.148588842 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.224975641 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.224665677 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.246160231 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.186313358 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 5.144905094 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 5.139137058 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.146669741 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.146820423 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.142422549 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.173025012 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 5.137915191 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.142871674 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.483951583 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155218937 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.143232372 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.141890586 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.142120972 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.177717441 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.142659392 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.146277306 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.236525012 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.146193911 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.208121427 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.518714447 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.51971968 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.144778555 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 5.137005245 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.142244495 seconds)
  done (took 68.741187265 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.213797711 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.217380734 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.210615029 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.146789817 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.193011514 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.211395242 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.147219458 seconds)
  done (took 1.3999792 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.15305091 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.144957042 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.195053556 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.194161043 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.145058074 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.294582211 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.14615058 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.156098774 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.143213335 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.196964201 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.145478568 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.145310082 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.152001687 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 5.146344132 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.193744126 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.155739539 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.260087379 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.145751352 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.145544445 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.296121678 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.143101558 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.152725655 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.19859144 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.155669622 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.14568065 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.15148167 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.732796093 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.145905852 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.142666931 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.145445001 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.142314599 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.187033148 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.145770883 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 5.143909193 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.142772763 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.259820284 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.14551319 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.142525028 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.145300369 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 5.137327894 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.144929526 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.144855439 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.145714663 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.142215446 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.144687289 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.168310681 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.144665196 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.144913501 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.144996234 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.145917623 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.195504913 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.145077683 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.142709306 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.143316984 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.199997059 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.153542425 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.146277369 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.142733474 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.145799041 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.141986456 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.296516363 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.192915534 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.145927549 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.192629725 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.145837848 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.145721166 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.145216615 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.144849823 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.239629769 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.144789062 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.192981152 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.142168303 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.30351315 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.168305726 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.14553872 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.147730176 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.147945485 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.146118388 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 5.140146937 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.151372251 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.141945257 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.145852776 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.150656459 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.143227461 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.142345077 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.256896818 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.253006118 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.142262596 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.157887369 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.151843523 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.142036916 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.197619194 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.145141868 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.143079474 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.199192034 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.260205375 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.199948259 seconds)
  done (took 36.807377314 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.151583711 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.153087775 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.146048659 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.161693802 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.145668741 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.144910597 seconds)
  done (took 0.962701467 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.149146406 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.144963742 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.1457227 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.145172183 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.145643925 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.146784031 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.146469522 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.146715428 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.148342072 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.145535726 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.146077902 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.146972841 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.14634096 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.146037872 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.147160414 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.145945486 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.146810963 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.143291588 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.145836889 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.146668775 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.294728722 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.145784871 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.146331853 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.146682379 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.149239933 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.145312357 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.152878783 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.144995332 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.145305908 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.153370792 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.148835144 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.146643466 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.145704239 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.150089654 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.14911871 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.14616887 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.147982638 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.146688231 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.142765813 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.146526819 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.147036688 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.145733578 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.14568988 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.14696787 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.147241847 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.149057345 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.149816966 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.153083105 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.146356061 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.147419542 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.146578734 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.146178279 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.146771907 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.14676845 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.147506383 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.150203528 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.149577368 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.146620732 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.146535391 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.146680865 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.145508675 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.146676882 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.147582788 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.149477157 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.153515092 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.146837769 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.147340134 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.149338447 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.146587787 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.146462334 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.14770087 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.14356536 seconds)
  done (took 11.806405637 seconds)
done (took 119.798708453 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 5.317774758 seconds)
  done (took 5.373613607 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 5.314800185 seconds)
  done (took 5.428453551 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.588998035 seconds)
  done (took 6.653739213 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 5.151597529 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 5.15828865 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 5.148260133 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 5.138137041 seconds)
  done (took 20.677336145 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 5.239713131 seconds)
  done (took 5.30149003 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 5.158492686 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 5.138527932 seconds)
  done (took 10.405651142 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 5.269190966 seconds)
  done (took 5.332150276 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 5.250694297 seconds)
  done (took 5.335236126 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 5.153394767 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 5.175524176 seconds)
  done (took 10.445461 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 5.12476733 seconds)
  done (took 5.185491896 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.711973498 seconds)
  done (took 7.92127143 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 5.152738794 seconds)
  done (took 5.344114472 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 5.143113627 seconds)
  done (took 5.205819392 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.26300013 seconds)
  done (took 6.325308311 seconds)
done (took 104.995433603 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 5.152149089 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 5.140155745 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 5.139072821 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 5.137093694 seconds)
  done (took 20.623788758 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.18035228 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.179897105 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.180249299 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.189668586 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.18230499 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.179349576 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.171570136 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.171725342 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.190100927 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.182086263 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.181180567 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.181703372 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.179238758 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.171537701 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.181623331 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.181151284 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.18978064 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.180702577 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.174040546 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.182220494 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.146299059 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.19031398 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.183100301 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.146076484 seconds)
  done (took 4.339641453 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.346412799 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.216569835 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.299126725 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.198208569 seconds)
  done (took 1.120780364 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.198440968 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.199356842 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.212054078 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.249514035 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.272711235 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.208346978 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.1721648 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.167674402 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.154334172 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.198995747 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.274945634 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.193190845 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.289128961 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.145853556 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.332365431 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.145113312 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.145751527 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.197795451 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.249240812 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.263290505 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.14648229 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.197983972 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.201255033 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.194357911 seconds)
  done (took 5.071128103 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.145303221 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.152636379 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.151222991 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.145237133 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.144927986 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.145191707 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.151515524 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.146362277 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.1659223 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.14632656 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.144286773 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.145165882 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.144110338 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.1453194 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.144272513 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.158257724 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.158684267 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.145202212 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.148231989 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.150929729 seconds)
  done (took 3.040239847 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 5.139176717 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.254933102 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.490428968 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.395044238 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 5.139199495 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 5.138432791 seconds)
  done (took 20.618021022 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.158862436 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.149392095 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.145367085 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.201161172 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.281191463 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.151545012 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.145566362 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.155261702 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.189120683 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.207253167 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.164201337 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.170426956 seconds)
  done (took 2.181126846 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 5.142026927 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 5.140896509 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 5.141264519 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.156308666 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.155403153 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.15163834 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.152339487 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 5.137848599 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.157832717 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.162285811 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.151946165 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.157438701 seconds)
  done (took 21.873372005 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230394834 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.029592055 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.191395503 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920095538 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.634495352 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.351178069 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.649871458 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.494391742 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.160353468 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.413078402 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.142742643 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.374335481 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.394139499 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.101425848 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.221512633 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.616451414 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.453837671 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.362738496 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.183461057 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.846706282 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.255799251 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.476292663 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.972716866 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.266682991 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.3516116 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.274142565 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.400977769 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.102583411 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272586447 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179290795 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150446 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.139701764 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.413820718 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.513595157 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265982854 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150348013 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.793549801 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.879162446 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 5.134916701 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 1.850880537 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.022820621 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.265788487 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148271952 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.140257183 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.074087429 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.477555785 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.569751769 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.162015468 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.852499371 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.140775261 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150906351 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228337694 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.143739679 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.955306986 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.128084554 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.442172752 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 5.137498439 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146130699 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.71660399 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.185929026 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.582463892 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.167130212 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.332563888 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.877574142 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.60226189 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.296840265 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.143608444 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143837703 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074741894 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.842647603 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258843793 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.286548304 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.16071403 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.790018644 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.439677373 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.191675356 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.215391087 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.4213223 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.774097674 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.165433473 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.369470158 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.097848617 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079345761 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.004114305 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.074406067 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.400612584 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210358172 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 1.760613521 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227135439 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.477601278 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168348929 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157827669 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147847139 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.364570111 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.705410194 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.140640618 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.883242509 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.417272079 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162002008 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.481674174 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.091756699 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.144412466 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.395216341 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.351648027 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.206432254 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.705204196 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.322578432 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.158283414 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.219906891 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.881669593 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.239981878 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.41557359 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205199281 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.166023053 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.26227147 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.103585523 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.431770858 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.201796667 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.304868048 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.119777514 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.397572756 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.475060432 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.469925505 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205543972 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.140484215 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.140819208 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.866412867 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.75843327 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.407788262 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.14115363 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.46291115 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.239922591 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 5.141946814 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077017792 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.709794361 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.118492771 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 3.240040822 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.366050804 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.910866731 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.5047152 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075462222 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.286316546 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.255713347 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.363665153 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.785801549 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 5.229758115 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.397224434 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.456578889 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.289872516 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239102836 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160516454 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230182366 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163162428 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 3.39054424 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.483185952 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.144835135 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.144876793 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.842076809 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.196217959 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.141403148 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.144958067 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.939470231 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.441527464 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.171259156 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.144882425 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.029473832 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.15526525 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20771653 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146419673 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151388815 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.664235381 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.908105254 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.174119798 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.73312227 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.365337961 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151133653 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 1.813311987 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.319903802 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.223922357 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.42701751 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21172306 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.075258905 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.852524134 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.834115743 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.141068357 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.077143579 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.141143265 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150365891 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152465924 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.522141868 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.41656211 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.193327059 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.864857858 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.250295703 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152198405 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.146700533 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.141609432 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.661745633 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.186018927 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.577132494 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.23949205 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278802253 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.155605925 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.075488764 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.145231126 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146027735 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.142344511 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.103456684 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194301958 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.89051347 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.587689243 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.416313613 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.792234205 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181093508 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.860768361 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.268625068 seconds)
    (217/481) benchmarking "4d"...
    done (took 1.163543915 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.907485536 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.03780545 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 5.22345043 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212733777 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152218544 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.846394445 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.904727338 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.709772941 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.454345603 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.457813657 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.589430065 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 3.468159926 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.496634907 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.487677459 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.393993898 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.670725959 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202244906 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.486906505 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103870486 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226023617 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.803592436 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.505772193 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156070227 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.370107051 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.524591538 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.998153734 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.297029011 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.353276236 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17705053 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.882735874 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.155877934 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 3.346495778 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284005485 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.957934674 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.352660358 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.476501275 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.912621756 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.245106966 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 5.141500877 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.847516394 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280983142 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.875663081 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.502677692 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.477593885 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.233465932 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.627895119 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.162048457 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.586922619 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.493892303 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.289625721 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.315450924 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094705981 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152717222 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152540925 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.141708824 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 1.116414417 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.985311276 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.393961747 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153006396 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.378009435 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.22507844 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.488052117 seconds)
    (280/481) benchmarking "3d"...
    done (took 1.056609338 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.14777481 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.142567654 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.432953266 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.793499703 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.361051051 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 3.423318945 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.702826531 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.149333479 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.076282092 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076278054 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.835256584 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.150202243 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.117382829 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.361508885 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 1.34596433 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093363636 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.48040846 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.436746162 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.396142821 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.155678812 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.415035492 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.422999808 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.876897439 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192282988 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.242651424 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.899373708 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 5.258260723 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.410907785 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.378152369 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943662197 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.394343106 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.181909094 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 3.024117205 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.141447224 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.372630911 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.412116549 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.137632681 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.388810826 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.876031402 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 5.148801703 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.515490215 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206363494 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.142071157 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.30636165 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.334439297 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151477861 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226504899 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151474774 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.152621847 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153349691 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188977077 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.168552059 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.27451141 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.15628005 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230006788 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.211060647 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.726873946 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.150894764 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.419358309 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.506705169 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.477830257 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210502068 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.141916892 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.142245312 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075504063 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277756809 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.588430214 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.415797492 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.271182206 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 1.439943004 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166295512 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.907884973 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.340246508 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.436433974 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.416922816 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.037723039 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.098655763 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.235070267 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 3.409285972 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153652102 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.354519567 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.368901994 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.475219206 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628891745 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.199815863 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.565569655 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.43290503 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.510897798 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.142338679 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.734761868 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 5.147876564 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.90261645 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.235997308 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.14026581 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.42055688 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152734904 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.525981481 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192554178 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 5.339739778 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.658281335 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.975385531 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.50201171 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.121236798 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.226563054 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.417611944 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.538502433 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.468986951 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213295595 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152559633 seconds)
    (390/481) benchmarking "6d"...
    done (took 1.863033414 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27932547 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.985683503 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.411191263 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.143111175 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.353695615 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.852026072 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152111435 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.421482879 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.46011578 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 5.139819783 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 1.002076227 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161718343 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.152174713 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.366052552 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.405512951 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.427674223 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151841738 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.151003624 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.958727825 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.419215181 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21237962 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076062911 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.145731642 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240666269 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.400724095 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163558992 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.833389653 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.853561283 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.435300379 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.076984584 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164022672 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.470516604 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.575421143 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.486398501 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.677298854 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.370795878 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.717414218 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.906253825 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.497326936 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.146994725 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.469789085 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.500768574 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.146418153 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.573197231 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236390545 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.414850358 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.469674451 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 5.153876682 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909334964 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.183070943 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.365859607 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.742082154 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.105869281 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.142252901 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.202314116 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.159602813 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.272625501 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153493296 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 1.027202779 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.912951154 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.973789978 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.64012013 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.148601773 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 5.133259344 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.961150841 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.666537206 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232608612 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285935146 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.166643623 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.851204431 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.434443134 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.397789336 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.582184302 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 5.19970203 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.146799909 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.14259042 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.07069406 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.33951877 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.523298416 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.437619072 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 3.437942469 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.23497157 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146295806 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.358591101 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.354099022 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.157530015 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.296672725 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.454833008 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236938603 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.91152131 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.823501876 seconds)
  done (took 851.332884168 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.145633098 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 5.157288549 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 5.155538692 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 5.199546865 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.166768822 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.224589681 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 5.180925005 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.19358176 seconds)
  done (took 41.48908139 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 5.143064031 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.343971925 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.155120346 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 5.144364416 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.161863644 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 5.160488287 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.320692719 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 5.153180401 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.163964215 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.153133531 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 5.143155711 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 5.141326997 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.468701424 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.169453554 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 5.143020462 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 5.135674013 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.156131624 seconds)
  done (took 43.331661189 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 5.145314917 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 5.343120989 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 5.181185132 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 5.178969292 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.099680167 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 5.15440676 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 8.068383278 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 5.190442601 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 5.145418877 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 5.362439339 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.482968065 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 5.189556938 seconds)
  done (took 67.606258282 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.155498971 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.150162923 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.150560431 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.150384144 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.150511814 seconds)
  done (took 0.829953999 seconds)
done (took 1083.605253081 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.394363158 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.366176949 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.386602793 seconds)
  done (took 0.816046916 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.292498727 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.341826239 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.456602591 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.482222114 seconds)
  done (took 1.663740439 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.439913325 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.53649144 seconds)
  done (took 1.039388762 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.507932095 seconds)
  (6/14) benchmarking "18129"...
  done (took 5.17245413 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.541702865 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 5.145134164 seconds)
    (2/3) benchmarking "Float64"...
    done (took 5.144758123 seconds)
    (3/3) benchmarking "Float16"...
    done (took 5.144376335 seconds)
  done (took 15.503879215 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.150367067 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.151184866 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.148281156 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.150936377 seconds)
  done (took 0.663737104 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 5.129176186 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 1.902025228 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 5.134942042 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.148142889 seconds)
  done (took 12.377334132 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.897535275 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.582506221 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.892149484 seconds)
  done (took 2.436210099 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.573025638 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.112137272 seconds)
  done (took 3.748537538 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.398112505 seconds)
  done (took 0.461468557 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.177337033 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.418846511 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.667159511 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.679205765 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.765104878 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.965501854 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.425571701 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.36285482 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.577914621 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.600634242 seconds)
  done (took 5.712489938 seconds)
done (took 51.102386374 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 1.500328763 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 5.514940115 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 5.343092346 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 1.470956441 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.365417157 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 5.340967984 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 5.357366666 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 1.455729963 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.971027799 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.969633051 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 1.513395436 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.365387878 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 5.306580564 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 5.513864267 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 5.307606073 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.380862012 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.362565125 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 1.52112417 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.166065421 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.368470765 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 5.365200907 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 1.097664294 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 1.354718796 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 1.1130068 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.364691049 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 5.307513441 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 1.691710198 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 5.153249298 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.324965414 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 1.711853823 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 5.302280795 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.543776145 seconds)
  done (took 112.486133255 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.146615483 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 5.154705716 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 5.158939667 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.143032619 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 3.602022277 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 5.163855136 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 5.144631933 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.142956116 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.200589362 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.192227339 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.176093859 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 3.620033581 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 5.180978939 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 5.143079135 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 5.185271122 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 5.143099308 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 3.411048985 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.184251078 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.18751374 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.189223314 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 5.157081899 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.410802404 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.159961832 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.456179965 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 3.320463049 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 5.160047748 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.143448455 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 5.163540543 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.179084609 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.165253884 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 5.167052029 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.142766191 seconds)
  done (took 151.174585233 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.146020774 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 5.142883784 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 5.143165241 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.143933093 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.147632648 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 5.149987736 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 5.144674781 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.143604098 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.775065277 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.774156942 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.154147977 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.148012827 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 5.148560922 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 5.143741384 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 5.151353512 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 5.14371383 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.151990326 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.14724447 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.149038816 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.152211682 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 5.155087447 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.042966715 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.155374237 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.034268729 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.147402267 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 5.145713157 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.144438514 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 5.150038474 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.149888147 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.150745275 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 5.154026143 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.144168244 seconds)
  done (took 163.867067396 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.350551857 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.152869045 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.153389841 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 1.093063078 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.153934951 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.151970835 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 1.091234748 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.349125675 seconds)
  done (took 3.574544883 seconds)
done (took 431.169108573 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 1.574125031 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 1.42028729 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.326889817 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.178469253 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 1.395433745 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.210335103 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.171555693 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.232169505 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.901457864 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.242236069 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.850475909 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.184360805 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.941541144 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.190917037 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.298473729 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.224028171 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.716094138 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.807962757 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.345126818 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 1.235275767 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.35182105 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 1.133599034 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.244024928 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.933385622 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.962428675 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 1.177500755 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 1.334273634 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.725594793 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.179061671 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.33111491 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 1.903344625 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 1.557779926 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.184608888 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.165282754 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.222368967 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.202062183 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 1.513478792 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.182946571 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.291446307 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.939861479 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 1.222234056 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.794945383 seconds)
  done (took 29.061499505 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.141540493 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.14041017 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.138932625 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.139535806 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.14026835 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.139357782 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.139355737 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.137711926 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.139512691 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.138713248 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.138007198 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.139177816 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.137341801 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.140204402 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.139095596 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.138336661 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.139871927 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.141890696 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.138084228 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.138196187 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.139451713 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.141225663 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.152493097 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.138704659 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.139588695 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.140535085 seconds)
  done (took 3.719218223 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.153521932 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.302720295 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.408623111 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.16857706 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.150654063 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.154800695 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.169568821 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.157316232 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.155185613 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.155538763 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.246233669 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.159462388 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.173629885 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.409508048 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.165504831 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.15336221 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.152856981 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.152263265 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.30873407 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.169079335 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.172414022 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.158363221 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.170890119 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.167761735 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.155319067 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.571106082 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.156200621 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.620581971 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.160920932 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.245015711 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.196109435 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.171593147 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.577799131 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.417077745 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.202565358 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.160292973 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.15201038 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.24803763 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.158967472 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.151745221 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.170506447 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.158470878 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.406697064 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.644189655 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.165098919 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.152511219 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.630381341 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.255155854 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.193162638 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.161281551 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.412233348 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.16611181 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.153167653 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.151731672 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.187810041 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.160044329 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.15080128 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.475351958 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.161050241 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.169981626 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.157056987 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.15202364 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.314687115 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.160755027 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.302282913 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.161215036 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.15969681 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.154467735 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.407857954 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.166006848 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.647286 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.163704925 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.151721745 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.242139711 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.307849206 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.658079299 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.16412059 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.315009776 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.592030291 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.175207601 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.159481915 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.608269599 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.1797396 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.160293216 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.153799393 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.153673486 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.152749787 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.196718105 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.167229535 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.57161543 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.647580833 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.489201145 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.176125636 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.168489408 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.152537202 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.473948869 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.159473597 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.152825747 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.400440282 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.652090198 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.166060372 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.159301949 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.628806398 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.166972055 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.170746272 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.161125844 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.411579636 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.165343649 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.196074846 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.153282739 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.1590047 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.156808735 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.170217319 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.159956342 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.152478984 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.618864115 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.261150876 seconds)
  done (took 29.864283631 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 5.148731974 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 5.156268204 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 5.144918104 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 5.157427463 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 5.145415368 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.150812281 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 5.144963211 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 5.145647677 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.150467088 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 5.146336762 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 5.147323933 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 5.144989175 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 5.146137784 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 5.15265144 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.252438988 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.153227322 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 1.757035287 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 5.148068659 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 5.144328114 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 5.146506771 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 1.792601704 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 5.149852356 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 5.145611012 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 5.147084895 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 5.147444913 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 5.146477879 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 5.146754187 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 5.242950153 seconds)
  done (took 117.671591783 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.154398423 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.264331137 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.165595087 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.179011626 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.159683851 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.150456525 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.175233268 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.163841967 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.154872304 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.151318036 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.15046997 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.210983937 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.159554933 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.250500708 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.180731281 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.178927214 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.253512364 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.158289823 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.150360776 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.151774464 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.179836057 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.14562987 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.210246042 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.270272611 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.166008266 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.265946405 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.15038432 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.154725376 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.151544995 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.265173604 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.163499865 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.209328929 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.175616788 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.16912581 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.269089535 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.264093005 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.256720825 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.180888596 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.153964273 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.150840366 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.150278772 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.140424498 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.265155489 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.16409059 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.152996389 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.25470368 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.16493809 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.153284282 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.161692029 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.149846535 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.164451931 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.166817614 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.213043533 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.275955139 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.180034855 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.179249498 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.175931279 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.431235937 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.169401804 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.252311109 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.143257655 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.267413764 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.166457745 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.138416663 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.151879099 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.157284175 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.178557996 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.182390451 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.255404051 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.158380401 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.251708018 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.183877971 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.159011898 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.150963231 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.153081029 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.267141847 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.264347341 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.183678985 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.186955566 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.182019857 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.14519178 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.152097046 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.139270241 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.169620246 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.156468719 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.264705056 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.26420499 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.15859086 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.152925586 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.152917992 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.153582514 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.175638948 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.272703779 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.180586492 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.248107842 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.216154639 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.220317761 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.161397558 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.163468957 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.153103498 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.213165924 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.161388408 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.161545325 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.478849963 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.226379798 seconds)
  done (took 20.276978503 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.608921695 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.234171565 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.206876584 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.479135105 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.564955214 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.988954757 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.197824818 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.198352802 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.221121208 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.380176054 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.284491402 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.227723871 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.184378165 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.171313166 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.197865745 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.220246543 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.206353096 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.514449203 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.316908468 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 1.284715673 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.203155125 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.48443612 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.523520608 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.627684224 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.23331395 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.539172538 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.88477953 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.364197041 seconds)
  done (took 11.619977738 seconds)
done (took 212.277760826 seconds)
SAVING RESULT...
DONE!
