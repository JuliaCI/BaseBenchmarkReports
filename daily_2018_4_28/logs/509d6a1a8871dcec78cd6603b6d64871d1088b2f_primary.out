cset: moving following pidspec: 3747
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.422608522 seconds)
loading group "string"... done (took 0.505819224 seconds)
loading group "linalg"... done (took 8.744935017 seconds)
loading group "parallel"... done (took 0.172063508 seconds)
loading group "find"... done (took 1.221119009 seconds)
loading group "tuple"... done (took 1.978015871 seconds)
loading group "dates"... done (took 1.456645052 seconds)
loading group "micro"... done (took 0.205744674 seconds)
loading group "io"... done (took 0.527651692 seconds)
loading group "scalar"... done (took 50.705574307 seconds)
loading group "sparse"... done (took 13.580752238 seconds)
loading group "broadcast"... done (took 1.272843557 seconds)
loading group "union"... done (took 9.368218844 seconds)
loading group "simd"... done (took 3.134145873 seconds)
loading group "random"... done (took 11.702015565 seconds)
loading group "problem"... done (took 2.220563922 seconds)
loading group "array"... done (took 24.46967062 seconds)
loading group "misc"... done (took 1.090370604 seconds)
loading group "sort"... done (took 3.680409838 seconds)
loading group "collection"... done (took 18.950480729 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.591230425 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127594024 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.200769694 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.336775991 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.228788002 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.164776868 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.141930222 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.240899171 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.537007519 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.202177949 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137551166 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.495864181 seconds)
done (took 6.138038879 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.248093439 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.239957917 seconds)
    (2/2) benchmarking "String"...
    done (took 0.161761978 seconds)
  done (took 1.07980706 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077289515 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.157094126 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.107803621 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.09357684 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.092746889 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108350679 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093251468 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.1087778 seconds)
  done (took 1.442535631 seconds)
done (took 3.527847091 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.497605938 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.857412538 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.501005021 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.141876694 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.309322908 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.289602778 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.270630629 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.200535036 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.091366286 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.089042325 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.171935752 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.3825525 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.384552034 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.933962603 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.091581167 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.09426964 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.130334856 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.758398331 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079358468 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.121146396 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.493126011 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.183698607 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.100727121 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.12019949 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185982564 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132199875 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.160044602 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101040619 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.718139248 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.129947859 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.175808634 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.096680589 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.158261769 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.184683201 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.19332439 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.110010432 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.678060792 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.198411152 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.087102473 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100216752 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.676278891 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.116431934 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.180566813 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103673639 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.087977815 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.181522324 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.089931358 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.079085848 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.110082014 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.086188793 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.162835524 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.4343838 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104073942 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.17168201 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092123312 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.69036698 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.09673444 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.273082673 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126180976 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.095952686 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090422749 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088531472 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.156309835 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.093657521 seconds)
  done (took 19.804143119 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.146151992 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.162928149 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.078895732 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.155885253 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.122484305 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.080651624 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.10147522 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.079157207 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125341254 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177888402 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.138487045 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.150559804 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092483675 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.090677153 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.128624644 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247689643 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108004731 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.119882587 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.09020664 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090162259 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.139820027 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.097661566 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106343885 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091991594 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169814133 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20260678 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111053713 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124243076 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.088816076 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097751949 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144875197 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.147878211 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091683647 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.089165779 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.189582208 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.106397301 seconds)
  done (took 5.18455637 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.195910971 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121842139 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.203645006 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.158025807 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145706302 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.166423524 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123924838 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.265658562 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.211675454 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.136346475 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163000546 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126992961 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104203569 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095221345 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081861102 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.082279447 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.458454471 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.14972626 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.120024567 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.168957193 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10359892 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084302618 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.365809193 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101228348 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.078559799 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082052201 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.080645069 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.190966338 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083891908 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.135790987 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.085079202 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08227455 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135360105 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19468374 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.142104734 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.126358061 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086478241 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.098356522 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.226283532 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.089074245 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078733023 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.135191286 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119234375 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.131072039 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.079759346 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.101072401 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.221850727 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079687097 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100831741 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.087057939 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196853808 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.12346487 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.078877477 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.295594403 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.122168435 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082852005 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.081687159 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.823044438 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.116333336 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084019099 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.099802183 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084852261 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080518415 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.43234924 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.099598313 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.317940188 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085469093 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.158948365 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.081439333 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09988817 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089480135 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087463733 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.122208105 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.08058799 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080302502 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080460027 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.101073335 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083894729 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.131428868 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086325358 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080746944 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.160092569 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.135275715 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.112783277 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.10036619 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124517715 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.086381975 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.081349187 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13128651 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083183584 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081145713 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.166850064 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082014995 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.133685379 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083977628 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143822733 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080716882 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.248783653 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.084876202 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126375125 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.104773278 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.086532684 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.10369023 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113686979 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.119625751 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082786057 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103901258 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.082430951 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082542542 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16180976 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081145972 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08274926 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082554578 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.113920059 seconds)
  done (took 28.034232119 seconds)
done (took 53.701375171 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.438908507 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082535515 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079018773 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.097893988 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080149287 seconds)
  done (took 1.531253269 seconds)
done (took 2.263323111 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.316298296 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.187431765 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102993662 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.1860575 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086608002 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.192853334 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.179023059 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.096579416 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.202670038 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.084079812 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.181455228 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084742895 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.103474721 seconds)
  done (took 2.76017713 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100382097 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108319536 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100647765 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11732268 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082539895 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098396103 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115457959 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109581255 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098608703 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.109382247 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083479505 seconds)
  done (took 1.853578968 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098440965 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10491648 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096455423 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114312725 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084296653 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097115223 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113125199 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107287363 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097726055 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.109301465 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084180361 seconds)
  done (took 1.841143661 seconds)
done (took 7.184102538 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.08152409 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.193082956 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.165427126 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.205401009 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.344880414 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.233870371 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.555373458 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.152621079 seconds)
  done (took 13.808051044 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.165471112 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.109751736 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.095398003 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.092953262 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.08983623 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.107830511 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.091190039 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095587411 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.112261187 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.094875234 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.094821648 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.105853955 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.091698236 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.090983039 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.106378524 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.091772113 seconds)
  done (took 2.432459001 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.142046889 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.139312237 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.097431803 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.098289715 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.112448554 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.098451474 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.100892051 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.113631526 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.094343117 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.094866752 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.117267898 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.098215847 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097339286 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.109559402 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.098275604 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.117146471 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.110412738 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.0999102 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.117680324 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.115200014 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.099951615 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096613146 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.115032042 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.100545737 seconds)
  done (took 3.398299157 seconds)
done (took 20.37586188 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.148505259 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.102762148 seconds)
  done (took 0.986030411 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.139681986 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.155971936 seconds)
  done (took 1.038320723 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.110935382 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.0894436 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.13859347 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.105694763 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.093503695 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.110134416 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119517041 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.110121024 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.094367155 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.094098837 seconds)
  done (took 1.810227261 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.095825145 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096641702 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.123088814 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.13725883 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.11513819 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094593626 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.095095168 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.092386744 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.112024082 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091041454 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.095061744 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.124809226 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.09668536 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.12491219 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.096293861 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.097134423 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.115616672 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.094826552 seconds)
  done (took 2.644436729 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.089944858 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.092399199 seconds)
  done (took 0.930166688 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.093671322 seconds)
    (2/7) benchmarking "second"...
    done (took 0.090359419 seconds)
    (3/7) benchmarking "month"...
    done (took 0.092588508 seconds)
    (4/7) benchmarking "year"...
    done (took 0.108760854 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.090551883 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.090022666 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.10553219 seconds)
  done (took 1.418804992 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.482173691 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.259810326 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.357488948 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.108839803 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.143485024 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.349062379 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.144038507 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.223073873 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102586697 seconds)
  done (took 2.951521102 seconds)
done (took 12.522789677 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091604614 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.221871349 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.632100043 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.112259974 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.091904009 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.159448457 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.280113496 seconds)
done (took 2.342589666 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.338392121 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.1414817 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.080374046 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.089390929 seconds)
  done (took 1.395709652 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082256666 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098075364 seconds)
  done (took 0.934175725 seconds)
done (took 3.086054066 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09085322 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.089169858 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.088354951 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.104869853 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.088496854 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.08884261 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.088203542 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.10486633 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.088917131 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.136351175 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.088478222 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08829891 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.087945876 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106432035 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08854539 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087629412 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.105190447 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088677927 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.088409429 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087532479 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103982055 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.088076491 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.088901688 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.104751045 seconds)
  done (took 3.058511144 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.10677767 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.091204465 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.108506402 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.093476829 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.093276981 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.109033298 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.094054035 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.090224554 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.109596889 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.090375472 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093671013 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.109896898 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.091271692 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.093024182 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089723481 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.10850402 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093477464 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088861027 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110047044 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.093486169 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.091988743 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107199719 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.09376161 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091447836 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.109741751 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093859101 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.089757289 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.106969036 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093617672 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.092412481 seconds)
  done (took 3.682811461 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.097631907 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.086176901 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088691481 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.114080643 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.086172236 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.089687273 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.103103931 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.087480007 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.090251098 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.087530275 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.106991947 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.088956093 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.086409498 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.105919642 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.091017285 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09305757 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.11390133 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.087833576 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.086473014 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.090266809 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.108718743 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.088223673 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089704053 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.106264428 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.090251974 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.086317402 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.088871013 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.10588499 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.090840768 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089166969 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.10824134 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.092901233 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089119746 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.116087454 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.093472877 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089075302 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.094271549 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.103212288 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.090910392 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.085701113 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.103489554 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.089869014 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.086357421 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.11238838 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.08961981 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.091303719 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.08688143 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.107256022 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.089919222 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.091978645 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.102911183 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.086294274 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.091835752 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.088974484 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.108063805 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.08726083 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.089016354 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.102995482 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.090471715 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.08858462 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.086047406 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.10272588 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.095233529 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.088937519 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.120273129 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.095303441 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.087386302 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.106442432 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.090397308 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.09463033 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.107353531 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.100106197 seconds)
  done (took 7.609857807 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.10221482 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.098468586 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.090026807 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.107158413 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090406247 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089156958 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110692431 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091177329 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091693978 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.112315786 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090515398 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.091393497 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107476908 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.091668135 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090239911 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090011597 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113004733 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090211082 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.08885834 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107141474 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090751871 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.094492869 seconds)
  done (took 2.893551825 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.23422945 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095912382 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.138864409 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.119990177 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107248532 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.120784025 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.09583445 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09607893 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110187684 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10136227 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098727317 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111018612 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108240002 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115470595 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099765893 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100736705 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.1099001 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100730099 seconds)
  done (took 2.830283086 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.103072546 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.095094576 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.127709298 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092400087 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.092079892 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09026657 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113962927 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110401664 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.108370424 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092948207 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098849043 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111291487 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.093122087 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09130957 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092476175 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.108622338 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.092535194 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090905181 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114945208 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098550311 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097988269 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114672092 seconds)
  done (took 3.000198932 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10558057 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.091774212 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.125259425 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.095151124 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091045357 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.108023982 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.097032554 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093288311 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.116532129 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.092586875 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092440057 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.090148056 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.122925116 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093145805 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.096760683 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109241168 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.091954377 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09147951 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108923436 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.091420132 seconds)
  done (took 2.773371753 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.168124674 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122503452 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108015755 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115758865 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12327549 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107547526 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115324518 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.124308935 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108144185 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134241316 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107659593 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10712428 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131883295 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112419457 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123311454 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116227233 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114293708 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.131546392 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10799898 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123465894 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120402978 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107103459 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132104142 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107526 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106051475 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124711265 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108031945 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.128800752 seconds)
  done (took 4.107613542 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090663905 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09170463 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090146976 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.10637926 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.09031773 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090303311 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.089708892 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.107664009 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09171076 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089192521 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.108082479 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.091295722 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090957458 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.090511808 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.109571219 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091825996 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089871644 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.108075943 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090288114 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089827883 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.090354164 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108640564 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.090980725 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089001043 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10739012 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.090711098 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091215015 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088635434 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106744121 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091108266 seconds)
  done (took 3.62400075 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.103518654 seconds)
    (2/2) benchmarking "in"...
    done (took 0.100393393 seconds)
  done (took 0.978213944 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.098309956 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105463449 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.089755368 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.108159784 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098162986 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.090865813 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116764098 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098261816 seconds)
  done (took 1.580953341 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.139246858 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.158891916 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.095529144 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.101760082 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.159004265 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.15071519 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133233404 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.096377109 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107417396 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084124896 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.152703296 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.085091028 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092507903 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088137892 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.109946262 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097887593 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.108837114 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.100995885 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.098523817 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.092081654 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.114600895 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09680721 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.111213046 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.102140131 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.087434526 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092869001 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.114245116 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102633497 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105174724 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093613189 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.0898507 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092062667 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.112796443 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.097450841 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.091609876 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.158739971 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098422034 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105972708 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092954741 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095492533 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.142139555 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092203144 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092858263 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107333442 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095238035 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.095150173 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.113574395 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.092597375 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.08530796 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.104043754 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.092485982 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088712281 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.090181148 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110798489 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091880734 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115109762 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.093781264 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088955536 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088065021 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.105260786 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091844552 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087881078 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112858973 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.095410418 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092623662 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.111693107 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091918412 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.090707639 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.111639309 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.093655159 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091929928 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123813953 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.09294894 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.094835919 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114920904 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.093787653 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089105695 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.114311186 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091482132 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.09230425 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.11367527 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120708613 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093347597 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105763234 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089620253 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.098262866 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.113052805 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.095648249 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084894073 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117536873 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.095106069 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.092964313 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.104122616 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.090991294 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088706249 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.094545911 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.103921953 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093270536 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.090340956 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.113690177 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098079121 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091798257 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.11217199 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097871363 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097134974 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.108182338 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.134937317 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107037536 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088787586 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.093891641 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.096085646 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.104651605 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092109887 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090554054 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107507797 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088778549 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.097101473 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.109998898 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.093925431 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.095749369 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111928017 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.094625801 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.093798746 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.10862053 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089681839 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.095853058 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116180616 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095431063 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.094313498 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.091864631 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.111746091 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.092824815 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.094814079 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.107382157 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098673581 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089090724 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.109998742 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.093781906 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.096505878 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110074802 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.088670963 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.091058872 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.111740236 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.093037741 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.095821632 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.11119988 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088348702 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084861778 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.110479418 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.08949615 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.09345695 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118064646 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.090354831 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.095445675 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.08838127 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.11969907 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090732047 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.097358049 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.112898642 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.098141338 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097230175 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.103761601 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09093421 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.094329905 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.113199693 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089577268 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.093746984 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.110341877 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.099519543 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.086119336 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.113413746 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.086466611 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.090701915 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.09559712 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.113271981 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.096936186 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087151845 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.149211218 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103855867 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097545007 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.109958969 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.09307992 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.095499844 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.112073891 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.097124545 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096571356 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.114341072 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091353388 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.09140541 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116004086 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089093897 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.095847084 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107903834 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094898884 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086092538 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.092233708 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.10366892 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.097668901 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.094437102 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.114918613 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.098148853 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.093556654 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.111087184 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101872115 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087674636 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.114246702 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.086784846 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.097889024 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.121676988 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.099678281 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098711392 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111051723 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09166029 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.094239216 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.117829384 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095412507 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.093718673 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.094083325 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.105157138 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.087000917 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.098239588 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.114428228 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.091979593 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.092950427 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112733133 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.096097087 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.091382657 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.104655335 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.097631265 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096651339 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.107148983 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095815654 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089871427 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108692884 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100398187 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.086084745 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.107601765 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096011275 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.097616039 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.111179202 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093803948 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.097710622 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.098241252 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.11522843 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.096516434 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091923822 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.11919853 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092977754 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094304723 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.108577793 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.098699709 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.087115522 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.112550288 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.095144394 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.091205638 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.107109402 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098957562 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099052929 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.09768505 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110375989 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.09748314 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.097388728 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.117634397 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09157273 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.098111158 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.106881636 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.089057375 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089684886 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.104303423 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.096117679 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.089357216 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.115376454 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.093138243 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093177456 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.114568285 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097101254 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.091705845 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.116627079 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104979404 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08838122 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.114015844 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092778721 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094357623 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.108213974 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091550985 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095230638 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113194549 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.098351008 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095936037 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.107889745 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.095388319 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.099906373 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090246879 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.118336043 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.100004137 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.099639814 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.107936835 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.099328553 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.090876495 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116157614 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.088688024 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.09290099 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111708874 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095135019 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.091185733 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.110946853 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.092055501 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087463349 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.108298245 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.100907209 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.093705235 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.116361309 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.103723441 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.092639202 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.090291596 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109411198 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.100582006 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.091747927 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.118435118 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095480134 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.086887288 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.106853638 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.100901739 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093917284 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.118401781 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.091081994 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.100254215 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.117803359 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.09839282 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.095024676 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.102044243 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.121225035 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.099876783 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099140512 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.10610259 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.093821291 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097859755 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.113522839 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.098066611 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.094782598 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.107383526 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09720012 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.099537058 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.113207467 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.094212011 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087496075 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.113536988 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101382769 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.097813295 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.099091749 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.115693605 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096579512 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088623999 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.116083816 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.100427735 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.094332284 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.119002834 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095287915 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.098262587 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.109500159 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100136746 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.096126817 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.107322706 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.089138666 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.09279105 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.100007478 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.107996251 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099445205 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.098754791 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.110103868 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.093186827 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.099361512 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.109231654 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097723601 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099865442 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.110654107 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104873455 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.09608729 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.109618881 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.099823508 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.099562975 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.08682962 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.111826793 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094089221 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100454772 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111322509 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.099129374 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093981982 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118390418 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.097723795 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.099037399 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.118259372 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101108215 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.088221639 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.118474363 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.099015865 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.096857033 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.090970248 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.113550786 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.089234122 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093066516 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.120656685 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.092770814 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10270372 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.120228365 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.0941885 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092464281 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.118845649 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094876083 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101012044 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.109613014 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097375583 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.088587816 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.115081684 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.096090161 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.100600287 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.110456672 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.091058061 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09885191 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.098272265 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.118055193 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.09807064 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.100433082 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.108110224 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.089313868 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.097539897 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.109899342 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104458774 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09734252 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.112123591 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094593353 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096393344 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.114387011 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102556242 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.090594819 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.091260801 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.097114677 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097232685 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.111942313 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.09131349 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.099676004 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.092723103 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116473332 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.09432149 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.089527524 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.11383661 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102774035 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.092557133 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.110242856 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.094462041 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100866844 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.112426374 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.092824305 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.088915245 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119448803 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.097335579 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10068008 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.110783921 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.096018911 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.092229329 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.115457824 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102437643 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.092681939 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11298655 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.09489963 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100355675 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118709966 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.092348697 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.092769612 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103883815 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.119267319 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.09700895 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.09685518 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.113189629 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10251801 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.100523638 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.115719664 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.09116738 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.090325218 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.112202313 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.09048721 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.096846399 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118465949 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.095439722 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.092381814 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.117185607 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099704394 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097844235 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.096544021 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.109044136 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103557962 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.092439998 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.116688593 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.090649189 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.089641715 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.114973865 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101566314 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094129864 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.114270493 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.097158362 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097864939 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.089291568 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.111695939 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.099319642 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.0980998 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.119661213 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095231426 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.092744239 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.116096263 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105761223 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.096744385 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.112699061 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103279921 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.100859447 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115523044 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.096015408 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098667207 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.12011868 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098493499 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.101394969 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.111333017 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.096500016 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102115842 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.100536828 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.125240807 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094193487 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.107440324 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.100684083 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.093187126 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.089180613 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.118918956 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103604273 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.101011805 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.114332803 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.093614286 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103103464 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.120037663 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095891929 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.093398872 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.112833211 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100402554 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09236503 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.11796415 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.093215822 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.101739766 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.120048215 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102545085 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.104814499 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.088607851 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121493535 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097964457 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.121905709 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.097242823 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.090469912 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.090083813 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.117754046 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102955669 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100940712 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.117768843 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100603129 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.09997351 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.114822949 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096771641 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.093432273 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.101660453 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.121472098 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.098214092 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.097840511 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.113495872 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097217205 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.096586703 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.12045132 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102689536 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.09599799 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.124645272 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102003972 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.09506609 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.111558138 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097693978 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097932971 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.114606747 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101642281 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.092263293 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.089316996 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.120616159 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.102055387 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094839557 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.12332006 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103136978 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.094042588 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.117446626 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103651022 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.100918217 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.11653942 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.097415131 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.097943927 seconds)
  done (took 61.369137654 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143939126 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104290931 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.117502852 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098660813 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115074809 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12004709 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098771369 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098018446 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.118389075 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109777739 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097415252 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116579663 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113902373 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137410542 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116001755 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106770603 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116958413 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100006326 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09788243 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117502051 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112772003 seconds)
  done (took 3.185852201 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.114781635 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.110609801 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.128745453 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112480252 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103918726 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.129762306 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108808572 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.129383044 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112465942 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104737486 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.133217264 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107877899 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.125757161 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.106924912 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106036181 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.126767649 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111541891 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.1235103 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.110940905 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109047024 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.127007019 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.11016302 seconds)
  done (took 3.382933442 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.129004772 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101511472 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.094908295 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.117581211 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102077106 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.098539571 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.119720233 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099328625 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.105221521 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.093073682 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.108298147 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093293662 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.095972626 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.116871293 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.093475969 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.097714995 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.12445591 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.102325144 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102353785 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.116440037 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.091380338 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.09821027 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098513508 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.108846254 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.103901611 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102390941 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.117178959 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102182664 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089144727 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.10027588 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.117585464 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092436368 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089225352 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.10887143 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.090833966 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.100307182 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.119856186 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.099604279 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.098578443 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089276779 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.118849339 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.102324116 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089697949 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.118385757 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.100338603 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092977542 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.1001729 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.117833611 seconds)
  done (took 5.801807799 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.128441762 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162347843 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.103854653 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.135589902 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.134540692 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.108495389 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.123145408 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.136493684 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.099632843 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.123318918 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.114319784 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.134345213 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104986668 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105608133 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.122639234 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105551533 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104171338 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.121561038 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108582962 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101727335 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.126384227 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.104690857 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.111447171 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.131580857 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.343914683 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100791748 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.122043832 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106330159 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.130569566 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.108518326 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.105875061 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.125875592 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.114037042 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104100838 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.121987291 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.104339818 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.112573634 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.123876956 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.103608727 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099528688 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.123326754 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.105757743 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.102241537 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.134029873 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102861604 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.122947533 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103882442 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100271431 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.129858242 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.103788353 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.10677455 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.132582374 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.105642619 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.101634302 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.124824289 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.1125393 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102648389 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.122684721 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.103851345 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.13062632 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102679689 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106480561 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.132190126 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.102878696 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.107778995 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.132438329 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.10400189 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.103007535 seconds)
  done (took 8.989914153 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.132540354 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.104382858 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133483529 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115082481 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104230826 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.127077022 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105177094 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.125737432 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.107566195 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110325296 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124745749 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.195339975 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.122834247 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110026752 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.10421697 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.126611022 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.105975139 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10588185 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.127342583 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105476083 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.125614857 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113659304 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105521715 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.134256073 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117421554 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10252729 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.127110362 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105550914 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133046108 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.10688365 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.116566608 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.126350899 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106664949 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.132992317 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.118086297 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.106051226 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.121601583 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107432206 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.105623728 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.126767051 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10425368 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114014799 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.125932976 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104160534 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103803083 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.126601467 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114318342 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.13808809 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11118732 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109539341 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.126825154 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113729162 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124870131 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.106772529 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113270646 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.141081377 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115237654 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.13483073 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106995004 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.114486288 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135844617 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.120022009 seconds)
  done (took 8.180368487 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100380305 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099697763 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098501178 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.119037601 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099542254 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098749999 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098517322 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.119423031 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099436709 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098318301 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120453278 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100938654 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099240798 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098918052 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.119442639 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100085333 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098227761 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.119453186 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101405235 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098882618 seconds)
  done (took 2.935432522 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110206033 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.116237217 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.121860727 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108456514 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101583123 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.127582289 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102768858 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101618489 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101375031 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123154533 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110832673 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.129325568 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102293657 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107623683 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.130672525 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107504539 seconds)
  done (took 2.650193282 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.120534107 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118343434 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.185945013 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.104490521 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.122836908 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108984853 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.10097112 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.125378265 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102433195 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106461296 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.10534173 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.126394957 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102180071 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.10231081 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.122455219 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.104657549 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099886309 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.126247423 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102795096 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.185130144 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106878845 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103146682 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.124902463 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105666086 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102954308 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.126289189 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108470766 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101038357 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.123574444 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.103486138 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103945249 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.129592804 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103184445 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106289771 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102587861 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.12385863 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101944905 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.101342175 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.125938354 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102341363 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103340784 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.12420825 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.103033728 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.103506089 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.122169116 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.103908292 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100170711 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.128185666 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103658522 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.102983972 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.122573255 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.110026094 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.10558217 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.129675414 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.109787155 seconds)
  done (took 7.103212312 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.112449308 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103608137 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.133269604 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100092017 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.101773266 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.103161018 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.12395921 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.103688934 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101842582 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.12234736 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103689541 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103501454 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.123426641 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103280199 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103330349 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.12257869 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.101352236 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103519618 seconds)
  done (took 2.824821112 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.107359009 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101093806 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.105737704 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.123807838 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102553418 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101900631 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.12212905 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.101989661 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100602511 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.123212237 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102762045 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102502835 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10135569 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.124376249 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102278852 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101748991 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.123063061 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102903868 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101574929 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.121731794 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102924149 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10142407 seconds)
  done (took 3.233086901 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.112665058 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.181983499 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107157077 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.191077305 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.099119707 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.095944988 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.128583215 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098570661 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.113731071 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.119358137 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.097648168 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.097017421 seconds)
  done (took 2.298589116 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12879843 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137390711 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124131986 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103620534 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110519336 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127908566 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107409392 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106805823 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135584559 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1176102 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127478658 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11535506 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113248295 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1363226 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110714143 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131031055 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107127326 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106116076 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12541518 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122004799 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106310841 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13522371 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105489688 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128249276 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107717389 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114329276 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134831933 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117789689 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12571743 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115249408 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110255571 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127732183 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114632562 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138821887 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104807309 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113194987 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1281248 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122547521 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110782955 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135998152 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102501856 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131522944 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11585923 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110427491 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135474356 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106788868 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112047178 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128657684 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107614548 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147955073 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112111052 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135077239 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113929255 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113410984 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135062948 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1275953 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139104879 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115286624 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13231524 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119404844 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114634502 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133355895 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116026616 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140445406 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112213026 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114643979 seconds)
  done (took 8.825662131 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142342585 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10335183 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127713321 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118119198 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136026168 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107283497 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109536217 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127142202 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108136746 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10265906 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171178522 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1080138 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135637091 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115733432 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106495017 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130256698 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107526212 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114119344 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125558883 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127721717 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128003838 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115653769 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114488264 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137208126 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118358565 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131526105 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108076125 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107222671 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130267009 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107368013 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131927024 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109331697 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116350584 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.124377797 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115956465 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107683472 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128737186 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113725262 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107595279 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133647057 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115526251 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142885143 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107436872 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107579012 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141395449 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107614463 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129453863 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105229364 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108084027 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124724758 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1204552 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117732141 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140270352 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116467849 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12884249 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107843871 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107699526 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130016368 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108662954 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111473162 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137249259 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107741488 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14882663 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109441676 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107380072 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138989576 seconds)
  done (took 8.806060656 seconds)
done (took 166.483761617 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.147114988 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.185046506 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.144277588 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.177076544 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094668255 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.127858029 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.146853283 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.145484057 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.092949758 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.115674105 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094388299 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.096726934 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.182983001 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094558658 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.094719165 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.1172734 seconds)
  done (took 2.917075831 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.19279882 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.302200893 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108225889 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.119447171 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100031949 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098581954 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.11870728 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100322205 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098170728 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.127071168 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099206396 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094612532 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.126988835 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095162481 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098688816 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.119160751 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106135419 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098265936 seconds)
  done (took 3.068448446 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118909289 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142812353 seconds)
  done (took 1.132781547 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129036483 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.211266344 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.279490467 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.167813558 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119865518 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.139225685 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.146888875 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132420432 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.186171186 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.132629594 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.11157351 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.095965496 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.145759239 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.103874859 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.135924807 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.097931483 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126498363 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.134181481 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114441993 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101329218 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.143417693 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103132796 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.103324655 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.135799727 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.179496817 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.133893011 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.10298728 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.102282454 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.122997582 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.112683702 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.127203825 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.116578362 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110774063 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.177968762 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.124144714 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.152337392 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.126434216 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.100366395 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113425612 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.121401337 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.103111116 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101951215 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.133756409 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097249868 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.101530471 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.128143562 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.102476054 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.101541929 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.130180713 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.107183229 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.128466478 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.106496628 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.172377446 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.106509946 seconds)
  done (took 7.811598473 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.855235619 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.14004219 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099889122 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.997103329 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.149242792 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115019287 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.84741594 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.145618553 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253464339 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.875171799 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116702286 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.132528504 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.237058119 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.256277882 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.278508039 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.356886694 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.713838849 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113873229 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.128507945 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.162219799 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107788275 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14773263 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120282818 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.519952546 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100779234 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.120719758 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.108489807 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112394743 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176398362 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099903598 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.126764683 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.195236688 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.268775565 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203757268 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122001913 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.099539163 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09901363 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.183854512 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267462658 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.2139255 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.193583237 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097350832 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098543399 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.133051513 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119888891 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.117821489 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.156629558 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.190298249 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.189025511 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103778995 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.135594673 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.11153078 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128407072 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.153901001 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.119309903 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.359413677 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.36147133 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09846775 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129848892 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.116334403 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26444667 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122407437 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.232059924 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127837981 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21041363 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121194566 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.843267257 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.162690137 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.121971009 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.109331775 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106734655 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129157254 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.108512314 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.189753092 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.479525606 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13517867 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104238525 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121322984 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.209177639 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.123059395 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100491047 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180666059 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101350847 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.129579115 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.11618022 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.112026051 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.187596603 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.269105279 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.11261857 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.132508109 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105830268 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134305616 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.101842056 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.232414861 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22613642 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.1719942 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.210812777 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.13016 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.178865821 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.161102082 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129214021 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.166163263 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.131765434 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115968818 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130129462 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221940578 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.133696022 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.124910471 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105994862 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.107885572 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.160038855 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103378281 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.13243249 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.188490105 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.532245327 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.183474721 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.096721576 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127763513 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110528797 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.17877261 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108371518 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.25770276 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132571482 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.164813481 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.130346644 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.09768771 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107300441 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.181353255 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132720005 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111577268 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130320587 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111078236 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.277408918 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219246428 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114227905 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246917956 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.198639486 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.108019219 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.19161874 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108480482 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187566373 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111211347 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132100336 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102214575 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.829734229 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137784244 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.111131217 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105827451 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.20717658 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099535178 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126195447 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.102933075 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097256641 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.816589416 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125719098 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099492443 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103244646 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129743256 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.110826966 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108529153 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.129125245 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.153973664 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.261978043 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114087613 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128853463 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.101846719 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.176792662 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.103156244 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101359123 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.122006672 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103287497 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110401236 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.127729439 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104498067 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189341029 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.152894448 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.248698166 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.635555016 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102990984 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100882773 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.236397295 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123635668 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.32331458 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109888147 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.231358551 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184454429 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120543746 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.360043988 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.184006038 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.186377523 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104301963 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.191289778 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09798802 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.131364835 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.17743466 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102222389 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108208191 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.176507622 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.136652281 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.115304428 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.275802164 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100326858 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250854876 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.120283086 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.166030467 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124307022 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110059083 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.321158096 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100289425 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142720359 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.1773759 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.107180387 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.101206579 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.671878389 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.123838347 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114113144 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108746024 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.254220094 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.159941988 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.132149712 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110974498 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.136446892 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.156531513 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.229307803 seconds)
  done (took 47.609555051 seconds)
done (took 63.403679698 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.293804392 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.254799294 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.301046014 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.208999101 seconds)
  done (took 2.017717425 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.254310379 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.163251338 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.228525714 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.097696598 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.238125058 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097667315 seconds)
  done (took 1.975649706 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.485371087 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.362723782 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.302534932 seconds)
  done (took 2.050294989 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.252711259 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.243982049 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.330466881 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.415007283 seconds)
  done (took 2.250841595 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.259074156 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.1243689 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124189461 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.203042944 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.225077642 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.209622815 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.129522591 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.17687251 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.128267376 seconds)
  done (took 2.525437647 seconds)
done (took 11.715133223 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.286724989 seconds)
    (2/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.163179167 seconds)
    (3/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.17854924 seconds)
    (4/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.342418543 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.206340379 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.191408644 seconds)
    (7/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.325377972 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.127667316 seconds)
    (9/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.228043401 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.108253764 seconds)
    (11/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.110185222 seconds)
    (12/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.210274309 seconds)
    (13/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.2176098 seconds)
    (14/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.270170366 seconds)
    (15/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.283733466 seconds)
    (16/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.140036163 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.154535411 seconds)
    (18/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.15858847 seconds)
    (19/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.186534649 seconds)
    (20/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.265019228 seconds)
    (21/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.098829212 seconds)
    (22/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.12719995 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.099973951 seconds)
    (24/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.075714482 seconds)
    (25/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.192256896 seconds)
    (26/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.158513729 seconds)
    (27/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.150370684 seconds)
    (28/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.110350658 seconds)
    (29/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.196202155 seconds)
    (30/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.207337332 seconds)
    (31/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.157850593 seconds)
    (32/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.158966751 seconds)
    (33/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.073690261 seconds)
    (34/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.208582528 seconds)
    (35/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.084079156 seconds)
    (36/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.19048291 seconds)
    (37/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.203924807 seconds)
    (38/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.076266796 seconds)
    (39/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.140159254 seconds)
    (40/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.256862276 seconds)
    (41/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.210130983 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.101627195 seconds)
    (43/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.166975083 seconds)
    (44/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.075976872 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.157182092 seconds)
    (46/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110411487 seconds)
    (47/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.185966302 seconds)
    (48/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.110839817 seconds)
    (49/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.109472706 seconds)
    (50/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.252972673 seconds)
    (51/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.139044363 seconds)
    (52/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.190547007 seconds)
    (53/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.166974051 seconds)
    (54/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.081145644 seconds)
    (55/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.159200937 seconds)
    (56/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.109021672 seconds)
    (57/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.074811669 seconds)
    (58/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.21155759 seconds)
    (59/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.186208888 seconds)
    (60/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.103885972 seconds)
    (61/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.194452735 seconds)
    (62/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.110173607 seconds)
    (63/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.076113068 seconds)
    (64/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.125907795 seconds)
    (65/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.190776565 seconds)
    (66/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.101024582 seconds)
    (67/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.194692133 seconds)
    (68/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.199783229 seconds)
    (69/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.191484047 seconds)
    (70/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.084886946 seconds)
    (71/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.10577402 seconds)
    (72/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.127309564 seconds)
    (73/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.110433452 seconds)
    (74/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.140047116 seconds)
    (75/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.083698606 seconds)
    (76/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.098641399 seconds)
    (77/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.175552432 seconds)
    (78/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.082266871 seconds)
    (79/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.254758308 seconds)
    (80/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.132471105 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.126979078 seconds)
    (82/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.122724133 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.105837315 seconds)
    (84/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.123358428 seconds)
    (85/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.124244986 seconds)
    (86/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.184159337 seconds)
    (87/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.210882988 seconds)
    (88/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.153400107 seconds)
    (89/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.100525449 seconds)
    (90/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.170415378 seconds)
    (91/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.109242184 seconds)
    (92/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.075754927 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.124810404 seconds)
    (94/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.109538741 seconds)
    (95/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.115401346 seconds)
    (96/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.151602803 seconds)
    (97/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.076831409 seconds)
    (98/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.1654746 seconds)
    (99/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.107282234 seconds)
    (100/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.116617044 seconds)
    (101/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.139107952 seconds)
    (102/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.132238781 seconds)
    (103/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.086172105 seconds)
    (104/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.105995431 seconds)
    (105/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.075100416 seconds)
    (106/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.076621579 seconds)
    (107/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.130614892 seconds)
    (108/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.189236088 seconds)
    (109/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.075746654 seconds)
    (110/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.09867998 seconds)
    (111/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.109892494 seconds)
    (112/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.168854767 seconds)
    (113/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.122895744 seconds)
    (114/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.1005154 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.112565348 seconds)
    (116/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.074375394 seconds)
    (117/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.098574194 seconds)
    (118/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.075637667 seconds)
    (119/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.106024217 seconds)
    (120/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.102332328 seconds)
    (121/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.101791538 seconds)
    (122/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.079462033 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.10219537 seconds)
    (124/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.17596837 seconds)
    (125/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.075591166 seconds)
    (126/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.075538762 seconds)
    (127/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.075219185 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.104072231 seconds)
    (129/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.106647329 seconds)
    (130/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.075590109 seconds)
    (131/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.075405665 seconds)
    (132/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.123077658 seconds)
    (133/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.146071406 seconds)
    (134/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.189564914 seconds)
    (135/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.132005377 seconds)
    (136/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.131571329 seconds)
    (137/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.100385614 seconds)
    (138/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.075034714 seconds)
    (139/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.074482826 seconds)
    (140/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.136411206 seconds)
    (141/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.075661251 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.103436562 seconds)
    (143/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.085389631 seconds)
    (144/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.099364166 seconds)
    (145/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.109791843 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.103339248 seconds)
    (147/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.083950216 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.138414431 seconds)
    (149/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.106533569 seconds)
    (150/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.074695396 seconds)
    (151/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.126544799 seconds)
    (152/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.076863458 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.103499789 seconds)
    (154/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.077829975 seconds)
    (155/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.075366099 seconds)
    (156/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.101445074 seconds)
    (157/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.076146654 seconds)
    (158/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.077788361 seconds)
    (159/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.168830872 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.125355228 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.10423027 seconds)
    (162/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.075464027 seconds)
    (163/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.075337447 seconds)
    (164/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.124144169 seconds)
    (165/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.076155584 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.108694789 seconds)
    (167/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.107278009 seconds)
    (168/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.09929103 seconds)
    (169/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.123255805 seconds)
    (170/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.075666448 seconds)
    (171/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.074975035 seconds)
    (172/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.07617837 seconds)
    (173/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.108473216 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.102659961 seconds)
    (175/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.077693611 seconds)
    (176/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.111497974 seconds)
    (177/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.101016091 seconds)
    (178/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.082777833 seconds)
    (179/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.111963823 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.101493737 seconds)
    (181/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.107351584 seconds)
    (182/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.11103801 seconds)
    (183/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.075286553 seconds)
    (184/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.132578942 seconds)
    (185/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.099438403 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.103072987 seconds)
    (187/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.122083523 seconds)
    (188/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.124449519 seconds)
    (189/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.112280374 seconds)
    (190/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.083147566 seconds)
    (191/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.076364366 seconds)
    (192/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.132732641 seconds)
  done (took 26.068266391 seconds)
done (took 26.980756631 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.20949813 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.126602023 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.110358794 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.108659401 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.197842612 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.116558446 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.149933006 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.112255937 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.119912151 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.13306347 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.100730718 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123364846 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.107730816 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.201756656 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111846212 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.12719299 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100679872 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.120310765 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.149367026 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.12554423 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.198537044 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103025181 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.119107357 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.125983424 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.17434796 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128107735 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.109928915 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.111488835 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.145860696 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.111390912 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.110218293 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.124786234 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.127183237 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.125210065 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.124551964 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.111235837 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100896463 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.08384468 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.135255607 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111489346 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.122852057 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.13473623 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110710602 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.102129643 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.135585545 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.111701361 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101375101 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.138424707 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.100873049 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.110855058 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128450574 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.12746956 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110076167 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.12248258 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.101607271 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102998177 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.143456898 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104363619 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123438453 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101145687 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.128372015 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102937873 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.11171796 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.126635926 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.112150151 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101339779 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.134365321 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.113902828 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110501946 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128326281 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103622687 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.109557019 seconds)
done (took 9.795345194 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.108052458 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146342884 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.197679037 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.208228734 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.129230669 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.140589698 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.116198519 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.124776328 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.137195201 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.120095006 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.138061968 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.156646509 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.179743778 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.142202173 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.116422715 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.112700784 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.137570724 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.110379121 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.205437565 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.125961345 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.151465104 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.118094766 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.127605918 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.1430327 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.105506125 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.127700693 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.134180906 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.114307681 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.105769251 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.148968159 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.126039254 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.105058645 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.133440773 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124941631 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.146051838 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.117463384 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.116135284 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.139049272 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.107131116 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.106615509 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139502107 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.122254317 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106509658 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.141438229 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.114621887 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.120446438 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.137521934 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.118914954 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.107157824 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.136954091 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.108390428 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.131453406 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.143118851 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122669579 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.116746607 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.144103361 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.12002622 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.117890688 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.134325385 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.120184879 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.105177669 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.131348245 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.108524078 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.151278797 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.110118219 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119235744 seconds)
  done (took 9.525037234 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.125561356 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.136010357 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.141109329 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.119052322 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110526592 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.124518124 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.100092525 seconds)
  done (took 1.813531143 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.102927994 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.182310477 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.206186938 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.207390716 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.178349135 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.21535729 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.148462833 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.102276541 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.136225704 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.136607344 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.183873538 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.235932238 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.111678747 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.142734869 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.184511792 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.126142555 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.185724222 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.128121796 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116049211 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.209225995 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118206417 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.15693897 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.116181932 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.102461184 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.202813791 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.10392656 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.260737105 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118332046 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.13677827 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.115447937 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115235318 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.206217469 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.20472123 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.116565383 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.109487572 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.208780059 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.202746202 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115735125 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.218678994 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.106295007 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.204872723 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.116117536 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116295038 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.143024781 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117158144 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.194836366 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.119677689 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.11655518 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.141416439 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.186399194 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.13919232 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.180379034 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.13936054 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117185681 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.111430074 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.143074998 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123368052 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.116231636 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.213971761 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118183099 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.206303264 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.2086356 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.179077165 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.208137334 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.150794448 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.183807611 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.200635995 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.114616477 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.110127168 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.144056937 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.207991452 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.116871757 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116572221 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.197692675 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119204052 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.209694757 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.20785209 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114120208 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.115382502 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.129647648 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.116693539 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.102315054 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.201223639 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116623709 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113179958 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.146520888 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114518801 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.141961324 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.108165035 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.124830978 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.140042402 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.114712228 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.120548392 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.140952434 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118609267 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.212281764 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.112711372 seconds)
  done (took 15.583250859 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.106336108 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.10441707 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.107654443 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129872331 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.105128358 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.1037299 seconds)
  done (took 1.632820173 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.14087681 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116853452 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.15181377 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.118914398 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.185088591 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.190450867 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.21787666 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111010502 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.158128206 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126876881 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.214200239 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.19028262 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.214596973 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.119573021 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.218858996 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.118023892 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.219644966 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.114915724 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.151901119 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114655626 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.116339472 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.146704179 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115216127 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.206663893 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118603996 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.143575939 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.113031599 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.125312383 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.14962271 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.113513273 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.118711397 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.14349708 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.111964338 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.111748939 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.219299359 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.109153743 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.139284317 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120289713 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.118969572 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.14570121 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.190657673 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.141048078 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.123723159 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.145234837 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.112450184 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.110275567 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.14589193 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.112215624 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.221391469 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121375783 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120024204 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.144087001 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118708955 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.120199662 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.13676027 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111610414 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.143893955 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.195754602 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.144853238 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.110915775 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117625832 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.144670009 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.113883267 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121665629 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.144761917 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120880595 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.109904517 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.143763551 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115781597 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.118003814 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.146161807 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118490754 seconds)
  done (took 11.145960075 seconds)
done (took 40.652789807 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.490364804 seconds)
  done (took 2.46102976 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.905001647 seconds)
  done (took 1.878461412 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.03906811 seconds)
  done (took 19.045679173 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.520072751 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.589015372 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.021045114 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.149665462 seconds)
  done (took 3.25321208 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.051974414 seconds)
  done (took 2.043956719 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.290869645 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.284178633 seconds)
  done (took 1.552250622 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.716661611 seconds)
  done (took 1.707193422 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.533579543 seconds)
  done (took 2.512230822 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.350341788 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.178589792 seconds)
  done (took 1.517341473 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.598429547 seconds)
  done (took 1.589088463 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.403397755 seconds)
  done (took 21.39431801 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.247243565 seconds)
  done (took 1.245824297 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.289743592 seconds)
  done (took 1.292716115 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.572292112 seconds)
  done (took 4.572918761 seconds)
done (took 67.049850042 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.115012104 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.116849324 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.115991895 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.139254324 seconds)
  done (took 1.47622637 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.121962269 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.116781929 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.164258165 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.117472842 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.12329447 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.116645108 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.143422894 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.119835027 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.116288549 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.144365683 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.11786811 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.114826138 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.144549693 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.116750737 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.11562687 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.145770499 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.120211172 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117114887 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.143302783 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.117363783 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118436847 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.144818477 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121215715 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.119009091 seconds)
  done (took 4.044105784 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.114665332 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.10813548 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.108816733 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.132530593 seconds)
  done (took 1.466509085 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.125603226 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.129065136 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.151957992 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124991292 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.128798374 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.15425075 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116895006 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.113546944 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.142906274 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126123014 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.133453537 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.157114487 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.128640711 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.117728721 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.153812082 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112104233 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117079342 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.154353021 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124638101 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.149517357 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.119554377 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.122304306 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.146615191 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.126357139 seconds)
  done (took 4.174266701 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.189221003 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.128099574 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.172182861 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160087662 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.176457041 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.115519376 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.143946999 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.14843166 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.123387285 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.143780627 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.119869483 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.160442179 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.148258227 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.119346845 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115484852 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.147792945 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.128941372 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.120936394 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.187959584 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.1209088 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.149314997 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.130056777 seconds)
  done (took 4.157996599 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.120250291 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.108473275 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.128066683 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.109221107 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.119407211 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.135882549 seconds)
  done (took 1.73258035 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.10801639 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.102483685 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.10214172 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.127954068 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.106805767 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.101552969 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.126608024 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.103577776 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.102065707 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.103404689 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.128206291 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103246046 seconds)
  done (took 2.320705477 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.326328748 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.107632665 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.134752106 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.111406299 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.112616658 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.104763614 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.145169917 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.107642732 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.267796265 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.103069401 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.144789975 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.193396915 seconds)
  done (took 2.869601475 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198482242 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146383348 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312084153 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.364178199 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159190232 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185040358 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.265099085 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187577147 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.200726999 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135532604 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210043953 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156139611 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176513907 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18416155 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162898497 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.157059928 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192356151 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201802239 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166021088 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237048594 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154581332 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19868596 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186020796 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175034677 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136927538 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186734198 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.117285186 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151378874 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162821577 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187102206 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192256535 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148995666 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1380519 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21229371 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253948173 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194079862 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268243012 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130618976 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.18976725 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.189717071 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258554357 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166710376 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184097451 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177164689 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128174521 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214285288 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149288294 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.209557575 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.131859327 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169502532 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201681275 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176339478 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.200361428 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133859312 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30540038 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134454206 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.16531917 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163335438 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211575942 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225770011 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174622533 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.150708955 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200626877 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188774481 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236258104 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.138200408 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.188003572 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122343902 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189051298 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.22941402 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178179023 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184556434 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.226985941 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128042041 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195165877 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166974821 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178332742 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228787654 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168434891 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.144369361 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14862998 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129919493 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150061505 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.183704311 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144919396 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212249328 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156677135 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.340169542 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179232182 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180326274 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15681534 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183352923 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159169518 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17245482 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.09984754 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166580299 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.160221573 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180233481 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12776822 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176835938 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138057955 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.124538037 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175314627 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.12099328 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192308129 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.130674143 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185585828 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166703979 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.155808362 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174528169 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172243494 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.158571455 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190814037 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188685999 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155843519 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130804402 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240675807 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191084521 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.135601856 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198259945 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.193131003 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.174207625 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133213311 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186357411 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189074812 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168234544 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221599438 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136965404 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131787046 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.161686384 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168923797 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18383178 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.151112437 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153398738 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.161256255 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213996772 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.124280801 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164748863 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17654806 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157491941 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124136332 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160752395 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13454862 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.141376869 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.172619154 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.136282146 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179094775 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163820384 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189653198 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151733646 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159052035 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167006541 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15659472 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.165548282 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172769918 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.117467409 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.197206853 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193199858 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153964518 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177475772 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.186571881 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207022166 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168767604 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15497649 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179644212 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152558549 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119012865 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1840026 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166366863 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18563463 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.183647199 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208423412 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.188161083 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.158981154 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174056636 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162719508 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.20965881 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180726157 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.141735776 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195316415 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164948586 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.146228466 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122112265 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.125230424 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160987782 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128316095 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134044316 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199218647 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186964777 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17776539 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192720401 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134666535 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.217009431 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.122931332 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18406721 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.197592409 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137761405 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.212677547 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189589168 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204519846 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139208929 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184448872 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.118906714 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150721217 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.132630743 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158350464 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164088926 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133502525 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166564884 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189366487 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196219745 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144592716 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21849382 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188293126 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.22615727 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120046446 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.155388178 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197479524 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163586863 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.210021624 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13187071 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.181692454 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191071183 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165982553 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214762925 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166255956 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203189437 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189449354 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.1900379 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128004263 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172546903 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15810364 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163518149 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162124565 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171164943 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128306189 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146885696 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.163147968 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136820675 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20590465 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167895183 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174549643 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.18539639 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166577032 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153082656 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138580259 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201258248 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14248359 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.102542595 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192029639 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221769264 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146888592 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180900729 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171066963 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155990417 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.315563212 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214779922 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170416401 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162488671 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13493172 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196567717 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159805209 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186674523 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208960137 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139645786 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231539488 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16684369 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.167839628 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129822287 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14468114 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176287383 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.134204733 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.175261521 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.183555203 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.143004056 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208122226 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135423145 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193357303 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172896758 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.168849321 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.149001271 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136570998 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249744236 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192507643 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168921148 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.19162987 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.164863516 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208079087 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121745278 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153857004 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.131403601 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210822744 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128481908 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200507228 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.168715779 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211474578 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198984425 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160084873 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166052425 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.126660738 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19211098 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146452459 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21180837 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132323644 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.163287937 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187022746 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.152364548 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128506746 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185787499 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268814407 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175149027 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170391687 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.131840202 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.266397678 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156867723 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1302747 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188523207 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167518028 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.1570531 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.179704454 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171740796 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164713277 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161459274 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161442707 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206190386 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183750625 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190805192 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166299267 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.171306609 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156979061 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186994101 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199855998 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143569089 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.14310053 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184240263 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219473925 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.178168011 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.157975907 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165809706 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192933919 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167630373 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197173426 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136021473 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20891006 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125144762 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189211774 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138684004 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12238481 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182779288 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.193258586 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129438314 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203620751 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167263503 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157573821 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125950063 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142474057 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190649891 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136628875 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.156944813 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178402308 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.158192963 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177335736 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233042244 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127943845 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192169647 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144374452 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156442074 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135669593 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1690255 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130653162 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.174843054 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205168273 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.128673218 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20439996 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159375594 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188003977 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180323049 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141641294 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.332828908 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.154797356 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18855247 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176308697 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220255009 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148463131 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198751982 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167773068 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173178059 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16079255 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171411809 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.216939576 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187897801 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.164980716 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156654923 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142119743 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135395547 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.159978864 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148778319 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194748833 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138464819 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.162413691 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.165331847 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169052334 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.144553792 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140046998 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225916951 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174866675 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180509213 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212335511 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134590806 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200603487 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168567557 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155785842 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.161715523 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199277222 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141508931 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176694349 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133416279 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.164588728 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207963084 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.153092711 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156557512 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198990665 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166465781 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197745172 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.131655485 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204544233 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137665349 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200989054 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12663754 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.17841507 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171011842 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13141549 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.154147269 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168253385 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183872483 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.163479145 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169114993 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.174269668 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221951795 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.121824794 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13142874 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296324706 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187733049 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191053543 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.162517201 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135145557 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17135571 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156374868 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.189097761 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167987609 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.127763934 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156688763 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.144198559 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.179923512 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.142237606 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193593704 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168486818 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186208126 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182017214 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.16005035 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.249803582 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168846017 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167865872 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.141526615 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.129038214 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139534787 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160780206 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139960159 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208363872 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237146785 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.160697551 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.17154272 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133907881 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.12401084 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157296398 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164208492 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176284194 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165385238 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172546259 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.10223751 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137390172 seconds)
  done (took 84.93873925 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.160739281 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.15128282 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.167341787 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.220720818 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19167937 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.286957641 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.227278771 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.243001732 seconds)
  done (took 2.743642639 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.118450945 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.157264511 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.139410112 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.141630798 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.109325126 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.436523358 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.129593075 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.144863393 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.15909705 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.150247535 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.135318387 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.526534383 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.114863694 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.142126332 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.120245322 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.133272402 seconds)
  done (took 3.945318096 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.064288746 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 1.03576683 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.86397705 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.294726357 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.248705044 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.199510107 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.743959639 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.187430485 seconds)
  done (took 12.731032994 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.153389749 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.141895575 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.410891624 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.246295856 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.202134156 seconds)
  done (took 2.254942178 seconds)
done (took 129.847585147 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.121984855 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.121539412 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.120819911 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.152058004 seconds)
  done (took 1.602749302 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.172242956 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.089275008 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.090933297 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.116760515 seconds)
  done (took 1.567698634 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.420014937 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.08929161 seconds)
  done (took 1.632411669 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.146193334 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133527071 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.166804493 seconds)
  done (took 1.553026841 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.136908448 seconds)
  done (took 1.23416 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.120823082 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.114741151 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.234448398 seconds)
  done (took 1.569949706 seconds)
done (took 10.261906268 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118765229 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.928229139 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.431292216 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131411725 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.708487523 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.424104651 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.431067868 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.172057772 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17241947 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.137155767 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130285594 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.68853674 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.445693559 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.873318085 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.401680586 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.899845894 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.691157344 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.109772702 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.144602772 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110387737 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.410998498 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.136567686 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110572756 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111013912 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.716348974 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.438426549 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108779714 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.912654637 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109421897 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.111647106 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.424964271 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108936585 seconds)
  done (took 20.944577044 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116865664 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.164220384 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144305986 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110532463 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112482002 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.136780846 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12058632 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120722826 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.199529157 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108313009 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.158553003 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.108077798 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.113947261 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.138401967 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.133748945 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108116918 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.139890876 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.11120556 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116572496 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.138300219 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.130718234 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107110208 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.138809347 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111942356 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109104159 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.158670511 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109469569 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.118943255 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.137926433 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113144364 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.112816705 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.137730898 seconds)
  done (took 5.201318338 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.156582382 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173528468 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145704859 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146458903 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.186609803 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.111534755 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.220109492 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146709604 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.200098071 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109909882 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.129175915 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.136876497 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.150000861 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.108619725 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.162267005 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109426109 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.112324027 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.139385015 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117245593 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.109961818 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.160138116 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108781839 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.13668569 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112925161 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.11053766 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.159032905 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.11127197 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121671703 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.137544706 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114888461 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11472819 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.138526691 seconds)
  done (took 5.507264943 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.123103456 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124234505 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.130849202 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.161161626 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.118819548 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.122195859 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.151220853 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.119082279 seconds)
  done (took 2.15996635 seconds)
done (took 34.918991641 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.133559037 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.127258487 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.126690146 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.151518341 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.184844691 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.144037506 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.124724798 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.114119666 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.148550671 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.128454834 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.108706063 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.114605305 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.155194728 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.118820622 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.216188054 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.122788111 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.220363034 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.187971729 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.144026009 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.125194809 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.116549147 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.221363375 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.118617198 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.114796342 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.216515479 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.111630626 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.210555216 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.117714307 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.146141756 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.111582023 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.1864827 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.150144727 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.116959461 seconds)
  done (took 5.942542875 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.204622234 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.119488503 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.148113547 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.118163327 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.118706169 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.14564319 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.205348785 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.147009078 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.119169252 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.117666841 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.116374297 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.22073925 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.153077544 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.115204118 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.12015949 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.106793623 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.234863951 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.119686322 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.1389508 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.092042605 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.113530355 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.116823358 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.248545948 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.113901542 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.147453161 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.118435228 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.121504126 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.122182551 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.149787834 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.120087352 seconds)
  done (took 5.356801897 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.123999957 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.130588495 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.162880467 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184079039 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.146742079 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.159173214 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.137501372 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.131794677 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.167734302 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.112196752 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.125466179 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.175953281 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128230264 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.120960001 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.144569286 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.130742302 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.132533567 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.142179625 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.120748613 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.1283821 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.161191875 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.129311111 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.133915901 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.149345092 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.110899876 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.117682944 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.150606423 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.126587779 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.118939571 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.154453929 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.114059699 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.114507157 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.141440012 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.146612378 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.1122923 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.153681133 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.137086661 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122568984 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.15343285 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.144392306 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.114163993 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.142538105 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.137332784 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.164291618 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.143174155 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.124892642 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122726796 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.15609429 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.110942759 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130209357 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.181858269 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.11454348 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.131593091 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.140270464 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.111598898 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.119943652 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.14117964 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.116285357 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.126789416 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.142667326 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.137042309 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.119560749 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.121782687 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.144054823 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.123723225 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.112216538 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.140554617 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.116135203 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.137630123 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.149049345 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.148738279 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.111638294 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.152880244 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.1256676 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.122205822 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.15188054 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.112588825 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122415084 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.150367808 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.119033957 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.125227399 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.114088751 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.144657859 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.129218717 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.132102276 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.155783899 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123257456 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.123447069 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.146151688 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.11498974 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128333292 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.143433282 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.117833364 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.124141474 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.14161959 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.116704157 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.124887662 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.152087714 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.111051126 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136579705 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.14442009 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.113419545 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.137393457 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.114779111 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.149520669 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.12229054 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.182043024 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.113983712 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.123841967 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.124934054 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.144396268 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.120173934 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.114861513 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.141610441 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.13109766 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.127460072 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.149507939 seconds)
  done (took 16.783482633 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.313026293 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.26988181 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.209673503 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.303354761 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.159527894 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.206171339 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.29888244 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.300821673 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.112752242 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.179728905 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.163325475 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.270990301 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.144182923 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.140664317 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.300942075 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.35462071 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.173993859 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.149395134 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.179571913 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.12632617 seconds)
  done (took 5.484808431 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.132071919 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.147846267 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.16465684 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.140705991 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.123112717 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.158388866 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.113137948 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133471471 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.15341333 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.122324921 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.114989305 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.157426891 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125912876 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.129719845 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.157359664 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.144529878 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.119170478 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.147446943 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.135396833 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.1175961 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.129192554 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.138215794 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121006017 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.164261787 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.133202713 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.123593706 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.142442608 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.118604412 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.118899573 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.152245414 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.118100663 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.1307042 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.149733794 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.103892126 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.123822236 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.158542018 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.120556837 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.115848232 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.116899088 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.145664879 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128049448 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.12580505 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.150412727 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096921894 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.131942546 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.10758196 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.157139418 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.126000046 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.104342197 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.163304986 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126082132 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.127870961 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.148686111 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.136966597 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.119055327 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.159380376 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.125151303 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.127185176 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.146891806 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.112570291 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.110595385 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.115869511 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.152500963 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.128293806 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.124751532 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.16197494 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.127414368 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.11198007 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.149142008 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.117172578 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.116307852 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.156722305 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.133318008 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.122373977 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.151301247 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.124689632 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.121568445 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.121243008 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.123693703 seconds)
  done (took 11.597450036 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.138113705 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.121699744 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.130724155 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.177808003 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.124932052 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.11906334 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.152228581 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.133466018 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.125861441 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.160123872 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.126708704 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.126767423 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.164263538 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.123584881 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.120368476 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.159113521 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.125285539 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.150457872 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.161185894 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142712356 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.156593732 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.119693174 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.125987797 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.124463185 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.172545339 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.125858976 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.170020905 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.126721877 seconds)
  done (took 5.049481842 seconds)
done (took 51.332696543 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.284136044 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.463628189 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.241949584 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.239499235 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.283303959 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.253155188 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.24163112 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.23751742 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.645607074 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.213150493 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.239609299 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.240277865 seconds)
done (took 28.717977808 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.301217072 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.793487091 seconds)
    (2/2) benchmarking "String"...
    done (took 1.536962723 seconds)
  done (took 4.462527736 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.234315722 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.230878738 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.477117928 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.228274087 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.231032419 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.232733095 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.236180962 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.242892329 seconds)
  done (took 16.008882504 seconds)
done (took 26.137281522 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.276719547 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.393263565 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.469431811 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.233041457 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.264047075 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.230380847 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.234800592 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.247524353 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.231725933 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.247278104 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.641281938 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.493365937 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.228505406 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.587809222 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.231616971 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.251170673 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.246210508 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.462324667 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.233302762 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.263012633 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.206316124 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.207724477 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.26347314 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.230981654 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.233947688 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.229577153 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.287606665 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.246379501 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.414688421 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.260528506 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.258919574 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.235333811 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.280129158 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.233955155 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.246255217 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.243199284 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.410731522 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.238339887 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.212191456 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.259137174 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.422158679 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.252979957 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.231164901 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.258724187 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.230471288 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.274049741 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.214854455 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.365069885 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.258508442 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.241927602 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.317307934 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.631959765 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.23603629 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.234781378 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.233838256 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.450113753 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.248401835 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.285198093 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.261388303 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.235294189 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.232634011 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.256001817 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.301261544 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.23934155 seconds)
  done (took 145.711874117 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.236466659 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.233715937 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.231332167 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.238418974 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.233226241 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.237467819 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.233383393 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.231927747 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.236692852 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.260416794 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.232864793 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.233558524 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.238247592 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.234977488 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.242949948 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.253926085 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.240830199 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.251670137 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.260693453 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.234301814 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.259344363 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.233883287 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.238007476 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.23423591 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.26992808 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.312747702 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.242325854 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.253855063 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.244687003 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.235639777 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.277730531 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.283402703 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.864664447 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.105228707 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.244572866 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.25112763 seconds)
  done (took 81.483617931 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.237588172 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.234555785 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.235158049 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.267757749 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.239366509 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.808387652 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.808003087 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.203531038 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.350566206 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.236569197 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.590987199 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.468433867 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.236461147 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.327554543 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.250361693 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.238044405 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.252022929 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.265885235 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.238317745 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.238351198 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.808948696 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.248867635 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.340033955 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.416382883 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.252391634 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.271927378 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.630264387 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.238096459 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.270176158 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.567860222 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.287123427 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.23596337 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.56355064 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.36005993 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.350889798 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.239656479 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.27075303 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.237081584 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.518349462 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.234978191 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.24006515 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.241776832 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.86094235 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.239395178 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.812976128 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.240427228 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.19333247 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.239685544 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.235735415 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.219129298 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.870663335 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.237133306 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.23983961 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.24304781 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.239829832 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.238015866 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.271877455 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.236329592 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.338310037 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.237828956 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.244797051 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.273205302 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.24174774 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.463435008 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.241486997 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.578867709 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.301031644 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.343534369 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.81238585 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.241504806 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.33623558 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.358046761 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.241465783 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.239667834 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.2407793 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.241241641 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.353193676 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.240125029 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.930447092 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.417199958 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.257038749 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.605867807 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.24687952 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.337754398 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.241620563 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.581768624 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.24564717 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.241812333 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.94329122 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.337139941 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.243209968 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.242320043 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.24147738 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.933670657 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.815538209 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.496256408 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.240588039 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.84565529 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.243917871 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.10962202 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.807764945 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.241856409 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.244599092 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.867675412 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.245446832 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.354395376 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.420123291 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.258564338 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.241187467 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.606323383 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.246506998 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.299640774 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.243041148 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.646092046 seconds)
  done (took 378.406303602 seconds)
done (took 606.736054649 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.116964168 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.073664068 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.22321754 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.077914522 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.057545298 seconds)
  done (took 11.692242976 seconds)
done (took 12.832482678 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.436746696 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.436723177 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.307030718 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.440516597 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.2748749 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.452024584 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.418195729 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.259176765 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.365214023 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.324296789 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.35364642 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.292419896 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.278182947 seconds)
  done (took 18.783632159 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.522902224 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.256367252 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.308816229 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.516006826 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.294748884 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.531849153 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.574852127 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.258652818 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.394846746 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.268822122 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.265146512 seconds)
  done (took 18.340449594 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.523636035 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.258511509 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.310047317 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.50936212 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.295066607 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.537323571 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.566808628 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.261935245 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.391586669 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.267464801 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.265555756 seconds)
  done (took 18.329786065 seconds)
done (took 56.598143978 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.285186465 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.344384657 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.280837969 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.267555535 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.260813506 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.264522547 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.265685163 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.263472043 seconds)
  done (took 11.377096369 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.263697664 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.261658818 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.262229591 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.257943436 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.260057182 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.259774205 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.260009815 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.260571372 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.259859255 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.261356985 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.260479786 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.262809631 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.259877536 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.262819606 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.261392636 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.264659705 seconds)
  done (took 21.325680646 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.266256611 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.262651033 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.263116256 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.262715848 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.262851389 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.263410461 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.264143752 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.266233754 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.262516901 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.26399087 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.26351947 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.26315369 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.264699925 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.263164316 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.263370367 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.268252719 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.26539886 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.26329999 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.267739184 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.262723203 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.262093869 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.261969145 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.262383557 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.263327611 seconds)
  done (took 31.478450941 seconds)
done (took 65.323586441 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.247769177 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.255870268 seconds)
  done (took 5.651975148 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.325156541 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.321457293 seconds)
  done (took 3.797181655 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.264848324 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.263543317 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.264548244 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.265516418 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.262046013 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.265571789 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.263542094 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.264258514 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.265683079 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.262869992 seconds)
  done (took 13.789446235 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.269257673 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.265041663 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.262492691 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.264854243 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.263275672 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.263544294 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.266558736 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.267062476 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.266100445 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.265402418 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.268020217 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.268954182 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.264360037 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.263830324 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.26632979 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.269288285 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.266290548 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.265556526 seconds)
  done (took 23.933485637 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.279537982 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.282310744 seconds)
  done (took 3.711162974 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.392199053 seconds)
    (2/7) benchmarking "second"...
    done (took 1.308268742 seconds)
    (3/7) benchmarking "month"...
    done (took 1.372495428 seconds)
    (4/7) benchmarking "year"...
    done (took 1.361014951 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.30772059 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.288082842 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.307065292 seconds)
  done (took 10.486159441 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.268305309 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.471305678 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.603754049 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.867495547 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.269134383 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.273426171 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.185561137 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.272317977 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.272178935 seconds)
  done (took 14.633710361 seconds)
done (took 77.150127147 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.249980686 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.28477883 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.268435416 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.265788939 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.604659956 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.272923003 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.256023474 seconds)
done (took 16.352130584 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.230521192 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.246687005 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.252412517 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.263106401 seconds)
  done (took 10.142396228 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.253786826 seconds)
    (2/2) benchmarking "read"...
    done (took 1.598611524 seconds)
  done (took 5.004342855 seconds)
done (took 16.296501659 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.266803267 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.266468561 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.265881664 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.264525546 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.268376036 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.26627582 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.269665056 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.267291525 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.267841157 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.268758105 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.267292713 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267511071 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.26775632 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.268192162 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26522159 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270107744 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.26936354 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.266388659 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.267132433 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.268029425 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.266626562 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.267560201 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.268679196 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.269678608 seconds)
  done (took 31.570651921 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.269566865 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.270425014 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.267200539 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.27129013 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.26859556 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.270310555 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.269767183 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.269461991 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.268819483 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.268473598 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.27118932 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.269239065 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.270051814 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.269966888 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.271050825 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.269152249 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.270646543 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.270545991 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.269929379 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.270752794 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.269744077 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269739147 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.270068183 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.272079788 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.271508656 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.273903599 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.271694946 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.272212838 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.271317093 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.271960173 seconds)
  done (took 39.262505531 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.273377151 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.271195566 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.271902338 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.271072173 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.272839274 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.27075228 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.271274991 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.271592072 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.273695613 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.272121626 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.271297241 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.269339608 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.268530796 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.272199036 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.272398442 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.269984059 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.272198206 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.268634428 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.271106821 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.271911472 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.273612764 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.271652148 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.272524452 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.272615698 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.270812963 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.273566914 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.272827747 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.27006562 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.271975754 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.272721909 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.274222527 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.272321541 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.272796249 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.273311086 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.27226146 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.269054231 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.272441109 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.273665669 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.273684561 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.272178757 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.270960253 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.275103842 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.271375193 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.273695722 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.272551222 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.275569056 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.273822909 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.274389907 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.275396985 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.272874106 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.272109916 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.272372133 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.274970407 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.274266462 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.275291197 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.274311306 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.273955968 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.27728177 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.274851246 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.275190088 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.274379366 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.273324868 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.273982709 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.274542441 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.272114055 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.273072764 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.274114752 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.275583844 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.274973007 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.271871437 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.273326797 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.276201416 seconds)
  done (took 92.799143118 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.276326776 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.275578466 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.27578859 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.274619712 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.27651501 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.275518965 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.27567825 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275394809 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.274655024 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.273496559 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276032711 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.277075287 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275117477 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.274470328 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.275797501 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.274756175 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.277079382 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.273751612 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.275655569 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.274978126 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.277668292 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.275101114 seconds)
  done (took 29.218323053 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.273342834 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.277970777 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.277039055 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.275550767 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.278636497 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.276858545 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.273130854 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.278662263 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275362491 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.276996234 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279071362 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.278369286 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.281142312 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275727114 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.278907695 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.278036422 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.275045669 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.280213843 seconds)
  done (took 24.149166638 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.276721999 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.278358581 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.278870924 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.279376636 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.277229418 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.278903929 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.274883835 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.279777841 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.278678386 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.277599857 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.276947705 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279526242 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.278907572 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277513096 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277456822 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.277868002 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.278730332 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278819989 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.278472067 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.277961671 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.279659257 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.278489461 seconds)
  done (took 29.278255278 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.280026683 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.276854749 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.277374669 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.276875544 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.280496971 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.279501425 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.280624674 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.281049496 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.281084384 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.28077585 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.278133131 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.278431907 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.280536486 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.279718546 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.2815616 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.279408968 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.280700826 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.281411298 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.277975373 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.280284117 seconds)
  done (took 26.753591681 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.280536064 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.283733005 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.281465221 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280108992 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282557264 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.282901349 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.281607177 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.280463196 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.280474391 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.282106031 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.279766118 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.28053297 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.282008603 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.282320523 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.280087058 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282921025 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.282849033 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.281654132 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.282174224 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281281367 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.282729355 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.283467626 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.283192556 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.284237709 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.280804234 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.282518605 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.281658623 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.28397953 seconds)
  done (took 37.056537217 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.281331642 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.28189588 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.279664086 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.282903076 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.281551476 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.2799794 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.282901405 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.289002804 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.284553439 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.284077759 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.283257227 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.283045417 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.280471432 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.28311965 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.282787424 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.282941009 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281329846 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.284961442 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.281746473 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282964677 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.283440628 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285300278 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.28155309 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.280725124 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284770593 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.282084347 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.281244539 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.281157717 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.285332514 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.28423386 seconds)
  done (took 39.646582576 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.304383048 seconds)
    (2/2) benchmarking "in"...
    done (took 1.302902579 seconds)
  done (took 3.770546788 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.284027884 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.286458324 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.283408348 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.28301356 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.284547496 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.285333546 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.284370702 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.283241691 seconds)
  done (took 11.440298191 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.278112287 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.283856273 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.285147568 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.286291702 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.285022741 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.277450015 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.284683371 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.289588869 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.278022317 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.276307197 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.279343951 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.28039231 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.282233999 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.278543337 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.280285673 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.280555477 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.287708992 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.285562163 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.286672186 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.285234601 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.285081564 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.2810947 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.283209023 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.291200995 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.278059959 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.287475319 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.287120193 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.290092164 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.27848703 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.286780822 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.280244545 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.288620294 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.286768802 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.286335151 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.284786874 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.287541784 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.28639475 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.28748256 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.287180761 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.291669198 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.287847001 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.288904526 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.281623925 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.284332776 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.284224909 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.291418463 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.289834675 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.285659488 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.280277452 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.283921654 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.289828904 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.279799578 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.28856323 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.282585727 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.286171613 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.292114797 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.296435281 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.281040603 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.28410349 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.286625876 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.295805861 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.291462494 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.290097946 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.292588648 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.285387582 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.28948351 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.292366958 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.295203825 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.288630759 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.29012309 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.289155503 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.301540563 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.294199658 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.295698975 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.291490712 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.289774579 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.284219801 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.29248311 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.292713619 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.295272877 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.296504754 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.292177596 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.288242794 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.287991486 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.284811184 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.295213869 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.292107909 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.289210178 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.282400687 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.292804139 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.299287639 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.292326596 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.284187448 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.285169813 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.287991155 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.291167378 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.283060042 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.286990676 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.293352781 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.29158269 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.292459263 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.284774961 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.289238521 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.299606765 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.292238711 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.29318975 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.298218735 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.285675341 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.294485777 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.297992547 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.292169033 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.285575577 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.288939129 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.297232059 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.282477005 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.288001624 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.297352142 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.288694497 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.297934452 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.292839731 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.286378502 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.295412061 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.297158255 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.290149188 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.286949752 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.296729107 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.293490597 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.290623262 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.295334692 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.291671356 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.294506947 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.287225653 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.298849009 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.287607055 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.297276545 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.288370228 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.296468674 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.292594946 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.295389689 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.288553245 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.292473993 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.291162371 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.291896695 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.294386321 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.300200612 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.289680787 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.301539574 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.295390184 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.292038417 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.296151347 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.297529056 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.290459981 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.289836957 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.296163863 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.286774078 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.296671109 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.289377893 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.297129429 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.295504555 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.295043947 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.295712073 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.286661065 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.292082455 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.298331805 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.293626023 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.294568524 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.299397247 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.297189666 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.294341254 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.29022008 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.297313079 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.287125939 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.289845495 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.300273733 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.293700138 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.297707082 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.293824172 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.299725215 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.296627322 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.295419783 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.28922509 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.292535614 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.302305617 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.297862523 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.305019386 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.296446901 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.297126056 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.288235555 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.292817546 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.300215028 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.291479554 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.301639018 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.302310808 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.303850062 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.294298125 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.297963765 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.288694417 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.297728119 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.296167674 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.304758882 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.297113591 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.296999594 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.290870652 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.30155876 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.292242581 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.303745893 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.289494196 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.297074954 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.298496706 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.29753169 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.299549456 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.293951505 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.296875474 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.302039664 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.298015634 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.297366094 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.292552235 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.300455409 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.289091791 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.291184949 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.301988432 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.298931387 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.30037448 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.306200342 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.295177147 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.30208929 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.297340645 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.292378618 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.302847521 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.295730908 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.299137366 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.305369739 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.301250888 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.295388924 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.303924689 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.300777548 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.295641658 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.298804003 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.30916214 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.299050423 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.294578501 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.303592751 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.300966347 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.300293798 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.302679069 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.295562409 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.303756546 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.304277363 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.306996154 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.294656077 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.303436006 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.295262294 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.301855358 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.295641752 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.301471305 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.299188496 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.304946912 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.310018583 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.302813534 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.296433477 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.304350021 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.301758913 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.29857836 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.295487697 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.305576582 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.301393052 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.305293806 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.299296065 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.299602772 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.30526171 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.296616316 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.304788547 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.295722068 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.312294589 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.318235347 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.304106319 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.30703591 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.305623525 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.302992525 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.307905506 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.296371367 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.29531939 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.298476905 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.298443495 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.299720714 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.304663733 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.295568693 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.306322308 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.302716214 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.302979534 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.303378956 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.301497943 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.297607655 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.309755726 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.303457762 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.302328268 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.296301688 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.306605434 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.299766464 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.304519748 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.304038825 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.299625727 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.310096989 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.311848088 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.302645919 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.302913062 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.30099892 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.295914225 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.299375557 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.3073362 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.29721327 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.30712825 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.298733705 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.304475979 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.298724824 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.30906216 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.315547892 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.300134374 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.308648036 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.3053276 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.297060857 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.299563514 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.309037653 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.308673957 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.319078827 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.296536224 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.307193911 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.305852828 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.305374566 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.306187048 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.302644498 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.307477661 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.305224001 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.311286506 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.312361384 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.302144733 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.308133356 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.314359706 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.303932423 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.303499187 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.298941105 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.308932504 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.314287882 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.30245294 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.306176326 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.300627298 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.307299059 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.305631727 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.305281395 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.30649902 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.306503201 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.311101281 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.312620147 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.31035243 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.307279712 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.310334728 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.316615177 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.313006748 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.319401465 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.303410107 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.313794449 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.308170299 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.300722446 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.302186103 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.303820787 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.310822574 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.300510394 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.310629085 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.30774974 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.306645341 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.308185187 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.315614992 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.301236329 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.309553601 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.3144385 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.299347122 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.311420455 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.308523172 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.302442849 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.313061505 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.311473029 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.299812789 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.303413862 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.303218582 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.311172804 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.303870335 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.313675003 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.302945055 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.313466303 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.311042256 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.308303872 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.309358484 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.308452528 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.300528596 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.311473455 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.310544951 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.318792669 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.30421956 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.309927467 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.306033199 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.315369801 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.320974841 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.307275002 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.315923172 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.311185414 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.306024515 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.308424402 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.314612724 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.304221465 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.313200733 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.304098926 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.30534015 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.30606051 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.313066306 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.314596646 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.316074383 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.304826595 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.307660598 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.312672701 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.315041109 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.313573403 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.30610692 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.318620747 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.301435514 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.304626654 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.311489447 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.3062057 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.318842056 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.302653358 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.308123579 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.308022589 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.315861281 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.31298149 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.312920402 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.3036373 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.306077029 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.317062598 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.317272315 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.309278424 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.307638094 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.314428639 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.307982114 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.308609608 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.310550587 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.307660901 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.306729823 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.316143149 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.306388306 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.307922848 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.307983614 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.314506323 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.316495849 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.317358086 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.307673531 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.321672395 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.322061001 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.321295045 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.306559756 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.309606087 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.31040104 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.317229646 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.315980759 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.30723959 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.323446683 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.319830527 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.318261994 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.312070565 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.315203869 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.30998001 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.316418195 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.314584033 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.312710727 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.320767896 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.310441359 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.320933746 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.314827462 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.315596419 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.309889871 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.309581032 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.311585875 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.312246129 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.317462208 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.312713862 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.320516697 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.314487838 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.322625694 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.31670772 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.31813228 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.315738037 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.308012204 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.317565453 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.309428633 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.315644964 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.31848893 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.310493756 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.316912409 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.314078924 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.30859549 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.311960308 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.320454451 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.316141106 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.312365703 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.312892983 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.32003625 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.328741897 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.315414339 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.310564613 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.31500321 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.320675008 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.316804962 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.317374294 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.310478223 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.325687683 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.331509104 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.314785493 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.315881069 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.321892077 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.329028435 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.316562299 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.32140687 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.314280281 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.318780057 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.320844595 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.317335903 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.320670833 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.325538518 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.313628847 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.320074864 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.309611437 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.3147002 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.318659613 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.331553324 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.31886448 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.313326691 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.327068627 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.329536279 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.316733358 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.330296913 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.327490317 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.318790107 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.324508772 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.312900205 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.322055437 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.316260952 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.327788587 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.320445986 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.319956822 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.317400845 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.311206656 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.322555443 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.324766841 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.329086667 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.318460332 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.314579616 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.314504513 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.322557842 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.322301535 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.323673867 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.321563115 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.320773533 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.319688429 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.314774001 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.332664399 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.335166398 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.32753505 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.32136874 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.321377695 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.32193403 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.325453001 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.317787323 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.326735663 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.321141393 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.323172589 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.319825046 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.332073052 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.324738746 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.318789595 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.318297386 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.318070097 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.326172233 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.330201922 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.339326033 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.325653765 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.324237651 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.324311474 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.323778011 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.31603902 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.324713502 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.320662234 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.317497205 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.318028325 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.323128556 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.325184355 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.322327118 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.315318866 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.326535696 seconds)
  done (took 778.137560172 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.323009723 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.322124433 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.321790158 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.323951782 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.322071227 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.324754861 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.323502924 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.323468224 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.325179309 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.324095696 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.320880854 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.322887139 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.322977799 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.326247161 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.322974332 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.324468634 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.327936149 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.326705641 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.325723572 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.323722 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.326162956 seconds)
  done (took 29.003299081 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.324692171 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.324473921 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.323056483 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.326717249 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.324955603 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.323912949 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.325658546 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.325123535 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.325556307 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.324854188 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.326193089 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.327092487 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.323731768 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.324908596 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.323952091 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.324997304 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.323855956 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.324036781 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.324060114 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.326654296 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.326116904 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.327386411 seconds)
  done (took 30.350705912 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.325365401 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.321493882 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.320361665 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.328099451 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.325988144 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.32624686 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.325842423 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.324922236 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.327843355 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.319828009 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.317143392 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.319832102 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.323485879 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.327514995 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.325021408 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.331374399 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.323565195 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.325492055 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.326827675 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.324930799 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.328645924 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.339374666 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.32811184 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.319866356 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.328633816 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.327475899 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.328189984 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.326641179 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.319579238 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.328131311 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.326642763 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.321479359 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.328453719 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.332976398 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.320795377 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.328220774 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.328438756 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.3280849 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.327651112 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.325136009 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.33691247 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.329838522 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.333475848 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.340306477 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.329460147 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.322498344 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.332783675 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.329142639 seconds)
  done (took 64.89042606 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.330886883 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.329323259 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.328787207 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.329683295 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.329232484 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.32933892 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.330160026 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.330488749 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.328825439 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.326768833 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.332410981 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.329000164 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.329863431 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.330751174 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.332834375 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.326902406 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.332283341 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.330563721 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.328957772 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.33080189 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.328992858 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.332858148 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.332123047 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.330526141 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.332056664 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.32875301 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.331847728 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.332160025 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.332269565 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.327676194 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.330704784 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.331412556 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.329028597 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.330501995 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.330897145 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.330431216 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.330515943 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.332372776 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.330549875 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.3315791 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.331402869 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.333069672 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.330353713 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.334144258 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.333778205 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.332140082 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.332607892 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.331782682 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.33137402 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.330979888 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.332887577 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.334066846 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.330976427 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.331121086 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.334079222 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.331774613 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.334107673 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.333341465 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.332857658 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.33519057 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.331976782 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.333595701 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.334303318 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.333088382 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.333027214 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.333641193 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.33351492 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.334596168 seconds)
  done (took 91.740359736 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.334329421 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.33690135 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.334134498 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.333299738 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.33632088 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.336384813 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.333627805 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.335652608 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.334600737 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.332724616 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.333910356 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.335085122 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.332881177 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.331349656 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.334425558 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.332198796 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.333039668 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.334711317 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.330278475 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.334713643 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.334100599 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.334011924 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.335301411 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.340342291 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.336891683 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.336835955 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.334532192 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.336267264 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.338660553 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.334813694 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.336410949 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.338803428 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.337361174 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.337090592 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.336315801 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.340983827 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.337147225 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.336925046 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.339356937 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.340451807 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.337463411 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.339326519 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.336756578 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.33724017 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.335004458 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.33637239 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.335051359 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.334473466 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.333685408 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.335205283 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.33590083 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.335755747 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.334111847 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.336302626 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.334506627 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.336778962 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.334215719 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.336471154 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.336363827 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.33518741 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.335795275 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.334944585 seconds)
  done (took 84.019871439 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.333879816 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.336041709 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.334000271 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.330313574 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.335277394 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.335014945 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.334240219 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.333652877 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.335359428 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.333972666 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.335945116 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.333965915 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.337808246 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.334391632 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.332403479 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.333611318 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.334709255 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.334728263 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.335290291 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.334049046 seconds)
  done (took 27.897168813 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.334167595 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.332712997 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.334022273 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.335494659 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.331623154 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.33187742 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.334076795 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.332077894 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.331957786 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.33203884 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.336037681 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.332938091 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.333615125 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.33595508 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.333923315 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.33305783 seconds)
  done (took 22.541105409 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.331364771 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.334459597 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.334172038 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.337484171 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.336007274 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.337197129 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.33177211 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.333263255 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.331905441 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.334893581 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.331983274 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.337800436 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.334429555 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.334683178 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.333383209 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.334812067 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.333725561 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.335056177 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.334109189 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.334059265 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.333285627 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.336013346 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.335813374 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.33455035 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.33361119 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.335381972 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.332525726 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.334651758 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.333424535 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.334686772 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.333894854 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.335391146 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.335356296 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.33536883 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.336254452 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.335318402 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.335652941 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.333399024 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.334927937 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.334161308 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.335012418 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.335895452 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.337589217 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.335043506 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.335772233 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.334576853 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.334504446 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.335736168 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.335670001 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.336787839 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.337025693 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.339131207 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.337678153 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.336461905 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.334965775 seconds)
  done (took 74.629654289 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.338266709 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.335680369 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.33645478 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.336160114 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.336817672 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.338765952 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.33751023 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.338463831 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.338658253 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.339676167 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.337492982 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.340696434 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.339807031 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.336335423 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.338147289 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.339280366 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.336401834 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.337915319 seconds)
  done (took 25.293886652 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.336813791 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.336521658 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.338116874 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.337233829 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.336339169 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.341799921 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.340498384 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.338647475 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.337833092 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.339517916 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.336902346 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.338103876 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.339835582 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.339619848 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.338363426 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.337811704 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.340752192 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.338869864 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.341349517 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.340021546 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.341582757 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.337223608 seconds)
  done (took 30.662813918 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.330183795 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.329164184 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.329655447 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.341512341 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.337700409 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.329098722 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.331124724 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.329208416 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.34811116 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.353706318 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.351093381 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.337288393 seconds)
  done (took 17.257743762 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.338414785 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341654586 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.340692117 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3400283 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341990657 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.340827992 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.338901602 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339292363 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.340519813 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341077698 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.340028251 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337719717 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340036326 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340349036 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.343983388 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.340637384 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338575444 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.343517036 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341846149 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.342598519 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.346355784 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.340330757 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.343032901 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.342632479 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341374399 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.343295075 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34264217 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.339921207 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.343621721 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.342641753 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.343977468 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.339803062 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340900255 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341771722 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.341059862 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.341217928 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.343699922 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.343467873 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342569961 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.343735529 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.342622013 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.343205829 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.342635582 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.344675455 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.34614507 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.344211487 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.339021907 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.344644476 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.346253202 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34522459 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.344845874 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.342946027 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.344518449 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.340528994 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.343016088 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.342692552 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.34588481 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.344943696 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.344190846 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.345306965 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.346017283 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.345734874 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.346043915 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.342862075 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.344246523 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.349015167 seconds)
  done (took 89.825798069 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.345497927 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.345143021 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.345370749 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.346483366 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.346121823 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.346516851 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.346915533 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.342786679 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.343718674 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.344288183 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.343579242 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.344210471 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.345467073 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.344116571 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.345715124 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.343966635 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.344779937 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.344829437 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.34246961 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.343939923 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342666653 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.345583513 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.345615982 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.344366958 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.343582966 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.345099364 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.344017854 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.343387159 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.345382552 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.346209093 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.345536544 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.344376849 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.345531924 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.345931156 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.345444114 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.34839913 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.344224327 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.344312391 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349241778 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.345455791 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.346927399 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.347954282 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.347423186 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.347453594 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348378269 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347083906 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.346412803 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348098973 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.347303831 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.344670133 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.345437596 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.346677075 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.347376495 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.345596932 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348705848 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.347363213 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.345182093 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.34668801 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.347970467 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.345161838 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347667661 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348346223 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348564403 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.346880259 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.346457472 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.34783129 seconds)
  done (took 90.040667421 seconds)
done (took 1822.38777392 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.504692036 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.456898664 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.336955582 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.340555734 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.33829265 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.335368364 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.350197091 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.338812344 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.339079311 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.335854522 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.338927471 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.528668676 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.371814664 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.341765439 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.33651245 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.436126613 seconds)
  done (took 27.249087723 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.371106516 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.352606172 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.463679563 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.348606644 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.368990447 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.542242421 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.407368983 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.346682849 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.517212178 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.368392132 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.340584094 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.372319293 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.341447057 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.338183445 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.365842351 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.534615604 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.614933168 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.346709012 seconds)
  done (took 29.558281427 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.800675307 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.340199642 seconds)
  done (took 5.361031271 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.369176253 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.34899348 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.3464469 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.347460863 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.337099898 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.339872125 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.347122703 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.336108707 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.365149752 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.479190066 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.355611283 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.361247066 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.364529087 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.346730725 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.356932933 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.391510415 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.515201456 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.355838735 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.353366257 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.355245845 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.348903955 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.442050872 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.392897638 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.361808924 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.475493912 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.354617584 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.35417572 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.356919725 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.462301258 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.359767764 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.34862684 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.350688777 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.348279418 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.298046633 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.896612225 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.343590877 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.387061528 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.354686021 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.354999046 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.495929093 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.349775528 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.356117873 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.342194826 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.89266628 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.452983734 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.46581797 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.359338787 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.361709891 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.349471274 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.416341392 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.348737686 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.352164864 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.408962722 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.14133469 seconds)
  done (took 86.287375622 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.351630631 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.344250531 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.525476473 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.362508545 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.3433337 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.359495578 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.342471361 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.635561126 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.401259405 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.346913848 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.665821239 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.983838462 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.352883123 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.412109436 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.374967773 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.401884091 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.342159096 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.369096076 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.338509022 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.345820887 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.920172458 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.345169783 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.341157553 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.431323838 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.381333714 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.877629768 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.343892285 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.359114358 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.360970978 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.341311199 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.933793976 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.344549948 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.387419094 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.345236701 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.631286711 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.733809932 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.704634052 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.352908897 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.387831797 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.346169903 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.368574392 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.88139004 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.728712611 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.361263933 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.349381112 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.870768335 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.344620793 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.354743524 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.353937815 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.611017633 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.346316305 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.34385553 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.342678362 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.360687051 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.344787174 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.415301063 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.423344427 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.884301297 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.342863647 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.345571836 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.356017389 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.348461957 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.345845233 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.350162725 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.346669351 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.721404399 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.612346688 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.349913569 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.716049792 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.925291727 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.342354008 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.015378086 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.347179112 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.363130887 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.392262442 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.346500403 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.343071643 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.880614803 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.351796741 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.343705831 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.696522213 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.346829009 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.64886266 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.362718037 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.347221092 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.948233317 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.359816305 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.393795215 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.345943746 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.360781679 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.342074962 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.351152701 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.639517358 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.404222103 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.345110294 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.343932195 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.351793376 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.343360182 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.361790499 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.35719915 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.000733884 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.359007122 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.344837143 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.367731986 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.343929919 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.349555289 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.346519351 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.349940502 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.632902804 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.344321881 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.34885475 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.346547173 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.359024224 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.356210566 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.437671575 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.34462014 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.659501835 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.345053982 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.343950916 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.349306284 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.346580598 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.388606812 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.343694989 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.345813796 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.34695678 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.649082661 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.361203917 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.358150149 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.344439641 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.344505161 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.344593225 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.361275878 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.393302409 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.34957218 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.225631069 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.354598608 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.367205302 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.34575268 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.352576811 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.346955388 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.366794477 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.34880524 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.652258248 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.636931922 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.598881468 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.349523022 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.348161802 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.201049924 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.354174892 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.53255901 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.366831452 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.350924224 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.629302645 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.58198291 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.349728679 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.347285698 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.350757386 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.628418015 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.350216388 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.690129326 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.967185935 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.352570214 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.352808522 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.220540624 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.167919349 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.349218455 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.348540109 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.646934385 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.364606087 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.349317076 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.353586195 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.348023033 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.347148134 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.354221722 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.35156305 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.350302023 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.349616985 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.646756288 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.544365388 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.365230304 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.35174598 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.88646627 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.373969087 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.349313878 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.359748433 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.350442184 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.348068309 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.415094219 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.350592779 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.35697784 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.35087839 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.35624981 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.917308248 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.349484692 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.365478587 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.545463914 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.131098353 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.356323251 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.347784698 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.347196277 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.404290234 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.912042735 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.402447726 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.661544409 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.360912103 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.392350945 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.351061011 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.361079458 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.918183113 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.358718917 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.362993456 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.097632073 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.351510092 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.831040191 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.355633547 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.346009733 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.010015635 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.355644182 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.355798404 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.351536259 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.365454696 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.686644344 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.353954343 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.362097962 seconds)
  done (took 502.81293159 seconds)
done (took 652.486270259 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.350165766 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.350743921 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.332515041 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.351843582 seconds)
  done (took 10.613875808 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.365389356 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.357036916 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.36508961 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.360402445 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.368846711 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.358233733 seconds)
  done (took 9.400126627 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.353220734 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.349036311 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.359125105 seconds)
  done (took 8.286520836 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.56359239 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.36806219 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.704038339 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.360321536 seconds)
  done (took 9.222871648 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.364502437 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.370348484 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.370798586 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.368320982 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.366167557 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.374566366 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.367490015 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.371181116 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.370848 seconds)
  done (took 13.550271882 seconds)
done (took 52.298629867 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.562469499 seconds)
    (2/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.429438963 seconds)
    (3/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.42643531 seconds)
    (4/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.330057847 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.604073022 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.42282626 seconds)
    (7/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.149720123 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.503468437 seconds)
    (9/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.706908268 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.390995111 seconds)
    (11/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.378719278 seconds)
    (12/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.410313369 seconds)
    (13/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.358738133 seconds)
    (14/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.472981728 seconds)
    (15/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.33951411 seconds)
    (16/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.518779558 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.462683576 seconds)
    (18/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.452921631 seconds)
    (19/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.607500191 seconds)
    (20/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.59663283 seconds)
    (21/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.327929576 seconds)
    (22/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.43638767 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.456664557 seconds)
    (24/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.419714923 seconds)
    (25/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.336684271 seconds)
    (26/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.337577867 seconds)
    (27/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.439866626 seconds)
    (28/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.385685107 seconds)
    (29/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.547965382 seconds)
    (30/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.426087953 seconds)
    (31/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.330398588 seconds)
    (32/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.39679145 seconds)
    (33/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.532874596 seconds)
    (34/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.575942745 seconds)
    (35/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.335855528 seconds)
    (36/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.336717399 seconds)
    (37/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.518128202 seconds)
    (38/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.456002306 seconds)
    (39/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.441501938 seconds)
    (40/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.567635374 seconds)
    (41/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.334939468 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.52265497 seconds)
    (43/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.491318459 seconds)
    (44/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.536807853 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.503216546 seconds)
    (46/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.425936894 seconds)
    (47/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.345343644 seconds)
    (48/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.388077592 seconds)
    (49/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.394451058 seconds)
    (50/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.031799175 seconds)
    (51/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.567694462 seconds)
    (52/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.490678348 seconds)
    (53/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.453480297 seconds)
    (54/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.52122668 seconds)
    (55/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.36021414 seconds)
    (56/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.396609042 seconds)
    (57/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.325201393 seconds)
    (58/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.098748557 seconds)
    (59/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.336860683 seconds)
    (60/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.478965025 seconds)
    (61/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.326319288 seconds)
    (62/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.436508493 seconds)
    (63/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.327618215 seconds)
    (64/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.370361446 seconds)
    (65/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.33663177 seconds)
    (66/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.363340786 seconds)
    (67/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.054222153 seconds)
    (68/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.333280842 seconds)
    (69/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.174516793 seconds)
    (70/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.328904643 seconds)
    (71/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.458077565 seconds)
    (72/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.352598371 seconds)
    (73/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.4027374 seconds)
    (74/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.440810959 seconds)
    (75/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.318318085 seconds)
    (76/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.371592621 seconds)
    (77/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.505304247 seconds)
    (78/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.607626555 seconds)
    (79/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.47114492 seconds)
    (80/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.39292722 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.590399069 seconds)
    (82/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.435705444 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.462460392 seconds)
    (84/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.470482495 seconds)
    (85/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.453338559 seconds)
    (86/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.115039309 seconds)
    (87/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.217089442 seconds)
    (88/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.334266647 seconds)
    (89/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.427260455 seconds)
    (90/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.539666742 seconds)
    (91/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.384365382 seconds)
    (92/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.331545758 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.474387332 seconds)
    (94/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.386288129 seconds)
    (95/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.359373481 seconds)
    (96/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.433988839 seconds)
    (97/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.332803587 seconds)
    (98/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.505905633 seconds)
    (99/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.33119998 seconds)
    (100/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.371242739 seconds)
    (101/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.394553504 seconds)
    (102/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.394125272 seconds)
    (103/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.331564065 seconds)
    (104/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.471187834 seconds)
    (105/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.116798857 seconds)
    (106/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.340750139 seconds)
    (107/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.41886304 seconds)
    (108/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.331750553 seconds)
    (109/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.347711413 seconds)
    (110/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.063741556 seconds)
    (111/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.401304678 seconds)
    (112/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.188769886 seconds)
    (113/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.419981083 seconds)
    (114/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.472527397 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.453043703 seconds)
    (116/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.505383455 seconds)
    (117/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.506137591 seconds)
    (118/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.327638795 seconds)
    (119/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.537820901 seconds)
    (120/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.4053042 seconds)
    (121/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.387992543 seconds)
    (122/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.430032748 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.453039074 seconds)
    (124/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.472824675 seconds)
    (125/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.337322127 seconds)
    (126/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.569056251 seconds)
    (127/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.212289645 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.512359623 seconds)
    (129/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.561641775 seconds)
    (130/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.471323615 seconds)
    (131/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.094731398 seconds)
    (132/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.497203853 seconds)
    (133/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.44550785 seconds)
    (134/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.332643721 seconds)
    (135/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.513749106 seconds)
    (136/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.444311185 seconds)
    (137/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.44027741 seconds)
    (138/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.189680569 seconds)
    (139/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.202844932 seconds)
    (140/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.423238067 seconds)
    (141/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.520944216 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.465427142 seconds)
    (143/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.342515646 seconds)
    (144/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.141803212 seconds)
    (145/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.392153288 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.604089591 seconds)
    (147/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.364806457 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.482116734 seconds)
    (149/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.361342017 seconds)
    (150/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.173155702 seconds)
    (151/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.386132432 seconds)
    (152/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.33757095 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.487800022 seconds)
    (154/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.33889033 seconds)
    (155/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.104849345 seconds)
    (156/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.341298178 seconds)
    (157/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.191278697 seconds)
    (158/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.337647704 seconds)
    (159/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.53988634 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.42179069 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.477973365 seconds)
    (162/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.157853472 seconds)
    (163/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.242476996 seconds)
    (164/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.465365987 seconds)
    (165/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.334540876 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.393800178 seconds)
    (167/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.384821713 seconds)
    (168/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.33522117 seconds)
    (169/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.484150538 seconds)
    (170/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.252909011 seconds)
    (171/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.196621992 seconds)
    (172/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.433619422 seconds)
    (173/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.608081572 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.503357169 seconds)
    (175/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.339300377 seconds)
    (176/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.5011607 seconds)
    (177/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.621791403 seconds)
    (178/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.475909553 seconds)
    (179/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.438886561 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.510266128 seconds)
    (181/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.475987603 seconds)
    (182/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.439607126 seconds)
    (183/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.504235171 seconds)
    (184/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.391854886 seconds)
    (185/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.337905241 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.477577921 seconds)
    (187/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.564785252 seconds)
    (188/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.539338804 seconds)
    (189/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.397610947 seconds)
    (190/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.479148025 seconds)
    (191/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.342906341 seconds)
    (192/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.392250666 seconds)
  done (took 344.565493162 seconds)
done (took 345.791081781 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.387534221 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.454088757 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.368843284 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.370029901 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.372165354 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.359595845 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.389215221 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.370820933 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.384356454 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.379942353 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.359941258 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.378586173 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.385980852 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.382058869 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.399773 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.367548358 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.368824508 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.382579922 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.384247214 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.386849635 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.374394848 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.37174263 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.399431112 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.369856173 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.379796757 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.37573174 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.378764608 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.372933387 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.376759857 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.380361175 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.367621387 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.376613523 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.38767613 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.376406025 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.36933639 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.3803699 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.371140901 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.461955358 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.39303663 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.381786017 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.378773155 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.383490149 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.372647083 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.375650715 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.380621015 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.396173906 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.37638111 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.380700855 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.362365028 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.362099094 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.385594714 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.380779041 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.375802485 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.359512007 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.36089134 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.386074681 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.379884659 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.3895548 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.378880291 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.368773366 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.404460719 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.390847749 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.383498756 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.379958576 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.377741137 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.384110485 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.380258748 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.387059065 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.379449251 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.369080962 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.370833372 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.378223747 seconds)
done (took 108.636144622 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.487189642 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.361298372 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.532825125 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.378545064 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.533295667 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.498424679 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.3799952 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.377546914 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.375765378 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.176318224 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.378466192 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.376911288 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.366574927 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.378071913 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.490452649 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.377545212 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.37595867 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.074488544 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.378649763 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.505594887 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.368475338 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.376909318 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.379458398 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.175283204 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.364503867 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.363895909 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.505675698 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.376639283 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.078300476 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.360995932 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.366966684 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.078599802 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.503231811 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.403173608 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.385603436 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.389589301 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.533533464 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.384047909 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.493303067 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.490947238 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.526461031 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.417519417 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.361825337 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.368527633 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.379533895 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.37633136 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.380069214 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.402165059 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.370074335 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.379883733 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.077716953 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.389413396 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.377489742 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.379812838 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.381304499 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.409756786 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.384215702 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.381211792 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.50284657 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.380879195 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.495750012 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.178090186 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.176061943 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.381785671 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.366575067 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.384487602 seconds)
  done (took 111.033553323 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.440828927 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.45111649 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.479141619 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.372108954 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.419492432 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.481880403 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.371235083 seconds)
  done (took 11.257627277 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.375752318 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.38128083 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.417848872 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.420125677 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.381864204 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.564668129 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.379267112 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.380631736 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.380567934 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.421418964 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.381392027 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.380240027 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.386880113 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.369446557 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.414915161 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.381886136 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.489362411 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.372673143 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.380452448 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.521868095 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.380809172 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.389618071 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.422721892 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.382708296 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.381769933 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.374983589 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.19885712 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.380575198 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.378599629 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.381224655 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.379812363 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.437021969 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.375971926 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.368850375 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.377825675 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.485963199 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.381230785 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.378414819 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.377827233 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.373725509 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.381757138 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.380261447 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.381810632 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.380036839 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.380811178 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.395685358 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.381360585 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.378591877 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.378047658 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.379917382 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.420840726 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.380201587 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.381064238 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.379096254 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.425785579 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.390144715 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.380723804 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.377816568 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.378910558 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.38179236 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.524031345 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.418034266 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.381395156 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.418947716 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.380134205 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.381458524 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.380088562 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.380222093 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.462693896 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.383264693 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.419164917 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.380242162 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.552441956 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.399437861 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.38481534 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.379489237 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.379489147 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.387492239 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.372452608 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.380815325 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.381504208 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.377034678 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.379259143 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.384419756 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.38340943 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.535321384 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.481961934 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.383489984 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.390946316 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.378516419 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.38364061 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.427760072 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.383774667 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.386131733 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.42366919 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.494389889 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.428467512 seconds)
  done (took 141.901014411 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.386438125 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.386901677 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.380085842 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.405827283 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.378291832 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.381152931 seconds)
  done (took 9.568961557 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.379673694 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.39155215 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.386745029 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.389768049 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.390088911 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.391173507 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.386404338 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.38160472 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.388718728 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.388772051 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.392926073 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.392703708 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.394710577 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.392617813 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.390930527 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.388338514 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.38746835 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.38996675 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.386299587 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.387492343 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.380015382 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.389024013 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.390637684 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.384607563 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.394226022 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.386871321 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.399823159 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.391817552 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.38531401 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.388673691 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.393682814 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.391620495 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.381505333 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.381018058 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.395526659 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.379735946 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.394733298 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.394591436 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.391314122 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.393335136 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.397402893 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.392109651 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.390703922 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.394275957 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.381544484 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.388472718 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.397957244 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.410594683 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.390658904 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.394522729 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.391874678 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.392076161 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.395905086 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.400013155 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.385052645 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.388676407 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.399617564 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.396045278 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.388485022 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.383364268 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.393069833 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.396400209 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.387899645 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.395468518 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.391137131 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.395751003 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.383316747 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.397638489 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.396857006 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.38957751 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.393766653 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.396982479 seconds)
  done (took 102.385606164 seconds)
done (took 377.386921281 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.816486353 seconds)
  done (took 4.060515117 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.476747817 seconds)
  done (took 3.728530771 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.02188146 seconds)
  done (took 22.282083454 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.386398618 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.3888325 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.384770779 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.383456028 seconds)
  done (took 10.798262638 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.770808745 seconds)
  done (took 4.02355466 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.385479262 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.386408049 seconds)
  done (took 6.025284354 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.590023855 seconds)
  done (took 3.841662862 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.788875489 seconds)
  done (took 4.047650549 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.407341733 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.407108559 seconds)
  done (took 6.076185477 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.35582416 seconds)
  done (took 3.608267542 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.893009204 seconds)
  done (took 21.148057255 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.402408942 seconds)
  done (took 3.655931137 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.433198799 seconds)
  done (took 3.686371183 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.822904733 seconds)
  done (took 6.071997345 seconds)
done (took 104.303840037 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.377244795 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.379212739 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.37756604 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.378510877 seconds)
  done (took 10.763599808 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.457349719 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.455068911 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.465153567 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.453477863 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.454165791 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.460567172 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.4209541 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.417505007 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.451267375 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.447241029 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.46380711 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.451554205 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.460479544 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.423794069 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.446977544 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.465724052 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.453409834 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.465569697 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.422076537 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.457138611 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.39613102 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.454616593 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.449176914 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.399508243 seconds)
  done (took 35.947030405 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.888951749 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.459650756 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.545402349 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.437674983 seconds)
  done (took 7.580477952 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.498521853 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.502373132 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.518503843 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.55487428 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.584337589 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.511388349 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.417852803 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.41979094 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.405636548 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.498199237 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.586233009 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.502085081 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.715076811 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.400457834 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.710821902 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.401111729 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.399308056 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.502974095 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.553072976 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.579426614 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.39513182 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.497967829 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.503665065 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.501841128 seconds)
  done (took 37.415717853 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.406119229 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.413302851 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.399592752 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.413723276 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.399611363 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.402990524 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.400989146 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.407716222 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.402115105 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.399838163 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.401606132 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.413654745 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.400417421 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.401281076 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.406227089 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.403773721 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.401041447 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.409062007 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.409464392 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.398869851 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.398440019 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.407382384 seconds)
  done (took 32.152913087 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.382869926 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.378702267 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.73755478 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.640588596 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.388119369 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.388641913 seconds)
  done (took 14.172284873 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.450172896 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.588746098 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.389557996 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.725091864 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.803179086 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.388034684 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.391148908 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.627555986 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.911268268 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.89394883 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.448652876 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.457818807 seconds)
  done (took 20.332817615 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.390816238 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.387416291 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.399948909 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.400077816 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.443418572 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.3953178 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.402647437 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.384455467 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.444531853 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.441776932 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.398280355 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.444974375 seconds)
  done (took 22.188619555 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47837348 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.395012261 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.394343395 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396719875 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398607041 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.394705889 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.41521362 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.110009696 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.401479869 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.675051939 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397198746 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480734457 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.642267293 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404397814 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.399929707 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.33456991 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.625504687 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859601862 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399822382 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40206256 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434717628 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.411236732 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.401653455 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.600253668 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.401638629 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399074007 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.661835121 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.398558704 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.664352053 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.637374888 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.640670116 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406765486 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672182439 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048498572 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506283735 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.59417495 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398797738 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.403253803 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.397044692 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.40297485 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405185793 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.417868806 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.635266874 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4035854 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.396500815 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398624201 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127462108 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.407081532 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.398068958 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399593024 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.639975595 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486933227 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.409589606 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.398971652 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469187013 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40380474 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.4074196 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523932822 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040668359 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399796247 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404215318 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.398555183 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.386806191 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401512777 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028483582 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.407354948 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.403336551 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.406935718 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401041331 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394790554 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.439103285 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402954771 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.421193946 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401842112 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.137345935 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.403576271 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404756016 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918302783 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401794244 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.403412965 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.629670524 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399768222 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400770476 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.401931485 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400983474 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.097739834 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413887632 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.367948823 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44299769 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.121895215 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.604042728 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42205895 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433188056 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.620787235 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.371378489 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403958174 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.419729025 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406768559 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424063477 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.127171012 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406996277 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.408674491 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650467278 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.612191551 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412054699 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.356487878 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.870402615 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415636279 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.428441622 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.405597342 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.606859462 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.998403839 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.65059666 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409680964 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443118755 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.404341364 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.167665247 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41502487 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.4153058 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.405933536 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679660724 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.176798215 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409882235 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478928397 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412872548 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.403961944 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406179529 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425438037 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.40565237 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.582400977 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423561804 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.64828436 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.409185788 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406517176 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.416923521 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407798298 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.409943778 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.629158273 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409130187 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679364845 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405365777 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408812683 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407012966 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.625773801 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.405816683 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.427712968 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.745721758 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416321269 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.418196332 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649660971 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446386482 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517237093 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435564471 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.414002671 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.655604889 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.411787269 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.412776845 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422035826 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.414095273 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407955937 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.41530858 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410199219 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022335519 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384433269 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.410970323 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.410299485 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.422054792 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479805379 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.418677198 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.610193641 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.417291262 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420961131 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.419767838 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.420522371 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.635449965 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.648772913 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.410411615 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.58530493 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.876757953 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.007308492 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.423313355 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.408816195 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.409057041 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.410763664 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407746548 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406778138 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.408946349 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.610761362 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.65854729 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.412329812 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.015308298 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411727586 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.420068805 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.421623034 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.646806866 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.421099607 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408544236 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.41042415 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416100009 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414679408 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.650181675 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.635894661 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.42112837 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.410191497 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.929099373 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.418873001 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.409635746 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.413764257 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437328925 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.420163233 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252558174 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.749800937 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407314987 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.670591278 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.417059139 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.431605277 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.410050632 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417299088 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410219572 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.450288351 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418922766 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.610988004 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.416090647 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419366133 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047073243 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.16893835 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959614472 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41721366 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.423980626 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.41738262 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.145811668 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414836452 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413274697 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65586885 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.13440177 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416429768 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879134139 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.414768716 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.147977232 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.662532127 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.638345137 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425105458 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.412486122 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.664697453 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.625012925 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438242139 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.410767287 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418840235 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.380653553 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.945072473 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413201168 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.601139715 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.144024542 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430248077 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.420483843 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.485688605 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.419090326 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818074096 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.416411935 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416063062 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.423047271 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.423460478 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254096335 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.420656408 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412480708 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040858553 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.417558382 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.891291767 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419773311 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.616036947 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.662963274 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.638433604 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.433891535 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.427475425 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.660312939 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.657746738 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419553979 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.419356625 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970074834 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.268721468 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.424974166 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415538621 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.184209443 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420274536 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.690459331 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.432731822 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.426926548 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426841532 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.421712287 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417925271 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.416766353 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.426999029 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388940425 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881298084 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.412026205 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41967762 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.436856875 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418987403 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.664358769 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.433004006 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.0241812 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.642868434 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407710892 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446228432 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.421743927 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43267669 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.38778503 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.417101671 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.421328879 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492406562 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.63472719 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.422550915 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.391204919 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.425026476 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.63243284 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.415903 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.421692318 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.634688357 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.422652632 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.440521153 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.189180014 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452729255 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.415170302 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42244853 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.428789874 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455924121 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492847308 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.617805068 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.666931442 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.671271997 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810168806 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423025319 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.430046237 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.435593163 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503790487 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429005238 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.433269101 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.425838954 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.020835863 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.178684038 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.032847573 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.670549681 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.422499777 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430877938 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417322559 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.661536302 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.421755579 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.700408632 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423133996 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.411834236 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444225613 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419392462 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426235573 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637255608 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694432939 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423538721 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421220129 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425112214 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.420318725 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.670160563 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.63840643 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893447707 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95730622 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429443865 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.419910327 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.126552685 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.695834513 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422498787 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.424843471 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425024808 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.445001349 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.435195104 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.43347237 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425471229 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.649082116 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.669650375 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078760963 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.671347025 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.612997232 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.428304931 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423375274 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.677639387 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.263552789 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.622922035 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.035349886 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.13272291 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.679472671 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498871457 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.624094836 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.428522877 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.665766044 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.427137986 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.431332997 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.427095637 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424964136 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.420476906 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.667244338 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.034821899 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.680466683 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.432937989 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.423128044 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.458408227 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.628655105 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.651067659 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.137864084 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.652021194 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.674147734 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.439248935 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.425249297 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.046920353 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.676005246 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430765729 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.429630712 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.642043099 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.426176115 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.462252421 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.303618862 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.423854706 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954944674 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.643722751 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447696528 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437676901 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.144020174 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.04176214 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.429229475 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918992592 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.435774316 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428620879 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.704543652 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.434374703 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.432322476 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.711903219 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.430193823 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.429848712 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.63373066 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.030177526 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.172436328 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.43211937 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.449873338 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.436292651 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427640261 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44292935 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429867451 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.437780931 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.816595055 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.431708582 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429670979 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.438560559 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.432183264 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432111281 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.432634393 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431393836 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.435850469 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.409951571 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.420670429 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.431639264 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.553518968 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.972274463 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428991623 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.043843485 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.768099952 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.674351168 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.429605944 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.400185939 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.437351679 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433333653 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428655719 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428242168 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.420771361 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969432522 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.435783511 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.681385773 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.440543358 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.641968502 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.643783959 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.433374912 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.642989717 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439809041 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.449361442 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.396874749 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426484034 seconds)
  done (took 999.556850824 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.456049919 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.434207394 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.435169165 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.485468712 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.467665215 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.545025046 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.501189451 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.514861042 seconds)
  done (took 21.129959465 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.432476918 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.432352929 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.42778103 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.432313898 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.433368648 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.893232851 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.439677754 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.430511933 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.447992786 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.430988635 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.423817713 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.042786094 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.431224874 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.428086255 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.436278467 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.435036654 seconds)
  done (took 33.295088041 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.135762067 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.4568724 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.946286378 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.459242673 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.440124334 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.437576244 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.555613407 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.438039173 seconds)
  done (took 26.157268439 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.43901724 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.436159585 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.442976331 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.441048968 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.439898127 seconds)
  done (took 8.489432284 seconds)
done (took 1270.434903879 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.440119209 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.441927555 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.440848312 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.444775903 seconds)
  done (took 7.050864982 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.402720322 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.400271308 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.402629576 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.418260932 seconds)
  done (took 9.912674119 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.087349787 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.939651941 seconds)
  done (took 5.317206029 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.982456417 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.989235261 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.978560569 seconds)
  done (took 7.239566276 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.714558426 seconds)
  done (took 3.002761532 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.425737644 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.441894042 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.175383725 seconds)
  done (took 8.335618147 seconds)
done (took 42.148855115 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.426582465 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.189969176 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.58931933 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.427696543 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.585396632 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.584122305 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.673137914 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.425819017 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.446417575 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.430793096 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.423694754 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.590173376 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.664888121 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.18634706 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.661362525 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.191767249 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.58599606 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.434423567 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.434551799 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.429938588 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.6697006 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.422751263 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.43737074 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.425467614 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.590730879 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.575085771 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.427071175 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.20125616 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.434506193 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.42504285 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.572604579 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.430718603 seconds)
  done (took 84.285340861 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.425559532 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.434930583 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.428721964 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.426256508 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.441269778 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.447901444 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.427484681 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.426863363 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.430576536 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.423207186 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.4224329 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.441803353 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.440766306 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.42360346 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.443102936 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.429570192 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.439992609 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.423646794 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.425446051 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.447650158 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.430081768 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.431131917 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.439299463 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.439288191 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.428053793 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.426632483 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.44561872 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.441150513 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.427613242 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.425624349 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.428416494 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.44595086 seconds)
  done (took 79.15298153 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.431192323 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.439289932 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.442378859 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.42909905 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.438039693 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.434441702 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.431074143 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.429537462 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.451470427 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.433167223 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.428393478 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.436224236 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.429619268 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.442183438 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.424172463 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.443245152 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.43397899 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.433836775 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.438359506 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.43087537 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.428733366 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.434635778 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.427980101 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.437989096 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.431662953 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.428586512 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.42905641 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.444570203 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.428069092 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.444436122 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.443544429 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.429925461 seconds)
  done (took 79.204287734 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.674511098 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.446514226 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.454621953 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.439837179 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.449872704 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.447980871 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.443169372 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.677144444 seconds)
  done (took 15.329758756 seconds)
done (took 259.26216518 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.441515085 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.936152249 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.472909248 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.442615732 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.460915711 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.471864407 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.658634755 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.474584846 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.664463096 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.462461337 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.454147776 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.453812021 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.222030897 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.59170468 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.267165722 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.415974025 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.304423443 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.444639563 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.995996683 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.71941994 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.471251875 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.435423437 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.300118967 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.322445388 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.415898087 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.539991673 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.536613464 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.669211712 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.60405109 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.518205325 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.931827521 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.4649563 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.454870948 seconds)
  done (took 66.316124914 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.439865097 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.451224276 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.453713948 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.451769051 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.452600547 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.451444921 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.440530816 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.452099524 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.454737178 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.454039454 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.450745632 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.455673779 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.451111215 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.451680759 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.45368631 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.421670344 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.445456316 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.451685901 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.440523655 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.422449861 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.45314536 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.452494759 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.453690773 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.45041427 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.448878223 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.451958498 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.450568516 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.454080609 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.453702565 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.450711382 seconds)
  done (took 44.765776609 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.454320181 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.013926418 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.171236415 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.454583096 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.444348273 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.448702631 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.727180894 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.459801619 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.449940357 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.452249344 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.913264619 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.454719176 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.476630914 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.186956773 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.450566032 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.457882798 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.455275808 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.44511375 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.025352722 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.453915604 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.729568079 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.455758466 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.72528586 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.459627728 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.451386842 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.449579474 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.45520844 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.247579055 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.470288126 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.913581568 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.208002037 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.727716207 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.178234856 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.229275221 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.204210221 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.460901787 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.454237857 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.923883518 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.454624666 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.451313821 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.72773958 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.450205914 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.187123629 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.130978357 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.467322726 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.46065647 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.273575527 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.922088801 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.686153687 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.457894931 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.222242218 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.454354198 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.460286953 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.451200953 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.684660059 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.455226775 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.447063154 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.299996341 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.45487369 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.72679808 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.461840732 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.448859868 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.02203308 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.445456286 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.023653571 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.4504387 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.457136429 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.45312803 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.192536731 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.453426211 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.14768103 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.464979721 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.460640509 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.919760696 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.025128678 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.312172042 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.452322613 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.030154451 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.202463123 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.742989205 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.452084715 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.223907437 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.749216552 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.45489726 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.466944978 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.465230727 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.459946142 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.527451648 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.731265747 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.075715006 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.145059019 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.313818661 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.735280143 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.460621437 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.455964384 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.305192607 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.467386855 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.464672114 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.190019222 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.157942803 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.467878701 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.463671624 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.145743921 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.469176617 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.736902216 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.461292015 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.240555293 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.459575242 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.574801474 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.463686059 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.460239956 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.456339567 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.735039422 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.461375727 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.462620379 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.133663747 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.945045829 seconds)
  done (took 201.379886696 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.447800317 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.44821202 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.447390385 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.44671964 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.447606046 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.459242747 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.447624683 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.450886181 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.455238866 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.44751773 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.450090261 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.460560387 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.455592682 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.447980672 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.454740659 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.468779616 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.452512192 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.456416083 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.467158207 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.455921862 seconds)
  done (took 46.375823113 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.466240227 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.007737154 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.970727494 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.467123036 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.466749499 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.458226308 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.512565104 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.470045095 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.467489184 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.753574603 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.6239696 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.472909624 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.470636108 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.464536679 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.969577703 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.442771123 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.751997203 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.012022768 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.469895963 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.008406877 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.439454608 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.466049394 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.456412412 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.002103699 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.757894649 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.737124834 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.515655058 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.010277566 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.464841867 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.469343528 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.010231357 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.471544124 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.460472954 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.992686665 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.465952614 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.481495568 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.468421727 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.515198415 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.511659878 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.755536405 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.012093024 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.746185731 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.483109558 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.622746952 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.472484725 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.438733252 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.022594151 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.471726773 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.439413915 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.469899022 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.472413191 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.982643628 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.462191887 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.985612329 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.472823416 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.467488263 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.013870771 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.984298487 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.977739845 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.630179497 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.457876856 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.739068465 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.472271439 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.016177028 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.467588924 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.469588171 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.469814615 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.629711624 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.018568226 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.741564036 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.756226695 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.764821856 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.474413796 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.527988737 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.470146953 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.758265145 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.531855073 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.850359671 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.758619564 seconds)
  done (took 131.497135104 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.73392359 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.570762693 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.830590895 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.033400607 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.952174149 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.605078809 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.569655843 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.700463962 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.469452669 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.575891032 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.098346868 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.554475566 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.191451345 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.52464466 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.564858447 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.58041419 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.848657576 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.419289763 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.089963295 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.075918781 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.469400104 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.567502111 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.980849774 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.662355026 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.46974079 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.023894399 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.36928649 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.975778758 seconds)
  done (took 54.824714606 seconds)
done (took 546.457668921 seconds)
SAVING RESULT...
DONE!
