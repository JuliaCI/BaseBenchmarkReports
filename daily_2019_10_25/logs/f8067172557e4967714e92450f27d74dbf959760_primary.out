cset: moving following pidspec: 19764
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.286371479 seconds)
loading group "string"... done (took 0.596717992 seconds)
loading group "linalg"... done (took 7.036458682 seconds)
loading group "parallel"... done (took 0.162625308 seconds)
loading group "find"... done (took 1.090413656 seconds)
loading group "tuple"... done (took 1.820805223 seconds)
loading group "dates"... done (took 1.185105743 seconds)
loading group "micro"... done (took 0.212622065 seconds)
loading group "io"... done (took 0.909136487 seconds)
loading group "scalar"... done (took 36.083894057 seconds)
loading group "sparse"... done (took 11.14258643 seconds)
loading group "broadcast"... done (took 0.903824162 seconds)
loading group "union"... done (took 11.77058808 seconds)
loading group "simd"... done (took 4.114215534 seconds)
loading group "random"... done (took 8.456057945 seconds)
loading group "problem"... done (took 1.853363296 seconds)
loading group "array"... done (took 19.713425169 seconds)
loading group "misc"... done (took 1.625972657 seconds)
loading group "sort"... done (took 3.066553219 seconds)
loading group "collection"... done (took 16.384251006 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.486231265 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123302891 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114093402 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118433266 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.145233009 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114047636 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122534762 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083727756 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.788336745 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147368561 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.1193135 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.415781026 seconds)
done (took 5.076043634 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173617874 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083174328 seconds)
    (2/2) benchmarking "String"...
    done (took 0.08108248 seconds)
  done (took 1.294225248 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065071886 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122040392 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067231801 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066514318 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066986373 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066018723 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066314037 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066429194 seconds)
  done (took 1.651857917 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073552214 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068475383 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068506809 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068576293 seconds)
  done (took 1.410052187 seconds)
done (took 5.735161184 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.766674001 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201752797 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182073468 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.397246483 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.128836389 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.153994731 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.636712287 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.316135354 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.18334639 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081387911 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104188684 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.317448437 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107343296 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.637761815 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075783211 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090691621 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.139907092 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.404512422 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.06744936 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081688482 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089008793 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127797912 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.091596195 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074104279 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143700558 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067889243 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.133598037 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080009209 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067156593 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.207392012 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171781204 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.669457938 seconds)
  done (took 10.16651877 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095789224 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.09726342 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069083514 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136513986 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095962234 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069379663 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070959757 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066822224 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086600876 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128001029 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088271148 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101545365 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065867618 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068853606 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084124905 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204367185 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080108112 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081323768 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070292354 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075230193 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.119323018 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077798389 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078508396 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077659872 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128517138 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.18012514 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097796848 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097514376 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066889196 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080189787 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114854252 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125595768 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065001252 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066037994 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123971937 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09419221 seconds)
  done (took 4.599005349 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.294311465 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140308757 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090777495 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.132501229 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.109838961 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064906455 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.10661477 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065714658 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080733909 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.200085875 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.375055733 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.576763758 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111444971 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103720181 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06795943 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068396654 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066905376 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.355285192 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.109787397 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105335523 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081356015 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070405596 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068815604 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.402368705 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068165199 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064088394 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068574961 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058024451 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06494501 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123958411 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067784407 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.92053014 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124403334 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066291377 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100522838 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.166397918 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.219072952 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.143590891 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069068182 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064164127 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.151392901 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070070344 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066557646 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083013293 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103293666 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112872587 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066075528 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066753392 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161991818 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064716847 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079291483 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.981371763 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154129945 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078035501 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064079489 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.247179458 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086190987 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069892999 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065305336 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.17128278 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134589976 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064272867 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067338256 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066796136 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06798464 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069101929 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.379066533 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067949431 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.686712705 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069860092 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076990328 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069341303 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069517762 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075343725 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072446436 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084989671 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066099845 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075269035 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066099033 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066088117 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066875115 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083952584 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.357382326 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.0663761 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068228769 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06448585 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.08583739 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096244927 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.06664476 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064968356 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099989621 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.171248258 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067120083 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106047222 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067220196 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084795915 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070021562 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113547968 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068437595 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064260301 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.083343966 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.072594029 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096525372 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069774183 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09936264 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081856472 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068041705 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.397976401 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065402103 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064892216 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069228928 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065742019 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067770499 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066921995 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.07914055 seconds)
  done (took 20.971167289 seconds)
done (took 38.161222713 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.233572866 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076341596 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075087318 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075643077 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075404878 seconds)
  done (took 1.75997596 seconds)
done (took 2.965215204 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119499115 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09929053 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064540177 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095852322 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064039834 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099548225 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098698933 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081122343 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098872478 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064216459 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09585174 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064509146 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063899158 seconds)
  done (took 2.332299383 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082663522 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082690945 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069630168 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082114039 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063992179 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082305415 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08033405 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088114141 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080556855 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072061677 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0633852 seconds)
  done (took 2.044342539 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08162304 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083524001 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069889174 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081095901 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066253236 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080586731 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080882088 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085085018 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081037971 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073451865 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063770601 seconds)
  done (took 2.041435147 seconds)
done (took 7.610098546 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077172319 seconds)
  done (took 1.265594725 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.585905923 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.082184528 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081140254 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112045325 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183470017 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119036969 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.277865912 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.08698878 seconds)
  done (took 8.896881467 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.101492387 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072130307 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068786565 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069857998 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069371951 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069150446 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.06857826 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068512787 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069206644 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071051773 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068523496 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07060845 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070775363 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071727354 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071570339 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071972143 seconds)
  done (took 2.412749245 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091860567 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090246577 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073950236 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074398113 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071793337 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071988083 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074402657 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073459119 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070333478 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072070824 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074389727 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073473925 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.0714317 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064909132 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074298682 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07539604 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071030808 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074272314 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074557501 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074242456 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075013595 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064697407 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071613849 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073799165 seconds)
  done (took 3.070843746 seconds)
done (took 16.843010236 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113853215 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071437274 seconds)
  done (took 1.380916926 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081714457 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083678475 seconds)
  done (took 1.367293212 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083366816 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066188305 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091446547 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078780243 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066138243 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066153127 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089408517 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066516046 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065585208 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.06658743 seconds)
  done (took 1.942903338 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068408884 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079255901 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070894756 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081141305 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073793374 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064471744 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072935481 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067746258 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078626653 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062836289 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07156425 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082478339 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071657098 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084310342 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072570261 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068805865 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071143204 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067405548 seconds)
  done (took 2.514995549 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065956922 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067275023 seconds)
  done (took 1.343936505 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066971892 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06341626 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067250167 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066807238 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063474357 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062691158 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063716654 seconds)
  done (took 1.661832066 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.381751492 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110475293 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.298883355 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070631208 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081195482 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.248593092 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064980904 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069981341 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070318387 seconds)
  done (took 2.648134356 seconds)
done (took 14.069146347 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078491597 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085578345 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095070819 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.362196493 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.09167242 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066021029 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113312539 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.190048072 seconds)
done (took 2.303317211 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213445142 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.610466024 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.387031815 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.196940989 seconds)
  done (took 2.408242269 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.328026593 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086123552 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059609355 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066580568 seconds)
  done (took 1.762726261 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065341961 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068630342 seconds)
  done (took 1.353742989 seconds)
done (took 6.956508178 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082660831 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065868416 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065797547 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065792891 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.063432012 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065588245 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063491946 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063434874 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065597891 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065608429 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068380844 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065560317 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065447723 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065414697 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063100143 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063061677 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065170945 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063287904 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063514081 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063004336 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062713109 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065683686 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063112464 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063228683 seconds)
  done (took 2.821294564 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083000582 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066445035 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071343443 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.07116162 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069745828 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071021779 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073924947 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06628539 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071570383 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067808254 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069372498 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069624124 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067674359 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069647661 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067387652 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069578425 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070759739 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065835617 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067651125 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069961398 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071128725 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065953174 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070246145 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070868428 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069060834 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070805898 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067821483 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066401879 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071122235 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069388318 seconds)
  done (took 3.319847085 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069248318 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063698691 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.065212154 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070657768 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063655597 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.06505801 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062848272 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064014927 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064388571 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063116327 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064435831 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062960043 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063302882 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064588288 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064110155 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066588368 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078505084 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063482941 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063386869 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06399986 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066836323 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063498478 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063219051 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062958581 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06339593 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062941847 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063814532 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063156717 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064240058 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063270605 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.17849221 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067172232 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063156016 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070115312 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067448824 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063144884 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067062578 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062874346 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063749294 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063246102 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062809336 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063543412 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063154335 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069748836 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063291522 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064940567 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063162915 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064078303 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063886738 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065809589 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062775095 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063072948 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065049169 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06444525 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067381044 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06227792 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063956275 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062658954 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063572714 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062802418 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06265234 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062433175 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065271211 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063441593 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077202168 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069461281 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062934927 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06517456 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063782158 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06534239 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065182292 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07648715 seconds)
  done (took 6.022426103 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090137011 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087129535 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065921882 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065266099 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061866167 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06364938 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067294072 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064076018 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065021795 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069335821 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064003121 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064667536 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065189765 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076655055 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063980477 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065472599 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069421838 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062023837 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063741045 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067479623 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063743458 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067078421 seconds)
  done (took 2.73446526 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154744555 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070667498 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105937144 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072741745 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067227218 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072957252 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069378954 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069842756 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069965485 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067704417 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0678426 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069299511 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067519442 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067754896 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067669469 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067600878 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070040454 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067917848 seconds)
  done (took 2.600520792 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077177405 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065696762 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085776064 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065556001 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06587376 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067602832 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070589077 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074047927 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068151541 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065774961 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.07371309 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068206797 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067707913 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065608731 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067828509 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065626431 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068146879 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065864546 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073919736 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070540824 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07036001 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073799773 seconds)
  done (took 2.771893258 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079800593 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067961921 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082892131 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068929782 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061692053 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064016002 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069838991 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065945275 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069782709 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067649731 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065767548 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06392935 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.06931396 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065547041 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069397012 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065513472 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06766122 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065735928 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067548557 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061967775 seconds)
  done (took 2.597190262 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086493582 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067674593 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068239314 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076148517 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067163983 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067383977 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074696531 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066759931 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067102455 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08690803 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066915525 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066675282 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074681987 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072006869 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067065471 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074528133 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074771562 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074578396 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066894983 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067195716 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086621269 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066825126 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074339726 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067152003 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066872947 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066865959 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066708624 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072222861 seconds)
  done (took 3.238636823 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065930429 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066447026 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063322835 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063699473 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063364947 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063443547 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063675181 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063354989 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065851544 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063497341 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065752586 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065272098 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065770384 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066299045 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06576204 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06542539 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065950951 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063322624 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063211212 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063432268 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066031354 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065629117 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065277564 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063331001 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062977143 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065583235 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063209298 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063326928 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065515236 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063301314 seconds)
  done (took 3.178369368 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074662618 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072956699 seconds)
  done (took 1.389063279 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063851306 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079949519 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063525945 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07006556 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070120916 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066273836 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073380348 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069707194 seconds)
  done (took 1.794838848 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080671606 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076975998 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067071995 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079826351 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076269558 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082637314 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132107354 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066599612 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072906562 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064002298 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079326542 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065417458 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072080956 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066441939 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071496815 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07203494 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063829816 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.07237857 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068101614 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064750237 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067230489 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07502572 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068337111 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06134326 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06688568 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087924044 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076932478 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065910967 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068968528 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073548241 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072170161 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060288168 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066088099 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066336992 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064120825 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075287862 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080919625 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068641157 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07441804 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066900768 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07626147 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060913671 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070275128 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072420106 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075619584 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065835586 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066253027 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061010077 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063690374 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067962392 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061178409 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066200392 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06060714 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07584648 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069685021 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076783753 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064685193 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067591079 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068884342 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069450536 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07278055 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068055126 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068908933 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065602492 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076182194 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070643192 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075141516 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061322312 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060366222 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064695373 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075829559 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088200176 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072024473 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066459355 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066882198 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063842569 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069287283 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066962926 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071406629 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072386904 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066148657 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07216794 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073431344 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066757056 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068465713 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.07384472 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064163702 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068795545 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063836708 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082058708 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064767547 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06452274 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064299449 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07675691 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069521571 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066056007 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064216342 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073445973 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.05992274 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.06639783 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065744975 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065581419 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075556793 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069531833 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069973255 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074072242 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072532075 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065284528 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067969635 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061999942 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065784655 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064183091 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072176117 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059554674 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067782251 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066921483 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065687155 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.200428874 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065234487 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067843654 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075411315 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072535243 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065926227 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064021295 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070746363 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.06677579 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070008387 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074160019 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065607264 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062237508 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061919288 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070630865 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066864821 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069991378 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071276379 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069123267 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061345381 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065078885 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.07194363 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075391196 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067391443 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067529849 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072491286 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068247888 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066381804 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072521187 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069211126 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066730266 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072062454 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068090158 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062213044 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070011122 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069874666 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066120562 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070287731 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070189547 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068530407 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067224066 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065774948 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074069914 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067747961 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065594006 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066836791 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065472715 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076790704 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068639513 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06194123 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064147411 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.07637 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064695513 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066558226 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065596549 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068710192 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067298149 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064737195 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066263461 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069153615 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076748317 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071361653 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067427292 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072325352 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077494735 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066416515 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069289472 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066484694 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06759939 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067185353 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075188663 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071728326 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070738715 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068775942 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063411274 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071762863 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073842533 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065582452 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064042646 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066280961 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070117083 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071611098 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070199252 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066741945 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064826917 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066701884 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06947955 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.0688702 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065548814 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065384673 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073132766 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064651848 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073717372 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066804092 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075908456 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069022687 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.0611133 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069166161 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064283009 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071937171 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061342439 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064539381 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065182451 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066731196 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064443742 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067276823 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059411341 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071295281 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07235586 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065181499 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064507665 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065178874 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071784681 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06675408 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068593317 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068598726 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070976354 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075183728 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064300229 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.06836162 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.203731955 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066725308 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.0611356 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072104 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065317484 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065841631 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065821653 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065361967 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07002331 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075666209 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073790903 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060678225 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069140639 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065917595 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066456621 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062325884 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071664039 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070434885 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068168797 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073705214 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068675639 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067788176 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070917331 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066111361 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067975483 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.0686395 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069851729 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.06728362 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069031647 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066680425 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069430035 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.0663335 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064826242 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069040318 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066933616 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067840313 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072409362 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066992835 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067602717 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.06895218 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067317924 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067584455 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06743297 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066646106 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070331154 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067713363 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067378701 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069498522 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062417757 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073839985 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066228255 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074676588 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067325857 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063361424 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073706123 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069120893 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072064341 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067203377 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067409273 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067747208 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066369609 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068864385 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073649318 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064498631 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077095052 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075242984 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067985483 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069358605 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067178264 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068209001 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066034791 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067592515 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067394193 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066754194 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066398202 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071574914 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068491198 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066506013 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068098621 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066913321 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06619964 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067191681 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060855436 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065879529 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.0660675 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.0663594 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076013216 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067173366 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066192213 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065676092 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067373559 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065148156 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063271798 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074687156 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075835965 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066919576 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073006683 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065461063 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067846399 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076414513 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060242702 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06420899 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064107253 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063839564 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073544105 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066861739 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07472154 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065489871 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06519493 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06273104 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066380589 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063435832 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059388855 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.0626429 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068558136 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063928187 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064281172 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064939688 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067590631 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065512441 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074813675 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064496744 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066162685 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065091613 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.193748501 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065878069 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066698766 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070134673 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067777192 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064785015 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063937174 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06569876 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068110864 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068557663 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066591559 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068298588 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076612344 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066603779 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070006147 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070516023 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061805437 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069570909 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067361088 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067288948 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066232961 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070452352 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070614498 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067938461 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075758351 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066195681 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068239425 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06692052 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065244294 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066692994 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067170867 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.06699565 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066677441 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068281947 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074999121 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064959213 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070509987 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066936062 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067631719 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072727879 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067894275 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069858729 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074113955 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067004483 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068493375 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074541894 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07064139 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070353357 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067577267 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068661057 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07297261 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066237138 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073749648 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067153751 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067697282 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068516708 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064773166 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067018464 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066393296 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066089359 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072784197 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067723315 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065591103 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06597318 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063598474 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067378428 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070511459 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074438382 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069005118 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070280552 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061789807 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063665102 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067496631 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064640834 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068135905 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069431404 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071999395 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068441604 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066664156 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065389351 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075222765 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072082827 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069875389 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06480495 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069893197 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067299005 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068889165 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067637642 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067006799 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067990367 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070547447 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067721189 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065654838 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07329875 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069842233 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067184446 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067689311 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06742058 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066620592 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061702623 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066894984 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068330991 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071316021 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068576324 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066077382 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076305128 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063902358 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066419988 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068807015 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065523317 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070458779 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061005231 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067115448 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065686218 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065848994 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06032445 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064575678 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062993932 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.0669969 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064603241 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.0601323 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075070266 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073820755 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068206216 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064175736 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.195983066 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062219674 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062340177 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066025737 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067918621 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068944998 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076470562 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065548068 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066040103 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062534482 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066987387 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069426699 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070350915 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064444526 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063015255 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065769235 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070134813 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072591753 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065775864 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066563333 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070937197 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069048309 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064643693 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070652619 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064191917 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070955839 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080065717 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067905707 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067575212 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073279482 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074710557 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067497534 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06189596 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067429773 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.06983643 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.06751612 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068463656 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068429165 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081242889 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070118014 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066505363 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065402224 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069374903 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066196129 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075297423 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066868897 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066951532 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.0719004 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068168861 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076337936 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069684723 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074185675 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070018744 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.07059302 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065193022 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068559677 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065667076 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065467912 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067985965 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067930075 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072564727 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075359301 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066257903 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076921679 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075685688 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068345688 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063859033 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065631063 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066405424 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062179158 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067489606 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064595076 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064488646 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064970551 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065133896 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067388321 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071607563 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067481018 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067279061 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066161726 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060879256 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069070907 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068979872 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067454044 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063674719 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066674154 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067407671 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070982292 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069704687 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063871008 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068174195 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068168929 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067605117 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062340928 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073391284 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065852287 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068445285 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06626371 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066819055 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067485027 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070304574 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072041414 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067416238 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068935317 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070149911 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068499149 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06330054 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063135984 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07110324 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064210397 seconds)
  done (took 42.571257686 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099889215 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063991539 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061791677 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062700127 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073836512 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063191574 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061923482 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063083289 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063049719 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065711181 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062031433 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062305236 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071290999 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077879641 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073694071 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066625001 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06203798 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063236049 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061988032 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063166995 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070732948 seconds)
  done (took 2.755772844 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073677052 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070535568 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072932604 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07569486 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067242377 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071293277 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072509897 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070841887 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075974382 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067002923 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07610868 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070685928 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.06733014 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067559679 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066938738 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071209056 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076108251 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067228384 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070459673 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072623261 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070743651 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072515473 seconds)
  done (took 2.883928613 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067476459 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066451436 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068008116 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061728616 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066807399 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.070069044 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069341251 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064353539 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069382422 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065415716 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065267218 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065069457 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067497783 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061259818 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06605168 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063977472 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.10811151 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068969314 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065426284 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066883331 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061507505 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.06779812 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061515481 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061739897 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064986031 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069360691 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066782648 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064095382 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065567601 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064959202 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065714804 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063956135 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067673188 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066330845 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064880341 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065631399 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065655645 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065709234 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061457422 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063894343 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066705477 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062153087 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065865133 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067304846 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064326959 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063749852 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067698736 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065520129 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061277721 seconds)
  done (took 4.571112893 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079843693 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108902844 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068311973 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088398885 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.08042716 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075454045 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069440663 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089242632 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063389166 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064412778 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081490133 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079420478 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065824309 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070883919 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072208688 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065618547 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066667791 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064489141 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069509053 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065298231 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.06950896 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071965967 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080125593 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079135204 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069627502 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064616807 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065453242 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069994257 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078123373 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070066283 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069871552 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071117383 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080185482 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071269643 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064824654 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067386786 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.08102169 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065457389 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067600921 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063659478 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067360482 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.0696566 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071956984 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081597734 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065665841 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070894516 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065267627 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06306421 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078089129 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067680454 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073618158 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079336092 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068998518 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065730579 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069593321 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080332162 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065516894 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063857466 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06826591 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077710355 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063471534 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069794026 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079224499 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067488472 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072354878 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079384053 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070508235 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069138495 seconds)
  done (took 6.352770194 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074991482 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072307281 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080712478 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080120641 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072068701 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072682968 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071742872 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072216468 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071509197 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076807738 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07216472 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092773445 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067761265 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07513313 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07342347 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072404367 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072645997 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072222227 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072702143 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072308387 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072395697 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079868577 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072195474 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08014772 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097944215 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068145128 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071660845 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072264728 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080278276 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072089893 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079025624 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072406696 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072107773 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080074211 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.07996104 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071908907 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064984567 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071775922 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071980539 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072343557 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067113401 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079999106 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071730683 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067306075 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071922686 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071429824 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079367616 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078690048 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07405633 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076179781 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071712532 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079444245 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072239623 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071598698 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079646034 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104314047 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07972678 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079803391 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072063845 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079715318 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079957208 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086048869 seconds)
  done (took 6.02900063 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08408863 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074840089 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077599208 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061515486 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063997507 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06992658 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064264928 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063962397 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074454064 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074512698 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076648388 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069470488 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072701703 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076464454 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070037481 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073094508 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069642685 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069708614 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074135357 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07002281 seconds)
  done (took 2.774765147 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074474948 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083098827 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067226494 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072322226 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069109774 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071699049 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068291161 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068691543 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066664761 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068827689 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075468736 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075580067 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06671993 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072075053 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075487065 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071416203 seconds)
  done (took 2.482998839 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.07484167 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.07213302 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079994859 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066288159 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064075329 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062577562 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065634033 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061402364 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062483086 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077883245 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065933154 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068099351 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065581192 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064346738 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062889177 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068393424 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062432312 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063854699 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06555369 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077941368 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076661277 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064479015 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066782314 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065971775 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065780482 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070602398 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065246762 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063780285 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062941175 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065944028 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066191795 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068872412 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062878115 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063821092 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064010453 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06325059 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065086259 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065719369 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.06791014 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06551248 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063434877 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065269579 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065536096 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066310967 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06191053 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066224875 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062103727 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067751742 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06387077 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065850117 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065635649 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068497631 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066446483 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072312037 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068813511 seconds)
  done (took 5.00056616 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079406531 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06932437 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062271857 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064240719 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.06941585 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067683563 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069677013 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067938489 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067573948 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064016516 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067637326 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06884636 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067428516 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069221016 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067506793 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069298325 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061517474 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06740456 seconds)
  done (took 2.569224543 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070669888 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066550739 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073379883 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.0664222 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066558941 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068478352 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061874165 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06445899 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064728603 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066073509 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065593859 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068638108 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064916656 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068493824 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065840217 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065680678 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067852365 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064404335 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06556613 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062099055 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067862674 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064296226 seconds)
  done (took 2.80206613 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.092851008 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081564299 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.137991691 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078610301 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083428894 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071560925 seconds)
  done (took 1.890057881 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09050337 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078890817 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066594267 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087499414 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073535594 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067063576 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067279249 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067706688 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07576908 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076617837 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067506094 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076709833 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076276518 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075267642 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073200775 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073444531 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067178602 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067779386 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066414406 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084390047 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067649178 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075781977 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067948926 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067678214 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067352163 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075472342 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075963387 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076193324 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067303795 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075907035 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073293089 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067848774 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076097838 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076012814 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069376529 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076107352 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067395994 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08404048 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072722941 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075095105 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068770456 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072901223 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076255916 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071820034 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075627674 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067400972 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072030195 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067477535 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067730455 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08561512 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072916405 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07496066 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073102842 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07584788 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075926663 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086178757 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075769362 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075434724 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073255196 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078922626 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075440943 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072958214 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074974696 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076111518 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073411785 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075505878 seconds)
  done (took 6.215934597 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081525982 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086733284 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068032699 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076413026 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075577866 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068144012 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068004834 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067812352 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067783459 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067687031 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107728118 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068133268 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075926546 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07535346 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06807502 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068083658 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067596204 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075050838 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067704348 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087048773 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067681811 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075648609 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075251529 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075709601 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075980979 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073164659 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06772456 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067493469 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067309871 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067866453 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0724311 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067922387 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075455063 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067210374 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075484552 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067672015 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067358764 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072265081 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067580634 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073335602 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075708791 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083486724 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067275052 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067126881 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075906436 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067013044 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067589573 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06691518 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067174034 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067199469 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075844234 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07613016 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076279199 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075068354 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067465362 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067717292 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067139022 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067327459 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0678186 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072664736 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075023335 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067398852 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08543943 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067383761 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06708123 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074924529 seconds)
  done (took 6.12602138 seconds)
done (took 128.711759082 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.18281607 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165548603 seconds)
  done (took 1.687176311 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068431634 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097734582 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076747348 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128140527 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066705584 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100085383 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099358262 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078019732 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06658622 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066289999 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066174597 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068980989 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131266573 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066660856 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066124382 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068927583 seconds)
  done (took 2.667929437 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097404921 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157579527 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099959667 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064911165 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096653071 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073138236 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064773911 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.07509402 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070622611 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065052579 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072883277 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070314184 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064930407 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070622856 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07100066 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073094226 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065216315 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072618127 seconds)
  done (took 2.782903024 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101414 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091151613 seconds)
  done (took 1.550953998 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.15493653 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105049183 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.150119163 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.346512882 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.171881303 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229297934 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126913847 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.1273156 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117578264 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123588351 seconds)
  done (took 3.007494487 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098401922 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.151869926 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.256507457 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114853983 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.0724783 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095021291 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117953546 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077974605 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080592595 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080487246 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080404356 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076346127 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099047592 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073789771 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07333104 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076268902 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102412535 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07234429 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074011969 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076842203 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098733028 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066325981 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073602889 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072013263 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077216259 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077350139 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065606647 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065652555 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076641402 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073911366 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077172533 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09349973 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07711585 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106629033 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070147121 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108009481 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076859646 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07362132 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073910346 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074142643 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078477567 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078377564 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.073074131 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076003728 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065072555 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076564335 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065068151 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065441372 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077788369 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066380442 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077747855 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076955546 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106891766 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066757844 seconds)
  done (took 5.964275588 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101834745 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104051137 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071679265 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.11186936 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100000634 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072531545 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101361019 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093534646 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102666497 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070183507 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068334296 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070482042 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082273529 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083413017 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.113043085 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104541384 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074309778 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071427059 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104397389 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102917684 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068782375 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094786668 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089930459 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101518005 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067517348 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07048689 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067911198 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070382212 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076873446 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078962679 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069797595 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080577937 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084802325 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07896752 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067178826 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067833558 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068202178 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080340778 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079710468 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079255789 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077630732 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067660653 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069260707 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069442778 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070228215 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067728601 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079189096 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080755332 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078831863 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069207818 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070422762 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.06810472 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069651806 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.0805418 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077744293 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081172766 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080481734 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068186244 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06849623 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072056877 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080554587 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078962879 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079302628 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069546689 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078986909 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068901421 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079814568 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084461965 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068497409 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069946335 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068594714 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069360449 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06980714 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077900473 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077770951 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069406409 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069218136 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068493318 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079643086 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078324478 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068173008 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076927012 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067030614 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068118721 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069587795 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069606996 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078103291 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080134825 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06962822 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068185889 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069016511 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06820177 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066255206 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075941734 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079061656 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077334761 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077312905 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068117389 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077633564 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077385275 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068699229 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078079733 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06720658 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.197265775 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07029285 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079805298 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078611277 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080117565 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069952849 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06870722 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078910226 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081967694 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06884446 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079953135 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081443938 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080016018 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.06793978 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082013582 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069378066 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080574924 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069760412 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080713646 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069378703 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080313786 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069419242 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068565235 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069854565 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080448799 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071526447 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069316051 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070396476 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070780146 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080134171 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083339662 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070904854 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081805889 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079505602 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070836171 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079597068 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068646152 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079808938 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.0696701 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069712723 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067451505 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08236436 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068892497 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068109997 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070073332 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082598404 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068161805 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080901396 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078982864 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068107368 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08215981 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080111903 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077947144 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07983017 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071163755 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068445999 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06836276 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069273842 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079288013 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08065949 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071455512 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068818526 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07916694 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079890197 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067435331 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078388785 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079011697 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.07910984 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068252748 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069301504 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080646979 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081197132 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078371323 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078355781 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078531265 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068429095 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077614975 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078385957 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068090203 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085394751 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068582136 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083633363 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079268734 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077460428 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07933863 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081233299 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080437826 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080180054 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083508849 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068027288 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067960377 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080463679 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068315297 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068450729 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.07729559 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068467168 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068284636 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081866365 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067300076 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078447032 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066432845 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07702856 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065855624 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068872262 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081996474 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.198083708 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070950651 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080854648 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06967229 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079581695 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081542399 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079927241 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067971797 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071236583 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080662116 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079763236 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068582345 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068564949 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071395307 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079612641 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078212547 seconds)
  done (took 18.677546932 seconds)
done (took 37.701054279 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.207875524 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.1503409 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.198775409 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118027595 seconds)
  done (took 2.135553871 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.12117877 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100750383 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095145497 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064975835 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101704772 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064735346 seconds)
  done (took 1.948249505 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.311784401 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210803959 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.182220422 seconds)
  done (took 2.097668354 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.199011965 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.186912713 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.392983136 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.252096585 seconds)
  done (took 2.531704497 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142881684 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088593504 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066504924 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082937919 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134474804 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160359618 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101294762 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125808813 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078194059 seconds)
  done (took 2.426826571 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147245609 seconds)
done (took 12.684157158 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.088873973 seconds)
    (2/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.244546134 seconds)
    (3/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.220656245 seconds)
    (4/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.107720893 seconds)
    (5/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.184950691 seconds)
    (6/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067625012 seconds)
    (7/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07147212 seconds)
    (8/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.172395222 seconds)
    (9/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.217231433 seconds)
    (10/309) benchmarking ("sort", Float64, false)...
    done (took 0.125349814 seconds)
    (11/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073850731 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.071408505 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.099756858 seconds)
    (14/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.205972514 seconds)
    (15/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.165444059 seconds)
    (16/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.160991859 seconds)
    (17/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.157768522 seconds)
    (18/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074750052 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.07725301 seconds)
    (20/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074594754 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073443581 seconds)
    (22/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.150393262 seconds)
    (23/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.106585397 seconds)
    (24/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.063895242 seconds)
    (25/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.195388985 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.107321861 seconds)
    (27/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.172897537 seconds)
    (28/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.203888154 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.095205049 seconds)
    (30/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.087070509 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.141795539 seconds)
    (32/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069163092 seconds)
    (33/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.16933664 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.089714969 seconds)
    (35/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072135487 seconds)
    (36/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.193895193 seconds)
    (37/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.170629642 seconds)
    (38/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076635326 seconds)
    (39/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.149508396 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071183115 seconds)
    (41/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135781006 seconds)
    (42/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073474551 seconds)
    (43/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072976093 seconds)
    (44/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075403223 seconds)
    (45/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051335184 seconds)
    (46/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.100481038 seconds)
    (47/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067247208 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064862489 seconds)
    (49/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.081128564 seconds)
    (50/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079332473 seconds)
    (51/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051295007 seconds)
    (52/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.074562372 seconds)
    (53/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062962272 seconds)
    (54/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.071463924 seconds)
    (55/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.192699116 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072411898 seconds)
    (57/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.108395935 seconds)
    (58/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.06527977 seconds)
    (59/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052090658 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071798319 seconds)
    (61/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070811435 seconds)
    (62/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.099738523 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.093033735 seconds)
    (64/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.184446705 seconds)
    (65/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.173666512 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091524838 seconds)
    (67/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.173401765 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.091960145 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066972316 seconds)
    (70/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067174192 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089429665 seconds)
    (72/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.194277776 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.098519152 seconds)
    (74/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.052539069 seconds)
    (75/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072777768 seconds)
    (76/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.131479315 seconds)
    (77/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.074493366 seconds)
    (78/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.148243442 seconds)
    (79/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.098825169 seconds)
    (80/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067575917 seconds)
    (81/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07205451 seconds)
    (82/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.158376604 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.089591775 seconds)
    (84/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080796599 seconds)
    (85/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.070654248 seconds)
    (86/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.051531451 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.2832674 seconds)
    (88/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075862526 seconds)
    (89/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.110729122 seconds)
    (90/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078225382 seconds)
    (91/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.096865348 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066375501 seconds)
    (93/309) benchmarking ("sort", Int64, false)...
    done (took 0.066998332 seconds)
    (94/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.052010065 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.311838638 seconds)
    (96/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.122662367 seconds)
    (97/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076340993 seconds)
    (98/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051533309 seconds)
    (99/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080120017 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.088607327 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.125663927 seconds)
    (102/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072945206 seconds)
    (103/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.167437726 seconds)
    (104/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051560557 seconds)
    (105/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051562549 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065259616 seconds)
    (107/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.186661655 seconds)
    (108/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.075273681 seconds)
    (109/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.186314447 seconds)
    (110/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.152183948 seconds)
    (111/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072841626 seconds)
    (112/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071836201 seconds)
    (113/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073944328 seconds)
    (114/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.104112017 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.1214888 seconds)
    (116/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.052065524 seconds)
    (117/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.186828549 seconds)
    (118/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.15026173 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072182175 seconds)
    (120/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.175415073 seconds)
    (121/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.08842136 seconds)
    (122/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.073491691 seconds)
    (123/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.184703094 seconds)
    (124/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.06941561 seconds)
    (125/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070914285 seconds)
    (126/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.07544938 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.13505418 seconds)
    (128/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081180315 seconds)
    (129/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053709209 seconds)
    (130/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.150863121 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.08928676 seconds)
    (132/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.159396583 seconds)
    (133/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051057605 seconds)
    (134/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067059507 seconds)
    (135/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.15024797 seconds)
    (136/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076289365 seconds)
    (137/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086069758 seconds)
    (138/309) benchmarking ("sort", Bool, false)...
    done (took 0.133539951 seconds)
    (139/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073307559 seconds)
    (140/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.050529846 seconds)
    (141/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065690568 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.085273376 seconds)
    (143/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071615612 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065015959 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.07586213 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090133272 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070537404 seconds)
    (148/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088522636 seconds)
    (149/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071438626 seconds)
    (150/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066990979 seconds)
    (151/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.148820261 seconds)
    (152/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.06602398 seconds)
    (153/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052323338 seconds)
    (154/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.073836136 seconds)
    (155/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053405046 seconds)
    (156/309) benchmarking ("sort", Int8, false)...
    done (took 0.138274324 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.10878678 seconds)
    (158/309) benchmarking ("sort", Float32, false)...
    done (took 0.12597125 seconds)
    (159/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065944071 seconds)
    (160/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071454203 seconds)
    (161/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070866956 seconds)
    (162/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.163256847 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065014342 seconds)
    (164/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072004148 seconds)
    (165/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051174975 seconds)
    (166/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051294207 seconds)
    (167/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.175876221 seconds)
    (168/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071279737 seconds)
    (169/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051074217 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.093745319 seconds)
    (171/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.051162159 seconds)
    (172/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075849852 seconds)
    (173/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052413698 seconds)
    (174/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07465582 seconds)
    (175/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073372678 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.087550866 seconds)
    (177/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.0803247 seconds)
    (178/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065800173 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.136153652 seconds)
    (180/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062453733 seconds)
    (181/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070194414 seconds)
    (182/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.09664855 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064328629 seconds)
    (184/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.105790861 seconds)
    (185/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051390424 seconds)
    (186/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.173035367 seconds)
    (187/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050587738 seconds)
    (188/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054387448 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086011287 seconds)
    (190/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.155895767 seconds)
    (191/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.068409919 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064325019 seconds)
    (193/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.064765033 seconds)
    (194/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.071707758 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.063940043 seconds)
    (196/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.06452671 seconds)
    (197/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.103327328 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.117208003 seconds)
    (199/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.050151408 seconds)
    (200/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070538484 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.087980012 seconds)
    (202/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.050912881 seconds)
    (203/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.053027051 seconds)
    (204/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072175101 seconds)
    (205/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052440204 seconds)
    (206/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052060741 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.092308305 seconds)
    (208/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.063454505 seconds)
    (209/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.06507931 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.137716018 seconds)
    (211/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050200913 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.062613756 seconds)
    (213/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050319074 seconds)
    (214/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050232124 seconds)
    (215/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050091796 seconds)
    (216/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.070862646 seconds)
    (217/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052386707 seconds)
    (218/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.135038079 seconds)
    (219/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.051279446 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088689142 seconds)
    (221/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.060556069 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.133106953 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.116854157 seconds)
    (224/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.06307937 seconds)
    (225/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.115624228 seconds)
    (226/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.149027977 seconds)
    (227/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.072574393 seconds)
    (228/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.071233155 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085461147 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.133542342 seconds)
    (231/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.063282708 seconds)
    (232/309) benchmarking ("sort", BigInt, false)...
    done (took 0.179781962 seconds)
    (233/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.070572977 seconds)
    (234/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.050842087 seconds)
    (235/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.050605581 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.097524682 seconds)
    (237/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.069381671 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.122735944 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.085946666 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.06265144 seconds)
    (241/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.064862964 seconds)
    (242/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.06263606 seconds)
    (243/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.061580566 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.083722285 seconds)
    (245/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.063100807 seconds)
    (246/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.050678267 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.127683645 seconds)
    (248/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.065810993 seconds)
    (249/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.083975502 seconds)
    (250/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.063807401 seconds)
    (251/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.154012843 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.062791051 seconds)
    (253/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.083076464 seconds)
    (254/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.062932216 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.092976705 seconds)
    (256/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.049873107 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.063334805 seconds)
    (258/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.066991264 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06383184 seconds)
    (260/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.051252755 seconds)
    (261/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.062759429 seconds)
    (262/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.062349587 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.069906308 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06295094 seconds)
    (265/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.169904187 seconds)
    (266/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.070721776 seconds)
    (267/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050898816 seconds)
    (268/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.050475562 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.070406469 seconds)
    (270/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.063760249 seconds)
    (271/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.161836572 seconds)
    (272/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.059236076 seconds)
    (273/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.060711432 seconds)
    (274/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.051028476 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.089584936 seconds)
    (276/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061066918 seconds)
    (277/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.069726856 seconds)
    (278/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.059833415 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.087007937 seconds)
    (280/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.075696525 seconds)
    (281/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.069428058 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.0706965 seconds)
    (283/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.075870294 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.061956501 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.061490533 seconds)
    (286/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.049841769 seconds)
    (287/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.051298928 seconds)
    (288/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.050517305 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.069924661 seconds)
    (290/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.076862445 seconds)
    (291/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.064307414 seconds)
    (292/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.049884288 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.068396191 seconds)
    (294/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.073146667 seconds)
    (295/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.051202372 seconds)
    (296/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.049445837 seconds)
    (297/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.064103107 seconds)
    (298/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.059841867 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.089131822 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.063544353 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069048541 seconds)
    (302/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.051097334 seconds)
    (303/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.064104552 seconds)
    (304/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.096667482 seconds)
    (305/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.05149271 seconds)
    (306/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.069369682 seconds)
    (307/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.060969889 seconds)
    (308/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.063178842 seconds)
    (309/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.05021852 seconds)
  done (took 29.992308912 seconds)
done (took 31.398837727 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.0916126 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094725888 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077763867 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.095846141 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083912574 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.079665879 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075890573 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.08140826 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083006393 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084917647 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081244059 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.05756903 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07713372 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076787366 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.077477717 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094469154 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081013684 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075322941 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076126296 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067473109 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075437507 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06865786 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070035536 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056827512 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079883586 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073579039 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07479515 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076476481 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068149672 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06783152 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071081565 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075628152 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06763428 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080299953 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073914119 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074914744 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076360034 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077809515 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069274628 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067700697 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07637801 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067971303 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07389478 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075073975 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073126252 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072916687 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075421133 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079886848 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093693181 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069979947 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075086872 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077729061 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077723649 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07367332 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.07026775 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074378961 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071360112 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09211972 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074263235 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068873273 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075329761 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074796012 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07190948 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07451123 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074753566 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076820959 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076856195 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072660501 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076368758 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073106374 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066547615 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074901172 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070241859 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06733497 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076812108 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078350948 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065356491 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072032303 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073776894 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072513653 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065868919 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068790514 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068246784 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073413331 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069250097 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055437359 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070154487 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072921955 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065890852 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074375995 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073080454 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073771767 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068313576 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076715808 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066302456 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072175917 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066793877 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067205449 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.068261475 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070761732 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065985984 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068637578 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074882515 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067831477 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072296394 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079979127 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06622294 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07254148 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065342661 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065601162 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080521221 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075682392 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066434153 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068654282 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065851079 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074075556 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065484086 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066421771 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065976088 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066024636 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071991786 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065970606 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06825598 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072870725 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078131233 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066245766 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069200205 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067675126 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065768446 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071337122 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065525741 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.201576889 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069021283 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.063098495 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068621278 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066579184 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073485503 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068852766 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073467908 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067765469 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074524917 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071253213 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072543222 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072107216 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065588641 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059520063 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069295855 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069742002 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068522949 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067467943 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067947279 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066304921 seconds)
done (took 12.866196945 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067168094 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.144694897 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100306532 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096309874 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086539585 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067440281 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077012161 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102870341 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068489186 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103507224 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088095362 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.0860148 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114040807 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065300368 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066404987 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070446684 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067789943 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082735991 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.102401209 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087309129 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.117460659 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066378216 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095475185 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.09093841 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.088217601 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.093824209 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06773646 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070789802 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070528634 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101670018 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.087721523 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070422226 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067624646 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.101354438 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093280356 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084155119 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067192081 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082931989 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067365464 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066577033 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068361376 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099227314 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080642171 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081436581 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070827507 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070190663 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067477227 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084584626 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089758802 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079443595 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.087424377 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103725216 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069535055 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.066262688 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06521236 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085935847 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.066120979 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069737129 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066968042 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068738463 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066487705 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070069987 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.082028691 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082603899 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07045514 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081146182 seconds)
  done (took 6.913035663 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084114124 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091849252 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08452811 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084657285 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066093605 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066834467 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066735424 seconds)
  done (took 2.098543853 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06730656 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088982134 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089524676 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090270374 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085466011 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088412678 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076754371 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067327664 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.08175356 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068331011 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088930363 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102640304 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.06798407 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073633276 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092043726 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067414463 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091509451 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067753347 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070343233 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091308501 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06920613 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082702985 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071138845 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068085075 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081476887 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067621887 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114546301 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071226339 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068653413 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070157475 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065234542 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.1084349 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080997314 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076764917 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067132829 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081711731 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08167908 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065624986 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083543048 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.072490165 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080786687 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.06771475 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068042384 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065459954 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071873902 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077414738 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067881711 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067786278 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069529635 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08724058 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06775621 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080903091 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070250042 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069430395 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06856985 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070633314 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077140603 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067629652 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086870388 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068340637 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083727588 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083148875 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.081065159 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083140916 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069844665 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080466587 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.081111407 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069269276 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068950244 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.07050372 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083302247 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065139861 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068638878 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077522368 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068960897 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089522869 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089524199 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067933186 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075797838 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067381184 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066608326 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066678881 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088799612 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068966184 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066619958 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07057909 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069779596 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064775999 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065748806 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070584644 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064828926 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068488731 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069571486 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070035468 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069473826 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083607677 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069232176 seconds)
  done (took 8.882746156 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069467463 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068743495 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070055821 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068479849 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069250493 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.06889769 seconds)
  done (took 1.993378358 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094323958 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070145786 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080338798 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.073709528 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105550541 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087548819 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087453011 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079429875 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085349471 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079792859 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.0872614 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.090007285 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093522619 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073023177 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086981058 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.073264648 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087856898 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07631872 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079270961 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073794654 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087317449 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073324818 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074247136 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082733866 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076198274 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072741699 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067721414 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079419058 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079295929 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079270725 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073749812 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076314154 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071204817 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078903878 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087460825 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071412438 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072648256 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077992469 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073168658 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075897803 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.089185157 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073935556 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075495595 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077828924 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079166829 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071664746 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077728096 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076684062 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08669776 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077945886 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077453949 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.072058561 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075376431 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077398635 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071208228 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078594542 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076921319 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086827074 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072124148 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070887759 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069358923 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.076025286 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07746391 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075344344 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078960094 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077090958 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070708524 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072504384 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072951875 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071819541 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076909858 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069002718 seconds)
  done (took 7.185418762 seconds)
done (took 28.615053502 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.540262356 seconds)
  done (took 2.087027149 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.606108662 seconds)
  done (took 2.17493415 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.553932275 seconds)
  done (took 8.117111839 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.392489902 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.477283645 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.6969858 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131392488 seconds)
  done (took 3.302492255 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.673322412 seconds)
  done (took 2.25104309 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.210035001 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.19755402 seconds)
  done (took 1.993600115 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.377758698 seconds)
  done (took 1.94729767 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.113729237 seconds)
  done (took 2.684340016 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.263298966 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163632142 seconds)
  done (took 2.003072154 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.463166529 seconds)
  done (took 2.036774122 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.829461831 seconds)
  done (took 6.405047455 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.213411765 seconds)
  done (took 1.83399002 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241306796 seconds)
  done (took 1.820195342 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.698932337 seconds)
  done (took 3.275341191 seconds)
done (took 43.508080032 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080052615 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08141651 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.082020236 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078101709 seconds)
  done (took 1.886589504 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077098958 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072909358 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076605043 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072042512 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076374468 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072262285 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.07389738 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076560592 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072072574 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072423413 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072419048 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072447764 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074780559 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074124306 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071028809 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074623892 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076090384 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072539772 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075535916 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072225675 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071130927 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074660497 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074403477 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072221401 seconds)
  done (took 3.350196708 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.07770552 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072223886 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074379207 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071952079 seconds)
  done (took 1.882704734 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077990715 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.09207439 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089776335 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077141529 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092585627 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08588273 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068734778 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06893386 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073573099 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077157452 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.06778718 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095867541 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088140087 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076720537 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079175859 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066421427 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068061927 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086567928 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077478243 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.07770404 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069603566 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076962067 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067846648 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.08806271 seconds)
  done (took 3.470765151 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077646294 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10373671 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077608808 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086746506 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.08924329 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065603271 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073952378 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089015382 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.123138453 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065806976 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069918638 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065261278 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072163891 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065243243 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076073996 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.105184537 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107694479 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068660108 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095980151 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065307916 seconds)
  done (took 3.234231989 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073099745 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070280649 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066343286 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068654004 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077196667 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072677102 seconds)
  done (took 2.019409192 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068753383 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066887066 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067269927 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066529875 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072280735 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06692653 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066299851 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067391511 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067683522 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066945862 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066274097 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065884766 seconds)
  done (took 2.396643525 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.172865926 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069290327 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069629664 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066125308 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071219112 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066258709 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079643648 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067707503 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090538266 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066563023 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066371289 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069011973 seconds)
  done (took 2.544972722 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207070943 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076276311 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236849048 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136769219 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111624465 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115762997 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104241053 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113006592 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143365518 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10173413 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168018936 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165666994 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107462821 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137292252 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089255318 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.09776025 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155500938 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162611737 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10435657 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165727893 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143759444 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124615148 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146806271 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101379921 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106091656 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121730978 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071255314 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08004216 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170318269 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1310662 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146128515 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110363426 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093770583 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175948304 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170319491 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141848762 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134967914 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08381393 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.10180399 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133066481 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199298539 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088152109 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163696546 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246894124 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080956146 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1333851 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120539616 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120560809 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107837027 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090203221 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146628902 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182878283 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.139494632 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087374931 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112465415 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1153602 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116781102 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103543387 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182097134 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160223951 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128239307 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.07123757 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100808158 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153426684 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132888139 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109036855 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126901729 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093351349 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13332818 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154548231 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119184814 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144035815 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128369322 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088209701 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119051393 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139842012 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127773355 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169593427 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124585543 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07252818 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124574168 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103203379 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081325356 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141555134 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074958032 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175665462 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098585567 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105604963 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112459762 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108275227 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108929614 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161335747 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.286571962 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103903394 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.06551741 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103632107 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119874714 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148442241 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087689513 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108743971 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116690325 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078367869 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140206552 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075025932 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124128581 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075511698 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125915111 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132471953 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076032459 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121855794 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101428682 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100045632 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134378825 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161243449 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089546095 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082368777 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16804038 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121854152 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104491053 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143649729 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15628445 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099207992 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102973027 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150331128 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18010314 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089545248 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163291383 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1075418 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083759016 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087312322 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123763375 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112121195 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122223614 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081494357 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118528479 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167841917 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074884607 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095488575 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133716696 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079549122 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080407723 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103721576 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099892736 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094453652 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099480188 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.10411073 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136608101 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12349288 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.248440898 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127289862 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099061341 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170764571 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088719133 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101283702 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104199849 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070381795 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.13753833 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157658207 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079481883 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165320526 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124320695 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105756636 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119493587 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083109606 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139938202 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079120799 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069910168 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143861341 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110666299 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110770954 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151462873 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105421861 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128369379 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119854203 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135761826 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133339809 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.128688489 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105582879 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088602334 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111837791 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125907439 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072855173 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091502077 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080190426 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103890377 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09568586 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082778362 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14231853 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125049254 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100522589 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111693815 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096236393 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146744778 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076645652 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129245918 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119350305 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094283604 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150894469 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151924453 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131177892 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098522358 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143890873 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070118982 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216646755 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.09127962 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124069145 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083601889 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083615543 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117473466 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147938808 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130035329 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138371766 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112113449 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122115219 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155697955 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069782618 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115768455 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148691379 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122328113 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103129505 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090554049 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099524131 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14284071 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107855802 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183929516 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114229017 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126587855 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153274033 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099387996 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079636654 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103237299 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135597903 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104305902 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145159558 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099471408 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087434921 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110011284 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074429262 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099767258 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127358161 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120002251 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135300071 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.119823596 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132823489 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07700431 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116868636 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120365735 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122528554 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063945687 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120419623 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160634858 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093507002 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11822816 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152570147 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079216923 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.124575057 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.321871402 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146465024 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085102645 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10923751 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118643158 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128762406 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122030522 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13973717 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108782229 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134847769 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108712655 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084791611 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087217913 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098072894 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105891834 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095533982 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109292527 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114392282 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095522185 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13296204 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103466588 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11033429 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117579123 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096860322 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089995962 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098033441 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174700155 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120221663 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172012223 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098745332 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145219199 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163407033 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074741824 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079290391 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078207779 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140175831 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083531363 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130586983 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097563675 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105679694 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123866417 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141881308 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094729086 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068593638 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108977669 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134998185 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112431656 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098272775 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103831794 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162139744 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100099516 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079061269 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113752948 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105043163 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101842629 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31748581 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061956186 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098785033 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075670118 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08104786 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128709685 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152892041 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08057267 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102770991 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118826794 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111182264 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128155159 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10133618 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1000334 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114989145 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150267777 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128316932 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090025291 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112764702 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130976795 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156258101 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108637908 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095880762 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172321653 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15193866 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160116108 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088991105 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114782883 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114862148 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107993666 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139892403 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083124612 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163942841 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081498978 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135654503 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104099542 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090256609 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129669078 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.115822854 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088496991 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149066526 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117661943 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082849252 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077710917 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118047586 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120948879 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106428905 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074857419 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13855204 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072509071 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131972349 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167985876 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225461872 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1052572 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097595935 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080051874 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108783056 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103667483 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090125512 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098713193 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174246845 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088595381 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149541788 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14283403 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113776971 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137687256 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100425381 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.63683891 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078671717 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153104707 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117176643 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174049635 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097282382 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11788118 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109505333 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123997652 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145688262 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104757751 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175800592 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132245771 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116049346 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079594224 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103071516 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102767739 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.08850086 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104509214 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113011966 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116058879 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093328103 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115754009 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123246946 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.08187065 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095418459 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155925937 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117088315 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144243204 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140340739 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084967301 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117645326 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137571854 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079291171 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121440698 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151365565 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106045413 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241794621 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081187903 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102927165 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17153919 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072498475 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163536408 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12011937 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109681665 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113302941 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114758282 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132257286 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108551634 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12177626 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094589574 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110640156 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11438564 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081393147 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077330941 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105086017 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113336405 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.09780326 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098486421 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097627422 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151991675 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071314745 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096051639 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10382408 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146676043 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174929477 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.08772115 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082800974 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119446621 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112653045 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113172519 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120742408 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079336002 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082126503 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082165572 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.07739641 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108320445 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112477545 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103820259 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111073678 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164160039 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082201643 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224224947 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095486945 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10429081 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069404553 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078558708 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0958435 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097429731 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108287429 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100780277 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168697356 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094047581 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089650085 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092178846 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.217236261 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083355416 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129261287 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111616674 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119617204 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097407059 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062744699 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109751357 seconds)
  done (took 59.002015114 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108005197 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082123908 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.09638421 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.14963494 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122663641 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212003442 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156767495 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198844683 seconds)
  done (took 2.825758359 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067851236 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093381669 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099663414 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083356011 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06695066 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069200133 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.224647897 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.08058888 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066701358 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088465236 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079399603 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069150879 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.419030983 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066245524 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067538585 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062446696 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06700209 seconds)
  done (took 3.464160128 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.364501301 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.599590724 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.373602833 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073749673 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.889416612 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.08867935 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.080905516 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.127491169 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073030657 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.539022302 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.705279314 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.124773774 seconds)
  done (took 18.738820943 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075519763 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069241574 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083876798 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083263309 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072690179 seconds)
  done (took 2.079030961 seconds)
done (took 108.511084739 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079924104 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.393243099 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053533374 seconds)
  done (took 2.168873295 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082247706 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083729964 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084244421 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082710919 seconds)
  done (took 2.036703341 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074416985 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076779155 seconds)
  done (took 1.848310214 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.224097706 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.157888061 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086137669 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081353168 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077823482 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078200107 seconds)
  done (took 1.938627401 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072510616 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075239518 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07273424 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075935924 seconds)
  done (took 1.993452574 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075879278 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052379541 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054456159 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055724071 seconds)
  done (took 1.9359759 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08535944 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078160487 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078303076 seconds)
  done (took 1.94022746 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101278508 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085471131 seconds)
  done (took 1.884678518 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08161475 seconds)
  done (took 1.780817588 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098751691 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.11305019 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.13201254 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109713479 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137949357 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108212877 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084968489 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086429956 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076836507 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087159025 seconds)
  done (took 2.733824169 seconds)
done (took 22.50296242 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078276783 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.362604365 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362295812 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089276762 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.687259452 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355829597 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.024646601 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091807729 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113615599 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067138894 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084006368 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.668009697 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.978520119 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324580617 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.964614201 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323317697 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649355112 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067958318 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067642096 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067741195 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.009984557 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067743172 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067974495 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068257181 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649929548 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37081323 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06821643 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324611839 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067985364 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070218197 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355165227 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067903336 seconds)
  done (took 16.302027396 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.0705126 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117930413 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074014443 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08465173 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070931946 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069789898 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071881038 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069020394 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119272588 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067438427 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084245831 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067555835 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071668312 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068352324 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086978933 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067976211 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068587753 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068153885 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068143347 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068367116 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085993128 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067711459 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067950197 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068290953 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067585889 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078838233 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068019086 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06752971 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068346423 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069926021 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070544828 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068914289 seconds)
  done (took 4.096474503 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115078366 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124564243 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074163699 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102925165 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112198942 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069766123 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142627913 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092496032 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12681488 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067693715 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08445694 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068035922 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100439186 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068330468 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087589537 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06843666 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069036796 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068481436 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068266287 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068874337 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08739051 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067945607 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068261535 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068271777 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068559635 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08095791 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068818414 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068367271 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068165641 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070244506 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07144344 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069251819 seconds)
  done (took 4.351495665 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07206377 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075644813 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083335584 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083329844 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069322142 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072098973 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072705336 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069232837 seconds)
  done (took 2.312431986 seconds)
done (took 28.765806938 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078307656 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068606854 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072695824 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081032278 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07255926 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078309837 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06703425 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074191159 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071752076 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07288521 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.0749238 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067521257 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071006339 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067226311 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073468279 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067720639 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079302489 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071902428 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079137723 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079128485 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070086029 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073542392 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074009882 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078771213 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078741875 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.07878611 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077426346 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072422328 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068801649 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070332363 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076548087 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084143479 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068793077 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078954147 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067852962 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067561697 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071833599 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067978436 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079011998 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076873708 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069595489 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076035069 seconds)
  done (took 4.790839121 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087217741 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090880592 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084694424 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061964443 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066890953 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065203584 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088006255 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059522841 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059573882 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08752054 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055828736 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059292042 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062696484 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05403357 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059173814 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056859218 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.06117472 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055899441 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059171177 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059266428 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057869537 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05443614 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059764609 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062424892 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058986178 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062370867 seconds)
  done (took 3.418344678 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073982477 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083799405 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087971001 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.124934434 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104377401 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.07687718 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077470191 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092094132 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.08486098 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067124667 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071198273 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093398287 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087801 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073617602 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067293733 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084644806 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081867027 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069199109 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073476318 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090655177 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083918996 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083442962 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092606184 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08018395 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066640708 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069235399 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070985206 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.092151443 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072491589 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076301679 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071209142 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070983719 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069069609 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078089261 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071215591 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068883559 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090035359 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076548001 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077476915 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067570631 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071005523 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067788768 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089170002 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122271452 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066747824 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073572437 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075076609 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076467681 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067106594 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085991287 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078153537 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066810186 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070304024 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066519039 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067011781 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080487649 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069702259 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069401836 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076651819 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070787427 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085294787 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071431709 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082511548 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067184936 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074694538 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066668468 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068410683 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066637474 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092444502 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068892105 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108369737 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068844224 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068463677 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07660392 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074669836 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073558474 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.0678188 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082187733 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077653593 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070763739 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07558304 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070909856 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070470707 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087906075 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069847178 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069189287 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068106541 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073736833 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070424813 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068921998 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080327305 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068017938 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071023338 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083879205 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06699956 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068630071 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073389103 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072204355 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067142366 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078654284 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072603549 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068237386 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076681713 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067542419 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070806562 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077510158 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073983055 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06675234 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072722703 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07360805 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068443176 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069064452 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070553833 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.0692802 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075881535 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073757672 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07198347 seconds)
  done (took 10.624044042 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160418573 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153361982 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070375265 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144595671 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076190273 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078605651 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.14675776 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094465628 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067698879 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068542562 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068534679 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109389478 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105927521 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115634603 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078553498 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067507407 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.08289234 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113657698 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149011104 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142567273 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083644095 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077042038 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070200385 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069426188 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070720987 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078209877 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085365892 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076726409 seconds)
  done (took 4.465816264 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081042659 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.096560012 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07393381 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089680286 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091459376 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067694438 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070918378 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.06957271 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080591831 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.07893432 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.06730507 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073816469 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074244497 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071075684 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069105457 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075212526 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074941396 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069221615 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070997003 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072784059 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077424598 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080708148 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07160353 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067094339 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073911953 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066816392 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064478476 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084825476 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068467655 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089819193 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065725122 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074916917 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081100703 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068613621 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067612962 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067792871 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067559031 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06773334 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069637029 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066207632 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066027454 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057442657 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066729797 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079767718 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073739103 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057150906 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07261627 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072241811 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072488344 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065563698 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070601169 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070566111 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071247303 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074717458 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07322937 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07315433 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069016209 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.073770156 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075534944 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067801552 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064574716 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066087391 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071766856 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066072244 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075436787 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072409537 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066157751 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067191278 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069380051 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073495295 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067520956 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070231697 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065323238 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069208783 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072114256 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068910555 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068443671 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065840527 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06711523 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068100913 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055972178 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067810917 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05376604 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070382293 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065640641 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066069977 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067052149 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071997829 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079596668 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068674421 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073256626 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068403475 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066381802 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070658291 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060713312 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070329433 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082295853 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082814105 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067210888 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065767259 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081505191 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071942264 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066511188 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056636063 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074774609 seconds)
  done (took 9.215733216 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088675971 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069762844 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083274417 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.09026278 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086209514 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074828716 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076421486 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069390347 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.081713012 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073297367 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075892394 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067732299 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077067677 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076964758 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069935334 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076775265 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072411971 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082465206 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082352874 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068279911 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075722401 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080233268 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088937921 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080136599 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.078066306 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.079376019 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089383542 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.071773969 seconds)
  done (took 3.952718611 seconds)
done (took 38.178429954 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.81480261 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.972406855 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.799519283 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.168412235 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.942685733 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.818200809 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.955713004 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.798870806 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.046263158 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.836483687 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.09253684 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.868255292 seconds)
done (took 65.853192368 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.813303845 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.947257178 seconds)
    (2/2) benchmarking "String"...
    done (took 2.071182858 seconds)
  done (took 5.756498601 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.094307617 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.335572807 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.04236379 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.79523878 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.801753428 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.089508774 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.595730818 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.324362336 seconds)
  done (took 30.723297076 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.910478834 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.030178007 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.471295443 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.503584065 seconds)
  done (took 15.700085276 seconds)
done (took 63.906828086 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.8164996 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.817798156 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.81299198 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.781784939 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.855682765 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.801765214 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.036262636 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.804825661 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.795962569 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.785993253 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.79919535 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.234977605 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.809364874 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.19281532 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.800246525 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.803480302 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.85960887 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.292615027 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.953437153 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.812466139 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.821065428 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.845653346 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.801043759 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.807592359 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.839366476 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.796567466 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.224859349 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.805525276 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.603289588 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.803593693 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.844104369 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.236750954 seconds)
  done (took 205.036067854 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.798588079 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.905342655 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.937110199 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.840525889 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.286459492 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.979312198 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.910585387 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.316514766 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.803078301 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.824248085 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.040594154 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.801733119 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.059334755 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.746534344 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.829327683 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.908319739 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.063521688 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.08525931 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.83247274 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.931416747 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.809885089 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.955924938 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.910489941 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.034770355 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.808839642 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.874800875 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.805835767 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.808141042 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.994307265 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.043506018 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.811006857 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.846989235 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.006655467 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.671434955 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.824119132 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.807090891 seconds)
  done (took 171.654934821 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.983799638 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.800295062 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.798215101 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.798493652 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.799155027 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.805031415 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.79910576 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.930606611 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.932308986 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.25705443 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.242316478 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.851411109 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.62362908 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.799459416 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.867127546 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.813430692 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.800966496 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.81522202 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.825681118 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.801968601 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.799603273 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.926921674 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.811783999 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.869312756 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.809065939 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.799975178 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.805583549 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.169767577 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.800750603 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.800597809 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.806214138 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.044874393 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.801108009 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.800576327 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.69501073 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.015716072 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.890959532 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.803902484 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.806067751 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.800795446 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.021078456 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.80125281 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.801597497 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.804158111 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.984483687 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.801908021 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.928661587 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.801256171 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.296793661 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.801754893 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.802542308 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.451072553 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.479503664 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.804952296 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.801221487 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.803665176 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.801601144 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.802138161 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.807634093 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.425282357 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.876082433 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.803342297 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.802518388 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.806086575 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.808380357 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.802571972 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.957154713 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.8032266 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.38552413 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.856106562 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.017297923 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.922541281 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.802396266 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.865837242 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.893451926 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.798642445 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.798155006 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.798687555 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.799199636 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.880930619 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.79843506 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.918926952 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.806001046 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.799571418 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.849069108 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.868903034 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.799075644 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.694764547 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.800318254 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.799158554 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.104673643 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.865708274 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.799913986 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.799257267 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.799789432 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.916045627 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.923113752 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.564610678 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.795826625 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.792549886 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.686422999 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.795516247 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.931358961 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.791188415 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.979507209 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.793575787 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.873020803 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.795735128 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.792738732 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.790750066 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.822471748 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.79158154 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.851100632 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.790306715 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.16153425 seconds)
  done (took 405.816615764 seconds)
done (took 786.286222563 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.475832857 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.436851928 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.551453371 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.455146491 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.423215943 seconds)
  done (took 14.075632403 seconds)
done (took 15.80883679 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.878500242 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.883961793 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.81775957 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.881919 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.813793578 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.881500896 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.863411246 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.819450861 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.84990228 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.81811536 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.850677978 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.818036926 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.804704357 seconds)
  done (took 25.715779387 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.025297622 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.033044769 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.865980276 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.029185019 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.842281291 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.019954939 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.956731975 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.945541701 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.946595383 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.810573492 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.807141098 seconds)
  done (took 23.018126858 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.028811028 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.035629382 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.868125652 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.028128701 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.842792352 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.026536636 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.958614272 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.945190389 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.945785275 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.810000336 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.806628432 seconds)
  done (took 23.031730232 seconds)
done (took 73.498438615 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.803373245 seconds)
  done (took 3.538821702 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.825136832 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.962417546 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.809400499 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.804558501 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.801964161 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.802705734 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.805799753 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.803451888 seconds)
  done (took 16.352535852 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.800891226 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.801857104 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.799351451 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.799091421 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.800236276 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.799917567 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.798786409 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.799045312 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.799364595 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.802603683 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.799282783 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.801557725 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.801844632 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.802300643 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.802735438 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.803078707 seconds)
  done (took 30.547964539 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.801580738 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.799244255 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.799812885 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.80125981 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.797764307 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.794628108 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.794644607 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.793994764 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.793228096 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.794845703 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.794450621 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.79382528 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.793723546 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.792812892 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.793689089 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.795816547 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.792282892 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.792583896 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.796254996 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.79308591 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.794048931 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.791701948 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.792484664 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.792258395 seconds)
  done (took 44.818325614 seconds)
done (took 96.992663309 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.686861678 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.39713715 seconds)
  done (took 8.812621968 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.795458278 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.795292649 seconds)
  done (took 5.362622077 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.79345387 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.794054733 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.794188194 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.7945801 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.793367109 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.793960497 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.793568252 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.794377455 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.794183532 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.795170363 seconds)
  done (took 19.669875501 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.794117922 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.794523625 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.795319215 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.798088404 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.796892472 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.794498907 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.796704899 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.797659927 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.797815496 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.795339106 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.796936941 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.79544511 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.797288894 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.795663168 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.798521477 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.795483681 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.795202788 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.795376784 seconds)
  done (took 34.060409421 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.797447376 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.79772421 seconds)
  done (took 5.327667326 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.795118991 seconds)
    (2/7) benchmarking "second"...
    done (took 1.794282567 seconds)
    (3/7) benchmarking "month"...
    done (took 1.795027359 seconds)
    (4/7) benchmarking "year"...
    done (took 1.795892537 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.794425353 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.7955426 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.795258315 seconds)
  done (took 14.297745415 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.79907009 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.956934879 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.025929014 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.496267461 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.799816908 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.802044943 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.737229122 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.801429912 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.803409866 seconds)
  done (took 19.955046528 seconds)
done (took 109.213298026 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.636605331 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.793871055 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.163398811 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.853350707 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.83802432 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.132296549 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.804508857 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.011757889 seconds)
done (took 42.964826382 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.892992841 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.349349906 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.383307135 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.179660154 seconds)
  done (took 12.642587232 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.770899165 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.305049786 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.82865851 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.388250595 seconds)
  done (took 20.045977813 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.151804824 seconds)
    (2/2) benchmarking "read"...
    done (took 2.144677216 seconds)
  done (took 6.026310955 seconds)
done (took 47.338683188 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.786624819 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.788128577 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.787981664 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.787810794 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.78633341 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.788058475 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.786836378 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.786125255 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.788526062 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.787787606 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.788278497 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.790984369 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.787258853 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.787731337 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.78434876 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.784676274 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.78789669 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.786494861 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.784824422 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.785058266 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.785092686 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.788120184 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.786311865 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.785912735 seconds)
  done (took 44.610182511 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.787552324 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.786171293 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.787697499 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.788912095 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.785754156 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.787666054 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.787128326 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.784794194 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.787467641 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.78755993 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.785483294 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.784346907 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.787283356 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.785590785 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.787634072 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.785038476 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.787358976 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.784390751 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.787690719 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.784698162 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.787984143 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.78427213 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.784469798 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.787114827 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.784667092 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.785907227 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.787964557 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.784547921 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.786790594 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.783869555 seconds)
  done (took 55.31108849 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.792909133 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.793968983 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.78739092 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.786926918 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.786936342 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.786684539 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.788289811 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.786736243 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.786384942 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.786149344 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.787185704 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.78761773 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.787346465 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.786231121 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.786465709 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.78668584 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.78687376 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.787309317 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.786180451 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.786020068 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.786455558 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.786491934 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.786615056 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.787440373 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.785817155 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.785709777 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.786353104 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.785962459 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.787521251 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.785773673 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.786181011 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.787070751 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.785980176 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.786702491 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.787613458 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.786104862 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.790385298 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.792718033 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.787589669 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.785970644 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.785914197 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.784591467 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.785753953 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.786618696 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.78537594 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.786715033 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.785129423 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.78578397 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.785512361 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.785977438 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.786076077 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.787539466 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.785466418 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.785906617 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.785994769 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.786657615 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.787329499 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.785509797 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.786116744 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.785880371 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.78518277 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.785477131 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.787145888 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.786610862 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.78617223 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.786305202 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.786170216 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.786475944 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.785468893 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.78550459 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.78513435 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.785848852 seconds)
  done (took 130.366289248 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.786136577 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.783286457 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.783223149 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.78337689 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.783960508 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.786702114 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.784101403 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.786206555 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.783870765 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.786583181 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.785560817 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.785303773 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.784034342 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.78702732 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.786752838 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.783183422 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.786803254 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.784502156 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.786951077 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.786271761 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.78614565 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.784887293 seconds)
  done (took 40.99622724 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.788231595 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.78695187 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.783226055 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.785769425 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.783753228 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.785854229 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.784361637 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.784433654 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.784086207 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.782442362 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.784794987 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.788142782 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.781789815 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.782255885 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.782107614 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.782558575 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.78623583 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.781542127 seconds)
  done (took 33.840406563 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.781724831 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.781523243 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.784904763 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.781562362 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.781626642 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.783627731 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.780989473 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.783560992 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.783493506 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.781952232 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.783891105 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.783605251 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.78380014 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.781053605 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.785441175 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.781556586 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.784241076 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.781643311 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.783774262 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.781508159 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.783492914 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.783633392 seconds)
  done (took 40.942734934 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.782736834 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.783086347 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.781000976 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.781075435 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.780966893 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.783682244 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.783419496 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.781272273 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.784389372 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.783402204 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.78253395 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.783409708 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.781901839 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.782320962 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.782364498 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.781983804 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.784424278 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.78250259 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.784664383 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.782389128 seconds)
  done (took 37.372379594 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.785172454 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.785175554 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.78501672 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.785803315 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.785963907 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.78622389 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.785250243 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.7860294 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.784928498 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.786567588 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.787179762 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.785712677 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.7858038 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.786529257 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.786265337 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.786994646 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.78624859 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.786647174 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.786669279 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.785572798 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.786471529 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.786697455 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.785605812 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.786093096 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.786399694 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.786226368 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.786888613 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.786407248 seconds)
  done (took 51.730891835 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.785059192 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.785532586 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.783274273 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.784789194 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.784211591 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.783776277 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.783935603 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.784859287 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.786548624 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.785869295 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.78687582 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.787076818 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.786839095 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.786855942 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.787988416 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.786861954 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.786586191 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.784144392 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.784647124 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.784212116 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.788463456 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.786242573 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.787091175 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.78419195 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.783781795 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.788653302 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.78464081 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.785074438 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.786673987 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.784800543 seconds)
  done (took 55.291608392 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.8074921 seconds)
    (2/2) benchmarking "in"...
    done (took 1.805480936 seconds)
  done (took 5.334261753 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.78449745 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.787070987 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.786371961 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.785615688 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.784325701 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.787089527 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.78823743 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.78531713 seconds)
  done (took 16.010780744 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.786806037 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.787129873 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.78717993 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.788657522 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.787140283 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.789225021 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.792351106 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.78793938 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.789886319 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.788494706 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.792918401 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.795158031 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.791029967 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.78969327 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.787492428 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.789325075 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.790116755 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.788659817 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.789474705 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.789600144 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.789829035 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.791013865 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.79176009 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.786525325 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.789617282 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.798597701 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.793389587 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.789260228 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.788626889 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.792295867 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.788792196 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.786835768 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.78908784 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.789740732 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.789293998 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.789825749 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.796444151 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.789476538 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.796721601 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.789900719 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.790058468 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.786822391 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.791267487 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.791116685 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.791680851 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.790470762 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.790184013 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.787271747 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.789910079 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.79206769 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.794403073 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.789482007 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.786982644 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.795041938 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.791114968 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.79900232 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.790956479 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.792574103 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.797394931 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.799284676 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.802778737 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.796552893 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.792496554 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.791176642 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.799212889 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.810596614 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.79536526 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.788254863 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.788750383 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.790690863 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.801509308 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.802493098 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.799538285 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.791615313 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.791724263 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.791367593 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.791146011 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.792740047 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.797577988 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.795102914 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.792569321 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.792296819 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.801406957 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.809751878 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.792833289 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.792765121 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.792016159 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.793354416 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.792034518 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.806737749 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.792999233 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.793173652 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.792028704 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.792096038 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.794622813 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.793640203 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.791834384 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.793724474 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.790167584 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.793750817 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.794044824 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.795606922 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.799371297 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.793514421 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.793187908 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.800808906 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.792530262 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.79277968 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.80020837 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.792959552 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.794287823 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.794061721 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.798511152 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.790792167 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.794913552 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.799587074 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.794132394 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.794329994 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.794474384 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.793892943 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.801846229 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.814854848 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.794023065 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.793080972 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.797887364 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.803861357 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.794430736 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.797559306 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.79588657 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.791836279 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.792231725 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.796204622 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.795373973 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.797263981 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.794681072 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.795458612 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.791869997 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.796355884 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.795613358 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.796408736 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.796014893 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.795080448 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.796821869 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.796957441 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.796283409 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.796662004 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.801294206 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.794838378 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.79520558 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.796507646 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.793420297 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.795067513 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.796999178 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.794989897 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.796455107 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.796381701 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.794866749 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.795415646 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.795471628 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.795995635 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.796804959 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.797104864 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.799822406 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.796326092 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.799024525 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.795199608 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.793334355 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.796744701 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.796042721 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.795168168 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.795369825 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.795154582 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.799952605 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.802023636 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.797693541 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.79776013 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.79945012 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.796874623 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.797793681 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.797164087 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.799930209 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.803264053 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.797890329 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.803683515 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.797431919 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.797543204 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.796801574 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.797652387 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.797060866 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.797835662 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.799051102 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.803056357 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.809163673 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.804380268 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.799125954 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.801399955 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.798938807 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.801234418 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.802002754 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.798266601 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.798932655 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.798452449 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.797455457 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.798079175 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.799789241 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.798561413 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.797107787 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.798182029 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.797897531 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.797724463 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.79807766 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.799994038 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.798457028 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.795000732 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.798336812 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.79896829 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.798025073 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.796371681 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.797161503 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.798325464 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.798456139 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.79969766 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.807050922 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.797460057 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.799772862 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.800006568 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.799669623 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.797994737 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.80016697 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.800532904 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.799638553 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.80415556 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.799198828 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.800747536 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.805366429 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.799474311 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.799286638 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.802994744 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.800114005 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.797939771 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.802509789 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.806194108 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.800139784 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.801335455 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.801803767 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.799609138 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.800571134 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.806527384 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.797669292 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.799902294 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.801713189 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.801790481 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.798315194 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.801337694 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.801143237 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.802225396 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.803642423 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.801784566 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.801245589 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.801467846 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.801040294 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.801844041 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.801258873 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.80266254 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.807280266 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.805500553 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.802142354 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.804442429 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.801524321 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.804263244 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.801530761 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.801053483 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.80220432 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.81345752 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.80822315 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.807930261 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.803487144 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.801399717 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.807868209 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.80252569 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.805204198 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.802570313 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.802151258 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.803979833 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.801314496 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.799637774 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.802729447 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.802102612 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.803243403 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.803115972 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.805540008 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.801975745 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.80161333 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.803264365 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.803653896 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.803239017 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.802620424 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.803051157 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.804668677 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.805654932 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.802541144 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.803958912 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.809178009 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.802777997 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.805361576 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.803706993 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.803431206 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.803264308 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.805214154 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.803675898 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.805283781 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.810254973 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.806137748 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.811411884 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.803597925 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.812570612 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.804867518 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.806048949 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.81021977 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.801634139 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.802583036 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.803496432 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.805357702 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.809543881 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.804386789 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.804596809 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.806967172 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.805037186 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.804445458 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.804824511 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.804811342 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.803416813 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.804942745 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.812336211 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.804639997 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.807130883 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.806905306 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.802505955 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.805591133 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.806151872 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.804360756 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.809135392 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.805733928 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.806806977 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.805196792 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.806300621 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.80538444 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.805752209 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.805609769 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.803001712 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.806255641 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.811301376 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.806234606 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.808882225 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.80615736 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.814982415 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.805684957 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.811426203 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.80701682 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.806674275 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.807078823 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.807050529 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.80798331 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.805964325 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.808316043 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.807102082 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.808026247 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.809229662 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.807488391 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.809042156 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.807215775 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.806112718 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.806802893 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.814551665 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.824819158 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.80794212 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.809563725 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.805599509 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.807817292 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.810857402 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.807383041 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.80626534 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.809510205 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.816555935 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.813008419 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.807552928 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.807852068 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.808051883 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.809131146 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.807746431 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.807630597 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.807575837 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.807437373 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.807777846 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.808358389 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.811381218 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.807551577 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.808860196 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.808752977 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.809572997 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.81649471 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.808299739 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.809907976 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.808000693 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.808828632 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.809892604 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.808838931 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.808600185 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.809108387 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.809302212 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.810099552 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.814243219 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.814190683 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.813112175 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.808409104 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.808847926 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.810580094 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.809659574 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.810738251 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.810187877 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.810151779 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.811024296 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.810222893 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.810725687 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.807588859 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.809449526 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.810710341 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.810275646 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.811578276 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.815097082 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.809613097 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.807513966 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.809067552 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.810121953 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.809591796 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.81031115 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.818032979 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.812074686 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.819905265 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.817375419 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.813515305 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.80994597 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.812503964 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.816157773 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.811101389 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.811521772 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.810700106 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.810671911 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.810342527 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.814299495 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.812134895 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.817440524 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.810238668 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.811441949 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.817475524 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.813769934 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.81058519 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.811251534 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.81367099 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.81107887 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.80876341 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.811518064 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.811656161 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.816643544 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.81369567 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.811740752 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.81457171 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.81002982 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.81294164 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.81506393 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.811109978 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.814022857 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.809173892 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.812498254 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.813162618 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.81284805 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.809456498 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.812399216 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.811573368 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.815115146 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.817837226 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.809929192 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.813718042 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.812554834 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.812950438 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.812393474 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.812689702 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.81008817 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.810204095 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.812890835 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.812971613 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.812480873 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.816021894 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.813103294 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.812587092 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.813611874 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.813948816 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.815658843 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.821232182 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.818451252 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.810566796 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.812959373 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.814539998 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.818130084 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.813821536 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.813966615 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.813682627 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.815891539 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.81445527 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.814256483 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.813366353 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.81638985 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.82608251 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.813678565 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.814586561 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.813845675 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.818452689 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.814329728 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.811315963 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.8153091 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.817634953 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.816445452 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.821191124 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.81531942 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.82127977 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.814456356 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.815168432 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.818158161 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.817924075 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.821345253 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.818636677 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.815428395 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.815896441 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.818700333 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.829641983 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.814839592 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.824237962 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.839012936 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.816000657 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.817685468 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.815305525 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.814891691 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.81613123 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.817200454 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.815102052 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.815536976 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.815646898 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.816336559 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.81630591 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.820522637 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.816991814 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.816418122 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.815074931 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.815915857 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.816874522 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.813487327 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.816094395 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.815742456 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.816524989 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.816735913 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.816507874 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.816807059 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.828983283 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.82490605 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.816761263 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.817662634 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.814144873 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.819588728 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.818151091 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.825726525 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.822125671 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.817563857 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.817758051 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.81806005 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.818150672 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.816353633 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.817467432 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.817025265 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.817301958 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.815077885 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.828874117 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.824939153 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.822578209 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.819233682 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.818254313 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.817998981 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.818735523 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.8182393 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.818331464 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.81846559 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.81840568 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.822257639 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.817877439 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.817265332 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.820619859 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.824243713 seconds)
  done (took 1077.300620236 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.816358098 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.815441321 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.816613664 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.815696659 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.815734119 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.816143249 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.816310645 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.815582417 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.816459385 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.81592693 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.81588836 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.816130799 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.816775481 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.817203851 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.817030046 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.816783734 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.816770675 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.816634766 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.817277326 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.8175532 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.816632315 seconds)
  done (took 39.898311695 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.820486583 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.817194132 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.816658172 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.819176696 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.81664007 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.820383019 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.8175132 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.819612217 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.819532053 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.817280715 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.820194621 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.820368418 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.817326557 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.817085815 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.816705189 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.820274582 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.819531332 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.817482087 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.819901325 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.817876798 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.821241532 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.818400446 seconds)
  done (took 41.765989507 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.821257291 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.821596576 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.820834948 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.818428684 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.821013798 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.820263403 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.821370536 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.821753057 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.820836558 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.821280863 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.820229256 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.82176178 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.826275058 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.824378901 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.823501899 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.820795582 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.966635293 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.821554972 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.821735901 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.821180551 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.81933112 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.826875401 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.819512139 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.819691854 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.820696174 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.822323252 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.821817514 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.82183318 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.821567078 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.823085914 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.824834437 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.821946698 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.821364733 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.824982878 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.822648173 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.822405415 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.825280748 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.823488678 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.821047821 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.822944034 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.830912988 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.840456076 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.8247444 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.829092226 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.824007464 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.822681028 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.825410698 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.82917348 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.819485476 seconds)
  done (took 91.22763067 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.82287706 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.823801066 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.820033522 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.823764347 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.824730098 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.823134061 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.824509364 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.823108297 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.821023607 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.822137589 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.8238045 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.820937172 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.821094041 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.823606983 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.823909935 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.820697602 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.822380571 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.82162168 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.821391087 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.821202831 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.821408047 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.824520964 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.824110233 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.821402035 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.823562303 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.821543784 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.821224283 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.824389122 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.822425286 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.821601695 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.824048593 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.824628634 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.824741006 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.821885252 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.822087345 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.824805444 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.825751082 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.823079196 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.825194743 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.821995964 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.825137993 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.824744456 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.824909163 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.824466533 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.823336034 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.822839872 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.823185681 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.823626674 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.823615362 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.82623006 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.825984147 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.822770234 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.824973763 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.822279825 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.825889918 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.826859973 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.822622486 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.822545199 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.825440572 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.824379944 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.823697938 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.824932641 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.823474048 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.826363307 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.826948116 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.824525374 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.824153808 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.826153397 seconds)
  done (took 125.760967985 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.826649476 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.826311323 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.826324518 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.827826041 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.827355811 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.826093505 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.827160849 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.827297073 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.826628127 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.827431943 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.826661642 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.827388473 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.827791129 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.827065005 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.826145409 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.827869524 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.827207756 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.827094099 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.828198387 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.827283126 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.827344672 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.828277303 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.827763435 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.827831582 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.828386242 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.829232556 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.827952199 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.828323542 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.828017781 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.827794992 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.829016954 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.827965699 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.828199829 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.828443235 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.829791423 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.828919395 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.829092834 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.829042455 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.829385668 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.828568471 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.828878069 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.828992828 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.828669276 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.829370991 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.828919986 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.828995645 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.82896835 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.831208701 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.828807417 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.829312965 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.829654713 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.830292834 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.830082014 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.829572611 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.829648356 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.829154705 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.829512106 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.828959592 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.830154317 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.829854571 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.830322796 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.828889591 seconds)
  done (took 115.122044949 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.828496363 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.829497638 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.826853585 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.825899401 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.8297574 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.828446439 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.830214364 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.830009231 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.830498932 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.829754974 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.829922903 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.826649112 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.827082574 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.830134805 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.827870064 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.828338643 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.82784527 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.827736527 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.82963139 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.827566179 seconds)
  done (took 38.335335972 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.827596738 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.83055993 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.827683904 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.829260992 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.830682532 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.828290309 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.831119862 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.830822392 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.828745185 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.831267281 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.831189292 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.831805275 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.829350715 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.828563372 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.831673019 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.828997809 seconds)
  done (took 31.043060795 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.828861836 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.831486916 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.830890347 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.831317254 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.829071007 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.828674693 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.831387743 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.82870699 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.829138902 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.831789476 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.83289173 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.832106944 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.831884545 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.832169051 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.829425954 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.833083439 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.829418291 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.830235809 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.832054127 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.833265551 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.830578863 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.830016021 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.833001071 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.83323805 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.829967025 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.83192793 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.830481704 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.830422652 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.830169017 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.833621212 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.83012483 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.830701362 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.831726497 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.830211545 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.834274901 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.83084106 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.833817228 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.832682505 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.8337498 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.833289285 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.833771699 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.831493757 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.83367397 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.834090844 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.831307953 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.833723714 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.832301272 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.832226532 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.832620756 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.831804539 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.833878241 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.835458625 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.834706689 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.834550947 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.835632725 seconds)
  done (took 102.521247463 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.834918512 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.834386235 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.832905907 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.834487075 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.834770004 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.832836506 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.835021627 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.832726961 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.832504621 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.834854369 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.833297848 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.834874929 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.832451229 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.835025347 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.832813245 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.835458151 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.832609053 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.832103035 seconds)
  done (took 34.777052637 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.833363418 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.835549334 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.835065421 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.832147778 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.832747118 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.836068637 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.833411409 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.835397609 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.835726128 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.833887735 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.832355463 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.835383945 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.8358596 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.835350675 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.833248957 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.832545517 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.835674434 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.836147174 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.833213881 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.833063761 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.83629598 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.837084353 seconds)
  done (took 42.129366476 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.836293085 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.834922745 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.85022585 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.851393325 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.856175938 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.862313991 seconds)
  done (took 12.861052618 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835319189 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837730716 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.835437713 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838109614 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836208464 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834881464 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83470347 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834538536 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837206144 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835403566 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835011922 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837295639 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837330957 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834683736 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837569255 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837065458 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834584264 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835010478 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835756803 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837917463 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83556186 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838156833 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834349713 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834747398 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835464209 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834929548 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83777128 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836050142 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835785489 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837867404 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83875205 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835714681 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837746585 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836179765 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838451426 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837613576 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836911313 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839218709 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83864466 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836658187 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.838936623 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838992051 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838369064 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836130446 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838637478 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835988156 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836628422 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836911196 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836774267 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840386498 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838769864 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836225033 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840397701 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83894613 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840386819 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840364023 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837559602 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837341454 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839835934 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838357171 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837284596 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840376112 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83749179 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839494626 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839851965 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838233744 seconds)
  done (took 123.030391841 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837804136 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.837630438 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836689841 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838728015 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837381998 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83781022 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838744336 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837347038 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837350664 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837988948 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839560379 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8377039 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83835431 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838821763 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838452717 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837689104 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837696108 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838021897 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840135535 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84105684 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839065778 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838964254 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837978691 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838657221 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838631237 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841268703 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837977453 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838656474 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838760213 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837816904 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838878303 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839038778 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838487439 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.83840163 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839593834 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.83865533 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83900168 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839496436 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839007666 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842326001 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839455614 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841915048 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839711951 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840579174 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840398347 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839907562 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839326883 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839950951 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840000863 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84026006 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84079422 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840833254 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841018995 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841104013 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840226033 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840577843 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840686729 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840253702 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841195723 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842994361 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839984557 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840554293 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842780864 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840909776 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840954869 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841312229 seconds)
  done (took 123.179327228 seconds)
done (took 2512.480912647 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.895453116 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.896990088 seconds)
  done (took 15.569631972 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.001196988 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.957637064 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.837639505 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.864372688 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.837816932 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.852386639 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.852836683 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.838422288 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.837262342 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.838586796 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.837339126 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.027899698 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.840048953 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.837973989 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.837461543 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.930168244 seconds)
  done (took 51.811750675 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.843062754 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.84178495 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.852303499 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.843625267 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.841059966 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.852254242 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.873612056 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.844271181 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.873774718 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.852154799 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.907726817 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.849952358 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.84071119 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.889179603 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.852406644 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.856533289 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.92755575 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.913580946 seconds)
  done (took 35.33006767 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.917264774 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.842382102 seconds)
  done (took 10.538627949 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.85630478 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.850428821 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.841932564 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.846427075 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.872501177 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.851919565 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.837741394 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.84148842 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.873255138 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.864308505 seconds)
  done (took 70.31289472 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.848164991 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.843974047 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.84522649 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.841380864 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.836273912 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.841012167 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.842898674 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.838985184 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.522098103 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.876339001 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.851215733 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.848183324 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.843674598 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.84450525 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.841070577 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.865991039 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.984946202 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.841425936 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.841362082 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.848362992 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.843294578 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.896747272 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.855625469 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.843927277 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.872879923 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.516110755 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.851870306 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.850282097 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.952638138 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.841675617 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.84458164 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.844711479 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.846196289 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.217911758 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.117895295 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.842522461 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.852874005 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.852184118 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.842144848 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.973151875 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.844561404 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.849964408 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.822808251 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.097737477 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.94382178 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.884597084 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.204484048 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.847615282 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.84653157 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.874451857 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.84710064 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.846882252 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.860745927 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.358788684 seconds)
  done (took 131.216639514 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.8392562 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.137173133 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.993246456 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.839398378 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.112640638 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.046253907 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.843215106 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.889672984 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.841344857 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.042678236 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.001755823 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.947224105 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.84093317 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.841404521 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.842070283 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.839292543 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.999716558 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.907433027 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.841588481 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.839008036 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.869277435 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.047725398 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.963777974 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.843655179 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.862868581 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.052394662 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.961331652 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.945641008 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.119606516 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.83959094 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.90592455 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.842483109 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.840874572 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.840666237 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.996732853 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.936153894 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.930180634 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.842969016 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.841581126 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.842167932 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.502886936 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.038278514 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.938617098 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.983858054 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.993368194 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.047243212 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.488602799 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.840045093 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.481538174 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.00482688 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.054535548 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.047288347 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.965916947 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.845474589 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.00313959 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.840287509 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.840673719 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.078782076 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.986191954 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.947565711 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.843051021 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.842508041 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.841959203 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.085592831 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.843293338 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.938915058 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.843447392 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.844283514 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.940726065 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.945948016 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.98324097 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.058340675 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.876496283 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.56450272 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.062345102 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.056546836 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.911851771 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.077071414 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.844321816 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.842810048 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.929131386 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.592798721 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.000883189 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.092055863 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.063642203 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.877458883 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.450983808 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.843281495 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.037153317 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.027925159 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.040453294 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.991372535 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.995683665 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.964843123 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.844837542 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.843120052 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.043635645 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.982669526 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.847732922 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.205398842 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.078382263 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.416597713 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.866989793 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.139146025 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.978154246 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.24714413 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.471947908 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.845115905 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.011895846 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.883260389 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.845039262 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.845277742 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.03584938 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.656163946 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.845973262 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.592054814 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.908951773 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.847864861 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.047639871 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.846557305 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.054661344 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.845983694 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.07966185 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.950291082 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.879373787 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.018233589 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.989618879 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.640835092 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.093075903 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.08897355 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.963180242 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.114799915 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.58147798 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.845869565 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.120510117 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.847693402 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.846155855 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.012474706 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.847796733 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.993711622 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.85045615 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.073510342 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.874174296 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.005703955 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.851277219 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.079991948 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.884458661 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.898191757 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.847841539 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.968533392 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.848270536 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.729600405 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.002202205 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.847977168 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.847617094 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.262153453 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.846553518 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.993580653 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.076889696 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.872124385 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.915307665 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.371319688 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.847373397 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.933876212 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.874754577 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.591155444 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.847501902 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.004313529 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.790377208 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.287936219 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.847836913 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.087741533 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.08039956 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.852155946 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.848303673 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.590692142 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.551273228 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.848973267 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.007349295 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.067699185 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.493926842 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.049794778 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.850322001 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.976892767 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.852616554 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.923023022 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.198916988 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.848923712 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.848009803 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.847854297 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.848428871 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.848817022 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.054086859 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.881097782 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.348553354 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.985181292 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.065204452 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.160959957 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.06840452 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.893863743 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.850050705 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.09436568 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.851741296 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.91429744 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.850589712 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.872773395 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.080224128 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.85061624 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.059027164 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.101627171 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.773552493 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.900846746 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.851416644 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.850837147 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.850572695 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.996616524 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.941861128 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.85166024 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.850027606 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.959919679 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.970920832 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.043803427 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.447168704 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.914815321 seconds)
  done (took 892.359542286 seconds)
done (took 1208.914160578 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.850767401 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.850308676 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.84020623 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.855267941 seconds)
  done (took 29.186707984 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.862421901 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.858461939 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.860087367 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.858521339 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.860760466 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.859272165 seconds)
  done (took 12.950012277 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.909847775 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.852790669 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.854997029 seconds)
  done (took 21.409834347 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.926983298 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.256964438 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.962375776 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.293010899 seconds)
  done (took 10.231452096 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.862218642 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.861752397 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.862167211 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.863071653 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.865023519 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.86654475 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.862098807 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.863555361 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.866147236 seconds)
  done (took 18.56606934 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.267372992 seconds)
done (took 98.399888984 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.922745391 seconds)
    (2/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.444738502 seconds)
    (3/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.196673576 seconds)
    (4/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.857011065 seconds)
    (5/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 8.379082732 seconds)
    (6/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.921962358 seconds)
    (7/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.978847863 seconds)
    (8/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.992899686 seconds)
    (9/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.359489381 seconds)
    (10/309) benchmarking ("sort", Float64, false)...
    done (took 5.659190167 seconds)
    (11/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.883352932 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.015722459 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.155619504 seconds)
    (14/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.222669147 seconds)
    (15/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.994728244 seconds)
    (16/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.155120558 seconds)
    (17/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.440541239 seconds)
    (18/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.764974845 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.976033591 seconds)
    (20/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.179228011 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.994864091 seconds)
    (22/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.926566813 seconds)
    (23/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.022153689 seconds)
    (24/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.843684273 seconds)
    (25/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 8.40570653 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.900127307 seconds)
    (27/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.8631682 seconds)
    (28/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.632247276 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.930270472 seconds)
    (30/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.870033628 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.930423121 seconds)
    (32/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.918570567 seconds)
    (33/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.284457133 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.233785981 seconds)
    (35/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.192720393 seconds)
    (36/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.05665271 seconds)
    (37/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.476861782 seconds)
    (38/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.965770912 seconds)
    (39/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.94543879 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.960566186 seconds)
    (41/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.859083053 seconds)
    (42/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.985024629 seconds)
    (43/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.937585193 seconds)
    (44/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.866489654 seconds)
    (45/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.84656884 seconds)
    (46/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.364427932 seconds)
    (47/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.862380528 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 3.645319362 seconds)
    (49/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.860375739 seconds)
    (50/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.615532455 seconds)
    (51/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.218678758 seconds)
    (52/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.921054725 seconds)
    (53/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.396868198 seconds)
    (54/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.940211922 seconds)
    (55/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.160490602 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.975516189 seconds)
    (57/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.909445671 seconds)
    (58/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.448693241 seconds)
    (59/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.430600245 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.125188473 seconds)
    (61/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.074528032 seconds)
    (62/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.015042237 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.904449726 seconds)
    (64/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.200193523 seconds)
    (65/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.08496378 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.643462919 seconds)
    (67/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.86173688 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.457817482 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.914785739 seconds)
    (70/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.940213634 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.237785548 seconds)
    (72/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.84374819 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.089630469 seconds)
    (74/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.044259436 seconds)
    (75/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.784637958 seconds)
    (76/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.936857463 seconds)
    (77/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.862365632 seconds)
    (78/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.086039882 seconds)
    (79/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.00276649 seconds)
    (80/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.924727138 seconds)
    (81/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.885235121 seconds)
    (82/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.129081391 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.18815498 seconds)
    (84/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.42072864 seconds)
    (85/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.899543045 seconds)
    (86/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.432929427 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.975615631 seconds)
    (88/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.859038547 seconds)
    (89/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.00864516 seconds)
    (90/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.949813469 seconds)
    (91/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.808481231 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.534008045 seconds)
    (93/309) benchmarking ("sort", Int64, false)...
    done (took 5.564184271 seconds)
    (94/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.039280569 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.107456935 seconds)
    (96/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.201199108 seconds)
    (97/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.001669138 seconds)
    (98/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.936958954 seconds)
    (99/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.985822987 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.153962821 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.98209066 seconds)
    (102/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.885502256 seconds)
    (103/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.961497798 seconds)
    (104/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.160157795 seconds)
    (105/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.060225964 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.09856706 seconds)
    (107/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.847628733 seconds)
    (108/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.992684307 seconds)
    (109/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.021804845 seconds)
    (110/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.937568924 seconds)
    (111/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.892114314 seconds)
    (112/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.885844407 seconds)
    (113/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.869724104 seconds)
    (114/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.846021325 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.867659323 seconds)
    (116/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.777863908 seconds)
    (117/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.160432663 seconds)
    (118/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.761031864 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.134991942 seconds)
    (120/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.861094364 seconds)
    (121/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.891296279 seconds)
    (122/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.201029138 seconds)
    (123/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.847779064 seconds)
    (124/309) benchmarking ("perf_sum", Float32, false)...
    done (took 3.576321529 seconds)
    (125/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.895719367 seconds)
    (126/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.004514302 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.860610966 seconds)
    (128/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.769799282 seconds)
    (129/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.8525629 seconds)
    (130/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.172201515 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.828574999 seconds)
    (132/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.376594587 seconds)
    (133/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.157142021 seconds)
    (134/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.024373155 seconds)
    (135/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.952835842 seconds)
    (136/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.865219223 seconds)
    (137/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.92812461 seconds)
    (138/309) benchmarking ("sort", Bool, false)...
    done (took 2.313331047 seconds)
    (139/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.886779719 seconds)
    (140/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.919570572 seconds)
    (141/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.865205615 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.170961751 seconds)
    (143/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.114917848 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.242624337 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.246338921 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.006093287 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.084862122 seconds)
    (148/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.865468981 seconds)
    (149/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.167966219 seconds)
    (150/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.971809557 seconds)
    (151/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.006335227 seconds)
    (152/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.979521713 seconds)
    (153/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.299401027 seconds)
    (154/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.831831309 seconds)
    (155/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.927574552 seconds)
    (156/309) benchmarking ("sort", Int8, false)...
    done (took 4.874870537 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.937916171 seconds)
    (158/309) benchmarking ("sort", Float32, false)...
    done (took 5.620487592 seconds)
    (159/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.865584962 seconds)
    (160/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.039437846 seconds)
    (161/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.004642342 seconds)
    (162/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.816083358 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.085662721 seconds)
    (164/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.892111902 seconds)
    (165/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.148984816 seconds)
    (166/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.159808168 seconds)
    (167/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.868078049 seconds)
    (168/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.95047433 seconds)
    (169/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.15767229 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.868185149 seconds)
    (171/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.048731592 seconds)
    (172/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.892327252 seconds)
    (173/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.245609927 seconds)
    (174/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.980886291 seconds)
    (175/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.887611479 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.771368478 seconds)
    (177/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.679878755 seconds)
    (178/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.869025683 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.946012552 seconds)
    (180/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.852330087 seconds)
    (181/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.032746181 seconds)
    (182/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.995436531 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.109617972 seconds)
    (184/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.378414404 seconds)
    (185/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.194751882 seconds)
    (186/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.230370006 seconds)
    (187/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.034892038 seconds)
    (188/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.851484528 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.142136675 seconds)
    (190/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.468193893 seconds)
    (191/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.355484379 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.166950372 seconds)
    (193/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.471644503 seconds)
    (194/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.983284137 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.135492796 seconds)
    (196/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.477809273 seconds)
    (197/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.126503163 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.895330948 seconds)
    (199/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.169554278 seconds)
    (200/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.893705109 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.503827438 seconds)
    (202/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.002355649 seconds)
    (203/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.852978369 seconds)
    (204/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 3.569993636 seconds)
    (205/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.851721633 seconds)
    (206/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 8.384610426 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.921050763 seconds)
    (208/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.167374693 seconds)
    (209/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.976056801 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.888176791 seconds)
    (211/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.049988879 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.925995316 seconds)
    (213/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.12047191 seconds)
    (214/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.235010727 seconds)
    (215/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.172576014 seconds)
    (216/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.894651678 seconds)
    (217/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.85172248 seconds)
    (218/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 8.111976447 seconds)
    (219/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.374463744 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.514690762 seconds)
    (221/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.083983704 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.872881564 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.731604396 seconds)
    (224/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.060672723 seconds)
    (225/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.867787894 seconds)
    (226/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.964482241 seconds)
    (227/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.654088475 seconds)
    (228/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.083323307 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.759411126 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.995507245 seconds)
    (231/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.961798262 seconds)
    (232/309) benchmarking ("sort", BigInt, false)...
    done (took 6.869273442 seconds)
    (233/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.268627197 seconds)
    (234/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.009759254 seconds)
    (235/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.393199981 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.948484645 seconds)
    (237/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.890609138 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.966826451 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.552052364 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.214575531 seconds)
    (241/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.871009298 seconds)
    (242/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 3.506467018 seconds)
    (243/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.910465787 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.774942552 seconds)
    (245/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.225799494 seconds)
    (246/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.264018398 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.756762504 seconds)
    (248/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.679020615 seconds)
    (249/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.067235128 seconds)
    (250/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.868432221 seconds)
    (251/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.120364083 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.526085341 seconds)
    (253/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.886138967 seconds)
    (254/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.034621798 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.135123081 seconds)
    (256/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.231898021 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.168334329 seconds)
    (258/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.891961065 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.964107114 seconds)
    (260/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.473730852 seconds)
    (261/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.271980761 seconds)
    (262/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.993444659 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.896355503 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.194835672 seconds)
    (265/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.057641372 seconds)
    (266/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.879773587 seconds)
    (267/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.060716618 seconds)
    (268/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.003868909 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.252211019 seconds)
    (270/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.954034555 seconds)
    (271/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.869349271 seconds)
    (272/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.373591783 seconds)
    (273/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.151321577 seconds)
    (274/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.88501411 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.923617648 seconds)
    (276/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.192155255 seconds)
    (277/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.89774411 seconds)
    (278/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.05836188 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.675729713 seconds)
    (280/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.392235468 seconds)
    (281/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.893047442 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.977008065 seconds)
    (283/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.542558405 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.960301635 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.009242145 seconds)
    (286/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.464705321 seconds)
    (287/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.07461967 seconds)
    (288/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.857830509 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.665860873 seconds)
    (290/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.704223089 seconds)
    (291/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.875512697 seconds)
    (292/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.316179681 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.916292513 seconds)
    (294/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.955522525 seconds)
    (295/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.499089322 seconds)
    (296/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.082158471 seconds)
    (297/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.978820147 seconds)
    (298/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.03999271 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.925973505 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.25315688 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.896369628 seconds)
    (302/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.004934369 seconds)
    (303/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.874549801 seconds)
    (304/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.058322082 seconds)
    (305/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.249579271 seconds)
    (306/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.965665391 seconds)
    (307/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.169672496 seconds)
    (308/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.803296621 seconds)
    (309/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.750762795 seconds)
  done (took 1015.352299811 seconds)
done (took 1017.218497016 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.90579729 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.900542281 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.883418516 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.904847412 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.995899191 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.917589707 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.893795924 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.884850385 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.931189804 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.932110488 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.883944714 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.915831882 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.886392303 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.885053909 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.883309951 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.899877751 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.184942978 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.907798255 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.901681751 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.893222745 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.901815042 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.882991617 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.933270671 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.916590798 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.888666001 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.887458301 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.888557321 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.905451901 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.997819544 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.889294792 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.888017898 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.898271685 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.184369269 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.904624112 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.880522719 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.90583356 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.898540788 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.894561943 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.889276466 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.918491825 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.311866646 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.891307133 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.887571642 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.886738431 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.885827993 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.890490886 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.888198867 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.89255975 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.900232883 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.900717647 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.309062979 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.907155773 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.891538654 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.886329268 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.897378497 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.887718503 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.889982876 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.903446497 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.907504075 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.904262566 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.175658851 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.912147731 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.888844191 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.904282255 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.895898342 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.348473479 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.888078741 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.892201405 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.311705662 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.897721076 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.349545099 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.902910771 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.888788209 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.903223475 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.920171797 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.187287311 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.902739212 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.886709238 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.896323091 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.888743475 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.899315138 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.901264049 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.894029407 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.888555444 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.903306797 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.921799229 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.898616823 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.890629616 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.897467802 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.908967908 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.897398184 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.901015977 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.89205741 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.883341262 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.898418178 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.89210104 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.893343676 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.892478578 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.894163982 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.899694559 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.312198484 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.910688432 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.884733475 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.885400176 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.887319453 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.904117274 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.312572483 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.896167577 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.911073831 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.937038362 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.892747241 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.178544983 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.914280176 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.906342871 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.898304433 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.893525928 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.885260584 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.177938129 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.334028514 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.910659336 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.892185536 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.891201 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.907650898 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.891913866 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.887709019 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.18971322 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.912000063 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.904981942 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.01305273 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.901527927 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.923144296 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.889614039 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.893772277 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.92373361 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.907765829 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.922265339 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.894156791 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.90739614 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.907363618 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.887581454 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.903140845 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.902312094 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.892348407 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.89672952 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.885195756 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.924222771 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.904492213 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.904638018 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.912006523 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.013863144 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.889940745 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.180946396 seconds)
done (took 296.565023165 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.956972035 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.877731905 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.987355793 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.887416692 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.972258806 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.97222976 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.884783324 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.884695268 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.884099007 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.26517388 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.884397216 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.894189924 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.880569769 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.885072755 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.971316727 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.887317933 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.885782965 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.228308255 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.889047789 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.959615209 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.880334337 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.885475325 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.8887527 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.268716336 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.881515301 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.88595141 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.959043035 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.888830909 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.232671234 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.882867031 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.888145826 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.233318744 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.980037326 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.90690212 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.898320347 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.895690868 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.974583823 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.892065606 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.969159377 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.969260727 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.989855743 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.929672884 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.885581068 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.881802003 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.892191789 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.890602398 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.886860456 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.916666424 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.882492194 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.887482715 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.230200998 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.90034261 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.896848877 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.887979816 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.887407659 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.911370921 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.887421857 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.890761661 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.981576444 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.891952405 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.952126283 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.269830787 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.266492724 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.890054557 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.89148037 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.888063329 seconds)
  done (took 185.587447483 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.957324296 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.963188345 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.957923404 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.893006746 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.940188703 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.962400985 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.893150682 seconds)
  done (took 15.388401558 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.896525096 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.890667998 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.941060644 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.940406994 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.89080441 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.042155752 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.890736694 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.902698613 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.296461613 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.943902567 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.892229874 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.891520063 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.897919539 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.88942761 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.939585697 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.903183487 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.005993259 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.892778768 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.89346011 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.042757697 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.888907651 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.898353964 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.945816027 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.902753692 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.892654875 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.897880651 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.476977765 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.893226874 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.890006712 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.891870936 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.890723201 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.936060994 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.892496955 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.888164511 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.889877929 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.008165902 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.89247133 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.889654075 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.892329914 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.88624494 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.892136696 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.8929442 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.893408957 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.889948278 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.892793891 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.916126466 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.892466829 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.892698585 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.892167273 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.89384968 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.944110824 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.892847147 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.890607543 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.89108627 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.948883967 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.900665729 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.894156655 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.890554597 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.89290645 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.890311743 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.044142101 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.941251487 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.893194234 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.941332924 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.894140313 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.894154435 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.892970505 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.894268502 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.948752292 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.893699121 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.942609199 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.89144812 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.053971624 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.918885858 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.894905064 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.898124016 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.898800266 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.896678503 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.889406011 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.900914015 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.891335952 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.895471373 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.900574777 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.891995769 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.892183691 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.007010242 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.003506204 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.892984056 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.907099546 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.902103369 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.892490097 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.947922383 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.895259588 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.892500735 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.946746162 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.0099874 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.951921225 seconds)
  done (took 208.483407949 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.899788894 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.902849515 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.89663806 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.912384384 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.895332486 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.895274486 seconds)
  done (took 13.228390977 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.896806631 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.895854988 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.89508789 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.896091435 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.896211742 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.896428949 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.898045926 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.896712267 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.89958266 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.896252876 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.897187495 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.898187147 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.898029945 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.897520952 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.897941063 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.895921609 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.898850167 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.893597119 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.89618328 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.897029043 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.049416453 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.897456204 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.897294932 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.896996619 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.900659982 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.896578467 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.905166288 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.896662908 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.896198813 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.904279083 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.900596477 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.897714254 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.897569818 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.901159236 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.901117605 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.898395921 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.900169743 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.897671 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.894079097 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.89822445 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.898998864 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.897676851 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.898060237 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.899051965 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.899202795 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.901476692 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.902096554 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.905457592 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.898990266 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.899040162 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.899766236 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.897858091 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.898972162 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.89963182 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.899031555 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.902542543 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.902146632 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.899862595 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.899271925 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.899318713 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.899497415 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.900038391 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.901032846 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.903098185 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.896569591 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.900632759 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.90023757 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.902151241 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.900105572 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.899908884 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.901026845 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.89651595 seconds)
  done (took 139.693556363 seconds)
done (took 564.209373895 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.15707273 seconds)
  done (took 8.987472206 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.97127806 seconds)
  done (took 8.893151612 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.222916843 seconds)
  done (took 10.053659154 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.895988464 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.908129371 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.905614532 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.897424153 seconds)
  done (took 29.445408882 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.90145903 seconds)
  done (took 8.731512107 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.904391256 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.892842652 seconds)
  done (took 15.660350057 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.939017657 seconds)
  done (took 8.770227509 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.95197322 seconds)
  done (took 8.787359832 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.903470899 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.903106435 seconds)
  done (took 15.650572346 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.880087075 seconds)
  done (took 8.711086479 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.523802785 seconds)
  done (took 11.363141381 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.895814673 seconds)
  done (took 8.738298428 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.938943347 seconds)
  done (took 8.769961015 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.852049414 seconds)
  done (took 9.683445011 seconds)
done (took 164.074732246 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.895979956 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.89532354 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.892437531 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.894155297 seconds)
  done (took 29.409671102 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.935163639 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.934345342 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.935577134 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.94562205 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.937892362 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.934939722 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.927590211 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.927005579 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.945444434 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.93924714 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.937485242 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.937688127 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.934868141 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.928009869 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.936992165 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.937294439 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.945488802 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.936085478 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.927744064 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.938569719 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.903061136 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.946026827 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.938642283 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.902235037 seconds)
  done (took 48.245420333 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.098004941 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.974463398 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.056691387 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.953780664 seconds)
  done (took 9.915701644 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.954377301 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.956446013 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.968412299 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.007454508 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.033547797 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.965554965 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.931103092 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.927072841 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.909936401 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.956192302 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.031645259 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.972636478 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.039103332 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.902759612 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.090226039 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.902841998 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.903772876 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.955994392 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.006842454 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.020704724 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.904146241 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.955168529 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.961056928 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.973323627 seconds)
  done (took 49.063895653 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.902453394 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.912254726 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.909124565 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.90335797 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.903410859 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.903901605 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.909099816 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.904510871 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.923642649 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.904897561 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.902883953 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.903882199 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.903016517 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.903830269 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.902406235 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.915596962 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.91686028 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.903605585 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.908470223 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.910135031 seconds)
  done (took 39.982462343 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.896570899 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.842349865 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.250131627 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.153846096 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.898704587 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.898022227 seconds)
  done (took 32.774959381 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.916320786 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.908956281 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.904402342 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.960809374 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.040183914 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.910874938 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.905505721 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.914270116 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.946852557 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.96600758 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.922402715 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.929363453 seconds)
  done (took 25.061384466 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.899079932 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.901171357 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.901180039 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.917581905 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.914429189 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.911264596 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.913076536 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.898865728 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.918164991 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.922231288 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.911892462 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.916434367 seconds)
  done (took 44.764497763 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987523996 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.945480115 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.931414094 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.581862567 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.277718223 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.112187128 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.54903785 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.230795911 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.904372137 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17350782 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.876991229 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00322128 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.158064063 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.2656278 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.928224175 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.360568706 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.196160731 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.110198133 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.928002263 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.561983534 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965725648 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.96507925 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.62077064 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.958100048 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.113589571 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.033859101 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.287351493 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.900957378 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035843567 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.941711728 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912365435 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.901129106 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17468746 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.282312007 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008622571 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911609313 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.515128781 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.618441083 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.893571896 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.639959904 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.590739784 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.016813306 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913297508 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903765116 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.836480688 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.934383699 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270083202 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.908269547 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.613565175 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.902046538 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.913159474 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996938111 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.90612636 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.718801004 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.850454179 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.904952118 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.901038214 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909528203 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.476921834 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.993261847 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.971123667 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.870518633 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.993729007 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.615466413 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.289508671 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.049706686 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.907893652 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.907670883 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.83812612 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.559608182 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.960516828 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.233517019 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.92518019 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.55406882 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.202244369 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.954842136 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.845191681 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174616092 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.303829122 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.870521867 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.133241636 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904440405 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840611463 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.851869294 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.8383977 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.168997985 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941559056 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.66703996 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944418566 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.233437167 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.916056533 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922103014 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929021148 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.12915712 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.789434548 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.905102397 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.660317608 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.05307144 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927994345 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.235036113 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840550296 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.909349465 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163224812 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.117854649 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.855210013 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.393548612 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061140764 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.346009419 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.951556217 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.933957717 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.946760657 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.172735191 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.961392367 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.985144636 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961017623 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.90698167 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.205211622 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.377069791 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.037025064 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.889207491 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.032338759 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.2301802 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934319718 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989760224 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.915379785 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.906765109 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.667675385 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.460156251 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.907766646 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.909724075 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.856783321 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.947382829 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.90903076 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.860349739 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.525137427 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.920648408 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.921535852 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.131896003 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.353496929 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.214032079 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842942453 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.236838115 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.001016968 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.130136926 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.550384776 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.982606072 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.168685554 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.850852758 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.889110847 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.949436117 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926969955 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007757375 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930713123 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.936383348 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.195879228 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.913508315 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.912986838 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.659933852 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.947197451 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918246222 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.913651757 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.658273745 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.179625963 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.933023304 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.915160136 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.79936963 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.922884902 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973788886 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.915028144 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.919546334 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.445641688 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.620272062 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.916339916 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.490915284 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133630257 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919889486 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.59536116 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.023798998 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.992256413 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.181096731 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.966398342 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.843808362 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.621598213 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.603649015 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911301204 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.847121769 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.910908265 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919980349 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921243028 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.106757647 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.182487357 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.95390213 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.56875028 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.953259525 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.922491311 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.916180829 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.91115366 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.41924753 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.002364664 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.978622373 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.951067523 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054138427 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.924918832 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.846467089 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.915275201 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.917102378 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.912147551 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.912112046 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94530781 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.575809142 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287083074 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.174090994 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.52215306 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926455759 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.638541995 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.970255604 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.911709524 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.681178753 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.961357261 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.938839283 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931493047 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.923147059 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.645766551 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.648543342 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.482583832 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217457555 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.210899161 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338303695 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.00475681 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.935745363 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.248055082 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.847512842 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.470692206 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.970878016 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.251754844 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.861741174 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.997599176 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.556328551 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.254000672 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92685824 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141414764 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.292642733 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.622823231 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.047461593 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.125662058 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948739861 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.948949947 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.869980115 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.217798114 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05615888 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.574656503 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.110224153 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245940112 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.54901671 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.029913939 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.913370595 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.598644697 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000293543 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.628201392 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.086721648 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.976135271 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.810369909 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373330231 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.923504299 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.141316162 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.260650041 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.95808057 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.029551617 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.853076746 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.927055416 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.925978664 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.916938124 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.910086417 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.793756321 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.168517816 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925966135 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.850054101 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.908973048 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.198531518 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.814559577 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.921471038 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916760122 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.213395266 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.326784634 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078306393 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.897923955 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.424984548 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.922945249 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.850718598 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.850493013 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.609120489 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.922201014 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.891884027 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.123621741 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.016546427 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.827306438 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.873066589 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.992679297 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.174263324 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.931754562 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.185742624 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.189620331 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.614274488 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94230829 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.01857022 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.560561927 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.017453963 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.917954836 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.153088751 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.671347592 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.144185244 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.9630549 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.867664777 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.915944379 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.132627651 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.91795504 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.777141169 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.138147103 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.642228999 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.92454813 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2239703 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989071845 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.772498612 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.954120782 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.00993016 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928032396 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998616103 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930013423 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.930000387 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.930754947 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965212939 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.787776795 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.033894882 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.932690973 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012940686 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.006854403 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.436982518 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.924930351 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.18947052 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271537646 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.239325115 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.975689172 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.919575934 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.919378574 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.853820236 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068350585 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.145944598 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.194435329 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.049204433 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.034516125 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943768658 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.55703482 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.998898688 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.155866787 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.19500004 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.815795961 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.299855651 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.954521377 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.9215056 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931545442 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.133683232 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.130721601 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220695591 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.057181667 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.873950153 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.273929738 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.197104242 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.921769472 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.921831824 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.511540579 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.930344496 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.607775825 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.962057668 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.783355147 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188122093 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933192335 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.300080511 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.945624015 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.081316455 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.694854233 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.583969222 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.213039911 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.904746163 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.982531553 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.193580911 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.307232792 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232033668 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989595538 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.934489349 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.031807653 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069390519 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.798446115 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.92346527 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.924049617 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.971567319 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.632671977 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.932786191 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195480936 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.230456729 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.920303292 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.799250204 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946611235 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.932909875 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.14807607 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.188749314 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.174062417 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9335655 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.929302413 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.73975835 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.194983699 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.97945717 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.858101828 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.927503971 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022700251 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.172403441 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.945038337 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.377275398 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.635701279 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.194509712 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.924355149 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945467897 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.966895699 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.286691202 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.242380921 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.453437134 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.131992875 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.513097351 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.379961381 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.221297087 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.929609415 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.96107988 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.223120377 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.92893725 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.891274636 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.958861485 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.192143972 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.232839105 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.93602832 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.596302952 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.896749281 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.267572979 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.487728892 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.865661162 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.93502346 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.986106385 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.926911697 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.057449682 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.937599045 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.803594326 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.974017119 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.681083854 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.198986142 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.932148512 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.918010841 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.626795917 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.093247716 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955219331 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069092186 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929409245 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.601509277 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.279326394 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.183662205 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.889639029 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.930873918 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.930642922 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.927776528 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.914729207 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.123546278 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.123335457 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200183695 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.919898821 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.9588412 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.931703932 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.143369614 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.139172183 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.785661375 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.05860084 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.889452715 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.965146918 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.833975883 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.429351867 seconds)
  done (took 1689.165221786 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.95490871 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.945648893 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.950279286 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.99874188 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.955071833 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.973355689 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.050060873 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.022335306 seconds)
  done (took 57.714812882 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.92741307 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.124595831 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.93717126 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.929331884 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.937842787 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.928572587 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.09069691 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.942776005 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.938329112 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.937962016 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.928650573 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.934414701 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.238783655 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.948232259 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.928246653 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.914663205 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.937086107 seconds)
  done (took 75.415570184 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.929683019 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.992046782 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.966133556 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.946115844 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.888944483 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.938822237 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.706313582 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.932748727 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.931808999 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.149857693 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.560419324 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.930891023 seconds)
  done (took 90.740487135 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.938149222 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.936162328 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.936220565 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.935772465 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.935191915 seconds)
  done (took 11.550255551 seconds)
done (took 2205.658956653 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.29522334 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.145834395 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.153103057 seconds)
  done (took 6.165830484 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.077683474 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.12621032 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.246054387 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.266803225 seconds)
  done (took 10.585741612 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.218613687 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.319023757 seconds)
  done (took 6.403281026 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.323865682 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.933021432 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.306577594 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.930072781 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.932196401 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.93198537 seconds)
  done (took 22.665259324 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.933720197 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.936856505 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.933942745 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.936043648 seconds)
  done (took 9.606467609 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.915146816 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.605200207 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.916178462 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.934474576 seconds)
  done (took 21.237405117 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.681477644 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.693669234 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.677924405 seconds)
  done (took 9.919868678 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.496832106 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.819425163 seconds)
  done (took 9.183361164 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.190831871 seconds)
  done (took 4.057227956 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.065843505 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.242595552 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.474839631 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.447691853 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.529591756 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.592830189 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.237795111 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.169148825 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.33194716 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.352817524 seconds)
  done (took 25.312421668 seconds)
done (took 140.860454231 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.306229831 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.172941681 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.131899692 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.264908703 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.19468652 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.133200027 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.356645142 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.246968833 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.771919008 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.769950236 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.264308538 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.249030551 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.091307696 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.171361014 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.091851106 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.168858448 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.154958105 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.32204942 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.999303556 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.15874149 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.356063157 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.901397036 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.107229573 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.916200327 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.155507159 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.086483855 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.480270748 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.170619712 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.155130592 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.492183915 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.087722371 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.313324114 seconds)
  done (took 175.113204389 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.702381892 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.933429593 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.933925962 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.934179241 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.314664645 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.934871054 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.93720878 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.933149038 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.182987599 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.172712221 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.93355163 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.285895297 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.936608978 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.934309996 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.950509839 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.943166228 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.281190371 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.728911404 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.934074496 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.9353039 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.937317156 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.161255694 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.935470967 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.182912398 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.256271511 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.934600221 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.905075858 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.942668833 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.939698829 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.93831418 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.947175354 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.934904306 seconds)
  done (took 209.729896275 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.93506534 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.936047564 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.934236206 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.935694194 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.935190974 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.94055879 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.937896141 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.935719562 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.49747009 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.49062369 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.944068272 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.9432306 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.938598717 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.944788996 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.950109858 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.936034352 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.956062625 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.953322694 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.94203163 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.944026426 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.946822063 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.635789913 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.949845495 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.630389651 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.942723483 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.942421506 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.937427803 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.946703289 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.950861694 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.952442152 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.9518694 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.938248653 seconds)
  done (took 222.544134988 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.199860271 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.943878678 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.944717055 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.89777406 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.944484511 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.94269922 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.936205166 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.14074264 seconds)
  done (took 19.84934121 seconds)
done (took 629.113034025 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.39004754 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.232532831 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.117186596 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.966044333 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.197505326 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.999956973 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.963327928 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.028682056 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.690280309 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.028333548 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.593399554 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.976646893 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.684144351 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.98159226 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.092060681 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.02055055 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.521050404 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.606314357 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.133596241 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.025555485 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.13095241 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.912131448 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.033418401 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.708151458 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.703142259 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.954629647 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.121653482 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.527347951 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.972845731 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.126629356 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.693829225 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.333946582 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.97430425 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.961271245 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.014700951 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.99612555 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.289545696 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.969337776 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.085735182 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.718785009 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.013621364 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.57928984 seconds)
  done (took 105.94544474 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.935454081 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.933478979 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.933060844 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.934776461 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.934740757 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.934056605 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.932976875 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.933722959 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.934664807 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.933409388 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.93374188 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.935821211 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.93454497 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.936331615 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.933785054 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.93386323 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.935283658 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.937291168 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.934010561 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.934077694 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.935125336 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.93360577 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.935351346 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.934581658 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.935549759 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.93564535 seconds)
  done (took 52.185522472 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.947312125 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.088015202 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.162517529 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.962731391 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.946686509 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.951569836 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.965283656 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.952139658 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.950321186 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.949873298 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.038551698 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.951703989 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.966445835 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.166627818 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.959858349 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.948070142 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.949153715 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.948464504 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.096654283 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.962546245 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.967046357 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.951615009 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.965491093 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.960178449 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.949868458 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.949458036 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.952255458 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.432950105 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.954276432 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.039483349 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.989506991 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.968656867 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.38814336 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.173314981 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.996956472 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.9550941 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.949586933 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.045181048 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.954147335 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.949569946 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.966488252 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.952977818 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.168069788 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.445265404 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.959054721 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.949874525 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.434878177 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.048217492 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.988545788 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.959649937 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.170766881 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.963003042 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.951302128 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.95146715 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.985872759 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.960284324 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.94981854 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.315956665 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.95862189 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.967426917 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.954335274 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.951200142 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.10358718 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.956952042 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.09229709 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.957107507 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.958012327 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.951361884 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.167998485 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.962667653 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.457767483 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.958980944 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.949854685 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.038861445 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.093735936 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.455656511 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.960022535 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.105235404 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.404084212 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.969706502 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.955917734 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.413089816 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.973549567 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.955146446 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.951525139 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.951774222 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.950359122 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.993280409 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.964902888 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.388893655 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.452912243 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.325873424 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.973740043 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.964598737 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.950442771 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.318204314 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.956536295 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.951802314 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.161522371 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.463906547 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.960610558 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.958654026 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.443362774 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.962487052 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.968882853 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.958274205 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.173803748 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.962632009 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.995729555 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.95198411 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.957933053 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.955449716 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.969367098 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.957298486 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.951820447 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.427999087 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.05572606 seconds)
  done (took 241.366416501 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.947348582 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.946070385 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.946181061 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.964495676 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.945712095 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.95091492 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.945877455 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.944158898 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.951256555 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.94559725 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.945336693 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.949448199 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.94823933 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.954493405 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.462718405 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.957061422 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.558889183 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.94855482 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.950628126 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.965168036 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.628979024 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.957088061 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.950495954 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.949469909 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.951964134 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.949648173 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.951096589 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.980428522 seconds)
  done (took 170.331101298 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.957152566 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.139447337 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.976330762 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.994188335 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.965321511 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.955093333 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.981703256 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.979100789 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.961997019 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.955135338 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.956093293 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.017613905 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.970814263 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.091589458 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.98932366 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.988528741 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.061775191 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.964112193 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.955826321 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.956033968 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.986292419 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.952851137 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.01855463 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.086244147 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.974196753 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.075361881 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.963612032 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.959106296 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.958002419 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.074767423 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.973941067 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.018114871 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.987539475 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.97556152 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.078088912 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.075749093 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.066252302 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.990266529 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.962229266 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.956642305 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.956761483 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.94693302 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.075936561 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.977544752 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.959067739 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.06588625 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.977430714 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.960050751 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.968300703 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.95821327 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.971764327 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.977558936 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.025828852 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.094379974 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.993421811 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.984636943 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.9834395 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.237576982 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.969101335 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.060732 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.955308048 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.078674297 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.978721689 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.948110218 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.959960475 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.9636027 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.986985655 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.992364886 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.06513832 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.968228426 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.060853916 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.995202249 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.966375451 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.958544646 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.960910556 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.076154341 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.078871844 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.995707163 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.996479059 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.991231159 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.956468149 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.959708411 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.949605346 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.976505432 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.963698578 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.078542869 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.07937224 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.968183115 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.961468042 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.961438624 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.962710754 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.986014692 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.087185606 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.995092282 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.058987645 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.029469493 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.035602041 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.97659935 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.973349 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.964193467 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.023936912 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.977686048 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.971989684 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.285641332 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.03411397 seconds)
  done (took 212.179832779 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.425983911 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.016197703 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.016489534 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.251373618 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.380914135 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.826116948 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.007755399 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.010422708 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.034488104 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.173921321 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.070917345 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.022214551 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.99818607 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.984143062 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.008394427 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.030660259 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.013026685 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.291407836 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.131799853 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.08871041 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.989681939 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.294473824 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.332247461 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.389377118 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.043272068 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.337383417 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.685581316 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.255559351 seconds)
  done (took 64.00822969 seconds)
done (took 847.888120107 seconds)
SAVING RESULT...
DONE!
