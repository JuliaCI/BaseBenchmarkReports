cset: moving following pidspec: 18958
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.341797889 seconds)
loading group "string"... done (took 0.485961978 seconds)
loading group "linalg"... done (took 7.869411037 seconds)
loading group "parallel"... done (took 0.175882451 seconds)
loading group "find"... done (took 1.201393403 seconds)
loading group "tuple"... done (took 2.157214212 seconds)
loading group "dates"... done (took 1.357675484 seconds)
loading group "micro"... done (took 0.250330357 seconds)
loading group "io"... done (took 0.674932186 seconds)
loading group "scalar"... done (took 42.127412326 seconds)
loading group "sparse"... done (took 12.902323168 seconds)
loading group "broadcast"... done (took 1.12493926 seconds)
loading group "union"... done (took 14.230128901 seconds)
loading group "simd"... done (took 4.831445184 seconds)
loading group "random"... done (took 9.706060945 seconds)
loading group "problem"... done (took 1.998683488 seconds)
loading group "array"... done (took 22.825020644 seconds)
loading group "misc"... done (took 1.450109411 seconds)
loading group "sort"... done (took 3.638588025 seconds)
loading group "collection"... done (took 19.585088669 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.521574656 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145123332 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.137855616 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.162776448 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.233274782 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.158479392 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.160755252 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.101437123 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.576178019 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.187394085 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154975114 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.530352088 seconds)
done (took 5.82398897 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.227428135 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095251334 seconds)
    (2/2) benchmarking "String"...
    done (took 0.107706377 seconds)
  done (took 0.880169764 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.07887319 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.147297424 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095953473 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079401729 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096253057 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.09710561 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.081193163 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.094775564 seconds)
  done (took 1.371002724 seconds)
done (took 3.245300432 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.746747522 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.286409334 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.207976678 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.503091077 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.179859792 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.215558277 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.682716178 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.346869376 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.270681736 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101292568 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.150093543 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.38853344 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137398226 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.695843428 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.091638659 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.128466533 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.177950887 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.448387447 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084335802 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110757467 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.118658065 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142378294 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128974127 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092084761 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.18646102 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.085915228 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.19999841 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108895019 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.082543249 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.287475404 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202258502 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.690114306 seconds)
  done (took 10.99426001 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11667195 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.138009445 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097964396 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140163457 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.136576888 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.101056517 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085521145 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098396369 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123918498 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177115602 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.132809934 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.125924126 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.096810538 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.099864452 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.105359764 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246795685 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122261607 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121185767 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087430738 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.106283544 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122051903 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115394665 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110468762 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.11031876 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167545222 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.208549033 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.115151425 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126887176 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098174805 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113673897 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145468281 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144523418 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095368327 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082015136 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173708354 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125404562 seconds)
  done (took 5.209205638 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.194748137 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122628465 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.174168907 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.166143847 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.150992451 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.16185715 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118562409 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.251386942 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.182634837 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.181124115 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.148039281 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101202522 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098944588 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085175704 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097422242 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.643649084 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.166151743 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.13676518 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.118721536 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103931928 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.090778149 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.131230642 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105956142 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.084701595 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103197768 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.109509691 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.324109531 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163888203 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100116056 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.188656574 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123306143 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.0828386 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136797928 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.215314881 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.130803954 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122523631 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098217001 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.095974573 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.180469096 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.089168042 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.09811762 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.106447431 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13662203 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.137263307 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099887734 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.097459226 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.212751113 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081132747 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.115940487 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.998615469 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.183903379 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.096209027 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.099118935 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.34093954 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.100670373 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100103504 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078079767 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.284694908 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.138426974 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.08872488 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.100370879 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082528467 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.101806131 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.390538672 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082942008 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.096923038 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.100261213 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.095068133 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.711744443 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08698742 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100901851 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.107395372 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089536572 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116248656 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080082325 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.100412802 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080484647 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098460317 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083818786 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.110119666 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103548299 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081306865 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166766811 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.082160922 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.1170852 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129381014 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.087464966 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.097551375 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133664673 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100112609 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.086284961 seconds)
    (92/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.126108506 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.119396712 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100840265 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.096483799 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.092948838 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101983163 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144039634 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.098772048 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.184795359 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.096127781 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.128301217 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100302295 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115563891 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.110087501 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100604885 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085817768 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097730632 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078369958 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16702286 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083506249 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.099562893 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.102126795 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.097957287 seconds)
  done (took 23.043718666 seconds)
done (took 39.922769117 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.349433975 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.10455371 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.10426986 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105320203 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.102127655 seconds)
  done (took 1.520544313 seconds)
done (took 2.251907038 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.285378043 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.175720806 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096810494 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.169495752 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.095021713 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.177696233 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.162856761 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.113673249 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.185196695 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.096477324 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.165485743 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.095805262 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.078807791 seconds)
  done (took 2.652602249 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096824898 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117283805 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084265767 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11349109 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078431231 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113183887 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11155178 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102525644 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112300865 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086182109 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095835634 seconds)
  done (took 1.839466488 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095794251 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115487883 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084087853 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112615335 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078108957 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112187947 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.0943217 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117577189 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111996924 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08722641 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094964646 seconds)
  done (took 1.829998771 seconds)
done (took 7.042999805 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.096886283 seconds)
  done (took 0.818604606 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.025461553 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.152306615 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.117028494 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.156443256 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.309139256 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.202389003 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.560162626 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.131257429 seconds)
  done (took 15.596184368 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.152206576 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.085418058 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.102654323 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.084878926 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.104212296 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.102215417 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.087237214 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.103481727 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.084633972 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.102720482 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.101572007 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.088015783 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.100356729 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.087187419 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.104276387 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.102904381 seconds)
  done (took 2.378891165 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.122060523 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.121101575 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.108280377 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.1107114 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.105688973 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.088032219 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.108968964 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.107171983 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.087347848 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.106373454 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.110003166 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.091337868 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105816341 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.098098252 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.090883243 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109650749 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.104489662 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.091561783 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108831561 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.109097918 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092446164 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097133695 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.105906764 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.092830943 seconds)
  done (took 3.303960574 seconds)
done (took 22.82437276 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.162856843 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.11138593 seconds)
  done (took 1.004854138 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.103467019 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.121270766 seconds)
  done (took 0.959291749 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.109711944 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096941121 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138090435 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.118198516 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081788015 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.09739737 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.133687714 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.098767445 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081841764 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098786222 seconds)
  done (took 1.793140575 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.088404237 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.11712628 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.108755046 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.104074643 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.111669462 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.103532673 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.097281536 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.105823742 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.11991033 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.082674348 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.108725574 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.117740996 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.108454835 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.103309134 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.113184463 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.107485837 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.094702487 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.104693408 seconds)
  done (took 2.63386469 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080197134 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.102889019 seconds)
  done (took 0.923646924 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.086357197 seconds)
    (2/7) benchmarking "second"...
    done (took 0.099187018 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086456242 seconds)
    (4/7) benchmarking "year"...
    done (took 0.102857277 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.098951894 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.082888756 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.098903558 seconds)
  done (took 1.393980052 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.48125945 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.138069877 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.2605551 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.086553181 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.12295608 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.309955586 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098859749 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.104688357 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.085998287 seconds)
  done (took 2.482717403 seconds)
done (took 11.928560843 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.09409674 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.120066413 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.117806433 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.494728493 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.123048294 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.08166906 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.162785631 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.256447515 seconds)
done (took 2.194076396 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.151079123 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.331706972 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.117729635 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067443795 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.096576836 seconds)
  done (took 1.357236627 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081093947 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101851352 seconds)
  done (took 0.927390641 seconds)
done (took 3.180962047 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08214449 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.130972747 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.081720836 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.097729078 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.082623447 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.09726526 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.097026309 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.081824957 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098084385 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.081584508 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.098743155 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080715456 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096199493 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079570146 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099047342 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.079641724 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096524222 seconds)
    (18/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080104308 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.097886104 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.081372272 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099624218 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.079434166 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.095533712 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.07912721 seconds)
  done (took 2.952014759 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.11011081 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100007422 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104504131 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087716197 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103195495 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.104036119 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.087057359 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.100053033 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08785356 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100325515 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102771127 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085421302 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100952856 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.102246128 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084707268 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103746682 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087409602 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099555955 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101238915 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.085889727 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.105414088 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082400271 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102259999 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105090812 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.086093366 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101988015 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.101898577 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082493242 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104571862 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086290731 seconds)
  done (took 3.647166214 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085985206 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.096229113 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08030334 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.104464699 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078469796 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.102021967 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079734148 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097439634 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.08121152 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096783856 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081851027 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096730746 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.096382299 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.080318409 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.097619259 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.083271708 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.110050963 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.080092752 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096165607 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.080265206 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100122032 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079311128 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.099442957 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079526923 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096139098 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078989218 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097813056 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.096010525 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.080206481 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.096696736 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.081792826 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.100030352 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.079822088 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.103537883 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084224691 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.096404236 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.083551579 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.096483382 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.08019683 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095989651 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079880019 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096008785 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079907433 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102265734 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.100056924 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.081323611 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.097738024 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.080758537 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.097780279 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.082848778 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.095884589 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.079593944 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.098309362 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082153742 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100375699 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.096445517 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.080340064 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.096162432 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.080019309 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.096792403 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.079579951 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.095864475 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.082282791 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.097359416 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.095443116 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.10364035 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.080149312 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.097510191 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.100550819 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081724206 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098517307 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.094158466 seconds)
  done (took 7.276323146 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084327879 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107652091 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082160984 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099405912 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07856928 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.099012837 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100815971 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080256208 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099847789 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088283221 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096359137 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098744721 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081425539 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109768845 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080293112 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099000554 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086465073 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095467763 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.098088057 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083696948 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098323792 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.083834121 seconds)
  done (took 2.790202817 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.223527932 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106470298 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143710487 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.123984932 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100196606 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.113183381 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104238988 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089259236 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104582146 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102106289 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085523008 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104084304 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089684631 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102468822 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10301642 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086927986 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104387121 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103289749 seconds)
  done (took 2.750076174 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094539627 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100553681 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.122757631 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.083074143 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.10105515 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085254525 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105667442 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.121687393 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085393226 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.100222966 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.110528103 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085537819 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.10306953 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083675475 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102564891 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083591788 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101863032 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100582013 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092640163 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105862531 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106512438 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093692522 seconds)
  done (took 2.928084585 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10020434 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102353057 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.119086042 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085206949 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097539378 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080614112 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107492694 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.083848492 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108920394 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102838463 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083454396 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098563049 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.090821152 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100739567 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106271116 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083635224 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102376453 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083242961 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102030651 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.097828995 seconds)
  done (took 2.699556796 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108598751 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101826249 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101748285 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094492498 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101477868 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.102051786 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094078218 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.102348045 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102218496 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.109659222 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101354182 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101499082 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094767028 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107798345 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.104212816 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096034774 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.225515887 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113243698 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104308799 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085729584 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129906034 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104153716 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096821287 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.104752418 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.104693459 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086450078 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104542934 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111202828 seconds)
  done (took 3.757392058 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082403084 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100630759 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080117933 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.09847526 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.08076772 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098466657 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.081552346 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097963443 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082733768 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098814227 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083542819 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.101714156 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083386017 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100080587 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082857668 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099998897 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08498478 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097732528 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080196416 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097485816 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083931165 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100807449 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.100850007 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.079657804 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098251592 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.082204718 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098088924 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080208338 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100983813 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.080733688 seconds)
  done (took 3.484158106 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.093203559 seconds)
    (2/2) benchmarking "in"...
    done (took 0.109086372 seconds)
  done (took 0.970569764 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.081233311 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117698803 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080542886 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104500024 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106600639 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083596241 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109441013 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088162847 seconds)
  done (took 1.537320989 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.100480632 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.115723737 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086089519 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114591072 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.116087135 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.100058142 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.163451049 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.103770678 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.089937398 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.098721145 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.11749613 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082961795 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107079923 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083774233 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106875157 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090865653 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099200691 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.10752489 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.085833657 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099604377 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084946497 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112827544 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103274773 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.080977317 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.102538255 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094890754 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.109954671 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.103236601 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086579257 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110829733 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089363769 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094302187 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083534151 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102590998 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.09993692 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.096469374 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113337956 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08631873 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109543737 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103217764 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.11465755 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09952331 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.109842551 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.094509646 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114654788 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.086671381 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.105637515 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.081214005 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.101062375 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.106866511 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.080908198 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104430364 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.080430149 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111991491 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.090208775 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118749409 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.103462209 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.086972624 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.107627663 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088868971 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.111256736 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.088042389 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106623277 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.104195391 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091238955 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.107583076 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093100537 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.099879099 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.080632945 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.101600658 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.113179516 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10998127 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.11297575 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.105748315 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087410882 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.102972358 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089621073 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106589061 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093329612 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.113120505 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.104254188 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112187385 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111540155 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10497989 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089298705 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.113354249 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.084322632 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.106584015 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.101792295 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101649606 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.10297158 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.083977909 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.101489424 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.093311122 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.105182914 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101638369 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081181566 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109283727 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.078168755 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102848148 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086296617 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101657934 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111180571 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090243674 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108478154 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.108810261 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.094071505 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103790413 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087095021 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.100775146 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087079932 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.106481539 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.11141178 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079263066 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106333429 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086442479 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.105137636 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.09385754 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.101989935 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.1045116 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094570244 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.111598123 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083884086 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.101199586 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.087495328 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.103490565 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108467397 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093209454 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.10386498 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.08089769 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.09992302 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.0897436 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.104260294 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.109260835 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.093269047 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108444876 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.080515417 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.102576109 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.110056047 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094076353 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.104796125 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.086689341 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.109655348 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.086857207 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.104626587 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.111918073 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08777468 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.104514664 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.090876774 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.107252051 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.081716049 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108986647 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.108464123 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.085620917 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.108517741 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091047933 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.107838383 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.106064167 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084695308 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.111625698 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088241933 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.103838309 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085530186 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.103815164 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.115373525 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088771709 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.100040566 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.083467203 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.1136337 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.083696889 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.10570994 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.104983353 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.088542414 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.105052421 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.083897647 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.103901631 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.088360278 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.136147082 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.111062205 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08771523 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.111237669 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.115788973 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08670147 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.106927603 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.086659206 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106641692 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.088541859 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.112669204 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.110152358 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092609384 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.108074271 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.082326652 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111436501 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112676418 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084608138 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.102157539 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.084605761 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.107393124 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.091550834 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.106085312 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.103728858 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082403358 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102587852 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089156699 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.104719869 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.083647089 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.101680515 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.107846691 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.083945302 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.113239741 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106981007 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096351029 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109235236 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.08251938 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109846586 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084504429 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.111734655 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.100822504 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.084054327 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.104184263 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.088333154 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.104885144 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089996694 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.099538949 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094079668 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.114206452 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.10606087 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.086243198 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.10680923 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095924938 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.107157466 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088526376 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.106580275 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108078119 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09739589 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.101677246 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088003776 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.111656671 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.102773263 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078852144 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.110020559 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.083594535 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.104955736 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.085434446 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.104080366 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10944317 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097509451 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.110414741 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079589531 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.10869004 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.104220417 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.08578501 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.101467105 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094250775 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.109540627 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.088755102 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114305728 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107209225 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.089106194 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110596458 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.087151663 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.108317824 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.088097342 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109667145 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.1079568 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.089318082 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.1048458 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.08940478 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.105045542 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.085049599 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.1080372 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.107001869 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.087708252 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111868251 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.089729872 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10733647 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.090064426 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.107625505 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107523499 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087118129 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.105920186 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090761892 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106486672 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.087806416 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.108724494 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.082702897 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114111942 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.106072151 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095889187 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.106457958 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.083395206 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.112511843 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088955951 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.112581693 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.108265803 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.088479667 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.107396705 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.087066101 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.109096456 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116480387 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.085263326 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.115549477 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093893336 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105951725 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.107607939 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.08482153 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104380282 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.084437986 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.104775368 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.086191601 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.103139568 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.08485571 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.107501117 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.105117943 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.084711279 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104990902 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.086494752 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.104378161 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086958793 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.101531486 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.086187466 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.106227678 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.106690913 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094995855 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.10708655 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.090538615 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.105569038 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108146512 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.087350796 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.103739898 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.096266061 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.117163612 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.107505718 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09652895 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.105464589 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.08953421 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116015753 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.099291758 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.086135613 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.105461511 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.085371953 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115905448 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086673694 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.112944179 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085988697 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.102250624 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.099864462 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.085677384 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.102360833 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.080712281 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.10467059 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089249879 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.108310203 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084509061 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.104902779 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.116788466 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086014725 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111267004 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.084813929 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.10608051 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.085681211 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.100104203 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083485701 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.103253315 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.106375994 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.08687085 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.101225876 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082433681 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.102894418 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.087075744 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.104185509 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.084482687 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.105328925 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110734945 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084590308 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.105895659 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090214225 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.098299337 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.106329842 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085534909 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102689248 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.084414469 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.107616279 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087968102 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104943737 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111339088 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084661251 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104314867 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085614648 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.101188903 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.085352479 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.10404984 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.104430735 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084240043 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.105465595 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093377918 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101058625 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.086811403 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103736391 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085118042 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.108566955 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.104756332 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.087181841 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.112087957 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.088663429 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.105032589 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110362776 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.089141193 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106986972 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086534035 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.105287786 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110256206 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083573046 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.112023983 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.085695732 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.104799529 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.08652916 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.101543851 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103367043 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.085173038 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102075174 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.090986626 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.10497849 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085007373 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.102739105 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082941459 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.104936017 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10824905 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093636593 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.105695727 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088008398 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099337424 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.081571773 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105631172 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.102162949 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086914088 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.106912833 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091086825 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.106111505 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.086386793 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.103924139 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111479129 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091701303 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.109469984 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.082900491 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.108927256 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.105699598 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.088128161 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.106054301 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.086636856 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106767665 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.09067928 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.107150395 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.102673934 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094734726 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.108438973 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087518125 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.105807351 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.085305088 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.103889638 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.100061875 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.086190325 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.105848566 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091740866 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.107473731 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086201944 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114254588 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.103939995 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.085221258 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108807915 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085462873 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.11092208 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080729913 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.104954443 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105371416 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087109113 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.099587272 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.08471768 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.10178084 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.088300071 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.103092079 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.080685914 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11350886 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.112260998 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088348609 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103734704 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084600119 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.100051965 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.079995663 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.104388467 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105957999 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.087254294 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.113430956 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.08465808 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.102567017 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.081238624 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104535603 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106796961 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.088152746 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.10176794 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.080233125 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.102832866 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.08767578 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.111731614 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084307053 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.104262681 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107656405 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.087916502 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.10251595 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089560455 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.101199536 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.108661419 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095880295 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105417151 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085926808 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.110443683 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112647384 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.087289359 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099115152 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.08706302 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.106960811 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.085712371 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.106561046 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.10593218 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100228457 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107522251 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.084595441 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.104031291 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088413527 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.10355357 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.11236815 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087245603 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105475605 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091019623 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.107017679 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115278112 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088050586 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110069074 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.088102367 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.107132373 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.103878367 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085332226 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102684888 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.083768935 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105749294 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.08633664 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.11008888 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.113264114 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.085506085 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114070859 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.093761648 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.1099984 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.100938189 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.085530426 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.10331626 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.080797403 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.105836059 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.084040091 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.103609926 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.083546125 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.104271296 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.085762158 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110544789 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.107128105 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087583087 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.104184812 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.07989276 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.106051019 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.08759916 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105346901 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.082481007 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.105705542 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.106148463 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.091577463 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112036274 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.086645041 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.106958753 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.087598903 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106773339 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.100797685 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091593577 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103946622 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087967792 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.103940115 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086242559 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105580803 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10899812 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091572937 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106573808 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087640433 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.117256704 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108666647 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.083465379 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.101393365 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091299938 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.103193424 seconds)
  done (took 59.667206663 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.149122684 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094199326 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100526171 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080648314 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118381375 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100762406 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081067778 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101959824 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083289744 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106605166 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080847085 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100859513 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11351253 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127493834 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098828023 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109218473 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099960993 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083226638 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099866594 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082817273 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115289287 seconds)
  done (took 2.942410651 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.106195816 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.119025134 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116966225 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.121701223 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091605038 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117304112 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11788801 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117248996 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100967001 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113093473 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120400552 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117585015 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092214719 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112027866 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111762947 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095680147 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120214582 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110408322 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.118484529 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097147712 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115409786 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115842766 seconds)
  done (took 3.263214564 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.097985561 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103923248 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.089771824 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.09983679 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.085650548 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.099672217 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.090298229 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.102839366 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.108060513 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.084585429 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.103126851 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.083447538 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.109451474 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.080448177 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.105289089 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084216987 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.15560208 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.109620368 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.105043888 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.08782202 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.099971039 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087910715 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.100251821 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080876224 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.103747382 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.123385504 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.09002396 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.104281732 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.08549696 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.104125191 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.085736528 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.102625822 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.086814093 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.105046189 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.08404331 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.103554329 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.085407722 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.105241131 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.100486435 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.082860279 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.10496436 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.081604462 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.105300057 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.086800638 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.1036662 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.083872255 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.106160571 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085264808 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.100595192 seconds)
  done (took 5.584504001 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.107303 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.16414126 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087223714 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.145181254 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.123630677 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.116267837 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.089788122 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.123532137 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.104365575 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083886764 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.125528308 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.122961375 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105943049 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.091965393 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110340318 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105087822 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088702784 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105251812 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.111027034 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085751717 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.110657993 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.111694512 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.102853632 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.120103513 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109906303 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.085313394 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105930815 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.111429712 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.119488638 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.092219857 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.111429705 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.112367952 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.103821247 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.111634165 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104495993 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.089442593 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.124314614 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.106605836 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08969301 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.103866202 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.108201292 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091685078 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.112760691 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.125150474 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086932852 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.112091584 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105867918 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.083005487 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.119805714 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.108190116 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.09557409 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120939765 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110326541 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.106798693 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.091898325 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.123133722 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.105941664 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.084880203 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.109508183 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.119958141 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.085498164 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.11044247 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.121502557 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087640573 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.114268061 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.121660899 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110360819 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091463665 seconds)
  done (took 8.270566902 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.095302518 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.113050106 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124068549 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123541469 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092931045 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.113801316 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112833919 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.114358386 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.096082774 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.12264842 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11613848 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.145998942 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.092321188 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.121989326 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.117761923 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096144991 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113201794 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114488581 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.113386082 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093840467 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.114568782 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.126617315 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.117320527 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.106415424 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.149707466 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.111907675 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112838599 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.095290346 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123827733 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.113797916 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127385202 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.11304927 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.094183095 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.127677569 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.13004397 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.117138495 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089000802 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118204821 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.118628354 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.096698845 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.112498381 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128494605 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.118202521 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.09207065 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118175753 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.117703219 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105585698 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.127720546 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.117244413 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.119228342 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.114410991 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103788204 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113526414 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.114571911 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.125218395 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.154244299 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127345717 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.106493103 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118478807 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.129121111 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.128529084 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.136916259 seconds)
  done (took 7.998030586 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.11723368 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.121506809 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.127658333 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.102502158 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084165439 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.114211615 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084643342 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104221347 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.119020349 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.100713957 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122665944 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.11336419 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.117002812 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102521099 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113689647 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116835065 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.115206587 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096727447 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.122450307 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.117134065 seconds)
  done (took 3.045803855 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095657462 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.126937115 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.087927261 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.115594134 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.113595287 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.096842963 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.115206444 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11445399 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092494106 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11470911 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.122134065 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102804994 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112132983 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.116917395 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.102401016 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.117635032 seconds)
  done (took 2.579536437 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.098800189 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120226354 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.126017609 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088858788 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.1100516 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108213764 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.090224698 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.106685256 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.087463277 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.128716665 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.111110238 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.091845762 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.11177866 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.08741033 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.108832486 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.093575583 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.109591592 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.110137103 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.088788184 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.132281469 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.123644512 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.089515434 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.113207147 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.092709469 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.11195776 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.115125465 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.087328412 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.105951137 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085233596 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.107583808 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.106387553 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.096008134 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103533208 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085363544 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.106613587 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.104796626 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.087287722 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.107456926 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.089975466 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.107524482 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084609974 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.107800855 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.106941489 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.088793209 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.103948364 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.087470757 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.105552618 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.113391825 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.087828991 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.111143826 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.090614532 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.114416759 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.112842003 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.102600221 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.115240473 seconds)
  done (took 6.506668635 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102580294 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110965411 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082520126 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105503612 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089835362 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109160933 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.110718228 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090499047 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108958227 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085333881 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109345937 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.111240416 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089922013 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111405235 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08922375 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111650246 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081984718 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108907126 seconds)
  done (took 2.648393665 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.093208471 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.107414549 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094261974 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108314429 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087031735 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110876846 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102701218 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086605896 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106105937 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088128839 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107039726 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.0900854 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105793546 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089295776 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108001378 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107905965 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.089582338 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105200141 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.0881644 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102971466 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089943536 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106437017 seconds)
  done (took 3.014116674 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.123321378 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.128242508 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.09510456 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.238051614 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.106199505 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.135069382 seconds)
  done (took 1.66596564 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111904595 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124105978 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10865587 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109321871 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117359039 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110179483 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090210848 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109651459 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119423567 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125437481 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090390622 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121042968 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120667188 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120606639 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096830851 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116527177 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109589318 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089038363 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108909125 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132380659 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110284105 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101543544 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110028504 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109848462 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090775897 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119864817 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120537044 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126287359 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088979228 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122170516 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116317351 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110481996 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100772214 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125438839 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111224778 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120993848 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090181249 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131977187 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117938764 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12047928 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091042856 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118189392 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121083855 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11495416 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100513703 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110421265 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116339483 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089004282 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109844704 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138091444 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117955614 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12006912 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097328925 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121971502 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120970011 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139070488 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127155453 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120410902 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096973071 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125870032 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12048987 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117357342 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120692166 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12545128 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097414513 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120173029 seconds)
  done (took 8.324882804 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105282502 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127539433 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11065235 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126031903 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099415111 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110352188 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11014823 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088912841 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111258344 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109027887 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.156364935 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090324638 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121247338 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121717018 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11033218 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090584905 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110699096 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121164775 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088705065 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139423537 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112325229 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119904824 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120952665 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120220679 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104815966 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11762912 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109861018 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090364656 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11049311 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110826135 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117168797 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090513979 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12080803 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109232598 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099604568 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110815967 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110198563 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117023261 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090100957 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117218736 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119769207 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131654526 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091236416 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109916798 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126954048 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111203459 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090175951 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109917946 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090091538 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109208573 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125836162 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126144636 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125167277 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099464073 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110686731 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110484745 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090125796 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110144343 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11096528 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117583544 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100607363 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111526772 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139855537 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110694038 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089910468 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120671603 seconds)
  done (took 8.191832364 seconds)
done (took 159.239427938 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.102866307 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.140987743 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100426909 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170404501 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.109348675 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.120805527 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.140412865 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.102514056 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.108278387 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087574887 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108981506 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.109752226 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.152566864 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.10805222 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088514238 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.109899649 seconds)
  done (took 2.711740327 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.203474656 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.272748279 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104533132 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.107869874 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.113530949 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.087879889 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.106960059 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.095895575 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.11002137 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.086885951 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108538344 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087777058 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.108194022 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086798656 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110149383 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.108470235 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.087134944 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.108325962 seconds)
  done (took 2.952159665 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115042728 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.149003851 seconds)
  done (took 1.119439746 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.122607632 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.184695792 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.30234464 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155860331 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.121681589 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.129508613 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156683465 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133266983 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.21489405 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.12550529 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.125901215 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.121092324 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.12406522 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.11817662 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.116532162 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.099046844 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.146556042 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.115028141 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.096855056 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.119278529 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.141320914 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.087142479 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.120115804 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.116352479 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.197760228 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.101354051 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.108302435 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.086159677 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.120910547 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.117259861 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.093755992 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.128796952 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.122689008 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.179366439 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.12626388 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.161156386 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.122281379 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112942465 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.096799376 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.113773656 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.121424743 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.100524094 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.128162314 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119930445 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.089992106 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.121229167 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.087759902 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.108923434 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.116110744 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.101041289 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116380268 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113502758 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.160541126 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.121075234 seconds)
  done (took 7.745379734 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.828586222 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.15589485 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114751609 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.900911518 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1417352 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126418587 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.805148439 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.137673538 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.235819625 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.803150857 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133248846 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100005015 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.236127878 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.262179173 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.913803736 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.316182808 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.712862078 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102798174 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.141985402 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.156920619 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119030777 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137275388 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109472352 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.431943397 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117009588 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112943124 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097228157 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.122651063 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.165205405 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.113688944 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093634362 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.204747575 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.25349117 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.210954977 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093910607 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.113286474 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111600478 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.175184884 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271054634 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.199521832 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.200779196 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088301552 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111183925 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.100139934 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132266961 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109917198 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.169208769 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.178353445 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.197987179 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093776344 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122857329 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120015117 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.100653393 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.191824728 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.101141857 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.324204694 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.32366795 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113336938 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119918902 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.106630735 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269864464 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126026983 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230720077 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115433855 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219652892 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112434157 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.80894063 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.174305784 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090431943 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.11974446 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11837454 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095167444 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121095849 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.170057711 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.39594436 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125052908 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093795764 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113075133 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.240373593 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.092286138 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111738118 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165785528 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116099813 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099730634 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126216358 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122564141 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.174126519 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.232302464 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124408023 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120600852 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094595869 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12555895 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115598238 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.215448103 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226876002 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.167660075 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.211395211 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12307496 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.189458652 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.173660287 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120441076 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.177929799 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118570928 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.106265953 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123289898 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224359657 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.148841631 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.125662743 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095179406 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11960214 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150461532 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.093025753 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.11989748 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.173893771 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.484853247 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.17389757 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.110883414 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.094592961 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121250474 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.165780474 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119155677 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263871556 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099379202 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.196994127 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097736023 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.111357436 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119088879 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.169200167 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123106114 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099214912 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12294971 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119395086 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.241684201 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.223108106 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123953564 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.222401619 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184030162 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121745858 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.175146787 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12071299 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171448258 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121831271 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122292043 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095036658 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.806782934 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124182472 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096833891 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117730736 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.190906907 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112840445 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104010628 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.113817055 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.088361105 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.79493237 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.11459593 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.101933775 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.127511087 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120266206 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.09681674 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119234 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117111543 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.168177454 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239013237 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122033539 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097214247 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.113910031 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.163971568 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.11707416 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.092227722 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.114196594 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.091363143 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121336351 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11724963 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104345583 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.197027365 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.167503219 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.228173002 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.567914958 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092597983 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.11331734 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.235893315 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091579903 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.296292296 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120193619 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.231415991 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.168898687 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.125932806 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.318861992 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.170708008 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.19060536 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.092828416 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.200062707 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087612812 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119240543 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.169110688 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113553994 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117593133 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.169478051 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124264784 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.103232653 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.963611796 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113347881 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.229392359 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087456258 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.197211165 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.094416085 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122227081 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.296156422 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112538165 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107388098 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.191683626 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094131013 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.115021099 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.729040686 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.114213136 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122255331 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098364669 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.229251038 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.189694514 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097690725 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12024419 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122333147 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.169138751 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.211740975 seconds)
  done (took 44.491370613 seconds)
done (took 59.875397354 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.299792802 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217068151 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.261923093 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.173516114 seconds)
  done (took 1.910870561 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.179869621 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.151963853 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.125274983 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109683878 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.15512981 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086381161 seconds)
  done (took 1.691694377 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.395344463 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.281601824 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.243478489 seconds)
  done (took 1.808846804 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.252182895 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.271285224 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.331240971 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.420525258 seconds)
  done (took 2.262365882 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.287254986 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.152695235 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.139660713 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.172844066 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.207289547 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.299142479 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.170394201 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.253210507 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.164122249 seconds)
  done (took 2.77150264 seconds)
done (took 11.334909325 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.254746002 seconds)
    (2/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.276161169 seconds)
    (3/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.161373287 seconds)
    (4/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.102050668 seconds)
    (5/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.136322144 seconds)
    (6/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.119231185 seconds)
    (7/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.118532392 seconds)
    (8/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.09609533 seconds)
    (9/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.124433558 seconds)
    (10/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.183560299 seconds)
    (11/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.119470766 seconds)
    (12/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.22816715 seconds)
    (13/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.130443395 seconds)
    (14/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.19463643 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.124243821 seconds)
    (16/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.091153386 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.122049295 seconds)
    (18/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.097204217 seconds)
    (19/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.226560525 seconds)
    (20/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.121045798 seconds)
    (21/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.267712956 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.150364548 seconds)
    (23/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.099073576 seconds)
    (24/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.166212006 seconds)
    (25/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.102570225 seconds)
    (26/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.200284182 seconds)
    (27/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.242175855 seconds)
    (28/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.123890508 seconds)
    (29/286) benchmarking ("sort", Float64, true)...
    done (took 0.239875779 seconds)
    (30/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.179742719 seconds)
    (31/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.095014752 seconds)
    (32/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.207452082 seconds)
    (33/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.11536518 seconds)
    (34/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.113221104 seconds)
    (35/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.23646486 seconds)
    (36/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.13386355 seconds)
    (37/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.254091461 seconds)
    (38/286) benchmarking ("sort", Int64, true)...
    done (took 0.23113447 seconds)
    (39/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.135241229 seconds)
    (40/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.12867264 seconds)
    (41/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.139425243 seconds)
    (42/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.096976356 seconds)
    (43/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.120156641 seconds)
    (44/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.107853926 seconds)
    (45/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.209840968 seconds)
    (46/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.188195291 seconds)
    (47/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.190606606 seconds)
    (48/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.160604436 seconds)
    (49/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.122946181 seconds)
    (50/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.125464198 seconds)
    (51/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.088023796 seconds)
    (52/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.181573134 seconds)
    (53/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.195542975 seconds)
    (54/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.136466151 seconds)
    (55/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.176501745 seconds)
    (56/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.121416397 seconds)
    (57/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.095783019 seconds)
    (58/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.197292947 seconds)
    (59/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.163173649 seconds)
    (60/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.096663248 seconds)
    (61/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.140127399 seconds)
    (62/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.154567484 seconds)
    (63/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.163571007 seconds)
    (64/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.11833704 seconds)
    (65/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069706541 seconds)
    (66/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.114269627 seconds)
    (67/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.092296647 seconds)
    (68/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.117068837 seconds)
    (69/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.208547122 seconds)
    (70/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.117072111 seconds)
    (71/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.239175952 seconds)
    (72/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.1182992 seconds)
    (73/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.200404231 seconds)
    (74/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.105951271 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.137251922 seconds)
    (76/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.173551791 seconds)
    (77/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.093791027 seconds)
    (78/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.138167388 seconds)
    (79/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.090762146 seconds)
    (80/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.088247021 seconds)
    (81/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067293648 seconds)
    (82/286) benchmarking ("sort", Int64, false)...
    done (took 0.111012611 seconds)
    (83/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.146096343 seconds)
    (84/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.171800731 seconds)
    (85/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.117044288 seconds)
    (86/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.185875896 seconds)
    (87/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.115563791 seconds)
    (88/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.243924616 seconds)
    (89/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.174122164 seconds)
    (90/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.110573475 seconds)
    (91/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.152854874 seconds)
    (92/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.107940334 seconds)
    (93/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.096186191 seconds)
    (94/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.089960331 seconds)
    (95/286) benchmarking ("sort", BigInt, true)...
    done (took 0.240413483 seconds)
    (96/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.109757947 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.111283498 seconds)
    (98/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.132948925 seconds)
    (99/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.139770578 seconds)
    (100/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067511742 seconds)
    (101/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.123573909 seconds)
    (102/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.112069932 seconds)
    (103/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.068244965 seconds)
    (104/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.1681973 seconds)
    (105/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.097499319 seconds)
    (106/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.121549761 seconds)
    (107/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068808599 seconds)
    (108/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.149429344 seconds)
    (109/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.06771288 seconds)
    (110/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.111434917 seconds)
    (111/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.096720682 seconds)
    (112/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.188246251 seconds)
    (113/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.122487364 seconds)
    (114/286) benchmarking ("sort", Bool, false)...
    done (took 0.187836708 seconds)
    (115/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.098425944 seconds)
    (116/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.119530036 seconds)
    (117/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.077889053 seconds)
    (118/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.117030591 seconds)
    (119/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.095909033 seconds)
    (120/286) benchmarking ("sort", BigInt, false)...
    done (took 0.245139235 seconds)
    (121/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.108323737 seconds)
    (122/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.180127645 seconds)
    (123/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.118010152 seconds)
    (124/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.098140436 seconds)
    (125/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066901152 seconds)
    (126/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.12668581 seconds)
    (127/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.181875992 seconds)
    (128/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.139109873 seconds)
    (129/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.154901076 seconds)
    (130/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.099542403 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.088555876 seconds)
    (132/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.118070078 seconds)
    (133/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.088776672 seconds)
    (134/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.138110309 seconds)
    (135/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.067792929 seconds)
    (136/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.090558499 seconds)
    (137/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.160855782 seconds)
    (138/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.12109736 seconds)
    (139/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.117254748 seconds)
    (140/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.067283631 seconds)
    (141/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.093658413 seconds)
    (142/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.112660395 seconds)
    (143/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.233290976 seconds)
    (144/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.087409004 seconds)
    (145/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.112066667 seconds)
    (146/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.067704377 seconds)
    (147/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.090078607 seconds)
    (148/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.098669813 seconds)
    (149/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.11137498 seconds)
    (150/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.100885373 seconds)
    (151/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.091577809 seconds)
    (152/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.087680654 seconds)
    (153/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.110914618 seconds)
    (154/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.149934422 seconds)
    (155/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.092756499 seconds)
    (156/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.122441578 seconds)
    (157/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.092023289 seconds)
    (158/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.069665042 seconds)
    (159/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.067402269 seconds)
    (160/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.139321417 seconds)
    (161/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.067358484 seconds)
    (162/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.091250773 seconds)
    (163/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.094840849 seconds)
    (164/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.091274996 seconds)
    (165/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.112183208 seconds)
    (166/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.111040864 seconds)
    (167/286) benchmarking ("sort", Float32, false)...
    done (took 0.17999371 seconds)
    (168/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.069211986 seconds)
    (169/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.068356753 seconds)
    (170/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.175645937 seconds)
    (171/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.117736114 seconds)
    (172/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.099602664 seconds)
    (173/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.123838307 seconds)
    (174/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.091499286 seconds)
    (175/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.140964347 seconds)
    (176/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.112159227 seconds)
    (177/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.070024566 seconds)
    (178/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.126154419 seconds)
    (179/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.069260033 seconds)
    (180/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.079899783 seconds)
    (181/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.091737694 seconds)
    (182/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.101692866 seconds)
    (183/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.091338497 seconds)
    (184/286) benchmarking ("sort", Bool, true)...
    done (took 0.229851762 seconds)
    (185/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.068705617 seconds)
    (186/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.111092596 seconds)
    (187/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.087721817 seconds)
    (188/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.112087643 seconds)
    (189/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.11822899 seconds)
    (190/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.155940556 seconds)
    (191/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.115021007 seconds)
    (192/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.077398661 seconds)
    (193/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.090997154 seconds)
    (194/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.099944792 seconds)
    (195/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.098448924 seconds)
    (196/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.119302542 seconds)
    (197/286) benchmarking ("sort", Float32, true)...
    done (took 0.239143453 seconds)
    (198/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.100906377 seconds)
    (199/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.111920933 seconds)
    (200/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.067827432 seconds)
    (201/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.116624675 seconds)
    (202/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.078620376 seconds)
    (203/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.111329496 seconds)
    (204/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.091731919 seconds)
    (205/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.119026822 seconds)
    (206/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.1398936 seconds)
    (207/286) benchmarking ("sort", Float64, false)...
    done (took 0.157716389 seconds)
    (208/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.122694167 seconds)
    (209/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.069486034 seconds)
    (210/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.118160364 seconds)
    (211/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.077510688 seconds)
    (212/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.141761354 seconds)
    (213/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.089312163 seconds)
    (214/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.115853124 seconds)
    (215/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.111122106 seconds)
    (216/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.069154824 seconds)
    (217/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.288720002 seconds)
    (218/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.090829062 seconds)
    (219/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.078624725 seconds)
    (220/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.067791631 seconds)
    (221/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.110643003 seconds)
    (222/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.137283781 seconds)
    (223/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.090165343 seconds)
    (224/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.140273484 seconds)
    (225/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.068176174 seconds)
    (226/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.091613097 seconds)
    (227/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.136421048 seconds)
    (228/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.113199064 seconds)
    (229/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.12822416 seconds)
    (230/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.111557932 seconds)
    (231/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.088015684 seconds)
    (232/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.12027354 seconds)
    (233/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.090518619 seconds)
    (234/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.110641248 seconds)
    (235/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.171368966 seconds)
    (236/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.068925483 seconds)
    (237/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.164896434 seconds)
    (238/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.102721782 seconds)
    (239/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.113282536 seconds)
    (240/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093653019 seconds)
    (241/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.114703925 seconds)
    (242/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.069165216 seconds)
    (243/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.093192036 seconds)
    (244/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.097313698 seconds)
    (245/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.092747579 seconds)
    (246/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.119489704 seconds)
    (247/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.092582744 seconds)
    (248/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.070165741 seconds)
    (249/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.091277688 seconds)
    (250/286) benchmarking ("sort", Int8, true)...
    done (took 0.227211181 seconds)
    (251/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.094759396 seconds)
    (252/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.120961372 seconds)
    (253/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.096896707 seconds)
    (254/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.067220524 seconds)
    (255/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.10285073 seconds)
    (256/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.068882828 seconds)
    (257/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.091314985 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.08892957 seconds)
    (259/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.120212342 seconds)
    (260/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.078460797 seconds)
    (261/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.069101301 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.11906556 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.086399632 seconds)
    (264/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.182552644 seconds)
    (265/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.163246375 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.086745604 seconds)
    (267/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.125640761 seconds)
    (268/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.189215158 seconds)
    (269/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.094997808 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.120364334 seconds)
    (271/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.138392928 seconds)
    (272/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.113486992 seconds)
    (273/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.117283085 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.095070275 seconds)
    (275/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.091456367 seconds)
    (276/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.068014002 seconds)
    (277/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.078641792 seconds)
    (278/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.093295453 seconds)
    (279/286) benchmarking ("sort", Int8, false)...
    done (took 0.196970029 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.088103759 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.118922025 seconds)
    (282/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.088610448 seconds)
    (283/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.112754792 seconds)
    (284/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.089793159 seconds)
    (285/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.112878331 seconds)
    (286/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.114296708 seconds)
  done (took 36.842898198 seconds)
done (took 37.73144298 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.102848658 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.152773204 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.097201994 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.141414154 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124952251 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.093179481 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119806918 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.123912395 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.10324969 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.127529544 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.100283846 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094498908 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098696199 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.123040649 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.122021293 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.120143449 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.125739588 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.095560246 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.120402721 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.110220704 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.097569575 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.110481065 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.090614337 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.093649163 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.099848557 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.117914754 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.096107905 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.121623019 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087951941 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.112776225 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.094463247 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118999508 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087261475 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126219396 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.117615059 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.097859948 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.122365941 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.098509842 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.113982844 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088337554 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.119412063 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087219398 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.118685142 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.11843452 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.095538529 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.116734992 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.098261303 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.124668863 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.14419547 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098907139 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.120347687 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.099692993 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.122205853 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.096320458 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.115569997 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.097552462 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.117674008 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.143317614 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.097677202 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117651722 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.095911013 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.120366254 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.092725973 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.12178 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.11997751 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.099195395 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.12346357 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.093988795 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.122271803 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.092856852 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.112076591 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119775881 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.092580591 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110974067 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.098919293 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.122678762 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.087585566 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.117458703 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.095074148 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.117342281 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.088917434 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114085675 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.0905868 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.118730642 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089912749 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.095215726 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.093069267 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.118512806 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.087931686 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.121537865 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.11766962 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.095546525 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114061783 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.102055084 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.112011159 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.09386368 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111978698 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.088465171 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113597119 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.093169746 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111414499 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091494712 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.123489853 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.091296438 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.118541585 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124512015 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.08859843 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117789216 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.088275641 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.112015181 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.104006339 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121740178 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.088393979 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118425168 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.08825737 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119809096 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.11144897 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.090966214 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.111098703 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.088763064 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.117386275 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.08954739 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113713453 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.09627457 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125505925 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.088938809 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.11563089 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091351138 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.112564341 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.094275391 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111997721 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.089801193 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.114746595 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078876542 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115228323 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088055267 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.119748765 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090582472 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.12103782 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.113301928 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.099166877 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.116248264 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.095738542 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.117275796 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.089202292 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.099319809 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09470963 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114526571 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.090881187 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.112145269 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.091546746 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.111913932 seconds)
done (took 17.229130217 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.090643763 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186396411 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.156059418 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.147586077 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.109226746 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112583308 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122692339 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.144828186 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.091421976 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.145066651 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.136308606 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109603035 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.152418923 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.088043693 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113942328 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.093358418 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.11535398 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.129587287 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.127285784 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.134402638 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.167073989 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.112295479 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.15003592 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.113978658 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121773563 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.140116043 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.089689392 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.116788428 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.092972671 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.129667963 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110481554 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.117126691 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088909391 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.136139375 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.129750032 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.097077656 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.112617116 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.095236156 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.11421909 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.11256875 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.119916644 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.136626756 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.118024313 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.095524932 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.116972147 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.09174878 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.114431721 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.098033153 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.124962754 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116907591 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.104686806 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.158743224 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.116713979 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122972891 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.089201911 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.12429578 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.098450865 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.115089318 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.089657737 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.115597364 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.089315078 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.116044918 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127572764 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143548421 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.094182311 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122120009 seconds)
  done (took 8.749349401 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.111431599 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.143217865 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.131982802 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108846584 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112664641 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.090567405 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113240072 seconds)
  done (took 1.766550968 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.091745679 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.1392118 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.116732352 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.139749073 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.136902 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.116178686 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124724621 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.090081991 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.135340908 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.11475248 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.115876113 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.15576816 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.115206371 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.098006814 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.141707839 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090696517 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.141149089 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.114130448 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094141873 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.141043937 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092973914 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136805387 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.116990482 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.09101275 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.132173412 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.090215343 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.166362177 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11953774 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092325765 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.135273784 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089603288 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.152859104 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.132089836 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.102603095 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113836592 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.109071285 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.133417806 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112133722 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.107244542 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.1219801 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.108111384 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.117794403 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.091304191 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.115675346 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.095669763 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.128922913 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.119799191 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.091918959 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117426472 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.114898553 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.115124428 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.108049459 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.114291253 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.094301558 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.116738835 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121059844 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.100588147 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115866614 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.115368789 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116574267 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.110297649 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.136480674 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.133018997 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.110400041 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117871419 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.107853866 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.132885309 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117917678 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093866281 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118357114 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.110480792 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.11360798 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.092794749 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.128977261 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.09358255 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.142358578 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.142444026 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093283819 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125878119 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.090257014 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.115430575 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.090159635 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.141595865 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118956222 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091156171 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118534228 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095147168 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113495827 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.090443855 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118290062 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.088792863 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.11701621 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.093424218 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.116844901 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117662487 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.111236386 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115980199 seconds)
  done (took 12.101724384 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.092711334 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115578506 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.095359615 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.116948156 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.092340657 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116956283 seconds)
  done (took 1.593037709 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.118721868 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119605279 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.130939668 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.099328796 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.158051861 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.135339995 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.110955766 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124908269 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.135238669 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.105016799 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.134352283 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.110257591 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.141595142 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122322857 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.109260308 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121331794 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.134874565 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102201143 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.129938622 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123846383 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.1127459 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122885395 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098929677 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.136657963 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119430803 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097976011 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127711754 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.128874577 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.104986395 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.126273456 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.122931905 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.095117193 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.122462407 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.10025515 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.136148307 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.123219582 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097682663 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120614657 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.1273896 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.096069824 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.135858729 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.099559601 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.129611192 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.122143699 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.100321509 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.123414726 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121424314 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102890623 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.13469951 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120858809 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.096417715 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.121842924 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.09558697 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122158986 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122927889 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100408065 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.120598395 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.110705512 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122970594 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.122656166 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.095171571 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.119818994 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124871625 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.095536868 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.132265457 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.095546774 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.122595411 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122988294 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098875604 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.122627139 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.095751422 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.120391082 seconds)
  done (took 9.42459204 seconds)
done (took 34.581915323 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.687719005 seconds)
  done (took 1.654037544 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.844939329 seconds)
  done (took 1.815174795 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.942593965 seconds)
  done (took 17.938270231 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.506454004 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.598638529 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.992464999 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.172451002 seconds)
  done (took 3.238956084 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.939828212 seconds)
  done (took 1.926618884 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.287438209 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.263590233 seconds)
  done (took 1.526126935 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.854475198 seconds)
  done (took 1.831616144 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.436526499 seconds)
  done (took 2.414197059 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.33409727 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184494149 seconds)
  done (took 1.501732311 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.56081196 seconds)
  done (took 1.535929058 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.999317068 seconds)
  done (took 10.977830995 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.271576446 seconds)
  done (took 1.261090014 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.305357093 seconds)
  done (took 1.286849117 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.454169971 seconds)
  done (took 4.437752409 seconds)
done (took 54.318854997 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.102882967 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128953999 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103754112 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125062614 seconds)
  done (took 1.442137235 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.10645994 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121948348 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10541495 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121544847 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.131436883 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.09788194 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124908295 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.103119766 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121673073 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.122949584 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.098061367 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120839563 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.101327984 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.124727089 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.096151017 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.1251482 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.12689412 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.097724591 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.126335922 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.098149267 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120325082 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.124655994 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.101273852 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121024854 seconds)
  done (took 3.726045328 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.102410276 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120247777 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098862019 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.120145194 seconds)
  done (took 1.423509315 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.103767248 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132884697 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.108005761 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.127575272 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.133651096 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.107061432 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118697677 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.094138941 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.121182034 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.101607374 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.117062698 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.141087365 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.107849175 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.126607247 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.10373736 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115549786 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117094767 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.108222753 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.126917927 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.104292208 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.119589036 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.102235513 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.11678642 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.135635221 seconds)
  done (took 3.774954997 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.173314419 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128636074 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.140812134 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.097620048 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161615113 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141886031 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.090187158 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142954078 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.08911517 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132313277 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119158383 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.136630625 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130303528 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.089558837 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115820702 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.113476773 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.103321908 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.127967835 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.093263208 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.129356647 seconds)
  done (took 3.442172797 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.100176491 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118849232 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090366156 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117927329 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.101716145 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122256613 seconds)
  done (took 1.645891253 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.098975649 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.116300906 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.09581176 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.117794653 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.097000218 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114980348 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.091312298 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115704583 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091540529 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114326196 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.09345496 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.115296958 seconds)
  done (took 2.257321899 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.513691035 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.123221749 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121445306 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.091021242 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.127229146 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091009858 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.133302102 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.094033856 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.144515822 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089621211 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.117502235 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.11806902 seconds)
  done (took 2.76038056 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24398791 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126791909 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286463137 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.395006566 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185339392 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169593795 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.304132553 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167715361 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.23755374 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167183182 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229310991 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179427366 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157299508 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218898802 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142620974 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.121439476 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222315702 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.309058757 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154609766 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220824151 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172347413 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170236173 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183318257 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15546166 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140094711 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19855512 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.122660535 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106068852 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216668148 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182049917 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191570396 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163518385 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163722852 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235675391 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.294016998 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196790323 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283551887 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13615574 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.143809686 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.168949514 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273103866 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145253971 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239122904 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139532406 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134284291 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236746411 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162060519 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.201457506 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.149388507 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118681889 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23007673 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198918702 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.245550723 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140464992 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.308754047 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152841374 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.175974886 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193444875 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253528909 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206855715 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221372878 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.097306889 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.216609168 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199892995 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190638552 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.169557711 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.19410029 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145817044 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179848642 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.225063376 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191216014 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174082753 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.211757723 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11272873 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171654568 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173966511 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198733315 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237238399 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214470498 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.097877411 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170879831 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151867892 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134188433 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.19773288 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10076023 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249134336 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147339799 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.165959168 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212671005 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16211885 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164047868 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189427811 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178375995 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149741796 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.112440137 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155302613 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.13051778 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17446376 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141640288 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160211915 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153127394 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.133175552 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171936371 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.100294116 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213488774 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.093545663 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170317791 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213449469 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.102469236 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168041089 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153815386 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.154024787 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196451583 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200235775 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142251665 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13613275 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212504472 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208766211 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.116826295 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17961555 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.235071221 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.146366025 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125709515 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230055907 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244701474 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118814728 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2320919 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150881438 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111092637 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.135109777 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185735216 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158882883 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.165254206 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135765916 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.185653852 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231749545 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.100157493 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140595358 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203154527 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135608652 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134811433 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149048087 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149629002 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.113875409 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.145814639 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.147237349 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179163108 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179782082 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156196742 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167987602 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150042412 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242650498 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142168672 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.127678326 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149994659 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.122838631 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.218804616 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227426348 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106777431 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231240661 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172494332 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202337452 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17137732 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13732342 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181458308 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131672582 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.095504907 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223115854 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1686882 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164422084 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.198015856 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223013107 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.195284324 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.186390963 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168384822 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176368877 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.169354403 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157191736 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.14124148 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163871581 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160944436 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.097714214 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.142108299 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.136494808 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153623192 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145546265 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109235145 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226183087 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176237494 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194522073 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16249573 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15175879 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185896743 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.131240114 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176555764 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177498324 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148299139 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.225869466 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197318782 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192570509 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146719246 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230460956 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.096527694 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126871496 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143549864 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171397055 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108918451 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137985715 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166571374 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185401712 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178053977 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200086664 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210147858 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188841588 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.223197223 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.097177631 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.170573057 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180618915 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179952465 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.18145528 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142892933 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.154066221 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182122246 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149643943 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214271418 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169460579 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179532844 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230041657 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.152955149 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106522056 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150998377 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175125212 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157739072 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174710966 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148579923 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140648527 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15710949 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.105040903 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190860398 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182582007 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163785004 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181838175 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.152656806 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190994441 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13216854 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167217406 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163773997 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166906325 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.109277094 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171562446 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199274039 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146139448 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165133967 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18643719 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134959117 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.311290096 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202545081 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219226658 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111923491 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157628854 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163016919 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165672898 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168739682 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179903777 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16166454 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217038494 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133304126 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137984022 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141226232 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150394264 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15463079 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.108355502 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149586628 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.179405357 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.141422179 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185111944 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15019348 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163108769 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174821194 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.153203172 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146367905 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152135757 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220357318 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186820067 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221418447 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.125620554 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.204453011 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207581667 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127916217 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107616341 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.136305203 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181652642 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137549474 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197319864 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.190409267 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228672812 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184294829 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175315219 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141700713 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121654166 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160915296 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171414952 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207601749 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148802796 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.152714535 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198862618 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.141570458 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132989975 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168466944 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288552458 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146736705 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191350368 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.082225322 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.308319183 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102033745 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13553126 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16519564 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187849145 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137087415 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.155197554 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168055658 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153346663 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166118485 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15392181 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.220586707 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217023416 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231355167 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186107143 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.107509118 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160078363 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171456155 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21824019 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161098735 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.112656 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188722344 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225276713 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196564806 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.144688659 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171665082 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171563434 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161166977 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220186451 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110067158 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234106868 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109391074 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225461902 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156317613 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140722305 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17729938 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.191948602 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144478438 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184005162 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185374148 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138408183 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135195458 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163106658 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180667246 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151276522 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128829532 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181774089 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.098819332 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226729959 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266647589 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108263413 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157312647 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148863536 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137760378 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156770091 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161380924 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112440411 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.16672997 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195617659 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.137013549 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187905895 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23485999 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172677623 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168247898 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147876519 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.751220105 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.13379737 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198429125 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149585407 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186072614 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152973823 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176730653 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162005557 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169748945 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198419013 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15963333 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.234814643 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221794479 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.182322649 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133491335 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161258609 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122369871 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145405766 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155524275 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170386698 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161746305 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.150133417 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.181517054 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159033386 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.136315309 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141500926 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204108761 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149175078 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186274819 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182809009 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140166346 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174576698 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19372165 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137078484 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.192410165 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214965545 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117031788 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151847154 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.137788329 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.153304927 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269561283 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.099046119 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213859289 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188799643 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162624229 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17117092 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.149774337 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197262401 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160172428 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216046186 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118597892 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158323532 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159794413 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14030357 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.132394595 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156694926 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169903732 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.15278748 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162237761 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.139737941 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195219931 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.126322973 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146993675 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292847702 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174585675 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244731954 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.109261206 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139357114 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163251496 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148907405 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.180136065 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181093719 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.13772721 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136572433 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.108969993 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.15687546 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.114083776 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160145818 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193716808 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159970179 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236257903 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.11095113 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.283640526 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142253402 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157998345 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089957691 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.133706833 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153482592 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147849266 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152726333 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195369808 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269191537 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147978035 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.108781906 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152041466 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.128880543 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137107783 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16442831 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164485457 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181350149 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143533908 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.083102819 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159237099 seconds)
  done (took 83.496496391 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.217297569 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.144874584 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.150417066 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.203663322 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178365753 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.293508638 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211270523 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.255764581 seconds)
  done (took 2.740457768 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.09534381 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.152895484 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.158594292 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.134880415 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09362938 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.121453464 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.369593295 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.134813843 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.118169329 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.124697458 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.173026554 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.096035061 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.582765928 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091526401 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.121450474 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.10812154 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.093890767 seconds)
  done (took 3.848742662 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.189818815 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.474677217 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.987174363 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.211940493 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.160021681 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.120308523 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.680914899 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.116309471 seconds)
  done (took 12.025285078 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.125799884 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.146708723 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.13745119 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.164717337 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.150949597 seconds)
  done (took 1.816060779 seconds)
done (took 125.382531214 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.099098406 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.130094004 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099921824 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.132213587 seconds)
  done (took 1.534068284 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.098794886 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071905442 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101960844 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076177696 seconds)
  done (took 1.435481617 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.193794109 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.170622678 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.391791983 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.073317262 seconds)
  done (took 1.584731201 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.117127081 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.135037743 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.106931124 seconds)
  done (took 1.455530209 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.108162589 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.131054325 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104624179 seconds)
  done (took 1.43610474 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.108337747 seconds)
  done (took 1.201614921 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.112493827 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.141683884 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.112842431 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.140356353 seconds)
  done (took 1.6037005 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.099904467 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128184137 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.113778992 seconds)
  done (took 1.434329333 seconds)
done (took 13.136148274 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.108257264 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.426323797 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.418859039 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11231422 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.727012352 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381878024 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.089493014 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147200066 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.170395267 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09460451 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140914279 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673665484 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.043986665 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.379896378 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.004498698 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.377265443 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.703357134 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093845306 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121492223 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095081583 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.075870243 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093718026 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123791696 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092613149 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703630144 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.427697456 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096105744 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.377548792 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093384424 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.131229653 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.408489394 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097192068 seconds)
  done (took 17.113620696 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.099724897 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182467099 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.132569705 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.096235264 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.129280722 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095734982 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126180342 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09511679 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.184454205 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124405629 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112827156 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121872173 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126999957 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095980499 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143017499 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09379173 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126598373 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095446355 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.1220734 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122648344 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113731121 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122138735 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095592145 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122486427 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095687519 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137348203 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124073488 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093859219 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122150151 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103344919 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.125983231 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096135684 seconds)
  done (took 4.875808756 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.146020684 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.190434201 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134271564 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127995127 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.175172962 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125662526 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.20020339 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147347219 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.187795911 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095693887 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.1417549 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094036476 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.159038683 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.124200778 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116291708 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122668708 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09546405 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122523921 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121470885 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097946236 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141738454 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094745654 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124032541 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093372197 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.13377862 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137581189 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097893218 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123522288 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094374586 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.131550468 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098489322 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124573198 seconds)
  done (took 5.220128674 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.09909681 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.12696244 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.112459537 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.141204817 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.09710968 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126509989 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.099149508 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125331716 seconds)
  done (took 2.026560387 seconds)
done (took 30.329142827 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112724898 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.12831894 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.109969536 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.136431569 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.105524066 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.134887814 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.093195744 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134547276 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.134779169 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103569074 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.139243412 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093149791 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.124180019 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.093620625 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136402089 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.099888124 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.136246702 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.131201175 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.109031466 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.136199865 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096053103 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134845955 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104560544 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.13783155 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.13691778 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.109558733 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.139796307 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.101455288 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.12427067 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096184632 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.128676504 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.107227313 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125101681 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.137415529 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.099321439 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.127404043 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.09672375 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.126912149 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.108881987 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.134699867 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.101892168 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134444426 seconds)
  done (took 6.092167925 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.112799748 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.143871765 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.109477818 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082257987 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.11771051 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081846704 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.140966578 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080418132 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110920968 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.111595074 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.1041018 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.079045291 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079175179 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101994521 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077747507 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.07673976 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109667362 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076882261 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077362864 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.10695055 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080810107 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.101390923 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081246659 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079810312 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.104316992 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.083477209 seconds)
  done (took 3.61607022 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.102529772 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.142198907 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114683897 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.176916125 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.157502471 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.10257694 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.137093061 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140879027 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.111617492 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121647137 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097777686 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.152648646 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111297648 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.131264821 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.126141323 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.109700072 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137255132 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.096371339 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.13321833 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113773361 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139922743 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.13322976 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.113881567 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.13413786 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.094205695 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124554352 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.101881423 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.143567884 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.130050908 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.104230665 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.129950493 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.098755798 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.124991988 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105551084 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.129400894 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.124251175 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.115343476 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.136843983 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.104439585 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.1260353 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.102314129 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.127935675 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.145375761 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.137027899 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.123600324 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.102680472 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.127535575 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133753265 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.096947686 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.141603327 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.104429339 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.122558349 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.098280416 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.124721377 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.095395807 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13934472 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.096304128 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.132792424 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131480816 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.101209791 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.135437836 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.098708078 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139498504 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.094933196 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.131184694 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.095822522 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.123685243 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121467924 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.117067582 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129273223 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164358053 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.095964066 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124442919 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.10464558 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.131561664 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.101294592 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.124399683 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110453774 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133546712 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126377027 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.106390168 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126392348 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.097778928 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.142286874 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.097388813 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.126110139 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.095457852 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.130501258 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.097011871 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.125235846 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137529504 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.094071491 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126089339 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.10889809 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.123676638 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.095700319 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.130827922 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127763483 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.093833514 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13619544 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.101337855 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.12386765 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.104925022 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.124160741 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.097522993 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.133880407 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127237122 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.095040597 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.129790135 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.101515655 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.124692143 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.098219003 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126794338 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.097300727 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133664705 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.130763694 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.10018242 seconds)
  done (took 15.102246733 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.237195143 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.221112692 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.190076899 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.301580722 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.1363024 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.119937519 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.216266252 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.160607414 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124552769 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.16117706 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.172845818 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.186840113 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.143479146 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.18392504 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.172129296 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.124361327 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.143682263 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.139673582 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.248616294 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.264843287 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.145314278 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.10315332 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.163459411 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.163531241 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.138548674 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.133941396 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.112373562 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.137129467 seconds)
  done (took 5.863206713 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.111871016 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156067193 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.100941652 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146467044 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.1509916 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.094894115 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.1284128 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.125636534 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109191574 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.138160793 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.094286704 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130784353 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.130288696 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.105131062 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124583094 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104965666 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.134139144 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.096017719 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127759346 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.099262661 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.135008346 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.133387509 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.099513731 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.123581384 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.104663142 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.123371026 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.089774608 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.144392248 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.12349788 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116268778 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122762181 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102858553 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.137819422 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.124414196 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.096586792 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.126149903 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.097861094 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.125799068 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.097159245 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.122960625 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.094053456 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.107605158 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.094590949 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.139151588 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.101637505 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.111158013 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.101499554 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.13056832 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095751517 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.122308478 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.098477347 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126825895 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.126679928 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.103829711 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.127174904 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.097338578 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.128094903 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.087555352 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.12997116 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.098121003 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.114898782 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.09531289 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.128718895 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.090566228 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.133051716 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.100293127 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.123779663 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.097317107 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.128831381 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.101312823 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.126470914 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.101743506 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.122777467 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126120173 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.098157942 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129396947 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.098490504 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.12287391 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.095298893 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.124533019 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.076798825 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123833407 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.075637097 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.098156736 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.122265498 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122613463 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.098292864 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129470505 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.111487642 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.125207086 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132135919 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.096133804 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122586371 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.098220022 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113232429 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.098649069 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140347722 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.114167592 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.124683818 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121378081 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.109634445 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.12630327 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.094869485 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.10616009 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.104599935 seconds)
  done (took 13.147065461 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132177767 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154982791 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.126250794 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.112893969 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.158372585 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.15899159 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102946064 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.135547215 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.101527784 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143699285 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.095542031 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.134712089 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.095708448 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138839788 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157549926 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.105677753 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.127262183 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.10997839 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129328784 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.171249884 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.114318383 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143362222 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.14213377 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.096779645 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.131492032 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.112594305 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.163465155 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.139222734 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.10876788 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.145755348 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109743675 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.162200243 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.145227484 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099106856 seconds)
  done (took 5.538397089 seconds)
done (took 50.458361157 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.195064327 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.405128781 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.189122223 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.010311435 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.209817855 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.193949859 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.202489798 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.190400817 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.783937441 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.189920717 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.439139946 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.722968517 seconds)
done (took 59.849269715 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.220313507 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.349642662 seconds)
    (2/2) benchmarking "String"...
    done (took 1.496502702 seconds)
  done (took 3.963746341 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.799718943 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.122929525 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.459372133 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.191458372 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.194890509 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.502641055 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.829751163 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.534444362 seconds)
  done (took 27.955517036 seconds)
done (took 42.056410181 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.202598538 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.216432848 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.223810413 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.172873695 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.306432128 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.232243799 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.523827103 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.205027191 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.212470301 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.201088806 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.209306791 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.208691965 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.20023993 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.547995487 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.198596689 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.20643351 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.218092158 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.676715446 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.570618172 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.195835777 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.21103965 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.264347517 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.200077926 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.200149877 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.258885844 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.193207338 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.198850014 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.191990468 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.434701471 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.201617321 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.298576262 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.692729533 seconds)
  done (took 190.196089634 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.200415302 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.224159298 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.315547534 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.2131785 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.65794173 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.396187567 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.334373937 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.732388584 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.209773865 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.227470819 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.469060412 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.186923597 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.508180316 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.199624594 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.23052471 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.260068511 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.362336606 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.509788766 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.232076948 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.346649111 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.188960074 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.457635515 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.392951666 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.401600693 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.190359283 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.279769668 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.210301673 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.210161768 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.3817354 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.307550709 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.207156912 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.222213532 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.732658244 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.044391831 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.197903408 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.195188833 seconds)
  done (took 149.554453797 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.190028709 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.192195651 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.190600557 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.21762057 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.192263561 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.681598995 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.685617151 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.695464093 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.573743857 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.342493353 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.408820876 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.19139989 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.277212583 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.201690522 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.186187918 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.207287503 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.232322196 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.18808815 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.191229299 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.6788854 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.203749538 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.185191947 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.350478607 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.197221477 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.216318018 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.575626971 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.285849881 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.206512432 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.21552528 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.507294776 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.226841725 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.188561745 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.493150334 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.741015373 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.299346748 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.190399928 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.217290096 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.194557393 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.461230084 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.190423076 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.19035404 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.194981901 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.789270587 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.192863551 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.684816035 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.193399156 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.062068463 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.191724394 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.190026266 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.328365871 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.718269482 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.207456575 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.190244827 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.189579878 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.18842236 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.190998081 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.216251489 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.463525423 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.279601993 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.205675728 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.197529807 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.217882338 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.192724605 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.43729959 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.18866124 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.19202339 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.244784268 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.405506091 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.627357042 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.682920005 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.193089059 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.287370222 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.307452368 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.187234808 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.193373027 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.189954497 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.191439861 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.296913094 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.185451207 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.548769193 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.353371061 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.203649055 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.348492955 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.286181535 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.188667421 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.529957031 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.193909924 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.191510208 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.931793971 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.288817628 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.187833956 seconds)
    (92/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.195408872 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.191916687 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.192007785 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.190423366 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.553866964 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.685589451 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.397660511 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.195069937 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.501454848 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.188512655 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.575421701 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.677656013 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.814212557 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.19429831 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.304378244 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.354844943 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.201397555 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.195770981 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.355354511 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.195022715 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.247948841 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.194584698 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.587468899 seconds)
  done (took 362.720565934 seconds)
done (took 703.590448673 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.814838418 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.795861949 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.907615488 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.791214646 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.75891374 seconds)
  done (took 10.183073098 seconds)
done (took 11.301945839 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.371055691 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.368725567 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.249638573 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.370819503 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.223137918 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.388049298 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.351738096 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.21772628 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.291059684 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.269874217 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.294085232 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.246396441 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.230218254 seconds)
  done (took 17.989970065 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.505975832 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.502377951 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.259095865 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.501176248 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.238671374 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.514214591 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.393856753 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.404042511 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.409285666 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.225365767 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.20778174 seconds)
  done (took 16.281728512 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.501281696 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.501051297 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.261110561 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.511810536 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.233630715 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.512837598 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.385040271 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.403552749 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.408464777 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.22725787 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.205826305 seconds)
  done (took 16.27224406 seconds)
done (took 51.659330698 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.202995764 seconds)
  done (took 2.317898064 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.23610618 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.398559642 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.220905139 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.209319747 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.202390883 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.204399539 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.205447928 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.204390558 seconds)
  done (took 11.001239986 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.204394909 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.197544014 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.199858959 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.201956982 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.204249602 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.199253222 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.202761773 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.202514439 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.202335441 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.20491401 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.200603036 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.204838477 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.19836871 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.205106675 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.202580278 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.20541489 seconds)
  done (took 20.352394908 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.202691892 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.196325515 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.201326825 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.201540983 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.198914735 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.200295053 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.205015812 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.201942218 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.203090142 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.201552717 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.206860252 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.201707354 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.202714768 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.203881016 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.20126904 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.202498764 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.201929567 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.203283908 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.209169561 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.20419279 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.200936514 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.204764489 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.204753548 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.203694118 seconds)
  done (took 29.987077722 seconds)
done (took 64.774686164 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.777231649 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.669008024 seconds)
  done (took 6.565525952 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.264469421 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.269445728 seconds)
  done (took 3.654505742 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.204695172 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.204813359 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.209190567 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.202625356 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.206210946 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.203756791 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.205833721 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.202434439 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.203466712 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.206008659 seconds)
  done (took 13.173182774 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.204766952 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.202214027 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.20383592 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.203330034 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.202739979 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.204395421 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.207436829 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.203815579 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.204279343 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.201177341 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.209220122 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.205109891 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.202660808 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.203792498 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.205127629 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.205448063 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.206398795 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.204147243 seconds)
  done (took 22.802336008 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.205182652 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.227943664 seconds)
  done (took 3.556808219 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.334682898 seconds)
    (2/7) benchmarking "second"...
    done (took 1.246705924 seconds)
    (3/7) benchmarking "month"...
    done (took 1.315188281 seconds)
    (4/7) benchmarking "year"...
    done (took 1.302729871 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.247284607 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.224056339 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.247237635 seconds)
  done (took 10.04386122 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.207053928 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.379690472 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.484287857 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.802200886 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.213063493 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.208403685 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.074270991 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.213716735 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.21559837 seconds)
  done (took 13.923284923 seconds)
done (took 74.844471673 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.196370693 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.214148157 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.386791184 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.207446802 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.232472351 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.503026811 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.228908443 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.32918273 seconds)
done (took 37.426286074 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.217195506 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.189370297 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.840752424 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.214017588 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.209035159 seconds)
  done (took 18.576546976 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.149341628 seconds)
    (2/2) benchmarking "read"...
    done (took 1.552343333 seconds)
  done (took 4.827676255 seconds)
done (took 30.743013914 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.211193348 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.205333771 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.209434848 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.209941572 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.209552925 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.204659757 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.207259757 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.206441307 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.210391367 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.207249398 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.21044884 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212745192 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.207649772 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.207678438 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209648677 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.209481446 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.206643708 seconds)
    (18/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.206899404 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.211451696 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.214018524 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.213324295 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.205671824 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.208468438 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.205608145 seconds)
  done (took 30.136817639 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.211918977 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.209298432 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.209635507 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.213237629 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.208535176 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.210769295 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.211117296 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.207908644 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.213017487 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.21194183 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.209888995 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.210400929 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.211719126 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.208186844 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217176523 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.206182072 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.21225777 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208401367 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213053882 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.211808476 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.214473721 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211718491 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.206158791 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.212415707 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.208033008 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.212114476 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.213684656 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.212218656 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.209685991 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.207546079 seconds)
  done (took 37.453201642 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.219073355 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.21709386 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.213581273 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.215502454 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.213690849 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.215550373 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.21620414 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.212099857 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.212305709 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.214071817 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.21254873 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.212103041 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.210451408 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.213831893 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.215043266 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.213931334 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.214259505 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.216528832 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.213250811 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.212857393 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.21447314 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.217322081 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.21532514 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.218505484 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.216537613 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.213298619 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.211574808 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.211315987 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.217755229 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.215510013 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.213766564 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.209496157 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.209539011 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.212918402 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.215424521 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.215439164 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.220245151 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.221743521 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.215064713 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.219190794 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.216252147 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.215598979 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.218146639 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.216109268 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.218117531 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.215584261 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.218995963 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.216379648 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.216632435 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.216435913 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.213527498 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.214781691 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.2136706 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.21792928 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.217756197 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.219452366 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.221932858 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.222347998 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.220117749 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.219293157 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.220653447 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.218358336 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.216812064 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.220919924 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.220745984 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.217337576 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.220024743 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.221131627 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.220028648 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.21991975 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.218706283 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.218891808 seconds)
  done (took 88.701052764 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.219901867 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.219896387 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.217298146 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.217220056 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.21783674 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.221587697 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.215261626 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221808715 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217482237 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.219592466 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219742939 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.218792325 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218102091 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.221094777 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221008844 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.218451807 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.221052021 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.216346917 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.220763959 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.221212215 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.219394276 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.219521601 seconds)
  done (took 27.958113071 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220805637 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.224636412 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.219356221 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.22475723 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.21998754 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.224679952 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.220211317 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.225198699 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223554465 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219808913 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217049001 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220944732 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.222888609 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217593377 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220440622 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.220533694 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225520289 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.223033312 seconds)
  done (took 23.127230156 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.223523633 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.220872985 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.223232746 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.220337703 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.220988519 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.224529508 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223766077 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.223796609 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.223091003 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.224356191 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.224235211 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222283026 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.224587806 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221034264 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225890266 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.220353003 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.226728399 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223554151 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.224712439 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.224558218 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.22234517 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.224653342 seconds)
  done (took 28.050143772 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22744885 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.226019833 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.222939534 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.222659949 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.223479351 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.225789987 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.226439024 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.223609782 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.224658769 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.224288823 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.225037588 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.225116307 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.22430868 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.222890272 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.22330988 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221676138 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.224620305 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.226608234 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226643549 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.22488646 seconds)
  done (took 25.630585976 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.225176143 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.226754365 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.227075937 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.226138297 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.229015312 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.229888383 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.229759913 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.231156021 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.227832123 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.227120315 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.228017258 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.228002048 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.22643883 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.227553794 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.226600513 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.229615316 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.230210242 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.226320744 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.230685578 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.229311097 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.230085452 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.230319356 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.228432919 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.230724228 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.233253533 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.230669622 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.228322404 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.229224075 seconds)
  done (took 35.542779037 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22835728 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.230822829 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.228448346 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.227420134 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.228125338 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.226389316 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.227880474 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.229731106 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.228242752 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.227447182 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.232164843 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.23164272 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.230297021 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.230297889 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.229110002 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.229186916 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229685904 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.229286494 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22800816 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225351231 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.231770967 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230687674 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.230622475 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.227591398 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228822664 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.231664369 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.229572722 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.230981881 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229298114 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.228229117 seconds)
  done (took 38.018822193 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.250240951 seconds)
    (2/2) benchmarking "in"...
    done (took 1.250172187 seconds)
  done (took 3.642902672 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.230479583 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231275606 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.233366055 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.228986792 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.229387724 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.231173341 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.229368225 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.230943546 seconds)
  done (took 10.987300867 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.230728137 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.229449588 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.231337492 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.234460825 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.23374035 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.235505018 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.241310046 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.249986972 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.232845101 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.235327846 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.242223271 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.23597497 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.237464758 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.229358517 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.228038732 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.232797741 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.23300141 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.230375526 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.234499649 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.232863485 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.229607363 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.234726866 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.236223752 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.229367023 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.238201803 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.240288442 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.251392502 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.232172447 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.235274447 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.23932889 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.235785117 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.232298256 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.234541595 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.2360553 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.236945475 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.233535141 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.243971407 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.254138644 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.23984744 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.249014481 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.237974432 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.232949055 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.235315451 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.235764605 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.236822069 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.235973937 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.238467741 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.233818225 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.233539649 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.24084037 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.240197005 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.235331874 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.234949546 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.239851556 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.237691023 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.242427234 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.254407063 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.240913423 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.238958298 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.244710586 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.262020014 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.254497773 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.240684667 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.235337618 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.247265161 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.25127026 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.241222471 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.25196255 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.233185347 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.240325559 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.244996465 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.264434771 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.256306251 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.237309173 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.237691988 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.237922502 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.239040409 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.240183035 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.24731473 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.256793209 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.236133937 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.23618424 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.245121205 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252695341 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.236281439 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.237402471 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.236488685 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.23592941 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.23981014 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.24778728 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.254203219 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.23754931 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.239827455 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.238636139 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.238117334 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.238904627 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.237113916 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.242374475 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.237516217 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.238171931 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.238460642 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.246141956 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.24902314 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.237739707 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.238070974 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.246172287 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.251837205 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240672704 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.242753506 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.238031919 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.239396359 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.240734967 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.245613668 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.23893409 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.2448267 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.246135259 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.239358111 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.241994452 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.239294093 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.241029272 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.249497386 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.257095409 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.239703039 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.239488305 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.245340197 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.247571227 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.241286945 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.246354678 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.240339778 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.241210749 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.237057585 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.241877543 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.241631497 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.24210081 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.241156824 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.241902293 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.238991233 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.243870373 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.24264839 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.244717939 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.243789465 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.242104036 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.242337314 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.245236911 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.240041427 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.242610677 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.248091224 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.258094014 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.24461784 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.242161943 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.237864659 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.25049265 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.246240552 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.243984331 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.243367848 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.24661105 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.244820901 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.244701973 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.243344695 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.250361622 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.248224361 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.248526476 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.248900686 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.243913762 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.248586456 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.246408297 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.240670783 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.246127672 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.245120733 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.246905463 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.25135698 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.243595865 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.246361088 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.250169287 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.244854402 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.245945782 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.246399701 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.243179014 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.24547488 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244930602 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.248311299 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.253287354 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.243907596 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.252250486 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.258920983 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.243869746 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.243938597 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.245227683 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.244620195 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.243987069 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.247717643 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.250956929 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.257685035 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.268758994 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.244940367 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.248555118 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.245247669 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.248654848 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.250965571 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.246390283 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.245440195 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.243985628 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.244448885 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.245044062 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.245701813 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.245360849 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.245454064 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.248760843 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.249578623 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.24865068 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.248727268 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.248892325 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.249063443 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.242776925 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.248398459 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.247340339 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.248151395 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.242857931 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.245490606 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.245088841 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.246274521 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.246447668 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.253550269 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.244383793 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.250460366 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.249506774 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.249593439 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.248259372 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.249218732 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.250494937 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.249724786 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.255342159 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.265370533 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.251579126 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.257311271 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.266989126 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.249757845 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.251558412 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.249784288 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.249127054 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.252319852 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.255410883 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.24876334 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.249554214 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.24948444 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.25153247 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.250944278 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.258593375 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.264504768 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.249744257 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.252273135 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.254490981 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.250457598 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.2510291 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.253129745 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.255161403 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.253807914 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.25204671 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.251706732 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.251889083 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.251861862 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.25120073 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.25110128 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.253386926 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.255258152 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.254906235 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.250646753 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.251982458 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.250248696 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.251529731 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.253933086 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.249854122 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.251733887 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.262775533 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.271656365 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.257441685 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.267868392 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.250450821 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.257984638 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.269164649 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.255012315 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.254261606 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.253079351 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.252224316 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.250397251 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.248493576 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.255051895 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.252050252 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.253648219 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.251916458 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.25590474 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.252670748 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.253180536 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.253190314 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.253781687 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.252022654 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.255015411 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.254594444 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.255941424 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254582011 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.254238617 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.256669305 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.263152929 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.273758986 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.254426817 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.256626842 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.256358723 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.254044352 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.257066897 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.25271054 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.257793282 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.262748965 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.259182757 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.263169196 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.255448733 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.264484009 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.255837711 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.259145062 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.267589096 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.257523411 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.25152533 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.255042268 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.251256003 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.25789736 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.268243301 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.251664122 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.251025714 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.255678092 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.254014423 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.255473328 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.255043713 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.256179273 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.256319273 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.263779292 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.275999825 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.261787393 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.257076344 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.256240023 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.257967504 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.259169311 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.256347393 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.259458039 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.255962092 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.256879813 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.257730676 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.256531981 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.254630016 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.256100263 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.255385743 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.255647136 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.254909598 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.26387796 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.279974401 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.262511493 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.256634326 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.261167532 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.270792244 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264202553 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.276181492 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.259025024 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.256487739 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.256369472 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.259702233 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.259279878 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.258765111 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.256112898 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.257469848 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.259941519 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.257197335 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.260140183 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.258017795 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.2567506 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.258735739 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.26661395 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.270609331 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.261326885 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.26379129 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.256081399 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.25826862 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.261483922 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.257819133 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.258854171 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.261234771 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.268348781 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.269098486 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.261300216 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.25614819 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.257157301 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.255167486 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.257571731 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.261927135 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.260523531 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.261343393 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.261566975 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.26225047 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.261525922 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.261385064 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.257691019 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.259779911 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.249941055 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.26079223 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.266553772 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.249375721 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.245959737 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.247995121 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.250772468 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.251026474 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.243737014 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.249581945 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.247528795 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.25060587 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.255455265 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.256882877 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.254422992 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.250711873 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.247988905 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.249435048 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.250294635 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.251749429 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.248833172 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.250386105 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.247518705 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.251346803 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.252888852 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.249148095 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.248446764 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.250301524 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.253277307 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.249863145 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.257636824 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.250886954 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.243853501 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.246263913 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.250574624 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.254326773 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.250254944 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.257072951 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.272882562 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.258206191 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.259275246 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.250617068 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.246909521 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.254079002 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.255800979 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.248217828 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.251925997 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.249034218 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.252375157 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.25419738 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.256435508 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.253914682 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.258657938 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.268482235 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.25469938 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.262138449 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.274513567 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.2509254 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.253027456 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.258289146 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.25215314 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.250499499 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.251834454 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.255895564 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264712523 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.281559584 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.257031587 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.259136061 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.250669816 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.261604189 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.256336663 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.256820164 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.252847501 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.249159624 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.251598243 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.250853972 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.254068467 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.25383265 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.255432081 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.252646649 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.254325092 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.25729671 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.248509584 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.259230651 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.257583578 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.253568595 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.255742184 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.25551778 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.250967804 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.249448957 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.260378847 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.253525809 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.251772629 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.257291624 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.253373828 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.257881891 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.255290276 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.254581731 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.260387752 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.261995531 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.265197151 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.250830097 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.254743961 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.260029368 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.264258114 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.260827796 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.262545288 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.262344402 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.259694801 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.259220479 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.261545636 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.262390755 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.264849931 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.274728396 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.282220621 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.263469832 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.263536593 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.263878496 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.262189005 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.260076155 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.258609694 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.261947834 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.265164636 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.264341003 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.257483246 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.265624438 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.278195432 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.264392245 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.265840186 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.265109669 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.263641028 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.267599731 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.259698106 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.260757325 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.266961589 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.273656801 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.264232548 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.271279532 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.284767847 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.278918685 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.264321482 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.263927917 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.263307613 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.261637018 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.262425193 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.258206608 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.264765416 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.265280766 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.263194184 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.261660489 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.269718968 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.265508795 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.267956492 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.264482569 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.265760682 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.264981833 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.261495017 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.264006538 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.260992539 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.263887122 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.261469546 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.262905917 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.260157242 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.273080948 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.285126643 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.262171737 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.268863012 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.256276532 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.266524003 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.263718912 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.270049277 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.267241565 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.267189201 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.26449029 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.265825835 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.266685214 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.263018422 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.259967939 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.265092553 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.265751439 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.259670305 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.275845063 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.290711146 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.269334644 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.263593259 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.263495335 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.25994237 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.265391057 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.260749683 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.260606427 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.268177123 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.267060347 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268124241 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.263291537 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.265786425 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.270483412 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.271452313 seconds)
  done (took 747.684164391 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.265537905 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2672816 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.264602437 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.263579333 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.257981088 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.264492454 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262855562 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.262939604 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.264128093 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.265860295 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.266824803 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.262520363 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.265194898 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.258866901 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.263081201 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.264241975 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.261346675 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.261709239 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.267655274 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.267549184 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.263326999 seconds)
  done (took 27.715716851 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.269192938 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.262408889 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.265323873 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.26559339 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.266267103 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.268361122 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.262231884 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.272564331 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.266754682 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.265314939 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.265424364 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268612001 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.260501569 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.264924036 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.260889166 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.264179708 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.267707076 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.263591049 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.259767372 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.258696068 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.261960759 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.258037676 seconds)
  done (took 28.996042807 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.257473726 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.260137039 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.263883189 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.249683021 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.249608156 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.253438688 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.252050598 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.254944834 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.255125424 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.25154353 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.257415809 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.249181943 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.252655792 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.249606094 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.248780243 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.247714392 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.39117237 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.244819819 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.24385906 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.23119027 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.230426141 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.239062144 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.246364817 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.228118696 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.233415358 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.232614457 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.235200404 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.229258063 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.230843818 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.233132356 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.233321351 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.231511022 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.234831941 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.233676979 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.233394809 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.230325602 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.230908649 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.227513271 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.224721939 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.227393172 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.237433328 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.245072548 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.231160353 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.232893631 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.246440932 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.228590732 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.231960351 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.234362532 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.224821092 seconds)
  done (took 62.097045737 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.228835064 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.230156922 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.223639049 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.226136634 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.227607461 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.227091625 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.226591866 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.227063996 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.223630346 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.224672444 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.226358068 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.224909571 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.224005504 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.225842547 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.226398811 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.223869745 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.224155897 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.225690366 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.223920761 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.224398996 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.224028782 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.227794082 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.226564666 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.224271074 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.226149822 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.22485343 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.224399144 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.227856268 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.225687626 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.224536975 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.227178676 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.227064981 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.22775411 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.226994817 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.222121161 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.225496018 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.225823189 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.222485639 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.226291835 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.222849145 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.225649949 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.228243769 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.222966704 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.223185799 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.220779908 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.221121057 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.220827409 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.221277511 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.221500025 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.224279162 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.224273866 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.221640948 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.224316587 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.220711756 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.223877542 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.223856794 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.221522482 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.221139672 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.224515073 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.222486068 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.222319934 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.224653731 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.222076448 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.22444258 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.224217492 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.222342305 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.22232971 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.225393292 seconds)
  done (took 84.415133463 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.224645868 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.223930533 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.222978189 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223358975 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.223794002 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.224109074 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.224327994 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.224252801 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.224533433 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.224754644 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.226069278 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.225231725 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.224168118 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.226038759 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.226420693 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.22467483 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.224376065 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.225026028 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.225002099 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.225649623 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.224978722 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.225089793 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.225089247 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.225910991 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.226094007 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.225606106 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.225547785 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.226213153 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.225480571 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.225108486 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.22704568 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.226055495 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.225764646 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.225745037 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.227002083 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.225622137 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.224819787 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.226213784 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.228627185 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.225495074 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.224869156 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.224636055 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.225103909 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.225916527 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.22533749 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.225391305 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.226720641 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.227128461 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.226403534 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.22652493 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.225441321 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.224850974 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.225683767 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.225907281 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.225875887 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.225662278 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.224772346 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.223884166 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.225106744 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.224183501 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.224482393 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.225119378 seconds)
  done (took 77.110385377 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.226353052 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.225571886 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.223829603 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.223016964 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.225492375 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.223486656 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.224937808 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.22541572 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.225340727 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.225760631 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226680412 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223043894 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224815046 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226381576 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.224202511 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225453818 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.224106959 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.225205558 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225836754 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.224037926 seconds)
  done (took 25.638515169 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.222263883 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.226562828 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.224919328 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.224886719 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.226202513 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.224299334 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.22632113 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226262361 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224109202 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226545857 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.226610304 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.227519431 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224674341 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.223672618 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.227335632 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.224012319 seconds)
  done (took 20.745568087 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.225117036 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.226333802 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.22619825 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.226987951 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.224857788 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.22495056 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.227217148 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.225045363 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.224462196 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.228001023 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.228362196 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.227161263 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.227465575 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.227295595 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.224948407 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.227676173 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.22594622 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.225241111 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.228492216 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.228656922 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.227074272 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.227282915 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.228931822 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.227685013 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.226247789 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.226550763 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.225948428 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.227167473 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.226578514 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.227908226 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.226347112 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.226993327 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.225985233 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.226549752 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.229239688 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.226230066 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.229781976 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.229809457 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.229997724 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.23019655 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.228962916 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.227050159 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.229646023 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.230227969 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.228176223 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.229745567 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.227573314 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.227763643 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.228101095 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.22690662 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.229833723 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.23012945 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.230488686 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.230245921 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.230494847 seconds)
  done (took 68.659371691 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230570353 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.23050011 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.227961906 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.231394029 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.230619296 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.228033389 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.23054477 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.229658577 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.228153255 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.23043649 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.228949882 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.231705957 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.228374109 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.231206568 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.229541102 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.230631566 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.229425401 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.2290349 seconds)
  done (took 23.280228326 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.228849037 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.228613751 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.232212721 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.228577177 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.2283482 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.2321159 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229486938 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.231213054 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231829235 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.228961122 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229553283 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.232484032 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231940585 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.231967506 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.22995811 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229108829 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.232448948 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232276351 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.230102254 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.230023795 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.232796488 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.231821197 seconds)
  done (took 28.219446769 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.231733322 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.231874211 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.232110713 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.247891539 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.249914413 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.253868306 seconds)
  done (took 8.593311203 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.239191996 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232245123 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.231675958 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233836832 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23261767 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230447533 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.230645938 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.230967887 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233038888 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231631036 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230801526 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233186065 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232999794 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231113485 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233951708 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233980186 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230835955 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231732932 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231913638 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234102043 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231298847 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234628061 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231412074 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231891565 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.232124157 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231908647 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234401375 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.232636697 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.232158422 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234477733 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234315278 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231992984 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.235342862 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232692845 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23528721 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235022622 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232630696 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.235107933 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23542297 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232793011 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.235113506 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.235433532 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.235852665 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232900682 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235391533 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233107948 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233073349 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233347663 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233777528 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.235826375 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.236388183 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232970952 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.236265456 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236791648 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.236347258 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.236774703 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233651459 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233955093 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.236516168 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234369028 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233681526 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.237117674 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233573053 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234432247 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.236882456 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233131893 seconds)
  done (took 82.594846727 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234037689 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.234701697 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234450016 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.236236085 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234455384 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.234224194 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.23476508 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234913591 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234886777 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.235331747 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23783531 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.23518055 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234947566 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.234728853 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.235847914 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.236143148 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23435785 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.235825207 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.235342926 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.239239072 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23686531 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.235380224 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235611152 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.235216788 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.236159933 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.239768639 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.236330722 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.236233075 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23677211 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236772797 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.236382122 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236766518 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.237228511 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.235740065 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23637684 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.236962575 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.236676259 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.236942002 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.236535838 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2393076 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.236203452 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.239809778 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.23668474 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.236635631 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23818949 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.237142749 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.236344353 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.237572834 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236678525 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.237871763 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.237679482 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.23696337 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.237971158 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.237265078 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.237717719 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.238091934 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.237914112 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.237820595 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23792787 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.240254068 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.238635979 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.237561551 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.241650216 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.238160587 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.238108901 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.238955678 seconds)
  done (took 82.778748005 seconds)
done (took 1718.899319874 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.402254452 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.357654627 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.239390558 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.239172737 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.239495449 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.259097234 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.243663308 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.239356736 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.239582254 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.239787762 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.240340903 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.430556935 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.247759278 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.242042779 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.240006526 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.336335755 seconds)
  done (took 41.590320576 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.265593273 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.251318371 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.354407593 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.268153033 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.27378299 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.424868625 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.300766792 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.251972736 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.409121193 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.291298488 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.697754442 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.27314939 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.250054198 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.284495607 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.268429854 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.426070682 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.481354876 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.703286041 seconds)
  done (took 28.630963031 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.667081926 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.264494802 seconds)
  done (took 9.091819802 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.270382966 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.251497902 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.251747484 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.248783765 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.243062093 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.244553546 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.250486883 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.254688179 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.624793617 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.372832601 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.253699603 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.261676671 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.270283261 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.253237958 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.249427954 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.288004649 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.403789982 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.249465904 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.247869205 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.257801701 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.252708506 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.37178203 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.290044265 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.25057294 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.369781452 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.63011146 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.260135167 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.260366142 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.404408636 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.249979501 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.251452701 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.25205312 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.253568994 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.132765063 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.691143505 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.244305513 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.275568613 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.262715256 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.249374942 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.442462 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.254543693 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.259922393 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.25630232 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.672369403 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.391389073 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.361984867 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.412595922 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.26871209 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.25440054 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.311826879 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.254416595 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.256342177 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.295299363 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.024307723 seconds)
  done (took 106.591770586 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.269317163 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.636427536 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.412593924 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.264261488 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.850763304 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.826691768 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.261898513 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.512110892 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.279208444 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.247065107 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.528400906 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.729687358 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.268161318 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.249246863 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.893048726 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.327090974 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.247416484 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.9575473 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.262692479 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.247864855 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.732994353 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.248570057 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.246731749 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.400739883 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.283218548 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.68236645 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.543519987 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.661612298 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.262968916 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.247765454 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.691557867 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.263093066 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.299948215 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.251973218 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.498675804 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.585555689 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.578878342 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.266537816 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.253160754 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.248689703 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.261508355 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.6763919 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.584449265 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.263276041 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.26491258 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.68195387 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.264290715 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.251442283 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.252660957 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.444726864 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.096696268 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.25126036 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.546615496 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.249765818 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.626085468 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.314394591 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.291938637 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.71158054 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.266078012 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.307638318 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.264187988 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.250417159 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.253289901 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.252812415 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.26829577 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.575238725 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.633416918 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.250372975 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.573434339 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.703302016 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.265055921 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.766746614 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.043242169 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.279128619 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.313019301 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.251025169 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.780809189 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.719958189 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.302932201 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.251118974 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.564177118 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.26857195 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.521732526 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.265154169 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.26748082 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.759665116 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.261873308 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.295156768 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.257069201 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.250261614 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.867235871 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.259183744 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.509292166 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.291926835 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.252212987 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.251208479 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.274640265 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.252156467 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.267493262 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.256035742 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.75438687 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.271540511 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.369047848 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.272912866 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.25152371 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.267859182 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.252592708 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.252164939 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.465845612 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.723964009 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.274130085 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.252720597 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.252791309 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.2572973 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.415717317 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.25771934 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.539580607 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.270922042 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.253439646 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.256166775 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.867169934 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.310473544 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.253984745 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.270623523 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.10869203 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.46314862 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.270035073 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.254356929 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.253880298 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.268344435 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.441065937 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.272501559 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.294078962 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.259609495 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.936434247 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.276587631 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.279252459 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.795885518 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.266032111 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.059632197 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.277280359 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.255995676 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.553202993 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.515393133 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.564325016 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.258331085 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.270085497 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.913269994 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.272277216 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.39056614 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.272881327 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.301402659 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.451934189 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.433085162 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.261683958 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.893567574 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.254446319 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.464510986 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.260365786 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.548593227 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.728293011 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.271888979 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.256618614 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.934832131 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.97027703 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.950055876 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.257020422 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.522572274 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.225526668 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.736949347 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.257083955 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.255866686 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.681101003 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.261979769 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.266247988 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.256723948 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.257379887 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.320514745 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.428228064 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.867208966 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.264879517 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.68757018 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.278535539 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.257513628 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.28147892 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.261445467 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.606375882 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.32669011 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.25766592 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.302679969 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.258261406 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.26636005 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.713267545 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.108780645 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.265087059 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.408320878 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.866553305 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.272897927 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.259623377 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.848962416 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.563398293 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.747509623 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.311678607 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.546563475 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.280054654 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.295369003 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.810316456 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.310845458 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.710420731 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.276141185 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.264094605 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.827066122 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.274963221 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.322336379 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.259529879 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.260244745 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.766287687 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.274872242 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.260472194 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.485345184 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.280218355 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.519902268 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.264655597 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.284645711 seconds)
  done (took 1091.713446753 seconds)
done (took 1278.772286921 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.25886335 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.258764968 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.2447192 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.266031182 seconds)
  done (took 26.205409413 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.278001525 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.267136338 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.268030847 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.266741715 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.270700956 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.266871257 seconds)
  done (took 8.796085263 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.308935877 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.263086107 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.267493515 seconds)
  done (took 19.016974986 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.469477263 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.488289056 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.582945826 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.355350244 seconds)
  done (took 10.076275992 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.268029272 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.269352292 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.268424448 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.271970984 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.27920247 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.280341161 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.271502974 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.271278084 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.281597595 seconds)
  done (took 12.641321186 seconds)
done (took 77.91361416 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.638286723 seconds)
    (2/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.277405138 seconds)
    (3/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.306251825 seconds)
    (4/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.352651912 seconds)
    (5/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.575534291 seconds)
    (6/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.294095721 seconds)
    (7/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.315519225 seconds)
    (8/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.291150404 seconds)
    (9/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.287730234 seconds)
    (10/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.438959612 seconds)
    (11/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.384959783 seconds)
    (12/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.243895855 seconds)
    (13/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.514627748 seconds)
    (14/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.900666924 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.303736358 seconds)
    (16/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.349311637 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.293941302 seconds)
    (18/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.392336512 seconds)
    (19/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.752837177 seconds)
    (20/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.396036937 seconds)
    (21/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.750501577 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.664310822 seconds)
    (23/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.279859091 seconds)
    (24/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.321526452 seconds)
    (25/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.407509107 seconds)
    (26/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.274530304 seconds)
    (27/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.470113464 seconds)
    (28/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.445850737 seconds)
    (29/286) benchmarking ("sort", Float64, true)...
    done (took 6.288164633 seconds)
    (30/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.50457129 seconds)
    (31/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.769463472 seconds)
    (32/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.38364889 seconds)
    (33/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.279870442 seconds)
    (34/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.264119397 seconds)
    (35/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.267625387 seconds)
    (36/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.535884123 seconds)
    (37/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.249915264 seconds)
    (38/286) benchmarking ("sort", Int64, true)...
    done (took 6.266774 seconds)
    (39/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.324309405 seconds)
    (40/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.284922266 seconds)
    (41/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.684059163 seconds)
    (42/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.352012471 seconds)
    (43/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.367407461 seconds)
    (44/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.6224409 seconds)
    (45/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.220048599 seconds)
    (46/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.245269299 seconds)
    (47/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.248915857 seconds)
    (48/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.466267522 seconds)
    (49/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.355677252 seconds)
    (50/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.965599818 seconds)
    (51/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.645411068 seconds)
    (52/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.624565245 seconds)
    (53/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.2537168 seconds)
    (54/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.847801098 seconds)
    (55/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.25081208 seconds)
    (56/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.289953066 seconds)
    (57/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.383892118 seconds)
    (58/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.245515841 seconds)
    (59/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.452838467 seconds)
    (60/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.532768718 seconds)
    (61/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.275368174 seconds)
    (62/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.490511059 seconds)
    (63/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.251808786 seconds)
    (64/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.292698146 seconds)
    (65/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.274045594 seconds)
    (66/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.328535554 seconds)
    (67/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.331188848 seconds)
    (68/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.978482021 seconds)
    (69/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.087652517 seconds)
    (70/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.72437189 seconds)
    (71/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.268213187 seconds)
    (72/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.288552155 seconds)
    (73/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.246980056 seconds)
    (74/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.608547497 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.667438458 seconds)
    (76/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.262991474 seconds)
    (77/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.725628858 seconds)
    (78/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.157188755 seconds)
    (79/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.252371251 seconds)
    (80/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.613348328 seconds)
    (81/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.261323875 seconds)
    (82/286) benchmarking ("sort", Int64, false)...
    done (took 5.444514718 seconds)
    (83/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.066213836 seconds)
    (84/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.766487137 seconds)
    (85/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.35230474 seconds)
    (86/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.283520774 seconds)
    (87/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.10825053 seconds)
    (88/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.281227832 seconds)
    (89/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.033889885 seconds)
    (90/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.365950009 seconds)
    (91/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.65054735 seconds)
    (92/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.253162915 seconds)
    (93/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.041189189 seconds)
    (94/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.253467563 seconds)
    (95/286) benchmarking ("sort", BigInt, true)...
    done (took 6.273912088 seconds)
    (96/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.069312246 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.615388738 seconds)
    (98/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.996771913 seconds)
    (99/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.299857006 seconds)
    (100/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.810895359 seconds)
    (101/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.370159631 seconds)
    (102/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.3734619 seconds)
    (103/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.276943572 seconds)
    (104/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.261987472 seconds)
    (105/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.273116063 seconds)
    (106/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.533334345 seconds)
    (107/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.259079956 seconds)
    (108/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.847821318 seconds)
    (109/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.438696871 seconds)
    (110/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.27482785 seconds)
    (111/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.308658787 seconds)
    (112/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.467014985 seconds)
    (113/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.334853175 seconds)
    (114/286) benchmarking ("sort", Bool, false)...
    done (took 1.786476988 seconds)
    (115/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.314396819 seconds)
    (116/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.527276041 seconds)
    (117/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.038355641 seconds)
    (118/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.003164293 seconds)
    (119/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.534417108 seconds)
    (120/286) benchmarking ("sort", BigInt, false)...
    done (took 6.279730016 seconds)
    (121/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.606762989 seconds)
    (122/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.256752353 seconds)
    (123/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.302406559 seconds)
    (124/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.380743107 seconds)
    (125/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.615567562 seconds)
    (126/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.359728144 seconds)
    (127/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.249436397 seconds)
    (128/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.909011428 seconds)
    (129/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.254556371 seconds)
    (130/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.675985895 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.009472425 seconds)
    (132/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.302942502 seconds)
    (133/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.27871301 seconds)
    (134/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.137414052 seconds)
    (135/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.203106248 seconds)
    (136/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.777236693 seconds)
    (137/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.372745097 seconds)
    (138/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.29331797 seconds)
    (139/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.010823224 seconds)
    (140/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.09460705 seconds)
    (141/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.539610302 seconds)
    (142/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.299229983 seconds)
    (143/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.985417955 seconds)
    (144/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.189687291 seconds)
    (145/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.178245346 seconds)
    (146/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.721672231 seconds)
    (147/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.514035428 seconds)
    (148/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.287450212 seconds)
    (149/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.087399206 seconds)
    (150/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.302317809 seconds)
    (151/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.687771237 seconds)
    (152/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.395370944 seconds)
    (153/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.11923215 seconds)
    (154/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.334397433 seconds)
    (155/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.2707222 seconds)
    (156/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.122284086 seconds)
    (157/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.064912749 seconds)
    (158/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.741522248 seconds)
    (159/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.252400426 seconds)
    (160/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.301003257 seconds)
    (161/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.252233067 seconds)
    (162/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.252928297 seconds)
    (163/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.303763877 seconds)
    (164/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.772604257 seconds)
    (165/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.680897596 seconds)
    (166/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.476817141 seconds)
    (167/286) benchmarking ("sort", Float32, false)...
    done (took 5.276086326 seconds)
    (168/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.253360142 seconds)
    (169/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.25392921 seconds)
    (170/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.4625853 seconds)
    (171/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.359578375 seconds)
    (172/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.314035751 seconds)
    (173/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.282118622 seconds)
    (174/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.395926559 seconds)
    (175/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.111141691 seconds)
    (176/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.340518067 seconds)
    (177/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.260085485 seconds)
    (178/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.985299037 seconds)
    (179/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.288822163 seconds)
    (180/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.254359191 seconds)
    (181/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.086366283 seconds)
    (182/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.290345453 seconds)
    (183/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.261225597 seconds)
    (184/286) benchmarking ("sort", Bool, true)...
    done (took 5.387099209 seconds)
    (185/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.278922295 seconds)
    (186/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.686928959 seconds)
    (187/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.346891657 seconds)
    (188/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.298604311 seconds)
    (189/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.556628541 seconds)
    (190/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.618041436 seconds)
    (191/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.293007348 seconds)
    (192/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.679674985 seconds)
    (193/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.397660815 seconds)
    (194/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.651631548 seconds)
    (195/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.899500387 seconds)
    (196/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.483599874 seconds)
    (197/286) benchmarking ("sort", Float32, true)...
    done (took 6.274426659 seconds)
    (198/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.358639818 seconds)
    (199/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.058259061 seconds)
    (200/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.960699826 seconds)
    (201/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.360867819 seconds)
    (202/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.502173367 seconds)
    (203/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.880634748 seconds)
    (204/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.338319874 seconds)
    (205/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.301787542 seconds)
    (206/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.357344773 seconds)
    (207/286) benchmarking ("sort", Float64, false)...
    done (took 5.548678025 seconds)
    (208/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.339566165 seconds)
    (209/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.520586417 seconds)
    (210/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.315589873 seconds)
    (211/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.615838902 seconds)
    (212/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.285954331 seconds)
    (213/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.287887426 seconds)
    (214/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.282782204 seconds)
    (215/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.366762298 seconds)
    (216/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.990753786 seconds)
    (217/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.088464786 seconds)
    (218/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.261467284 seconds)
    (219/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.514102043 seconds)
    (220/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.269786138 seconds)
    (221/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.013601141 seconds)
    (222/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.329079446 seconds)
    (223/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.288899359 seconds)
    (224/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.284174493 seconds)
    (225/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.396279301 seconds)
    (226/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.898448562 seconds)
    (227/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.262550884 seconds)
    (228/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.405460248 seconds)
    (229/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.365372151 seconds)
    (230/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.732750672 seconds)
    (231/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.893077818 seconds)
    (232/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.285415635 seconds)
    (233/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.384471175 seconds)
    (234/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.480517594 seconds)
    (235/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.271736957 seconds)
    (236/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.64753691 seconds)
    (237/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.266216058 seconds)
    (238/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.412364088 seconds)
    (239/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.277916753 seconds)
    (240/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.310399096 seconds)
    (241/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.439173859 seconds)
    (242/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.25781229 seconds)
    (243/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.270413483 seconds)
    (244/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.690263988 seconds)
    (245/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.787993585 seconds)
    (246/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.261708787 seconds)
    (247/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.26348086 seconds)
    (248/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.268067095 seconds)
    (249/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.265042469 seconds)
    (250/286) benchmarking ("sort", Int8, true)...
    done (took 6.303054639 seconds)
    (251/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.32153972 seconds)
    (252/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.288169181 seconds)
    (253/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.400731549 seconds)
    (254/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.456750717 seconds)
    (255/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.282685176 seconds)
    (256/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.27711285 seconds)
    (257/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.696879849 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.686964161 seconds)
    (259/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.31749006 seconds)
    (260/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.673716953 seconds)
    (261/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.293125754 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.366862794 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.361551087 seconds)
    (264/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.380922564 seconds)
    (265/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.297592768 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.392377166 seconds)
    (267/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.452450916 seconds)
    (268/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.380533652 seconds)
    (269/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.305186208 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.104825823 seconds)
    (271/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.573611794 seconds)
    (272/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.301641779 seconds)
    (273/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.305030349 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.320737812 seconds)
    (275/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.056133533 seconds)
    (276/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.860143963 seconds)
    (277/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.042035222 seconds)
    (278/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.283354367 seconds)
    (279/286) benchmarking ("sort", Int8, false)...
    done (took 4.342567271 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.823966705 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.302953813 seconds)
    (282/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.18305991 seconds)
    (283/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.869214262 seconds)
    (284/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.378898744 seconds)
    (285/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.28918366 seconds)
    (286/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.350892557 seconds)
  done (took 917.854821926 seconds)
done (took 919.035584801 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.313652424 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.317034273 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.291208479 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.313066673 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.410614566 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.314335842 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.302525138 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.293860967 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.338743486 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.339860484 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.297516111 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.313245316 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.30075395 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.29894179 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.29258163 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.315221065 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.309720292 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.299755007 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.316098869 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.301658273 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.315060027 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.298081649 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.341865263 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.313631512 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.295841138 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.294949562 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.302674663 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.319912835 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.411958158 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.302916035 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.296493489 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.31135192 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.318699634 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.295615708 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.288338943 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.319299741 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.312703548 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.301843851 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.296353698 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.331286847 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.716913347 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.322000237 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.302043477 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.294769773 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.294324118 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.297948186 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.302347757 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.301502941 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.315802057 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.317084878 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.723708642 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.338327988 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.305532378 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.295688772 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.305676567 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.302551733 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.297760516 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.320117189 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.322463048 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.319681114 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.296170312 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.301119608 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.296574793 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.31898004 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.311362121 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.725001685 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.30743342 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.300567175 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.722629331 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.32299906 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.726971007 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.327343067 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.298128439 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.317319011 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.335058737 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.322957651 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.296613052 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.295288971 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.311642266 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.302258009 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.306604782 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.317803817 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.30132997 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.296460829 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.318577944 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.319275378 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.307232431 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.305543319 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.306534176 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.32384563 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.31088608 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.316370227 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.300740037 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.293880724 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.306589038 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.300587862 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.308680806 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.308466989 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.304212112 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.309218028 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.719956927 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.345417236 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.294462405 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.295347624 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.29707607 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.319327285 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.699973159 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.323914368 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.320182065 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.345365607 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.299440231 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.301748995 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.30893653 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.324252726 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.308644143 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.300987994 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.294746936 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.302441294 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.693503259 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.337173189 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.301881528 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.305129958 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.325689748 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.302481513 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.297824919 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.319406626 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.302317869 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.323355293 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.429857367 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.309791582 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.338685277 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.305080583 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.304681569 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.322502617 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.325459081 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.339759236 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.303355264 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.325976774 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.323932581 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.297948613 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.319644225 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.311621904 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.301124624 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.305923033 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.295527134 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.324036025 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.322563054 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.322672388 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.322743244 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.429634598 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.299904539 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.305701478 seconds)
done (took 220.047682061 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.359711451 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.295839665 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.384332698 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.297117077 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.398241103 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.399869124 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.295667686 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.29549257 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.294486834 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.679680255 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.295190021 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.295183074 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.297465625 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.295410786 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.381908786 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.298409647 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.296505201 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.644638846 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.300217278 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.369983629 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.300511022 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.296829797 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.299073481 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.684562811 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.29451395 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.294725469 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.370748877 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.299825269 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.648287329 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.29928504 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.295933199 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.648491627 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.390113576 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.31750263 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.308737265 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.307900447 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.401009583 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.316630215 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.381383782 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.381856037 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.386414755 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.339497461 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.300245209 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.298519456 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.302881754 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.301209378 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.298179457 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.327524561 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.299173858 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.297666962 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.645214572 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.311219642 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.298714307 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.298342474 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.297982117 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.329205538 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.299249647 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.301074928 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.391267488 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.302302194 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.364994402 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.687229481 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.682183266 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.300705165 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.297171353 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.298829898 seconds)
  done (took 146.177168349 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.368552548 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.374502188 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.411793977 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.325434039 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.352259454 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.415880494 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.323331687 seconds)
  done (took 10.780490988 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.307348143 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.304633555 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.351853237 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.353378215 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.302394535 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.480019784 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.304320514 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.314073301 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.300680082 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.355950857 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.306171873 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.303674397 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.309579428 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.299000513 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.351346934 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.31488872 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.417327624 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.30583024 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.304783717 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.465306158 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.302044904 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.310275303 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.353958402 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.315137736 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.306209801 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.30915367 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.109294789 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.30326179 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.301464852 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.302963694 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.301085682 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.378621998 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.305222648 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.304743485 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.301626713 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.419095559 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.304949251 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.301418697 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.304941417 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.302413985 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.30363624 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.30450095 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.305127706 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.301954161 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.304528235 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.326879574 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.304856827 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.305141242 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.305962266 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.306755823 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.355004212 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.305972509 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.303823078 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.302676171 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.361301593 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.313351369 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.306352077 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.303000411 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.306121642 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.303778797 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.466864152 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.353387199 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.306031909 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.353572522 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.306818118 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.308853546 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.307320569 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.307018547 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.36096459 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.307694313 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.355766817 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.304918987 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.492244499 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.330680817 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.308910036 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.313380048 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.31189534 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.307521616 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.300490712 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.313902144 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.306391692 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.309781068 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.314989281 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.306248358 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.305173292 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.474041358 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.418022208 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.305920594 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.319775099 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.315720347 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.306676739 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.362077986 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.309025683 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.306168092 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.360772041 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.423933477 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.362468725 seconds)
  done (took 150.860067586 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.313706244 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.317423294 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.313371775 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.331492831 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.329643098 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.310438582 seconds)
  done (took 9.13297039 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.311885892 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.310070187 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.309256036 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.310241949 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.309681639 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.311798364 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.30992264 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.314139299 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.313454393 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.310748678 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.311639508 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.313431531 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.311254922 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.311022969 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.309154779 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.309707016 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.310439681 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.308846966 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.310824295 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.311042367 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.415157396 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.309790204 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.31093772 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.311778356 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.316000771 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.311699611 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.319313628 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.311452404 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.311706773 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.319196985 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.33146543 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.313288069 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.31325543 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.318498591 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.315136321 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.313387216 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.316343506 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.317051031 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.310322602 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.31329934 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.316313899 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.311632178 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.312672714 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.315261105 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.313954745 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.316709386 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.320897737 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.3202875 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.313034518 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.316276376 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.316241464 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.312904654 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.314823713 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.317611596 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.31489169 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.334292624 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.321117379 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.313577997 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.313830727 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.315255762 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.315218406 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.315913531 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.315497613 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.317192218 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.31187296 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.318629452 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.316501783 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.318362663 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.314567819 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.3149976 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.319235081 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.313125759 seconds)
  done (took 96.96024883 seconds)
done (took 415.11746003 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.677799363 seconds)
  done (took 7.900559459 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.333358584 seconds)
  done (took 7.560217019 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.621980895 seconds)
  done (took 21.850115099 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.328441429 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.322646031 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.327736594 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.319489563 seconds)
  done (took 26.522335108 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.427147054 seconds)
  done (took 7.65131487 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.311375506 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.307704594 seconds)
  done (took 13.84409336 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.811672573 seconds)
  done (took 8.035851521 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.781215545 seconds)
  done (took 8.010871737 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.324044404 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.324951439 seconds)
  done (took 14.131972731 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.291061159 seconds)
  done (took 7.51708828 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.233488853 seconds)
  done (took 11.458868127 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.322558533 seconds)
  done (took 7.550186263 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.328891681 seconds)
  done (took 7.553776675 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.217480861 seconds)
  done (took 9.442012756 seconds)
done (took 160.252470382 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.311735111 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.312595802 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.313229042 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.31260523 seconds)
  done (took 26.477342975 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.351803057 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.352860227 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.35246715 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.36326844 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.353807358 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.351570543 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.344989708 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.344887576 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.36392806 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.355279227 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.353859685 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.354498969 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.356971075 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.350582304 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.354912112 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.354339382 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.363825134 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.355564692 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.345684201 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.357035668 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.319365748 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.364654126 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.356905797 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.321079385 seconds)
  done (took 33.670331085 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.841833084 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.392852471 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.474452745 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.371317447 seconds)
  done (took 7.308295256 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.371658692 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.373887743 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.385466583 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.42448715 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.450608668 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.382809194 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.347616109 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.342784752 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.327987147 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.373265603 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.450773399 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.390017954 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.45811854 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.321375834 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.530406611 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.320963275 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.321233117 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.373555985 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.4252925 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.438466298 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.321286902 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.373059747 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.376636879 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.392346295 seconds)
  done (took 34.503036441 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.32131943 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.339003192 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.322276524 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.321138232 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.330074813 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.321883863 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.321373274 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.324294308 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.322459522 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.328932667 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.320769263 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.3349084 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.321308895 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.32152745 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.328289823 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.322755341 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.328744824 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.321957531 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.322437656 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.328634329 seconds)
  done (took 27.732497588 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.315152307 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.169897957 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.66770412 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.57246521 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.316905152 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.316777049 seconds)
  done (took 27.5886337 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.390588122 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.54029038 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.322960625 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.669661941 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.770813767 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.348221419 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.323404527 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.565384416 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.870133856 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.8602036 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.386531263 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.389318344 seconds)
  done (took 19.667854408 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.32958859 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.324375285 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.327259538 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.341924119 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.377584323 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.346349144 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.332350012 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.317714692 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.384246598 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.397810657 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.348387892 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.378567426 seconds)
  done (took 37.437766839 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405612681 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.362460785 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.237664859 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377612111 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.05471382 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.530352836 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.347956389 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.030210665 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.341187659 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.593181542 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323539747 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414379634 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.574001585 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321533592 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.325971441 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.268458044 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.56226871 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.780885824 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322664742 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.277758053 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350427276 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.328781646 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.362514028 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.554282111 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.557292939 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.297210402 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.581302891 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.09598395 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.599111116 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.339450134 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33164031 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.319755883 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.595086262 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966127751 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434474621 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.528324717 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347846693 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.865860139 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.306863437 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.295619432 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.329010333 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.346341044 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331878268 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321847201 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.25661466 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.326488916 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.026402851 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.345914254 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.032373416 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.322842736 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.573303981 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423474468 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.326111294 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.890817598 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383660993 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.315012881 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.326398244 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411765543 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913630591 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.53090305 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.338125855 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.262682119 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.333662933 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.283184714 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939699857 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.3513747 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.326971779 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.326485914 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.25741038 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.287506536 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.346539131 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469960929 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.349009521 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.973493738 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.003126191 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.346883187 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.259463738 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.846748761 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.330557352 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.264553417 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.551229006 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.102408322 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.259871392 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.266874706 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.259098268 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99004534 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332527645 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.82963014 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.346318851 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.040113861 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.551863399 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366538444 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348760704 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.547377544 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.203857262 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325094791 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.325078863 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457498533 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347224872 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.023096173 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.27845288 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.328508454 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.57939557 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.535881419 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.326055523 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.301059908 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.809109355 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348657724 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.347027171 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.328397323 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.540544622 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.91628364 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.365392746 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.533859262 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348948974 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.101203079 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028375506 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332687491 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.335978787 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.329830211 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.601132428 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.043433141 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.20935964 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.394826461 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.329330575 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.326387837 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.371065441 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.182375991 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.22643631 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.517790836 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.366169862 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.344221141 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.327963835 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.27690623 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.324626646 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355594608 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.111298226 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.55163624 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.327554101 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.625032666 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.262031476 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476094252 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.335876212 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.550390488 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.496199263 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.350679611 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.586696341 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329168899 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.352605536 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.346278057 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347044576 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428177399 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350948821 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.336135744 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.590072007 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.332861508 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.331890272 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.463561941 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.112925814 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.331692755 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.335031429 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351590721 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.894841962 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328387533 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.336767084 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.216871984 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.343051409 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.396231003 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.335630118 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.539859141 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.53097892 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358410671 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.334566917 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.332678474 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.560511172 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.341189973 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.297574423 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417495225 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.794359808 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.912254073 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.365956115 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.264681459 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.042179917 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.022687888 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.331036872 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.519427417 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.33085628 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.539452238 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.369043461 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.349153809 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.900598647 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355265611 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.318528133 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.344002624 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.343222739 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.336587468 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330027996 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.533423012 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.582375828 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.350645333 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.349102048 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47581899 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.345411964 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.266631888 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.847656824 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.33692828 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.332073359 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.107880967 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365851901 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.313716259 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.131234876 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.611934428 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.33306993 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.584492623 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.413313536 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.373078449 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.331114993 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.339015339 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34266406 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.341022326 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357925542 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.345077559 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.308195678 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.778595537 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907769154 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.048232785 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866342981 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.618350361 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.35732618 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.222146276 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.037339853 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.28432722 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.990546081 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.567346346 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.051757094 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.296317038 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.803957713 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.52363247 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.103511001 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.593762391 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.569633298 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.591611021 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.362069684 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.596886792 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.553060346 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369047391 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.343533595 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.269541481 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.947808534 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.883796644 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.362306984 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419500775 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.039222666 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.362025251 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.117857079 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.370214983 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.016096939 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.735253225 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.897405692 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.722218753 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.344107515 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.352020847 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.135745458 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.363806389 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.86113992 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949727789 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.36208467 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.81055006 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.288998072 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.550215701 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.372603366 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.336657353 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.870456537 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.365413084 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.597376033 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.590770001 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.2792191 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.343201451 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857854533 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.21610672 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.34449929 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338532401 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042972288 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.338937418 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.626277613 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.35634841 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.545881757 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364299933 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.271759334 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272773018 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.030109364 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.340189571 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314756382 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805368584 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.347340332 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348183539 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.339365824 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.189250166 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.595698459 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.352642347 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.90537837 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.587581173 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.346030493 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362342013 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.342738373 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.339497178 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.327939836 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.232088654 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.575424905 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384943035 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.561955203 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.28492234 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.244421518 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.339942642 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.551440936 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.220379845 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.340309703 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.605270333 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.075723385 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.352698906 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035648706 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38884855 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.340488402 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.357846705 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.346857284 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.360968107 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428999873 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.552586748 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.376607705 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.350261405 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.740584422 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361505144 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.351157872 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.354850729 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434404725 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.594352429 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.553200367 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.13691198 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913588903 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.109523887 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.94166403 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.619712727 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.349591937 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352773495 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.276148383 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491316742 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.871337028 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.617030908 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470776502 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.363155581 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36634263 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.340417942 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.358548051 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.561647946 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.617808118 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.645839455 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347195911 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.00825488 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.226122817 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.353834659 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.554110864 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815656475 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.882368441 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46256421 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.352403773 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.05772492 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635366884 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.435037644 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.345446342 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.935982099 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.361926872 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.024832337 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.350327879 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359182436 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499787333 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.597031179 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009266396 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.373692066 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.500635897 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.118534465 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.374354917 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.605409753 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.809128594 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.564062176 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.942076226 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.056363769 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605534362 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414853041 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.557542663 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.47293307 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492897446 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.352760022 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.233493212 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.344865364 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.188646723 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.056360072 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.355400579 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924671507 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.63195712 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.348795012 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.343672302 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375920553 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.356415262 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.567995831 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026615423 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.570925947 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.355489817 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.347223379 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.337116801 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.926463065 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.625385257 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.289284434 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.349489521 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.586703266 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.608230958 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.371869055 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.799201984 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.056674317 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876969975 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.317877394 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369015213 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.34663803 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.048090817 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930032776 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.587181741 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840201514 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.006517829 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.347624075 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645180806 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.352971851 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.3591272 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.630051492 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.352122356 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.353109024 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.568777842 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.945261717 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.131378942 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.373794084 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.394740429 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.29206153 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.571846645 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377616373 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.301964827 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.348165386 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.758552962 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.366907594 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477680851 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.359399426 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.356570983 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369158439 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.114776661 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.628388685 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.353830164 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.344523014 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.33632372 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.360340832 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.448906402 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.905936269 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373254009 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.023418803 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.699243176 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.604319303 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.352309146 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.336339194 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.351561342 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349989336 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.066557767 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.318605524 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.367375522 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.88366066 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.363177795 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.367881349 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.355207428 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.566451375 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.560833387 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.349864265 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.572217686 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389547656 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.371609286 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.248091374 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.116819392 seconds)
  done (took 1657.031354096 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.378632295 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.373510049 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.3673883 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.431627975 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.417308955 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.363668188 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.389433785 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.446284035 seconds)
  done (took 52.429039552 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.351782232 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.51394026 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.382823749 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.355691568 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.369470241 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.363198752 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.821537646 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.382769744 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.361442228 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.361878981 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.363879889 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.367629601 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.005832491 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.386263182 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.356599737 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.339540132 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.370239986 seconds)
  done (took 65.722458712 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.375637489 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.681977947 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.168218969 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.398354886 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.376712772 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.361175235 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.901345231 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.371138839 seconds)
  done (took 58.899809365 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.364341944 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.363726499 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.365351678 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.364681661 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.365506595 seconds)
  done (took 8.087503658 seconds)
done (took 2057.786000961 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.356064069 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.358764691 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.356867874 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.359487047 seconds)
  done (took 6.693949981 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.333225176 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.071378497 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.340659221 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.355606364 seconds)
  done (took 18.363755707 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.366751069 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.386837176 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.036000601 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.97217601 seconds)
  done (took 5.272954234 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.105194391 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.11961059 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.100046413 seconds)
  done (took 7.589844391 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.352194786 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.360407029 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.362383267 seconds)
  done (took 20.340454117 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.639887516 seconds)
  done (took 2.906807475 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.50272226 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.551349845 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.672423054 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.678244934 seconds)
  done (took 7.670518701 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.744001121 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.729199533 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.547292994 seconds)
  done (took 6.285768861 seconds)
done (took 89.141401371 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.118840953 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.596537251 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.559169435 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.090816818 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.583241752 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.558061249 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.780084224 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.060713147 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.66720731 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.598193324 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.093274282 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.583094008 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.516669077 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.599811631 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.511615245 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.596488499 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.584519906 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.155798945 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.811684787 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.973818888 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.78875655 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.729008324 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.92594656 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.815076068 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.592876791 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.512037868 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.313015354 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.598387175 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.983070201 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.39926874 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.51868779 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.151596766 seconds)
  done (took 194.6338543 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.357216445 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.356202114 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.358165132 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.373069958 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.364128384 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.366133859 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.373657072 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.387016264 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.361538417 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.367440821 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.36057355 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.387422955 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.358912814 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.374811859 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.360567183 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.374998717 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.359605858 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.365103142 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.373530781 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.376065 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.35919708 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.358503318 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.373969165 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.357717803 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.364773751 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.375397308 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.35854342 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.359655823 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.375293495 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.372994441 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.36590882 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.378397522 seconds)
  done (took 205.024174792 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.359099744 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.358570048 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.358942116 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.368704054 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.362302182 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.36867139 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.35927023 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.377984887 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.359597098 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.383888138 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.371242144 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.360134115 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.36074508 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.35943771 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.375124604 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.362640278 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.359826047 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.384892978 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.359770588 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.360017164 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.359462275 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.387776707 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.37052506 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.359351675 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.393014786 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.361056647 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.375938516 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.361344048 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.361279369 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.362057645 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.369075989 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.383636879 seconds)
  done (took 205.026790021 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.563964189 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.36808653 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.368316412 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.323719655 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.36906803 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.368017487 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.365499909 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.557805035 seconds)
  done (took 14.556011433 seconds)
done (took 620.506602389 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.605283628 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.313733921 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.566070824 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.396658599 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.121825138 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.406047788 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.388868966 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.55661666 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.283824442 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.562082556 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.575473313 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.404569544 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.714303133 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.388156281 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.638760953 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.486557323 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.27763869 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.404326637 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.696116322 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.880680656 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.645177569 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.817227364 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.573384981 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.281858992 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.734137276 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.815228416 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.075117222 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.26789992 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.405175062 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.706313472 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.990556383 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.334917453 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.430406963 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.448282991 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.503201153 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.485944813 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.300823581 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.44599144 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.588414431 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.589568096 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.894897024 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.10331645 seconds)
  done (took 92.378173712 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.352971049 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.35373693 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.352468621 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.352816097 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.354478556 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.353031999 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.351875852 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.353703532 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.352984435 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.353434636 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.353193157 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.354561853 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.352302232 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.355260584 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.353667284 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.353277402 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.354005405 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.356754013 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.353932998 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.3533504 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.353558497 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.354021652 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.35394777 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.352908196 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.354188237 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.35479493 seconds)
  done (took 36.471460613 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.372386493 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.616131116 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.783186094 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.380530805 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.373130779 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.378802594 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.451510657 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.374892315 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.377540757 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.37817345 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.524797798 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.376579803 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.41037797 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.814701383 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.378644317 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.375517647 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.37408412 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.374294483 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.627376516 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.384903931 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.473500907 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.383182719 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.453296186 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.390852096 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.402227568 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.378768017 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.381792789 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.961087313 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.403431305 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.528668353 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.162283282 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.456751115 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.919806104 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.835937218 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.169833957 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.384653574 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.377007499 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.532688661 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.384822923 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.37653206 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.453439527 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.384769455 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.795276969 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.045151502 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.394160795 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.377282049 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.979007481 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.558415786 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.625206075 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.393785498 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.823510189 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.389391849 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.378934858 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.379408439 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.617391327 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.387571197 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.377193813 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.984830399 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.402093528 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.454142829 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.386448467 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.377136678 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.638589103 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.378436522 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.622023703 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.379642193 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.386463729 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.396896288 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.800005996 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.384412047 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.071731709 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.394529715 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.37928661 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.529844319 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.630882798 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.013591278 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.403162479 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.643573198 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.934017467 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.479013499 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.38559122 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.949078303 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.483700105 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.390027756 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.381046023 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.381560904 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.379283203 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.423874967 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.456558663 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.020265961 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.090088963 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.014475 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.476274123 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.395772454 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.382048702 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.985134265 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.397703654 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.379565309 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.801044911 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.079197356 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.397667737 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.388262772 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.071637984 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.398808013 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.45813699 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.393205439 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.812626386 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.388726747 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.425310059 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.380162826 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.387392621 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.402871465 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.457125124 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.392313192 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.381133028 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.048294142 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.564160744 seconds)
  done (took 182.195578835 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.386821294 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.37545849 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.374505272 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.375742506 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.375789852 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.382935171 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.374800003 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.376464027 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.381515964 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.374776342 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.376472674 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.377284098 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.376784398 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.389743037 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.386785335 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.383410798 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.987272014 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.3776066 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.377419939 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.392289378 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.172527262 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.383782747 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.378508825 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.376152107 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.378407174 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.376116231 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.380446778 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.380390741 seconds)
  done (took 153.315850756 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.383693758 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.94452293 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.408671021 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.513453682 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.408937257 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.38103569 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.510798162 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.448440431 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.408906948 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.381365655 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.380457711 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.678675828 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.384465793 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.888416439 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.570991348 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.536521566 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.892507242 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.401294855 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.380315762 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.381232158 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.514628304 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.391479331 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.685324957 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.955132721 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.408883115 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.945470349 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.376139662 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.384991132 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.383547291 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.937035341 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.398152914 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.680725496 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.460737595 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.451633117 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.963817632 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.913970731 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.913137586 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.530701003 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.39338217 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.381502735 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.383820248 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.366429897 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.940623664 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.404089901 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.385909487 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.926819208 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.40314826 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.385360085 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.391443111 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.383608287 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.444263157 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.469300798 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.713218991 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.961568849 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.485726841 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.40560384 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.516164892 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.774622698 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.387295784 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.89896788 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.376139276 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.954065153 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.409841395 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.368232285 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.387788962 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.39175133 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.534210102 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.524707905 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.90492948 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.408303868 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.901653356 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.558922758 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.39349968 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.385919812 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.3881435 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.945895107 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.910724637 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.550464191 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.527887585 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.583869575 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.378477509 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.387425679 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.371778921 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.464632238 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.394657226 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.955385579 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.91801661 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.404326567 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.388999035 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.388578923 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.38898938 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.560351266 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.979368245 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.49075798 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.889425372 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.709287113 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.701577991 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.396698182 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.444892414 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.410853545 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.694519377 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.398826794 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.444917712 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.82301964 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.694612295 seconds)
  done (took 165.160537673 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.639597246 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.560292717 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.494863467 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.543781776 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.997948744 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.96049935 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.67407536 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.540263461 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.505862168 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.65032474 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.522112668 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.477722368 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.60504879 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.473984608 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.11582136 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.475441669 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.495392758 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.537168281 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.545603193 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.392395977 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.063336014 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.681573598 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.587336598 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.271461827 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.482020914 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.153864498 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.955264295 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.969488732 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.576512287 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.661177618 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.928948962 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.491576072 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.367980283 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.085997765 seconds)
  done (took 66.7777299 seconds)
done (took 697.571556313 seconds)
SAVING RESULT...
DONE!
