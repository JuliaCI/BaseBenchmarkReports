cset: moving following pidspec: 16498
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.398031901 seconds)
loading group "string"... done (took 0.506880865 seconds)
loading group "linalg"... done (took 8.745293397 seconds)
loading group "parallel"... done (took 0.172754953 seconds)
loading group "find"... done (took 1.227037066 seconds)
loading group "tuple"... done (took 1.980614479 seconds)
loading group "dates"... done (took 1.461227942 seconds)
loading group "micro"... done (took 0.205422953 seconds)
loading group "io"... done (took 0.536088401 seconds)
loading group "scalar"... done (took 51.29148829 seconds)
loading group "sparse"... done (took 13.449479318 seconds)
loading group "broadcast"... done (took 1.263104906 seconds)
loading group "union"... done (took 9.665545555 seconds)
loading group "simd"... done (took 3.290606451 seconds)
loading group "random"... done (took 12.087386359 seconds)
loading group "problem"... done (took 2.194115423 seconds)
loading group "array"... done (took 24.654135201 seconds)
loading group "misc"... done (took 1.094228563 seconds)
loading group "sort"... done (took 3.682321677 seconds)
loading group "collection"... done (took 19.018792922 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.595628872 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127533917 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.20035587 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.337980338 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.227112264 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.165148943 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.141700873 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.238863233 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.524244308 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.202607836 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139477257 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.49659415 seconds)
done (took 6.120661192 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.246321099 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.240501442 seconds)
    (2/2) benchmarking "String"...
    done (took 0.161549895 seconds)
  done (took 1.07390382 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075141241 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.153374747 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.107440128 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094159244 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093781955 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.110325798 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093720418 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.111090144 seconds)
  done (took 1.43849138 seconds)
done (took 3.507927911 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.492330385 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.875888274 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.503579624 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.141109132 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.308859688 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.290578128 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.269419068 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.197469748 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.089770581 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.087288686 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.170352553 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.394474576 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.382072537 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.94053954 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.092121958 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.094828237 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.13250809 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.750308746 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079003612 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.110420963 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.509702531 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.1864038 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.099272311 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.121989667 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.1861916 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133796765 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.16077203 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102038336 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.657451948 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.129196991 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.177128736 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.096034782 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.158260334 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.187536918 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.195936199 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.109835409 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.677016717 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.199309873 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.088379178 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.09742736 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.659642395 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.114484714 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.178966001 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.10369945 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.089250636 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.18055786 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.091047391 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.07653531 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.110369996 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.087179003 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.164949572 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.432256177 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.102497496 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.169315622 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.091393222 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.682768481 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.095070901 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.2723317 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.124490991 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.095253376 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090633317 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.089391763 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.158940585 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.092839053 seconds)
  done (took 19.738927289 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.144816828 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.162819013 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07831333 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.157690994 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.120579335 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.079527056 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.10079172 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.079111858 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.110951999 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.196071143 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.137587756 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.149673512 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.090577419 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.089608121 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.126274259 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249136689 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.111699041 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.123300069 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090419166 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.092127905 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.141989631 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.097781167 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.091073279 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.109357321 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.17239046 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203956852 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10741856 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12136953 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.088893362 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095808282 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142968985 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145999099 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092009973 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.089255435 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.174070016 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122937498 seconds)
  done (took 5.18088399 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.167762032 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.214015197 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121565283 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.185689546 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.175241008 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143224226 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.149242116 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137783986 seconds)
    (9/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.118646706 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.283250304 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.2195096 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.165709131 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1298364 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104257163 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081363515 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083669746 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097872929 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.459009298 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.189805464 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.119028684 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.145201895 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084318206 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098520413 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.365185233 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103382106 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079557706 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083843085 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.080378989 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.178694679 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101054205 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.22901414 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.102223489 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.085062237 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081519602 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131760854 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.1265238 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140588362 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08241138 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077760221 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.226352239 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.106922712 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079913322 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.116914438 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135158291 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.116128721 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099007092 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.086294715 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.224339019 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096792122 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.101315304 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.083652884 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196380216 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.125012003 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.078247802 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.294355638 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.119470712 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081876312 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.07921263 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.808876812 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.114941441 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081814843 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.098228136 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083706302 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078559405 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.352098942 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084078234 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.277495125 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.096907264 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.141781768 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098275028 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084918293 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104350924 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087016003 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103421516 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.098534952 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081466994 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080151818 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.097482588 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083917555 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.136878961 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.134081953 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.087171242 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.099337542 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148472545 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.099667888 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.117500542 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110859816 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.099085105 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.080373953 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128797965 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083651096 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081307427 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.168927343 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084581555 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.132694004 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084257686 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145316304 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083701703 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.248145909 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082923962 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123275255 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101583238 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1279666 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.104125646 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081237416 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103476287 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.080589307 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080549999 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161316059 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081516611 seconds)
    (111/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.084134319 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080514956 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.103714908 seconds)
    (114/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08220973 seconds)
  done (took 27.972298854 seconds)
done (took 53.564125923 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.446960366 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.084981062 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.084411893 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.100636921 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081718624 seconds)
  done (took 1.548847533 seconds)
done (took 2.279039459 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.31425235 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.185264247 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100856486 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.183796858 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084299543 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.191030156 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.17692512 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.092520009 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.20122011 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.082371419 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.180718469 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082303697 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.100820895 seconds)
  done (took 2.72600868 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.10192864 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10971712 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.104056337 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.121033474 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086136639 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101514766 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120544917 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.112824216 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102543661 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112632781 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086638217 seconds)
  done (took 1.885685762 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097020195 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105091641 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099102585 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117596012 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086311688 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099277853 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117130007 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10989555 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099172374 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.11319519 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087517188 seconds)
  done (took 1.863375351 seconds)
done (took 7.199361664 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.083605352 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.359388962 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.142878179 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.210074315 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.360340604 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.238972392 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.56722362 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.155261499 seconds)
  done (took 13.994672849 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.125312134 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.092626284 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.155374006 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.096143595 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.09065259 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.111166222 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.094357112 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.095004875 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.112438052 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.092920964 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.095743851 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.110576502 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.09595964 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.092982287 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.09142453 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.110166165 seconds)
  done (took 2.454600955 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.145438162 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.14278461 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.098043983 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.10137176 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.113391882 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.10033864 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10317171 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.11765262 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.096477765 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095991792 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.102699006 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.117293522 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.099062749 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.094504641 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.116398325 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.11934002 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.095178349 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.116298255 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.118020977 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.099157524 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.117381783 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097684908 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.115330706 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.100479501 seconds)
  done (took 3.43511636 seconds)
done (took 20.618120087 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.147088517 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.102137717 seconds)
  done (took 0.980938457 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.136752415 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.153822046 seconds)
  done (took 1.029809862 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.109744147 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.090931623 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137329297 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.104403615 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.092630932 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.108509427 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118223621 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.108254625 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.092875987 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.093606233 seconds)
  done (took 1.797612213 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.093102933 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097591683 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.123400523 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.137242925 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.099994835 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.112537097 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.096815684 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.095667031 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.11602972 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.0920785 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.09651411 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.126603589 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.096877823 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.126688406 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.097140362 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.097332642 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.118873618 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.096060308 seconds)
  done (took 2.662783971 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.089443735 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.091210952 seconds)
  done (took 0.92615487 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.092498051 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09002309 seconds)
    (3/7) benchmarking "month"...
    done (took 0.094011954 seconds)
    (4/7) benchmarking "year"...
    done (took 0.111608831 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.092542601 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.09055611 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.108635052 seconds)
  done (took 1.422952143 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.483525775 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.26314473 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.367584413 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.110454906 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.14655714 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.355737473 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.147117896 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.226399412 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104287799 seconds)
  done (took 2.986476 seconds)
done (took 12.547163936 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.088643562 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.216956143 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.629646123 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.111120288 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.090277808 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.161651858 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.287528575 seconds)
done (took 2.336473513 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.337064614 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.144176745 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083269218 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.092910869 seconds)
  done (took 1.400180617 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079317138 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099675575 seconds)
  done (took 0.931425911 seconds)
done (took 3.084025838 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088177369 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.088961958 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.089329316 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.106847887 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.090424992 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.090086324 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.089390552 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.123725764 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.089905914 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.089984284 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.110823814 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090612365 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.089144258 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110193444 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089824783 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.089527055 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088283615 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.108857398 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089623173 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.088976002 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106338058 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090783251 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.090420524 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.088797169 seconds)
  done (took 3.081427874 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.105234072 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.090959194 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.110462764 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.095904961 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.095006885 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.111111612 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.094244789 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.093175943 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.110776633 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.093191498 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093961384 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.093262543 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.10945449 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095130196 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090705183 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.111213027 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.095310847 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091301426 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108942924 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095195347 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.094850087 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108717811 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.09492226 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095755774 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.11243564 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094285604 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.093411614 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.109517402 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095290059 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095018623 seconds)
  done (took 3.732543602 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096901598 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.086298969 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089699214 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.115324514 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.087612277 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.091451547 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.104390642 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.08970141 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.091736153 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089253391 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.109739811 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090782023 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.087610813 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.108928048 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092505455 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.094233433 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.098277105 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.10566588 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.087990249 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.092804358 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.1110778 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.088820456 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.090770898 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.090253593 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.109188003 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.08972588 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.090489016 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.108006221 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09304402 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.091542597 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.093201344 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.110747104 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.091148957 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.10074278 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.111613289 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.09218037 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.096167722 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.105770639 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.093420354 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.08837772 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.087387885 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.108121249 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.089111188 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.097919996 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.107685201 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.092944474 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.089758959 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.091552098 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.108476624 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.094350837 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.088178236 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.104089137 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.094776573 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.092508833 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.09226384 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.105218563 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092678665 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.087512981 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.108342484 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.091796053 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.088477306 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.087620301 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.112622864 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.093729541 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.105586557 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.115087078 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.088653131 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.092897093 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.109762602 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.096719823 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.094094969 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.118470255 seconds)
  done (took 7.742655967 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.100214276 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.096325993 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.090267138 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.1115001 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093285277 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091588491 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113816172 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092940155 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092386512 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115115092 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092990552 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.093296899 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093135998 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109662103 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093200386 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.0928006 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.115529476 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092659741 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.092326471 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110607137 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094698485 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09666248 seconds)
  done (took 2.933846037 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.233100946 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096236884 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143077308 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.123136713 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108756999 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.122743914 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.096506756 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097546215 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113030312 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102735906 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101111841 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11471074 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110236688 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099094747 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.118049075 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102994488 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114334099 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104017017 seconds)
  done (took 2.863231742 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.100775009 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.094858918 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.129731023 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094792905 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.094580561 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.093332503 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.11816329 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112598785 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.092799543 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.113277874 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.1013639 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096899939 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.112479373 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095415114 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094641026 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.112518621 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.094771518 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094033958 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118490064 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100627264 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100012552 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11923443 seconds)
  done (took 3.048925439 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103045949 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.091173336 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.126993893 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096989972 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094465911 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.092598329 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.119157792 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.094810993 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.100531055 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.1130826 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095161378 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.093699494 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.127155983 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094874574 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.099644479 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112361094 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.096536792 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094678979 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110577823 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.09511558 seconds)
  done (took 2.815548853 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.166166498 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123218693 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.106260415 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116024978 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127608579 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110556526 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118291744 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.129340318 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111949043 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13932593 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111507589 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109987613 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13517007 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116410291 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.1102347 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136163496 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118500903 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.136355176 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112299753 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109404728 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.138663257 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.111916898 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13614426 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111503871 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.110400718 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128707657 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111773406 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116416146 seconds)
  done (took 4.177747047 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089719827 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090870187 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090338517 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.111923606 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.09373973 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.093393151 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.092098148 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.111478611 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093195803 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092120389 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.111102183 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.094484436 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.094821373 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.09174677 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.111642295 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.093700732 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092891864 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.109703497 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093217 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093105054 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.092169916 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111253406 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.094565557 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.093157714 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092820661 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.110641937 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093930021 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092136461 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110995585 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09302591 seconds)
  done (took 3.700760792 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.101990827 seconds)
    (2/2) benchmarking "in"...
    done (took 0.099383716 seconds)
  done (took 0.972222576 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.09751156 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103867463 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.09143368 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.113629746 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.101048629 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.093107474 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.120617668 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101140546 seconds)
  done (took 1.592719592 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.13879693 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.159441487 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.098416949 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.105516761 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.165091659 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.156116973 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.136027504 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.098652201 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.110567182 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.089235078 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.138122218 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.107252581 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.09612011 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092144507 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.114387918 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.100930084 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095079131 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.122965617 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.1013258 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.096327442 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117538628 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10094707 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093854678 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.123513296 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.08960756 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.095871231 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.117128865 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.106394141 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091103055 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.115748682 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.094118622 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093645557 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.115560518 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099333218 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.094588491 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.165623323 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.103787602 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09056718 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.115048949 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100304298 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.126983209 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.114285314 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.097457587 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092388723 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11680841 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099020813 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099415959 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.11336281 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.088527594 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.090945114 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.113194891 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091581137 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093852476 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113134254 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.097637127 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.102134159 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.114314878 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.093550931 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.091162025 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.08961806 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.112788473 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.092157067 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097847486 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.116622861 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.097501842 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.095277142 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113076046 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.096505484 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095899615 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.114295346 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.09588784 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111201469 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.115103035 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100500087 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100499283 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.11458048 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093106388 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100143646 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112459976 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.097185668 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099538471 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.142860518 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098849385 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091221231 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.110254894 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.103998782 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097656281 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.09727145 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.107047147 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.104849044 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.096668753 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.114891816 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.090202633 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.093911467 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.110276838 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099064375 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.089042426 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.114377028 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.095990861 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.100147324 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099152351 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112959243 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.099448056 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100112494 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.120474599 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.09527493 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.158128239 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092441548 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.091918609 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.117205311 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100607182 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.089521876 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.094864968 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.113907882 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093056094 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.090400306 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.118884604 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.096959574 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.096576516 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.118147647 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09879896 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.096435233 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.115855942 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.095130752 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.091952763 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.117791668 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103912211 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.09726401 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.096074038 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.116909415 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.097231623 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.095987613 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.117985675 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.093499001 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100293923 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111784882 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.095237132 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097363378 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.118801833 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.097641194 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.091787985 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.112847463 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.098331435 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.095289383 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.116687498 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.098475322 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.092642549 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.087506408 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.116117336 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.092401853 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.095194816 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.123036074 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.092871835 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.097459502 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.11176718 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104937528 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.093901641 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.120269264 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099303225 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.102134818 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.119844832 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.088333361 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.094193898 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098691273 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.117702099 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.093634927 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096890214 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.11606099 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.104930207 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.089495267 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.117405305 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.089047783 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.093989082 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.118536058 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098914381 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099431005 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.09108302 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.154359721 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108917213 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100276982 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.11562043 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.096678919 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.100058718 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.117627327 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100104434 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10038769 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.120627937 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.09483631 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.095456731 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.119880964 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.092812244 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.09852974 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11231889 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.099032357 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.089611824 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.096372505 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.108875764 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.102061271 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.097987586 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.120166157 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.102195742 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099820568 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.114193723 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105371174 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.093621697 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.118717138 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08955429 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.101225572 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.105883807 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.122008166 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102905403 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.097797114 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113790577 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097318866 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104124208 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.117903533 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.097664003 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.098219871 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.109034642 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.091581474 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.102048365 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098256947 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.112243099 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.097224397 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.097740711 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.117899715 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.095913301 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.090230831 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.12017681 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101729465 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.091354914 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.116736075 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.093905593 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.095175706 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.123575282 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.091109469 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.092932143 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.118737618 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.103437046 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.096812581 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.114877025 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.100757158 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.103943518 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.100957953 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.119845897 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095537742 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10415083 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.115771867 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.096887716 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.093498119 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.118401655 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.091355006 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.098779434 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.097436772 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.114915179 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.094343787 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100918448 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.12246235 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.103285674 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095692955 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.121171268 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103618126 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.104125517 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.114860418 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.104169888 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.092829218 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.110456086 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.093537911 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.089388448 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.09843119 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.11319642 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.102697325 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.097002886 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.115574248 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.101953941 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100284477 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.114905539 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103958122 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10867242 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.110934979 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.092551349 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095971673 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116833019 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.106153258 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.094690204 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.118649125 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099610174 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.100157017 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.118739021 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.094574833 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.098475744 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.105211979 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.114496181 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105532846 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.103279151 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.124099979 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.095297232 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.102233085 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.114975709 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103281516 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.090872872 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.116360475 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.097906054 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091987881 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.110289766 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.091282493 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.088594644 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.104746741 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.089448837 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.098180564 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.09059979 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.117612497 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.102252373 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.089777815 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.110411343 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089840091 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.099562775 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.111070545 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.103408512 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095841555 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.105422319 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087906646 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.098154233 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091369319 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.117622226 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.088197146 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.09577371 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.11999957 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098118287 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.095403961 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.124658434 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108990484 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.103263823 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.122855828 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.093537977 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.097168641 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121573686 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.098589355 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.100710745 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.100201945 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.112885736 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102261118 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.103436279 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.118515478 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.098482637 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.092396355 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.119323739 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.105008046 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.09779396 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.096014309 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.116567771 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09686476 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088963209 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.120413093 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.102083131 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.095425429 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.12202325 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098795225 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.096540915 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.108383646 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.099059989 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.095701826 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.087738725 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.106476237 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.091448257 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101902012 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.110365928 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.102898441 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101784852 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.112597758 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.096046492 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100492329 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.109162431 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096290765 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098138975 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.089723215 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.12200175 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.094983856 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.090857559 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.11928866 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.10424696 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.092685185 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.117115146 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.099449883 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103772986 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.113246516 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.09810235 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093704256 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.117457516 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.096658819 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.097525152 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.097145326 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.117640334 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086950131 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.099182013 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115291946 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.095390498 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.090182021 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109493899 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.089706295 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.092773759 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.117578014 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.091439732 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101482914 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.0993101 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.111990126 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091665802 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.100706191 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115729221 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105101354 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.091984298 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.118582136 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.094542033 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.098532624 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.116307253 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103509863 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.093364127 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.112381198 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105799861 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.103958713 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102785713 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.123035047 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.107325031 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.093351161 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.114066093 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.101957143 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.095657085 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.128545847 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.104373603 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.096228805 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.116969187 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.10267857 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.100349202 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102829061 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.11167681 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.092207621 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.094189204 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116394046 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.096183149 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.087671491 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.116075713 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.092661581 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093923525 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.113108881 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.089443425 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.091652222 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.118505788 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.092529932 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.089025174 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.108459686 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100396729 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.092318397 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.089223272 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.107171783 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101664056 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.098501152 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.124708538 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.095994057 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.096594981 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.113780455 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098607313 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.104075149 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.117785703 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.102189438 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.098223405 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.124575794 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.106772281 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.093557409 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.114882056 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110543771 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10406011 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.117965595 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099157875 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.097127993 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101171335 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.123449933 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.099366481 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.086982032 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.107465938 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.092591845 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.086678546 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.114400204 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100021935 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.091826307 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.109400388 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09928912 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097207805 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.095049301 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.114432042 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.087924644 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100425711 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.109523465 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.098072222 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.087747484 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.105857409 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.096846594 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099124311 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091873682 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.116274647 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.096820008 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.094328155 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.107824245 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.095480866 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.100024955 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.122045283 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.103177425 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097467117 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.115579251 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.103580583 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111800416 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.101240471 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.120740084 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.108964065 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.104664946 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.120134623 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.099905428 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.102344558 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.124897896 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.103552346 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103207038 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.116005748 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.099256366 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104029085 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.125422863 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111434816 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098469475 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.113664784 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.104678863 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.095413842 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.091348369 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.120067917 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104354988 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104392455 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.119843927 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.099785374 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10876412 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.127017373 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102913224 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.099432243 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.119006367 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.106635032 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099200808 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.125396023 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.099982253 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.107604127 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.1279913 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107884237 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.109690821 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.092404864 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.12559978 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.102682494 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.106890032 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.121565788 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.09631044 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.095400938 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.12519633 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.110281773 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.106979544 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.124231956 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.104026216 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.106721266 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.100949006 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.122214899 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.100228155 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.106624557 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.128093721 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.103861862 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.102904118 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.120156385 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104565778 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.103551759 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.126862773 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.10821783 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.103055954 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111785565 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.127207174 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.100460474 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.098329812 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.121323792 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.101949192 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.096890596 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.122407838 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.098835237 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.090529526 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.123635183 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.106457186 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094896571 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099911437 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.124598399 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.094794033 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.097245609 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.125508595 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.106034526 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099937717 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.120452354 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101286853 seconds)
  done (took 63.111116078 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143271183 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103203938 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.122044446 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101603536 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115824899 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122550532 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102527499 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105884441 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.12537986 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112343106 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.102650657 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120940243 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116784489 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122231363 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.13689073 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111589925 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122240223 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.1055462 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.103715257 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102914634 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.13598242 seconds)
  done (took 3.26052235 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.115168252 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.108891959 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.129595736 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.1157799 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107597884 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.134907946 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113091675 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.134561951 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113286352 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103936397 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.133289411 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110456323 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.125637232 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.106034346 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10372969 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.124548032 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11206094 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103418428 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.132421649 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110357694 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.124803904 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.108807217 seconds)
  done (took 3.397044838 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.127501513 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.105238116 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.097234836 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.120887212 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.103110739 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.098586062 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.119563519 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099288889 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.105612729 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.090834474 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.107921306 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093435099 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.099139538 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.123402283 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.098146457 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.10196554 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.132025262 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.107225123 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107253193 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.101345849 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.113744484 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.104630184 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.1043619 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.113390394 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.106704961 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.109620606 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.101995063 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.121511798 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.088590184 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.100214261 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.122143648 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.097242984 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.093915487 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.092480953 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.11324777 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.109062569 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.107677808 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.122693365 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.098863372 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089736983 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.098052386 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.121395037 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089033705 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.095893565 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.115726908 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.091447715 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.099827798 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.095990106 seconds)
  done (took 5.883845558 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.126356091 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161204982 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.100340982 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.133431846 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.132459384 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.105546973 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.099844536 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.136159252 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.098540092 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.121899598 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.112610007 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.110438851 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.12396999 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105941941 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.100286384 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.124442758 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102692319 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.098745143 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.125560446 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101321427 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.104351637 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.123461978 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11124798 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.129705355 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.341025508 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100883041 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.120049242 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107322869 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.109381807 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.126077501 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.105293612 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.103930521 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.134381647 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.105162078 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.100026094 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.124391538 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.112622854 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.120554614 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.103154644 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099046172 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.101547004 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.123566673 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.102520236 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.130054178 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102403296 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.102718772 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.121633353 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100608379 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.109266624 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.121543446 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.109002164 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.110106611 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.124936552 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102749735 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.103217461 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.130846181 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.100593506 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.098873217 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.126268462 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.110406134 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.098171936 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.12596285 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.109867786 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.120529721 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.107084127 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.110260045 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.122011073 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.103687114 seconds)
  done (took 8.897355568 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.132480931 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.104962211 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132598926 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112602164 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103446551 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.123824439 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104168502 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.102433 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.127764737 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110462405 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123048529 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.194006998 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.122741659 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.108977286 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104212573 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.125337249 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.103935685 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103857296 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.127949888 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10730902 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.103064623 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.13345178 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105792534 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.131150248 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.114947644 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.100654473 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.124204059 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104805406 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111143718 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.125610437 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.115304175 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.123644473 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.105316341 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111730668 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.135111302 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.105355191 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.09806158 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127152633 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.104251477 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.103746221 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.12216319 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113120619 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102847404 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.121801468 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104535748 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.104373481 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.134888122 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.114880273 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.12874813 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110166972 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.103422501 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.132825049 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105120083 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.124240466 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113204317 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.117623281 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133031402 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112232204 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123860221 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113766551 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111439436 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.140575996 seconds)
  done (took 8.085133386 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099061837 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097725932 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.096562631 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.117399374 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.097486503 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097570614 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.097514286 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.118039588 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098888264 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.0978663 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117969838 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098580063 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097454754 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09702548 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.117936055 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098477177 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098299453 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.11766166 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099083495 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097828656 seconds)
  done (took 2.893873327 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.108266353 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.114511242 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.119829521 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106786182 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101355304 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.125979508 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10026283 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100535575 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09924605 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.121744749 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108909449 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.127253661 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101808506 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106097603 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.127955915 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106758961 seconds)
  done (took 2.617745134 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.119325175 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116628742 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.184935296 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.102201686 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.12175041 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.10851498 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.10040466 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101172599 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.121288122 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.105192222 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.103438006 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.125143479 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102544029 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.100739923 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.122084962 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105012069 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.098926594 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.125157305 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103066501 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.160587668 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.125436466 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103831558 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.100394568 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.124708081 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.101898808 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.103491502 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.129236232 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.100800517 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.101717899 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.122081984 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.102148723 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.106273319 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.120830152 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106252696 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.099760536 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.120570493 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101034991 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.100556267 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.123497812 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.101141616 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.102667589 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.100560723 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.121550628 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.103004608 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.098280225 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.123304813 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099962553 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.104802143 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.122002674 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103682157 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.100263974 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.127661269 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.10577881 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.108225824 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.127117599 seconds)
  done (took 7.014084854 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111675021 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101276738 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.132046717 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100667847 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.100868007 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.101235493 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.12313373 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.102468114 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101500403 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.119594453 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10239092 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.101747526 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.122632734 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102394163 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.101005957 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101213708 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.119016215 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.101589437 seconds)
  done (took 2.788263753 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.105516472 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100856033 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.10387275 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.123348471 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.100563867 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099981553 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.120064008 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.10046398 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099537692 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.09964459 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.123297875 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.100312631 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099223919 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.120721505 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102181613 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09995609 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.121543477 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100569644 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100252483 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097949326 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.121829309 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100227057 seconds)
  done (took 3.189576529 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.111849223 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.180124254 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.106209496 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.189596146 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.096929576 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.095093866 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.128867202 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.097703793 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.111401072 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.117358087 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.096346339 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.095383357 seconds)
  done (took 2.273952831 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126648739 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136198334 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.122102253 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102216718 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109400005 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126051612 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105417089 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104288865 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13349758 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117042224 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125512855 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113931802 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112254719 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133780799 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110297435 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129233531 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107238397 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105076448 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121922262 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120548532 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10559553 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133470048 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105231731 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104045382 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12688669 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113410742 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134417579 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116658749 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104710693 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1343395 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10933191 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104399101 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134963643 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116637424 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123593056 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11298718 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104437618 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141473266 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110298752 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132917782 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102611258 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10972193 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134471377 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1116783 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132727 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106282215 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110066801 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126089833 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10777402 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125567744 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132154464 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113004285 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13144579 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113797746 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113563682 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147745711 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117732109 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134833352 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109856537 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138651656 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114170148 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109682473 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135094122 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116320866 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131940804 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11460181 seconds)
  done (took 8.727008899 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140361989 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101666812 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126520382 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116693389 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13437598 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108709978 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108830966 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128060237 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107031039 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101885043 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169067684 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106319848 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1125684 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134556268 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10531685 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126547649 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106786071 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112405591 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123772266 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128132077 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125957882 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115883389 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11422817 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134369455 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117277423 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130555496 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106894278 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10610728 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126715804 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106240511 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110430042 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127783884 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114345835 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102776638 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136699163 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106838922 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105673984 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133292798 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105419193 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130298987 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114786274 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120298408 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127772543 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106809945 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138285729 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107108142 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106509369 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124336976 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107540979 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102412907 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138510565 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117139164 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138267565 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115701446 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106042436 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128635755 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106356628 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105332987 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127886207 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110913687 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112362222 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128897759 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127730275 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127848193 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107160989 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114080727 seconds)
  done (took 8.683061697 seconds)
done (took 168.237342891 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.145592694 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.182795505 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.142281488 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.176371787 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.09277032 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.125886384 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.145841229 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.144291989 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.091260818 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.114673784 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.092698078 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.093916661 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.180498371 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.092940847 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.091754097 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.095311404 seconds)
  done (took 2.859362818 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.190450155 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.30259012 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105980942 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.118509156 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098935355 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.095661673 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.117063235 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.098879292 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095904353 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.125406067 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.09813841 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.092773075 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.124291643 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.093848138 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.096992714 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.09643322 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.125665588 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.096736088 seconds)
  done (took 3.036565539 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118378555 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.140331352 seconds)
  done (took 1.124475253 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.127165413 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.209543188 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.277366884 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.166459482 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.117509945 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.136376098 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.146832359 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130617348 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.185254308 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.131078193 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.109475194 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.094028358 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.144685884 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.102654762 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.134647988 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.096780889 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.124739742 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.131873972 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.111580582 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.098564394 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.140394961 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.102386254 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.1021176 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.132441878 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.176254052 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.132319445 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.101446871 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.100673974 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.121099811 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.111272411 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.10349358 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.136028171 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.109820789 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.174538575 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.099749292 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.172701905 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.103009507 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.120879828 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.110821925 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.096286235 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.12436394 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101670371 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.132661173 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.095776624 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.100488528 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.124576352 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.101417117 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.100179715 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.126807388 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.106283857 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.104416438 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.126353376 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.170536276 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.106927866 seconds)
  done (took 7.709911891 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.849795286 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.137611962 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097874781 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.996354241 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147385247 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112980701 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.849612343 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.142692474 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251416242 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.876731201 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115311751 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.109929827 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.253934105 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.256206004 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.254966972 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.372789175 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.68878555 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.13526242 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.127521715 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.160918497 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106529304 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14515504 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118677416 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.517383936 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.099464793 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09732796 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.127780679 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111886223 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.174326885 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099461222 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.123861433 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172281326 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.28934996 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203059882 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12107104 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098115479 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097878051 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.181815705 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265156817 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214329949 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.189763624 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096174943 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098047062 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128248593 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118379062 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095322049 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177322824 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.190107885 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.188477014 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103245329 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.110654424 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131465478 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.106281479 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.176130969 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.095634629 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.376030216 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.360664027 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098893222 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105198655 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.140162104 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265855863 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.099952 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.229231569 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.148110136 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.209865093 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098532235 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.841156294 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.182825029 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098118533 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.126787516 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107275663 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104494374 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129611492 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.164942051 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.501498624 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110719076 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.124833099 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098940111 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.228379192 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.099097231 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119611331 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.155416347 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122391138 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.107493583 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133789062 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11253457 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.185532791 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.246093129 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.133372164 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.10687506 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.125716704 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111873471 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.09984931 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.229227412 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222525287 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.17337601 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.228008592 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107019085 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.178339388 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.181885124 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10646972 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.186740371 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.10606475 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.136883753 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107305457 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217695899 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.155102781 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101043575 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10396898 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.131142281 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.13363449 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125693947 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.109353992 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.187834795 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.553145248 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.158421398 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.11875619 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103107756 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107587883 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.176821417 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126690784 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.256795718 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10899265 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.181359137 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.106523542 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.095593953 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.129699428 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.178000794 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111600652 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107917206 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128580225 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108426335 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.27833018 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.215618679 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110507614 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.247688282 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.197280835 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.105305013 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.190579713 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127830283 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.164536205 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131182368 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108012276 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09889207 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.827897652 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135524348 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106944801 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.126110931 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183789171 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120135454 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103860546 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100089169 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095510308 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.814280318 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125472417 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.097466832 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101011006 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129087451 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.108606018 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106851915 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127300815 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.176329691 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241104851 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111898775 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128959486 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100136204 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.174828064 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.102301879 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100077928 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.120933979 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.10131264 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107834991 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.125960368 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103264568 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.18834841 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.150012556 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.251162217 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.634128407 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.099954651 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.099831596 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.235900417 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121880454 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.320746305 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108089229 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.22979939 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.181286427 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097498036 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.378707176 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.162580395 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.208276962 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.102347721 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.187457845 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.096383491 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.1314704 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.153250645 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.123095669 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107180896 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.173034986 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.114359131 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.135848983 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.271907271 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100121162 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251019373 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.096706202 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.190247616 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101073571 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130620586 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.321984993 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098749726 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13927463 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.153525419 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.126090372 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.099850319 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.669617289 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.100247088 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133291546 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108603528 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.227246231 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.18229347 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.128751462 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110165611 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113493709 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.177442722 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.229247126 seconds)
  done (took 47.220065947 seconds)
done (took 62.810822352 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.29153888 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.252279618 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.300457434 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.207786801 seconds)
  done (took 2.009787813 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.257269573 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.168237779 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.227035969 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.095897064 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.235639252 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.09496217 seconds)
  done (took 1.972620418 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.481912832 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.361616138 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.300614899 seconds)
  done (took 2.037280259 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.251637436 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.237392156 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.326475185 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.410517434 seconds)
  done (took 2.232755552 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.258258603 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.123445649 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.123316872 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.203337805 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.223917733 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.207574221 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.126770537 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.175952545 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.126359587 seconds)
  done (took 2.507562144 seconds)
done (took 11.649500689 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.255559731 seconds)
    (2/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.343506322 seconds)
    (3/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.244858073 seconds)
    (4/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.256047985 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.21574776 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.221641301 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.19299497 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.132112648 seconds)
    (9/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.291066851 seconds)
    (10/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.176868578 seconds)
    (11/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.251987765 seconds)
    (12/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.108329809 seconds)
    (13/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.16388764 seconds)
    (14/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.171741344 seconds)
    (15/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.224171174 seconds)
    (16/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.219057465 seconds)
    (17/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.222788095 seconds)
    (18/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.131904759 seconds)
    (19/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.12722919 seconds)
    (20/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.168240631 seconds)
    (21/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.253323398 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.099230716 seconds)
    (23/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.268583551 seconds)
    (24/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.148021113 seconds)
    (25/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.211659054 seconds)
    (26/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.15255094 seconds)
    (27/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.109317449 seconds)
    (28/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.22209483 seconds)
    (29/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.152610645 seconds)
    (30/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.182710547 seconds)
    (31/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.144529739 seconds)
    (32/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.159845635 seconds)
    (33/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.124039273 seconds)
    (34/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.189671274 seconds)
    (35/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.205399638 seconds)
    (36/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.169626011 seconds)
    (37/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.137345507 seconds)
    (38/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.157844999 seconds)
    (39/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.13076611 seconds)
    (40/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.109346139 seconds)
    (41/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.169648983 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.124411415 seconds)
    (43/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.207447724 seconds)
    (44/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.211192298 seconds)
    (45/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.106747183 seconds)
    (46/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.191191781 seconds)
    (47/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.18708729 seconds)
    (48/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.073793515 seconds)
    (49/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.073798152 seconds)
    (50/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.272587305 seconds)
    (51/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.129822168 seconds)
    (52/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.190127517 seconds)
    (53/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.129525875 seconds)
    (54/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.074767873 seconds)
    (55/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.129103742 seconds)
    (56/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.149410567 seconds)
    (57/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.152763104 seconds)
    (58/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.098885633 seconds)
    (59/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.157756319 seconds)
    (60/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.277555652 seconds)
    (61/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.168143329 seconds)
    (62/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.106201244 seconds)
    (63/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.131819134 seconds)
    (64/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.140737191 seconds)
    (65/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.119351846 seconds)
    (66/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.099701474 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.102727852 seconds)
    (68/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.083330726 seconds)
    (69/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.099526524 seconds)
    (70/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.108243094 seconds)
    (71/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.20692705 seconds)
    (72/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.100186094 seconds)
    (73/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.09847235 seconds)
    (74/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.077922328 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.127182546 seconds)
    (76/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.194668403 seconds)
    (77/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.137185164 seconds)
    (78/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.141054913 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.124632083 seconds)
    (80/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.104593754 seconds)
    (81/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.107411901 seconds)
    (82/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.126864531 seconds)
    (83/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.12199603 seconds)
    (84/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.075596733 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.098867496 seconds)
    (86/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.195554967 seconds)
    (87/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.075809508 seconds)
    (88/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.083832139 seconds)
    (89/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.189926249 seconds)
    (90/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.076687045 seconds)
    (91/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.170521106 seconds)
    (92/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.158001451 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.097963765 seconds)
    (94/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.107961399 seconds)
    (95/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.07456319 seconds)
    (96/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.097924877 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.101458476 seconds)
    (98/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.113701873 seconds)
    (99/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.097145028 seconds)
    (100/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.100854795 seconds)
    (101/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.124830287 seconds)
    (102/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.082639852 seconds)
    (103/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.075349815 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.13293243 seconds)
    (105/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.162809932 seconds)
    (106/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.075012297 seconds)
    (107/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.15978583 seconds)
    (108/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.076234143 seconds)
    (109/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.134871212 seconds)
    (110/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.103441203 seconds)
    (111/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.100369827 seconds)
    (112/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.077993508 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.100078801 seconds)
    (114/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.137246564 seconds)
    (115/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.211361001 seconds)
    (116/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.077153157 seconds)
    (117/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.102931215 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.123815197 seconds)
    (119/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.077409012 seconds)
    (120/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.082534816 seconds)
    (121/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.106625733 seconds)
    (122/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.128257232 seconds)
    (123/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.075091557 seconds)
    (124/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.075026131 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.100385473 seconds)
    (126/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.122964695 seconds)
    (127/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.075604161 seconds)
    (128/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.085487379 seconds)
    (129/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.106727302 seconds)
    (130/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.192979377 seconds)
    (131/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.084401215 seconds)
    (132/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.101345649 seconds)
    (133/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.074636396 seconds)
    (134/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.164414202 seconds)
    (135/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.159354126 seconds)
    (136/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.119522932 seconds)
    (137/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.146042749 seconds)
    (138/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.077393342 seconds)
    (139/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.07527305 seconds)
    (140/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.108751298 seconds)
    (141/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.123464815 seconds)
    (142/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.082940937 seconds)
    (143/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.075519508 seconds)
    (144/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.077550285 seconds)
    (145/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.124653164 seconds)
    (146/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.111470913 seconds)
    (147/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.109524552 seconds)
    (148/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.077701893 seconds)
    (149/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.101088215 seconds)
    (150/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.112674558 seconds)
    (151/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.114739684 seconds)
    (152/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.122314935 seconds)
    (153/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.076847054 seconds)
    (154/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.098913134 seconds)
    (155/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.077705947 seconds)
    (156/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.130639018 seconds)
    (157/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.103175978 seconds)
    (158/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.099046423 seconds)
    (159/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.097728153 seconds)
    (160/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.099321939 seconds)
    (161/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.107912927 seconds)
    (162/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.101022693 seconds)
    (163/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.077060816 seconds)
    (164/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.09947589 seconds)
    (165/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.076213374 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.121816868 seconds)
    (167/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.075327226 seconds)
    (168/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.076640559 seconds)
    (169/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.10188355 seconds)
    (170/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.083517002 seconds)
    (171/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.126620466 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.100435813 seconds)
    (173/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.102801327 seconds)
    (174/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.077584929 seconds)
    (175/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.077227474 seconds)
    (176/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.109001367 seconds)
    (177/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.098278416 seconds)
    (178/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.170243056 seconds)
    (179/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.075441484 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.118037958 seconds)
    (181/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.133754298 seconds)
    (182/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.076660011 seconds)
    (183/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.078753736 seconds)
    (184/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.077838961 seconds)
    (185/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.130790487 seconds)
    (186/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.102025021 seconds)
    (187/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.075932767 seconds)
    (188/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.075962266 seconds)
    (189/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.076489617 seconds)
    (190/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.134936787 seconds)
    (191/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.076664819 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.100558387 seconds)
  done (took 25.943018678 seconds)
done (took 26.847744851 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.20816439 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.12613426 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.10843798 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.108327039 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.197213489 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.115580784 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.123334806 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.13432376 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.118110924 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.10786974 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.122343339 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.119238425 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.106985569 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.200552257 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.109953007 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.124656322 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.099182265 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117720549 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.146922394 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.124199609 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.196071279 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10175437 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.117695262 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.122873228 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.173812801 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.123317537 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.108173964 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.109234983 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.11928224 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.134879224 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.108793187 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.099386858 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.150016257 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.122863939 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099560255 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.134355973 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100560948 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.083761063 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.131744833 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111347171 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.121436282 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.10940772 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.13271 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.100675347 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.108590155 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.134753409 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100253785 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.111194431 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.12276856 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.110090783 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101943227 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.149143966 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.108720828 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.098494525 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.122285247 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102076359 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.118614042 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098917515 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.146220741 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10121715 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.099918122 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.124724717 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.112193069 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100222098 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.132180331 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101683377 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.109845837 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.13424977 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109424842 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102714902 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099372448 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.132800152 seconds)
done (took 9.668198671 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.105675621 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145000784 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.196413647 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.206141613 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.128031984 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.114041295 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.139515295 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.123093316 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.111130039 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143808525 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.136799183 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.155983729 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.177773227 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.140003228 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.114317391 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.110875919 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.135645696 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.108503671 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.203446486 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.124286176 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.123059046 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.141003569 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.12693718 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.139846047 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.105234776 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.125135103 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.131532932 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.113043164 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.104174124 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.146285845 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.124866199 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.103447838 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.13193058 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123836814 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.122534724 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.13890408 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.116373807 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.111822373 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.129437539 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.105221705 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.112151581 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.143679251 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105779617 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.113697957 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.137848628 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.118782359 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.111537809 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.142258631 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.105698537 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.111557493 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.129641061 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.131181696 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.115525844 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.14614424 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.117374169 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.117247719 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.143250058 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.117362339 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.106947505 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.142296289 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.104607634 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.104035441 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.131249838 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.126021567 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.106920569 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.143282952 seconds)
  done (took 9.407737804 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.123665468 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.133142253 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.139649198 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.116991885 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.108896574 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.122757367 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.098999856 seconds)
  done (took 1.791589101 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.101086861 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.180936687 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.206719252 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.205964882 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.17651513 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.214013754 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.146684512 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.10083693 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13398323 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.135314462 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.181753774 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.234047341 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.110185516 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.14059692 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.182094185 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.124241683 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.184465041 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.126014115 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.114307302 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.208731412 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117084041 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.129706607 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.138718154 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.100976565 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.202625266 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.101302086 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.25909258 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117971947 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.133675346 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.114895992 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113768763 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.203813721 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.177154055 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.14089991 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.107791996 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.207736478 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.175677978 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.140225423 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.190655691 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.131713627 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.175311887 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.140520227 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116357118 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.114441586 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.141193461 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.166038124 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.145961269 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115714406 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.112984635 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.212596418 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.109886464 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.205372916 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.111583956 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.140870895 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.112161494 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115696802 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.14863701 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115210214 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.211552172 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11775763 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.205234197 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.179910959 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.204829262 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.206859109 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124354735 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.206471921 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.174127909 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.139091158 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.111223738 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.114562374 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.208127062 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.11214575 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.141535034 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.16990387 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.142095538 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.181515802 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.208277413 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.111361122 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.139085155 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.104277452 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.11242385 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.125351254 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.17344635 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.138860817 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113838521 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117766241 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.13767809 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.115533607 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.105418349 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.14872847 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.114198653 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.112067622 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.144810516 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114900901 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115288277 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.21083194 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.135575106 seconds)
  done (took 15.419951036 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.1056256 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.102338939 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.106916125 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.127742283 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.102793266 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.102996214 seconds)
  done (took 1.614584846 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.141574226 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.115869923 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.148623378 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.116183254 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.160566896 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.211587495 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.216232048 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.109396557 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.155922437 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.124843596 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.213537653 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.189786651 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.212818399 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.117777177 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.216157458 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.117008869 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.21620121 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.113734367 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.149070297 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113386967 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.114063318 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.14448926 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114016493 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.204452833 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.116997821 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.117313094 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.136148643 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.125622609 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.121984965 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.137067674 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.11852295 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.115451793 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.134352813 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.110165557 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.217549946 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.109150462 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.137056364 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.11943614 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.117304034 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.141184047 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.19129781 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.137980894 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.122213087 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.116964166 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.136669545 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.109547491 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.118473891 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.134981335 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.192997895 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.143903992 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118626215 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.11558628 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.144613472 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.118694965 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.133444779 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111353254 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.117670771 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.217993855 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.118872505 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.133380138 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.116925559 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.116940107 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.136385072 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121090005 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.116758699 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.144072768 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.109386191 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.115534477 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.13854857 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.11820649 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119078008 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.143058075 seconds)
  done (took 11.016567954 seconds)
done (took 40.193131007 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.543113148 seconds)
  done (took 2.505398949 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.90407332 seconds)
  done (took 1.866306476 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.928451894 seconds)
  done (took 18.927318309 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.520520726 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.589741465 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.019797601 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.147499518 seconds)
  done (took 3.240792034 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.054942302 seconds)
  done (took 2.043008656 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.294716792 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.26547509 seconds)
  done (took 1.5297785 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.735213842 seconds)
  done (took 1.722802937 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.491228364 seconds)
  done (took 2.469345094 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.348802215 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174786085 seconds)
  done (took 1.509637846 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.620687758 seconds)
  done (took 1.612594742 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.652834102 seconds)
  done (took 20.644098604 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.248503989 seconds)
  done (took 1.24005737 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.291638894 seconds)
  done (took 1.28970539 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.613034346 seconds)
  done (took 4.610582144 seconds)
done (took 66.190786985 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.116295304 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.115110046 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.113846846 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.137736779 seconds)
  done (took 1.468059724 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.122397472 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.116373589 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.139017426 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.141575622 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.121278705 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.115315107 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.141017653 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.117678593 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.114181232 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.143017451 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.116346488 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.114344722 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.143037672 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.114390735 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.112640951 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.143637682 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.119510141 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.116213718 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.142342628 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.118141358 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.115909106 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.142383222 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.118636907 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.117838177 seconds)
  done (took 4.002550264 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.112275512 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.106177361 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.107892303 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.130799418 seconds)
  done (took 1.453380298 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.124201009 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.125793591 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.150332303 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124028415 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.126642057 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.151709098 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.115004006 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.111640405 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.140233792 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124670725 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.130665302 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.153748717 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.126299376 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.117475219 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.152341817 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.110164392 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.115203678 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.152075769 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.122947093 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.123405468 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.141713392 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.122116375 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.119646505 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.148994538 seconds)
  done (took 4.124574145 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.188338783 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.126305966 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.170823051 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.158739063 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.175066903 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.114235876 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.142203331 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.147489755 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.122160907 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.115829657 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.143635315 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.159412665 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.146200346 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.117314125 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115856904 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.146787297 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.127442045 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.120313514 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.186880607 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.118502931 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.147367293 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.128009599 seconds)
  done (took 4.116203553 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.118527788 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.107105327 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.101998454 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.133795571 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.117994627 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.108736173 seconds)
  done (took 1.691426445 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.108318249 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.100989168 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.100914332 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.126652521 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.104581765 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.100520938 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.099988018 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.127041104 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.100382404 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.100603848 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.12637468 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.10059643 seconds)
  done (took 2.30124636 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.324892395 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.105804928 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.133040412 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.109186163 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.111480965 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.103288763 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.144249088 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.105311409 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.265704639 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.100509665 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.142572066 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.191843348 seconds)
  done (took 2.839948309 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197001766 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143287739 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.309532738 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.360328667 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162130463 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185695795 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.262132931 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186450887 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.173449106 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160008222 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207770196 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156617227 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175479369 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182981838 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162605527 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.161515696 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192764753 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201811264 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165947585 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23603615 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15354726 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198508605 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184678681 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174279706 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135242735 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183990325 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.115988324 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123939136 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188015021 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185329723 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165566993 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1725055 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13695206 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211871636 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25235816 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168473206 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267338118 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156030078 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.168282672 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.212065332 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253475389 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137101754 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210392668 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174020397 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126818089 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211163258 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148705716 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.206845957 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.130230152 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165018522 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176993628 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20147718 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.169937555 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160016843 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299041161 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130214967 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.163987679 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163747215 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209531915 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195094422 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200465008 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.119791395 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.2017468 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213115099 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234156846 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.138417833 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.186069881 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122456499 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186366012 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201218478 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202983633 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153818817 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.223359802 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155833404 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166746304 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19482163 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149123308 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223866506 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192624715 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.118219605 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145112271 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156180035 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122124826 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.213631338 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119647069 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238159211 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129395227 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.348523283 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208353646 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15059667 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182153281 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154399495 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185435566 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142068178 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.126193216 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138982916 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.182812435 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152133415 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123622166 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178840066 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135946293 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.148908609 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146718402 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.119277047 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19068718 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.130599868 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185065116 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188697209 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.130014462 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173205127 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17091195 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.156116816 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189275286 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216037358 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126778767 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127851121 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239774709 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191381783 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.133381055 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198289175 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.220534777 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.14809454 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129019946 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184884594 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216603781 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140137094 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222813867 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132506289 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156367954 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.136675593 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192901677 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155667361 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.177330374 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125821322 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.184208309 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18744098 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.149437328 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137492973 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202482104 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130280726 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121229365 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159010773 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133348438 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138722063 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.171655674 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.135914789 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177676944 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160581274 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188618483 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150641621 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157411432 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164687811 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157425929 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.165721437 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172928017 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.116930448 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.197208654 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192211402 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15384953 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175540336 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.185287134 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206153957 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167711226 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154222533 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179377476 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151401801 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.11986989 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157256759 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190803266 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183176476 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.183444391 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205799413 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.187851061 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.157854205 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17276664 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162509579 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.208478554 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179458385 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.140109435 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193113318 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1651057 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.117111171 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.148434359 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.124082062 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132750228 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153686936 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132861599 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198136658 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158205124 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203734157 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190747371 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132403808 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215291713 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.121207158 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18286365 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.170019237 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162327238 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.184476979 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214939564 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199612074 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137758165 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183467915 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119597306 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122975448 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.157452463 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158703949 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160839916 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132398613 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136239758 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.21583589 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195604593 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144107326 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216618453 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187085528 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197694789 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.146534753 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.159012495 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192369641 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163837225 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.181541945 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15290556 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.153953743 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.216559135 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135394402 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214772454 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190564291 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173088994 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218844317 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.184700953 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12885221 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144272308 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18417505 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132876635 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188788568 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141175991 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154195637 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148776354 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133140444 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164331404 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206521857 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139939125 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200495666 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.156861841 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192772438 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122018565 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163791835 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171973646 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169032764 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.103761655 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162357691 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218151729 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17416302 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151265515 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198155453 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126751166 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.33775681 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181474731 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199013481 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130956169 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161990646 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16868306 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186387745 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156390768 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208694208 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135784717 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228234441 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192451535 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.140050745 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126160108 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171797869 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146044809 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.163678714 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.145103828 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.186410517 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140745736 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207879268 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133904057 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193527532 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198401337 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.144132543 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.14599946 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162780709 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247670723 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16392828 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195322723 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.162018394 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.19078717 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179053638 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147444811 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124311828 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.128058884 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209892246 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125103271 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199198189 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.191279904 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18151637 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196068362 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185894445 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139213062 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.122826172 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189951087 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143725666 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212835152 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15835634 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.134849396 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212237065 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.125305508 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127493749 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185007694 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291528169 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145640216 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192730388 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.106166976 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.264401373 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153109918 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128190319 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187464947 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164957956 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.156597783 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.178723321 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170551143 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162174389 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159299401 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159122771 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204364981 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182725174 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189045732 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165701179 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.170639639 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156396518 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184293361 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198239859 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142615911 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.142546292 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182072892 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216905606 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.177278478 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.1555167 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166867059 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19158643 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16705479 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195184915 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135509036 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208291826 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124098296 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18681298 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13709031 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121026634 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182954226 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.192776059 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127954608 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200611574 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166405026 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127189187 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152162026 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142051755 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189815709 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135122428 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.155123895 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178133669 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.15467509 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175812217 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229858319 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125925487 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190372065 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142567725 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153424487 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136811893 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138186912 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156469126 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.171754874 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20483348 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.129235339 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199775248 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16070009 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187638434 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152629219 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168661407 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.331555174 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.12438839 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21614337 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145866312 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218746469 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173653739 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171042501 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193303449 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145337804 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187377465 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143019909 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.245169406 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160424026 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.191836465 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127630047 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166994151 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135775767 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.129341566 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176039991 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164428197 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168028423 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.133160023 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.189979882 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142203879 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.169957039 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139210852 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224202377 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14713192 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208312897 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183045862 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162460426 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170724548 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198147047 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125592215 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.189234212 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195698029 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141810551 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145181346 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.159714959 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.134523072 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23509946 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.123115079 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184780855 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169265827 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19463849 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167806732 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.159313929 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172346043 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165115682 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170383943 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150899784 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.151165809 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193513509 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131856799 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.123353751 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194658624 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152355629 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.190580705 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138359774 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.19816435 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194870524 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.120760272 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158244358 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290811111 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157521525 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218735512 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.134562679 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13150831 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170694837 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153585815 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.19018269 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166337875 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.157200413 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127450758 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.169166134 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.15580876 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.167388657 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166860143 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193991155 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156621202 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211002686 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.132351278 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277966404 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139154338 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165566068 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.142647766 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.125502954 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162853338 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131388269 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136048873 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209350912 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235975291 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.159097502 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.173016791 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130757489 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.149913272 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128036935 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160569841 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174415928 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164207606 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170896702 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.101353795 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135251302 seconds)
  done (took 84.196128522 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.159614347 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.15039154 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.165203559 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.219448115 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19179794 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.284967236 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.225356126 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.241432017 seconds)
  done (took 2.72755351 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.116415856 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.15607697 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.13854898 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.139589109 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.107354878 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.435771801 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.129587564 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.144348139 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.157573276 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.148290355 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.132460874 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.500506555 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.146058533 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.11472908 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.144221321 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.106788486 seconds)
  done (took 3.900597864 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.053451667 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 1.03820229 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.819234109 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.293838379 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.248602988 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.198183493 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.742197276 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.18557566 seconds)
  done (took 12.670528327 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.151641233 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.140824644 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.41078333 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.24634132 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.202944956 seconds)
  done (took 2.251176367 seconds)
done (took 128.731673308 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.123877587 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.119858368 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.119228045 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.151558105 seconds)
  done (took 1.598938854 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.175658287 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.08928986 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.091549901 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.116200021 seconds)
  done (took 1.561387747 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.427412999 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.088674021 seconds)
  done (took 1.636677321 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.146694238 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132036803 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.162062979 seconds)
  done (took 1.546577197 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.139338081 seconds)
  done (took 1.237414063 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.120827489 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.112659986 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.231912856 seconds)
  done (took 1.566280508 seconds)
done (took 10.248560193 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119850517 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.921088751 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.429096858 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12945492 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.706745747 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.424883915 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.41696636 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.170828278 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.171005785 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.133982549 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.128882643 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.685826999 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.428174554 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.875081641 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.386190336 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.89989487 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.690831778 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.107972824 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.140912801 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.109497505 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.400477022 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.132263022 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109665758 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.108417729 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.715983996 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.417640688 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.106489895 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.917154657 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.106437613 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.110398173 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.424581671 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108426902 seconds)
  done (took 20.817220827 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114768455 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.163627805 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.142566874 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109339759 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.110058622 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.135602728 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.119027232 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119324879 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.200336901 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.107806983 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.157482967 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.107319882 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.111984013 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.134802576 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.130877806 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.106478041 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.136514479 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.109974904 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116124466 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.134998755 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.12981775 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.105817765 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.13406464 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111028289 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.106803976 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.15476298 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.107998039 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.118619542 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.132300893 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.112697953 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.111811931 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.106403225 seconds)
  done (took 5.104987554 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.154248271 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17227881 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.14594668 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.144285467 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.186589416 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.109767112 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.219525115 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145703464 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.199841686 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109053372 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.127822468 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.134426309 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.147602224 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.107524789 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.160624419 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.107375467 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.109115782 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.137260665 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115871432 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.108787539 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.156506554 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.106949286 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.108750399 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.13731538 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.108538512 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.129374644 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.135584713 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12045146 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.106600077 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.140728292 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113640484 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108381144 seconds)
  done (took 5.425312139 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.121889023 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.121739788 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.12967949 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.15887574 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.117706342 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.120380129 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.151938653 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.117732087 seconds)
  done (took 2.150927202 seconds)
done (took 34.601729103 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.135774417 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.125613128 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.128229227 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.151873247 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.182466202 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.144269175 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.124293418 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.1156711 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.149119249 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.129014519 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.107442824 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.114147298 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.157089031 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.118395309 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.213386123 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.123393123 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.217930699 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.184810646 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.144216839 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.126324503 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.116606788 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.218372095 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.120807371 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.114927643 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.216314206 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.110245271 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.209788393 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.117891474 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.117362142 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.139545642 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.186085931 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.150411018 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.11650941 seconds)
  done (took 5.928559788 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.201646538 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.117583556 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.146858545 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.115907811 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.117069686 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.143314034 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.204942704 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.145370095 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.117251188 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.11584255 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.115132649 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.216451802 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.1214028 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.14099138 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.119731729 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.107605612 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.233408183 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.117752345 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.107707666 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.11907214 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.112715858 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.116013506 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.246272292 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.111783152 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.11619825 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.144813468 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.121573577 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.120473032 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.117394116 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.146566969 seconds)
  done (took 5.296400614 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.122255018 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.130395318 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.133191619 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.212010849 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.144765353 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.157333771 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.137489439 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.129355499 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.167456746 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.110781676 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.124645676 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.173844675 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126073797 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.120500649 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.1429727 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.128364806 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.131047426 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.138743155 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.118017884 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.127400148 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.158572662 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.12725351 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.132517315 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.14655805 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.109961897 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.116684278 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.147415951 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.126160317 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.11820404 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.123197211 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.140812173 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.114362951 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.111400031 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.173995048 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.114092034 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.122991476 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.163316241 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121838741 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.121796252 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.171038362 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.112670955 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.110130428 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.164932003 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.163035528 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.111462508 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.15238954 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.12199352 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.123565771 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.13798376 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128393226 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.152297749 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.13965553 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.130724702 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.107778589 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.137757317 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.119305569 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.109572614 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.141716271 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.126266229 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.113935931 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.162036212 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.1186622 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.120353133 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.111685694 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.149446517 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.109644388 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.110067399 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.14401214 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.136852836 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.117295609 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.175291049 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.111094823 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.121668612 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.150715062 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.122453413 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.121962313 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.109341433 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.151737735 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12224715 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.116843622 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.151833942 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.113309722 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.112385858 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.15617767 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.131816571 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.122989645 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.150446006 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.124166664 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.112939505 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.140451422 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.1284324 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.110753237 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.14421318 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.123927706 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.110572575 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.114030477 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.152518061 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.121860353 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.107812014 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.164861966 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.114430902 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.109182318 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.163853553 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.114403317 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.114921871 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.149072437 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.15302326 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.109098282 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.149506579 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.124694769 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.111034941 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.145344975 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.115282641 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.109545862 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.127576298 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.155692441 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.117845344 seconds)
  done (took 16.528578606 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.311223985 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.267426023 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.208585958 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.301675083 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.122858889 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.234419857 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.295449216 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.299333086 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.110653166 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.177218804 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.161184866 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.267966722 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.141259881 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.138883348 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.300509567 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.353010242 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.171489168 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.14962985 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.176888142 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.125928389 seconds)
  done (took 5.451009194 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.131086475 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.14656727 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.16443929 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.138612191 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.121172947 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.15609428 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.111109506 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.132691478 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.152678309 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.121624727 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.113449758 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.157062778 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.123855394 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.126257815 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.155237502 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.144617583 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.117748484 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.145888678 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.134746256 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.115459145 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.12865387 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.136340929 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.119560653 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.162454494 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.130833766 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.121061685 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.140143531 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.116319444 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.117011348 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.148407277 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.117221574 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.129943846 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.146053398 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.103952677 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.122141548 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.1245945 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.146906833 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.114964084 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.115595181 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.142857285 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.127162617 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.124265632 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.118913514 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097042747 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.131130615 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.108773505 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.152198585 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.124113932 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.10537873 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.129464429 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.153828582 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.125463725 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.117631602 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.162731817 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.118733746 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.127364128 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.151608605 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.126987226 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.115189173 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.138031125 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.111003651 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.114625353 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.118694937 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.154134623 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.124475055 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.15780808 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.12914201 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.111099292 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.11586087 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.143971436 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.116087707 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.125242994 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.161760236 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.122065954 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.117779286 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.153509133 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.120129588 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.093572869 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.121087842 seconds)
  done (took 11.433593253 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.13695432 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.121666042 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.128597796 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.174939714 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.124650664 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.117346857 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.151198579 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.131132012 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.126581411 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.160510104 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.12671157 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.124425193 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.162197352 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.12210938 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121584698 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.156596459 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126018938 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.147899147 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.158672098 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.141889338 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.126338786 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.145580568 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.124067808 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.121934837 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.169962767 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.123893367 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.137393895 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.155606937 seconds)
  done (took 5.011412908 seconds)
done (took 50.761207641 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.260556058 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.462981705 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.239824733 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.235556547 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.279690549 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.251793093 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.239605475 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.235601798 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.66717327 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.210845835 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.237188033 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.234006837 seconds)
done (took 28.692700394 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.298082917 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.77904155 seconds)
    (2/2) benchmarking "String"...
    done (took 1.533369285 seconds)
  done (took 4.438607933 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.232689724 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.229842341 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.478743796 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.226340284 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.226259349 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.229789158 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.22959862 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.247215104 seconds)
  done (took 15.995748223 seconds)
done (took 26.097125142 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.276389389 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.413799943 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.475457975 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.226417307 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.246081254 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.226830835 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.231005613 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.252063427 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.243635918 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.243011677 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.63956159 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.493236331 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.231480339 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.603716131 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.229046135 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.258021781 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.228408393 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.453038828 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.231769473 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.257179595 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.207188968 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.212252537 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.252121095 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.228656085 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.234229095 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.243909491 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.237655405 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.238166954 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.405123331 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.252782446 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.258130394 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.231474292 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.228713006 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.236610701 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.241415281 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.23496718 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.416324688 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.235402565 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.210706213 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.247718623 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.410720115 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.242898 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.228766556 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.23168123 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.246794206 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.277111785 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.213883667 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.361490655 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.254409925 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.232120654 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.309416604 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.605658731 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.23288457 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.239839809 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.242062103 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.436899048 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.243419725 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.286005935 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.256716991 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.239258581 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.229805652 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.229304783 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.27691482 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.23447944 seconds)
  done (took 145.407003811 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.232982685 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.236459528 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.231888895 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.237197458 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.235497618 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.23201255 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.231184746 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.231915051 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.232380631 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.253032913 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.232741616 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.233606236 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.235644195 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.230804415 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.24242728 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.253128764 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.237256108 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.245316831 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.240363149 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.232936326 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.253343778 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.233687188 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.247364286 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.234926781 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.272978576 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.308749304 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.263513103 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.263339677 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.247543986 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.232186382 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.272497971 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.241560087 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.851034927 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.105310763 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.239124543 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.254153748 seconds)
  done (took 81.396569185 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.634165625 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.235092403 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.233660112 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.23419932 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.266376468 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.234478004 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.808989311 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.813859382 seconds)
    (9/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.238577492 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.19939358 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.3620258 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.581686449 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.458451873 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.235088419 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.325081164 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.244826277 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.237082425 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.250519533 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.260719567 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.240089457 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.234981983 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.804532322 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.247643422 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.280083131 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.415342448 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.251496473 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.270289904 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.626175317 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.235107032 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.26770551 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.303474692 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.570047751 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.285553533 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.235154033 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.569389076 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.35259673 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.239170118 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.269415204 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.237064343 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.517851141 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.236961618 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.238917383 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.238213238 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.873767819 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.241360779 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.813602113 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.242357114 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.175320214 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.238414655 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.238749723 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.211811273 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.91480222 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.244029328 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.237354922 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.237889419 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.236750107 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.236333453 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.26920817 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.227691432 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.33468302 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.237132915 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.241902119 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.269540066 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.238106254 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.334988587 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.243285865 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.860056683 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.300681331 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.338894209 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.809426977 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.238085759 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.332931911 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.356062914 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.239380831 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.238005809 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.237284978 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.238601152 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.351108707 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.237231775 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.238284355 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.926006739 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.416693465 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.256684687 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.582098803 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.340504402 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.238591526 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.581964644 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.242955487 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.239829583 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.938339546 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.335237489 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.240103681 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.238668051 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.240217944 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.922968814 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.817608786 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.470829815 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.24308956 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.772533765 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.245042377 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.104813695 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.802792232 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.897295261 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.242937521 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.34957691 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.417959792 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.257620208 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.23795445 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.585705788 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.24518749 seconds)
    (111/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.240070107 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.241068896 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.241224391 seconds)
    (114/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.295788128 seconds)
  done (took 377.169316093 seconds)
done (took 605.103117438 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.127649079 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.081187248 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.222004141 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.091855384 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.068975867 seconds)
  done (took 11.730956742 seconds)
done (took 12.873002729 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.431959396 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.433502457 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.306142202 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.43779353 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.27714593 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.451252231 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.420149616 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.262201827 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.35117059 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.325016797 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.353848943 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.291881421 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.274536643 seconds)
  done (took 18.758493484 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.516680053 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.253109343 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.307849692 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.497720348 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.285861619 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.525733531 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.56663444 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.253437486 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.38957611 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.284847931 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.263196435 seconds)
  done (took 18.287628661 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.519813941 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.253856686 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.309213269 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.502520383 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.288206009 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.532855724 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.564413675 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.256937926 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.393567394 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.267335728 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.263215932 seconds)
  done (took 18.293789071 seconds)
done (took 56.482557158 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.278657671 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.341973027 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.277497361 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.263209936 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.259668525 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.260963806 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.265726318 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.261526116 seconds)
  done (took 11.351912135 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.260495533 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.259534192 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.259206721 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.2598618 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.258654659 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.258308873 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.259868613 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.261994675 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.260240935 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.261231963 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.258371813 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.260648065 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.259113134 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.26068907 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.25871295 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.259025181 seconds)
  done (took 21.300242288 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.264628185 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.25949354 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.260492023 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.259584247 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.259117848 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.258643175 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.259536537 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.259955542 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.261276238 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.259975422 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.261173803 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.261823548 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.261166625 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.263176189 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.260551265 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.261412674 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.261445246 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.260351911 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.265195418 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.260231962 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.261554839 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.261276014 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.260056225 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.261942359 seconds)
  done (took 31.408705175 seconds)
done (took 65.204991847 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.247122825 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.269054308 seconds)
  done (took 5.660673005 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.320688437 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.320292398 seconds)
  done (took 3.786617121 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.263706965 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.263407789 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.263686532 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.263089439 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.262877632 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.261781083 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.265134575 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.264078605 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.262163375 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.263914465 seconds)
  done (took 13.779985325 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.263275687 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.263021861 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.262431216 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.2630249 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.26433771 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.263419951 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.264515979 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.264451408 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.262706643 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.262588263 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.263746437 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.264614195 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.264680048 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.262838362 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.263929097 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.263425913 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.263834291 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.264060261 seconds)
  done (took 23.892536426 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.278439355 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.283013552 seconds)
  done (took 3.707196222 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.392790611 seconds)
    (2/7) benchmarking "second"...
    done (took 1.307105873 seconds)
    (3/7) benchmarking "month"...
    done (took 1.368367537 seconds)
    (4/7) benchmarking "year"...
    done (took 1.361284577 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.306465727 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.284056248 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.305511593 seconds)
  done (took 10.47105083 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.26558707 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.463617817 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.594234855 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.8319344 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.26631517 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.269102567 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.148855949 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.268075666 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.272673551 seconds)
  done (took 14.529627694 seconds)
done (took 76.974999972 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.250112435 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.329250357 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.26490012 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.266482011 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.602191601 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.268995662 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.253961312 seconds)
done (took 16.385759904 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.236328382 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.232017088 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.229215113 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.263510619 seconds)
  done (took 10.110276291 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.253527191 seconds)
    (2/2) benchmarking "read"...
    done (took 1.576011666 seconds)
  done (took 4.978789297 seconds)
done (took 16.239519841 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.267070397 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.264891458 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.266098031 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.265273407 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.266207622 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.267070763 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.265761835 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.267034962 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.265548991 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.264821317 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.266963523 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.264768107 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.265810557 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.267116152 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.264672878 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.266904046 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266967723 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.266601753 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.26688815 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.267755847 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.267319285 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.267044748 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.265840651 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.267316611 seconds)
  done (took 31.541937351 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.267375097 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.266974342 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.266788955 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.266043176 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.267358278 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.266628295 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.266347059 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.266686861 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.267561552 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.266834319 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.267305432 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.265675039 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.268461979 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.267569702 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267698367 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.267749805 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.269475048 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267912066 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267171946 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.268098049 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.266246221 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267253239 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.267059433 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.268147981 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.266987318 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.269208967 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.266610337 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.268143251 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.26713034 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.267309932 seconds)
  done (took 39.171068813 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.271255382 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.270759294 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.267622128 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.269736672 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.268497141 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.267967839 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.269316734 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.269127279 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.268817785 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.270233929 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.26781031 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.268855373 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.268321517 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.26996582 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.26967262 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.268896583 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.26971443 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.267940826 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.270304534 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.270335552 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.270217435 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.269521829 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.269423672 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.271083264 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.271644428 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.269707741 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.269761014 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.269300601 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.270372484 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.271905574 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.271732049 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.271740514 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.271302718 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.270575478 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.270657612 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.270795235 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.271562403 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.271880599 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.271950126 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.272422503 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.270944597 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.271051703 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.270452121 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.271402799 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.271854811 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.269453652 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.271311377 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.272438627 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.272041169 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.272626058 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.272298341 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.270120506 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.270729265 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.271889002 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.272382923 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.272500615 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.270818205 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.271600074 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.270607565 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.274086955 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.272543254 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.272806673 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.272874373 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.271403593 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.271734398 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.271284073 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.272277248 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.271672971 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.271945023 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.271898901 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.272749625 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.271939467 seconds)
  done (took 92.651576612 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.274079439 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.274156782 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.272149937 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.272911813 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.274140068 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.27446906 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.272194823 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.272281349 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271630448 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.273704626 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273241278 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.272671286 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272132177 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.272215472 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.273512873 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.274637036 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.27376041 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.271938984 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.273608477 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.275087212 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.271970062 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.274931929 seconds)
  done (took 29.165890276 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.274987626 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.27705375 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.275150362 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.27736322 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.276253964 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.274403469 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.274595826 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.276175753 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.27526691 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.274955859 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.274894621 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275575469 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.275673988 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274186757 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.275570403 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.27635754 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.277449737 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.275372561 seconds)
  done (took 24.118379775 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.277346685 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.273258245 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.274747642 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.276085516 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.277110762 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.276014399 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.275763377 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.275647885 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.276701519 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.275125243 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.276090143 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274718186 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.275895538 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275609751 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27640807 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.275273446 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.276286883 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277788559 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.277317701 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.27565476 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.276944636 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.275264611 seconds)
  done (took 29.230124414 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.27796413 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.276879825 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.276646057 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.274947871 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.276284578 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.276982505 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.277994006 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.276529542 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.27754963 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.278596849 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.277432631 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.277480309 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.279380463 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.277742203 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.278122453 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.276899395 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.27852867 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.277536256 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.277723399 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.277822486 seconds)
  done (took 26.707841249 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.277471044 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.279107695 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.279237623 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.27693005 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.277827834 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.279656896 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279556257 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.277578453 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.278754522 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.278393869 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.279831822 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.280388396 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.278560604 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.279852451 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.27985347 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.278714533 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.278815883 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.278903231 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.279639759 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.278658447 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.279408637 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.280366037 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.280554217 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.279875125 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.281420893 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.279737215 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.278755605 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.28043831 seconds)
  done (took 36.97938601 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.278921518 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.279479286 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.278529872 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.278766449 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.278817635 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.280297057 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.279234608 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.28617678 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.281286834 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.279610446 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.281379081 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.280243979 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.278813001 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.279672197 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.279053574 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.279504969 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280221588 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.281029338 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.280302756 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280234016 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.280548433 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281593555 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.281571453 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.281805059 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281548335 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.280020899 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.282681185 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.280977319 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.281465787 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.280472906 seconds)
  done (took 39.577312662 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.299717707 seconds)
    (2/2) benchmarking "in"...
    done (took 1.301272302 seconds)
  done (took 3.764054413 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.281341087 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.281180171 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.28184371 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.282059316 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.281113323 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.2828836 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.282700397 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.28143101 seconds)
  done (took 11.416693885 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.273451127 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.283899359 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.282124964 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.283308317 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.283380921 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.273381244 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.281252668 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.288823901 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.275899483 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.274943361 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.277008693 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.275317606 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.280167845 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.277139923 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.277787081 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.278708406 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.286309003 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.285186879 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.284719569 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.28511181 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.284674873 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.27661546 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.283744482 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.289379377 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.277250401 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.28469635 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.285884762 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.288561561 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.277281525 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.283759351 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.281555996 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.285476699 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.285648339 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.283948167 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.28379668 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.283782485 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.287320453 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.283865513 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.287264655 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.291130755 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.285716925 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.285286921 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.278725336 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.282818708 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.282030912 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.291221926 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.286078659 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.286101627 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.277466362 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.279931727 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.286907876 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.276775607 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.288372406 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.280564923 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.282432228 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.28729166 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.292996189 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.278769922 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.279248547 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.286144788 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.294657445 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.287762064 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.285290233 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.289953532 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.284248326 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.287503394 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.290448452 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.293920747 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.287993287 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.287795618 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.288311967 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.297712959 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.290567028 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.290723134 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.286742732 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.287471218 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.279697455 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.289679978 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.289317266 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.292672725 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.290820945 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.289250192 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.285271379 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.286581902 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.284381496 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.292864601 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.288693396 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.288198519 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.28148462 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.289662371 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.296286425 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.288244092 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.281263138 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.282785023 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.285709749 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.292626866 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.27904773 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.284910488 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.292890839 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.28757929 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.288044876 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.280711588 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.288405801 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.29556808 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.288579992 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.289544927 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.298132585 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.281530337 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.291677993 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.296606575 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.291116781 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.283878561 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.287434182 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.292322025 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.283151319 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.287198707 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.297461192 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.286778507 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.295144125 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.28974082 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.287446151 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.295312504 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.298505544 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.288572936 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.284874701 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.293935785 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.290262185 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.287860547 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.295174137 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.291155054 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.288926262 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.284995147 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.29606545 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.285172913 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.294912964 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.284644315 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.292948375 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.290350168 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.29059079 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.288364794 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.290857676 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.286725593 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.289859713 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.294626467 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.297019344 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.287190964 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.298138238 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.290664376 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.288822001 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.292067579 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.296679895 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.291247198 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.286105176 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.295812289 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.28384797 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.294710212 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.28484134 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.295665379 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.292157102 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.292577627 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.291362733 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.285179831 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.2878539 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.294575423 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.291365361 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.29205178 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.295545927 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.293096625 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.292523903 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.284072133 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.293963488 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.285317667 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.288378619 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.296405003 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.295634098 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.294079322 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.293381349 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.299486316 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.293557182 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.295308122 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.286632854 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.290133134 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.299653043 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.295734879 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.300844828 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.294583594 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.29586608 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.288483536 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.290067013 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.296442143 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.287861287 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.299085939 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.300010274 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.30192998 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.289110634 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.296782467 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.28864159 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.296928165 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.295156965 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.303849637 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.294233103 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.294921478 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.287825035 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.298266921 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.290685177 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.299207617 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.287387782 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.296819782 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.29541239 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.296378484 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.296129193 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.290764262 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.292788998 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.300075904 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.2960325 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.295483018 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.290320771 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.299599805 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.287800934 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.290535987 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.300132151 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.297069341 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.300115433 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.303001497 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.293803238 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.300300432 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.296986948 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.292868411 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.298789453 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.294460649 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.297209974 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.300571673 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.298939606 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.292618944 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.300988984 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.297479201 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.290597616 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.298321895 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.30627868 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.298705199 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.289792435 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.300886264 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.299084262 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.297769213 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.298074599 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.289993742 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.30072185 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.300909695 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.306355567 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.290131174 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.301394162 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.294516451 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.302192403 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.294185612 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.299092434 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.297756889 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.301126725 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.30695315 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.298511437 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.294220286 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.302721734 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.298866671 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.298045512 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.29293947 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.30275684 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.300656073 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.300116255 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.297381062 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.295763477 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.301302447 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.292506438 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.301031638 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.292132281 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.309788544 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.314932831 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.299468728 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.304893015 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.302878596 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.302378202 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.302975621 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.293029044 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.297013639 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.296248442 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.295066531 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.294815962 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.303676302 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.293657618 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.301848642 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.297338923 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.301561697 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.303856749 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.301390773 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.29337906 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.305413641 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.300015927 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.301095615 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.292542098 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.303417581 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.297236288 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.302432872 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.302241218 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.2950501 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.308984154 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.30580864 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.298282321 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.297393627 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.296939957 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.295677785 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.297878947 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.306360663 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.295651249 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.306073222 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.294877004 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.298161425 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.297409341 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.306016925 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.313211603 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.295246971 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.305756295 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.302801931 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.293917576 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.296288955 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.303276556 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.305026063 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.314298313 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.295573609 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.30432839 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.304042612 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.30367324 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.304128312 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.30360647 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.302243003 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.304196157 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.308884405 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.307354198 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.298906111 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.305104713 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.311464483 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.305966448 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.303866695 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.295021402 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.304121429 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.31407494 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.299071785 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.301770525 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.299027377 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.30668313 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.304445957 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.303696753 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.305817634 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.304409366 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.308853092 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.308817323 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.307356204 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.305152958 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.308370904 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.317383617 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.309385451 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.316202112 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.29928767 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.309926585 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.306488353 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.301175311 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.301724742 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.300518236 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.308587295 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.297789676 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.308741057 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.3066321 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.300644361 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.30791453 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.312867315 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.298175223 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.304752531 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.315407659 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.297847156 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.309699629 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.306203561 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.298854432 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.307487149 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.307498713 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.298662927 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.30065803 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.302611166 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.309053663 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.301535766 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.310347 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.300222338 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.309961155 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.306332723 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.305858216 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.306395605 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.308148963 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.29865646 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.308583697 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.308523457 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.316736412 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.301545876 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.308181419 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.303054027 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.315189611 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.319149715 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.303724803 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.313943751 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.308713062 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.30130048 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.306142471 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.3143419 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.303889513 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.311905259 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.300218845 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.304687241 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.30323004 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.309463981 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.311903155 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.312563099 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.30200002 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.302779686 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.311110244 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.309892369 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.309526444 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.305389652 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.317255048 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.302679391 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.302927713 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.309783796 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.304530116 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.316054835 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.301715773 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.306968936 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.307018819 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.312303958 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.309892633 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.30901887 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.300590514 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.30399283 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.316280729 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.31447431 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.304982159 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.304409371 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.312439552 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.304830792 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.307714003 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.308085102 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.305094202 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.304391988 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.315208193 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.305227414 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.307437124 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.304227904 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.313111402 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.316875582 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.315136471 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.303749324 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.316083305 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.320239822 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.316615473 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.303714161 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.306862828 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.307328179 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.312398907 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.312324584 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.305164811 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.319802941 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.318176971 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.317519198 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.310262284 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.312022342 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.304233702 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.314109622 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.313123034 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.309888232 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.319251386 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.307971975 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.317359942 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.313064228 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.312877114 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.305190888 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.308440313 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.307065006 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.307629323 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.313162294 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.312910753 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.31570857 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.311133353 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.3177892 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.313521977 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.31365207 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.313425218 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.306068326 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.315110571 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.305653534 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.314319727 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.316505698 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.307074506 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.316920292 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.315208093 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.308283673 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.3105975 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.318103651 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.315213228 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.307566832 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.312860503 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.318767804 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.325145083 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.315421138 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.307284673 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.312152829 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.318495199 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.313904177 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.317122203 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.308703096 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.324447065 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.328522527 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.309769777 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.312093685 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.317069859 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.325309848 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.315841394 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.316237366 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.309679936 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.313320305 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.319827944 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.314634885 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.318465632 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.321536053 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.311685891 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.317099922 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.307118443 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.311422931 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.315576757 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.323932349 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.314607739 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.311628904 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.322190533 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.324350158 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.315141217 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.327321504 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.320703077 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.31374663 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.317683372 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.308299221 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.315397001 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.312553445 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.320726576 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.314747438 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.313328562 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.31360045 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.307933767 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.315559 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.320054896 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.324236231 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.313310537 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.309443126 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.310121397 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.316076094 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.314297486 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.315969352 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.316467477 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.316538221 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.315146279 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.308402891 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.323709143 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.327892332 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.320056405 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.313302474 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.314563342 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.313553331 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.318382947 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.310836915 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.318114408 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.315069193 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.315799248 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.313066789 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.32355278 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.317612801 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.308568356 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.31040835 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.309922298 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.320012153 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.322606175 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.334364737 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.319796991 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.318143749 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.318318754 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.314812342 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.310860335 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.318918661 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.315602271 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.310726343 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.312512175 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.317274799 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.317898249 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.31583204 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.308633618 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.318558264 seconds)
  done (took 776.43908197 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.315358666 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.316405883 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.314323954 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.316584563 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.314203405 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.313387866 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.313792543 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.315469269 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.315184433 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.316754434 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.314342568 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.314358561 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.315211224 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.316958865 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.315983712 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.316272153 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.315336598 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.314577217 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.314998234 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.314769315 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.315414138 seconds)
  done (took 28.811992369 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.316379152 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.314932192 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.314374435 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.315331725 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.313577635 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.313670401 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.313514293 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.315472571 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.314202345 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.314879524 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.315509536 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.316346843 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.316058306 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.315973594 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.314612703 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.316402415 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.315484485 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.3172956 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.318070931 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.315642238 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.316159528 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.316709024 seconds)
  done (took 30.131581244 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.317591074 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.316671459 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.30980859 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.321312887 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.317060075 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.317716911 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.317052564 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.317559931 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.317405518 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.312570081 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.310969121 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.31147757 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.314914182 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.321326911 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.313936201 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.321168514 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.317765535 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.318682909 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.316785496 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.316175628 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.319788469 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.33002356 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.318257716 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.309111061 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.32021625 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.319080276 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.317180059 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.319258915 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.311965185 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.320499906 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.318435512 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.311432853 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.322962049 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.319611629 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.312760778 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.320054844 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.319466057 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.318764695 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.31891906 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.315819253 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.325969683 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.3186495 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.323000368 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.33265443 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.319099848 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.313519717 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.324034551 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.319651065 seconds)
  done (took 64.462643949 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.3183283 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.321050206 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.319297898 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.319687986 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.319201687 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.318556221 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.321220407 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.320398191 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.319833651 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.319247448 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.319965643 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.320032216 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.320541691 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.320367051 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.320709981 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.318938429 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.320063383 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.320747343 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.319246336 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.319722388 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.321229232 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.321292569 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.320969326 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.321488504 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.320835883 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.320284009 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.319903807 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.320500433 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.320976541 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.32097471 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.323821715 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.321348877 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.323528385 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.321076678 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.320711529 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.320772156 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.321379457 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.32090086 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.322073092 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.320812923 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.321805621 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.323212347 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.323180115 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.323868562 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.324041087 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.321844059 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.322383343 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.322044762 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.323454059 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.324001776 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.322975577 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.32364886 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.324166825 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.321314234 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.324553792 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.323186745 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.323075668 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.32354678 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.324276999 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.324997052 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.323175573 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.324523073 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.324049919 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.324516163 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.324580562 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.32417268 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.325333858 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.324426372 seconds)
  done (took 91.078611502 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.324715937 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.324286748 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.325180048 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.324737679 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.326299104 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.324998145 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.326268316 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.325854462 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.325921423 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.326844006 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.325289275 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.324994353 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.325238296 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.324373085 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.324240228 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.324454592 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.324987045 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.325028542 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.326389143 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.326966755 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.325966656 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.325354607 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.325638378 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.325301775 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.325914902 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.327014487 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.325667905 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.326679068 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.325529895 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.325857315 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.326879922 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.325898087 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.325521976 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.326569022 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.325815635 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.327306035 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.327839459 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.327999477 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.328266029 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.327185784 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.327952233 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.326966649 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.327233595 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.327417553 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.326895947 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.327048 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.327039932 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.325309194 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.327122932 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.326596863 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.326274263 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.326412118 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.326832137 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.327264081 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.328140254 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.328076087 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.326853195 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.328226812 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.325281653 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.327001327 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.326990713 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.32663146 seconds)
  done (took 83.427802746 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.328159544 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.326112229 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.326231714 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.325754681 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.326114416 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.325577615 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.325033563 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.325751723 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.326881324 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.328974008 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.32734244 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.326897333 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.326139251 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.327958608 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.328529505 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.328812554 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.32821525 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.327421948 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.327415732 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.326792376 seconds)
  done (took 27.740804163 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.327152204 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.327086698 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.326622106 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.3266634 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.326523139 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.325341723 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.327820563 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.327257101 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.326568359 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.327300907 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.327499304 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.328646965 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.327285763 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.327059807 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.326876469 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.327355999 seconds)
  done (took 22.433419613 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.328555553 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.327213612 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.328893305 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.330283032 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.326843579 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.327553612 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.326999532 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.327320381 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.328270673 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.329626306 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.328265878 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.327342587 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.328255681 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.328516073 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.329908429 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.328451781 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.327791359 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.32879621 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.327658771 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.329661793 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.329587687 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.328641082 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.329834843 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.329030178 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.328829823 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.331463948 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.329338921 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.327667648 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.329540345 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.330340681 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.330037147 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.329033079 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.329415815 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.32840179 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.330255717 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.327115508 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.328044135 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.327286726 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.327945224 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.33034095 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.330126714 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.328968924 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.327755856 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.32840346 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.327651947 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.327576251 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.329634954 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.331322834 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.32812398 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.32690506 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.328713018 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.330683396 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.327913524 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.329442097 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.327944868 seconds)
  done (took 74.281912754 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.328947583 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.328114064 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.327954587 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.328444871 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.330179434 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.329006204 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.330286966 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.329460716 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.329135299 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.329253261 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.329766378 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.330578983 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.327807042 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.329418828 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.328618833 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.327549548 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.3287865 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.330068838 seconds)
  done (took 25.124370887 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.329051041 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.329803524 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.329014218 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.330713244 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.329938499 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.331658102 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.331333925 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.329790903 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.329221028 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.329968602 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.330179326 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.330879877 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.329774823 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.330361053 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.330717214 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.328282886 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.329837266 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.327625989 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.330422494 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.332125047 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.329851484 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.330379044 seconds)
  done (took 30.461870184 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.32101331 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.320497024 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.322786684 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.335947848 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.329275046 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.322011211 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.323131424 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.321981362 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.338612721 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.34691003 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.341466718 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.329492399 seconds)
  done (took 17.155741554 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331511688 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.331253166 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.331419286 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.330843588 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.331523678 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.331214691 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.332405524 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331520095 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331623558 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331322156 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.332075884 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331499157 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333287465 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.333020084 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.332905095 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.332074333 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333629385 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.332901354 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332076069 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331645108 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.33103283 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.33232066 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331615353 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334198543 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332456208 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33265688 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.332150918 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.333722604 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333833172 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33261753 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.333546872 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.333064036 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333985413 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.334298747 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.334400245 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333534049 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.332048381 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333708135 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336327432 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.334053945 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.334277156 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334766264 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.335229118 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.335218994 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33452335 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.334975733 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3345665 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.334817681 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.334306819 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333951233 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.334794856 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334828231 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.334544082 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.335929278 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.336296429 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.334521265 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336049267 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.33625706 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.335543028 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.336213971 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.335756645 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.335323908 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.335560755 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335423368 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.336380965 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.335295624 seconds)
  done (took 89.225101777 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.336521219 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.335954337 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.336220039 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336176331 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.336456827 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336284111 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.33585868 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.334931347 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.335964904 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336599209 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3365586 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.33653762 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.335545464 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.335805433 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336269524 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336283498 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.336861245 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.337400448 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336674015 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337221726 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.333846018 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336243308 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.336489601 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336593095 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.33711448 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337585261 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.335517715 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337070891 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.336562708 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337648021 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.338593165 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337193681 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336642648 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.336591586 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.337823165 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3354703 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.338193199 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.337766941 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336503211 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336954713 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336408139 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337914346 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339041062 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33833104 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.338730876 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.337712529 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.337979157 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33695759 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338503847 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.339665072 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.337826093 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.338871029 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338038811 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.339978608 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.336526363 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.33882176 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.337294087 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33945971 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.339125125 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.338793088 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.339047164 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.339157529 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.339237644 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.339419316 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.338362399 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338724259 seconds)
  done (took 89.47114176 seconds)
done (took 1815.721685127 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.494288552 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.448699321 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.328178583 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.338069531 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.327514463 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.328900998 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.341759154 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.329105705 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.330094102 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.328879546 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.329586434 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.520453019 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.36379561 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.329613873 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.329364183 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.425361168 seconds)
  done (took 27.102284816 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.356837367 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.339923845 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.4453803 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.333590723 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.35688365 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.519273629 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.393200097 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.334837299 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.498871868 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.352263346 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.338483959 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.354515254 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.334882907 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.337697812 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.352568922 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.517680271 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.593340632 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.33894417 seconds)
  done (took 29.308729919 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.770939357 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.332220841 seconds)
  done (took 5.312589247 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.351929671 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.335841719 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.335728212 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.3320312 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.325117452 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.338924979 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.33248334 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.346705125 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.331747612 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.455446972 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.334147905 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.348373383 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.33300579 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.3341253 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.341599788 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.37961466 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.500627232 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.345094518 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.341931211 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.341016349 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.332579016 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.426054932 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.376544325 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.34408453 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.454161682 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.329115624 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.33734572 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.341881626 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.448582027 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.344383756 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.333764309 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.3359451 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.335435641 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.26813384 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.876361725 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.330861267 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.357728235 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.344071149 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.342075493 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.484480588 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.337836521 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.342025819 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.331010319 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.866815727 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.4408179 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.449638316 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.332637377 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.339737401 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.336153276 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.398070936 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.334334833 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.33721572 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.393553862 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.111979671 seconds)
  done (took 85.394109929 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.356231033 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.329281968 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.510082143 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.34901734 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.34211109 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.326652648 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.32622031 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.604674539 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.363173575 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.329225811 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.637364007 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.953096202 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.343932812 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.396421487 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.362363443 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.390171025 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.329859688 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.356699471 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.328561394 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.330877789 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.897887157 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.334998344 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.333768021 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.423075393 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.368131983 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.853856204 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.331342281 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.333039301 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.348687919 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.328097752 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.907552387 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.330714872 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.375923348 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.330006253 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.6092066 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.709093322 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.662877413 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.336994259 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.370055796 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.32931053 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.352490032 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.844173678 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.692323862 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.327666337 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.327921923 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.842034285 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.32956154 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.339830425 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.340421058 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.596941862 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.331326133 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.332969215 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.327762593 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.327734041 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.328728187 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.399506596 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.399293266 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.853227099 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.329102777 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.330029013 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.33749796 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.329773894 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.331816178 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.329646337 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.331699084 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.684080766 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.592643035 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.329634495 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.682810409 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.888548193 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.32904195 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.985290931 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.331469779 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.353725518 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.375470463 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.328064675 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.327677002 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.850385609 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.333912944 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.326194349 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.66008177 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.325832344 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.627943697 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.34987806 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.326182113 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.918722105 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.344443479 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.37402505 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.328870735 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.334231004 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.330791522 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.330773297 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.610527422 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.387550061 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.329339795 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.327231548 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.331921109 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.329014839 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.3456174 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.338421083 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.961163142 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.342777239 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.327352326 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.347491818 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.329052337 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.327335756 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.332287732 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.330729664 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.617259875 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.333499024 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.339493099 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.331909227 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.327162571 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.343073388 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.424746055 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.339381412 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.623117666 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.333170295 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.329368769 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.334481806 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.332711071 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.352318938 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.330449219 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.345103478 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.329634558 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.632411896 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.348304406 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.342849052 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.328159167 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.327967812 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.346925115 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.333075543 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.384961813 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.332377499 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.18071336 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.341739135 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.340915155 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.329632903 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.335354913 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.329272958 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.348529037 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.329266316 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.625294426 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.615605913 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.598300204 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.330397267 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.330897606 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.161827262 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.344795979 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.51054388 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.34872838 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.331797004 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.610354866 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.564513926 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.333326267 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.330583716 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.335173381 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.608244615 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.347293356 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.646651028 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.927476579 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.335458745 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.333690228 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.180385867 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.139658371 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.335176987 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.333164241 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.620538642 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.351158054 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.332923038 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.329591136 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.33391089 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.330130102 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.336068507 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.337623204 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.332628101 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.331612057 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.627766213 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.524878786 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.347146739 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.340859728 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.845850616 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.35224568 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.332379839 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.336724424 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.335819824 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.330780996 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.392889661 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.33463607 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.33450762 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.334339503 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.339144275 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.87451636 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.335701156 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.347891099 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.527109568 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.091427074 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.338521928 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.332684707 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.334256019 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.400701948 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.879069258 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.384568784 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.623809373 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.346716041 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.374332554 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.333269336 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.345676635 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.87979048 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.339191685 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.347021969 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.052384251 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.339777085 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.814911441 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.3327561 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.334508583 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.979613118 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.338597597 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.33482026 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.338790929 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.338329534 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.669358959 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.337449804 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.35372629 seconds)
  done (took 498.470405086 seconds)
done (took 646.797513089 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.332330007 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.340388234 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.319895831 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.340854693 seconds)
  done (took 10.549523178 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.352872473 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.346591641 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.350965429 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.34084757 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.35101028 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.34243751 seconds)
  done (took 9.303186411 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.335662558 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.340060353 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.339195544 seconds)
  done (took 8.232390198 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.536606574 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.357166866 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.669893428 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.344226474 seconds)
  done (took 9.125975214 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.352315516 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.352965 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.351714841 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.353362642 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.354374415 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.355689537 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.354709335 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.354891598 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.355161364 seconds)
  done (took 13.40259599 seconds)
done (took 51.830490697 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.47600442 seconds)
    (2/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.220562033 seconds)
    (3/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.17069597 seconds)
    (4/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.531715989 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.474131323 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.408385794 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.573124705 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.378000668 seconds)
    (9/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.316288134 seconds)
    (10/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.540923726 seconds)
    (11/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.025410286 seconds)
    (12/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.379831597 seconds)
    (13/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.396280369 seconds)
    (14/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.578380048 seconds)
    (15/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.324439062 seconds)
    (16/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.320377273 seconds)
    (17/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.325776368 seconds)
    (18/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.371762368 seconds)
    (19/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.41917186 seconds)
    (20/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.327768316 seconds)
    (21/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.322151024 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.462378584 seconds)
    (23/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.371583156 seconds)
    (24/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.451546795 seconds)
    (25/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.502656222 seconds)
    (26/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.317365546 seconds)
    (27/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.461132415 seconds)
    (28/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.519085179 seconds)
    (29/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.442577488 seconds)
    (30/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.408066209 seconds)
    (31/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.425053854 seconds)
    (32/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.410610917 seconds)
    (33/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.422922842 seconds)
    (34/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.483777117 seconds)
    (35/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.324376155 seconds)
    (36/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.50326229 seconds)
    (37/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.355101941 seconds)
    (38/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.322751827 seconds)
    (39/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.381533789 seconds)
    (40/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.411340199 seconds)
    (41/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.452550179 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.427595392 seconds)
    (43/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.333606482 seconds)
    (44/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.348253082 seconds)
    (45/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.375506953 seconds)
    (46/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.121154477 seconds)
    (47/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.34332491 seconds)
    (48/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.330165062 seconds)
    (49/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.035679363 seconds)
    (50/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.577054227 seconds)
    (51/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.491861941 seconds)
    (52/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.415568963 seconds)
    (53/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.342039272 seconds)
    (54/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.159466254 seconds)
    (55/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.44875365 seconds)
    (56/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.682925468 seconds)
    (57/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.32350356 seconds)
    (58/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.337255582 seconds)
    (59/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.353452661 seconds)
    (60/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.32942354 seconds)
    (61/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.129960544 seconds)
    (62/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.382640763 seconds)
    (63/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.371125907 seconds)
    (64/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.505284658 seconds)
    (65/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.450879598 seconds)
    (66/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.319022185 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.57895267 seconds)
    (68/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.327144602 seconds)
    (69/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.350435718 seconds)
    (70/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.323804139 seconds)
    (71/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.100168796 seconds)
    (72/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.353612727 seconds)
    (73/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.044756875 seconds)
    (74/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.34434748 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.447725948 seconds)
    (76/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.528013012 seconds)
    (77/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.429450539 seconds)
    (78/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.371181996 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.440540288 seconds)
    (80/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.430675313 seconds)
    (81/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.38662096 seconds)
    (82/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.44781361 seconds)
    (83/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.430180984 seconds)
    (84/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.602426759 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.447674311 seconds)
    (86/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.076299706 seconds)
    (87/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.325014281 seconds)
    (88/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.353895024 seconds)
    (89/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.485601015 seconds)
    (90/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.324044984 seconds)
    (91/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.32707116 seconds)
    (92/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.395595543 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.457100473 seconds)
    (94/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.381236615 seconds)
    (95/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.440364462 seconds)
    (96/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.044420183 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.49308794 seconds)
    (98/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.391020446 seconds)
    (99/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.410777773 seconds)
    (100/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.322755359 seconds)
    (101/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.419649569 seconds)
    (102/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.460678125 seconds)
    (103/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.195336862 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.484419064 seconds)
    (105/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.589940709 seconds)
    (106/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.354368449 seconds)
    (107/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.436792856 seconds)
    (108/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.480738715 seconds)
    (109/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.417859427 seconds)
    (110/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.518813862 seconds)
    (111/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.326707657 seconds)
    (112/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.473844408 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.473349899 seconds)
    (114/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.551187753 seconds)
    (115/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.541689411 seconds)
    (116/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.328000656 seconds)
    (117/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.460781838 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.494319852 seconds)
    (119/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.328179467 seconds)
    (120/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.554140408 seconds)
    (121/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.387996296 seconds)
    (122/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.453038473 seconds)
    (123/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.303720069 seconds)
    (124/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.192699801 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.495551771 seconds)
    (126/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.526591595 seconds)
    (127/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.162145883 seconds)
    (128/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.554937118 seconds)
    (129/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.382651712 seconds)
    (130/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.487670342 seconds)
    (131/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.58668408 seconds)
    (132/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.591331647 seconds)
    (133/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.493326992 seconds)
    (134/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.460208635 seconds)
    (135/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.310615292 seconds)
    (136/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.48003788 seconds)
    (137/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.432126694 seconds)
    (138/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.372170769 seconds)
    (139/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.350006775 seconds)
    (140/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.414693791 seconds)
    (141/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.456044649 seconds)
    (142/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.553579778 seconds)
    (143/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.229525519 seconds)
    (144/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.425686913 seconds)
    (145/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.348303182 seconds)
    (146/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.505079325 seconds)
    (147/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.4123145 seconds)
    (148/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.323640507 seconds)
    (149/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.336746594 seconds)
    (150/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.39487113 seconds)
    (151/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.376313826 seconds)
    (152/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.431162434 seconds)
    (153/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.195134113 seconds)
    (154/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.454526646 seconds)
    (155/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.449353999 seconds)
    (156/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.384290233 seconds)
    (157/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.350917932 seconds)
    (158/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.411181904 seconds)
    (159/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.463771501 seconds)
    (160/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.479311104 seconds)
    (161/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.387321054 seconds)
    (162/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.376041181 seconds)
    (163/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.528808434 seconds)
    (164/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.57025782 seconds)
    (165/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.330368291 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.47556052 seconds)
    (167/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.167094697 seconds)
    (168/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.332307896 seconds)
    (169/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.329176017 seconds)
    (170/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.473437179 seconds)
    (171/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.426132871 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.49548585 seconds)
    (173/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.331247414 seconds)
    (174/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.332797965 seconds)
    (175/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.332978794 seconds)
    (176/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.432515988 seconds)
    (177/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.151673816 seconds)
    (178/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.4527703 seconds)
    (179/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.494618418 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.556794681 seconds)
    (181/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.387982403 seconds)
    (182/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.082654705 seconds)
    (183/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.412444559 seconds)
    (184/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.416985797 seconds)
    (185/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.386215812 seconds)
    (186/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.345711312 seconds)
    (187/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.118932025 seconds)
    (188/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.164865747 seconds)
    (189/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.333196248 seconds)
    (190/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.426668779 seconds)
    (191/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.189774868 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.448603938 seconds)
  done (took 342.094575987 seconds)
done (took 343.314746359 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.37700817 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.442675056 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.357265751 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.356002113 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.356557528 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.340045303 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.38370491 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.35958011 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.371347642 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.37118259 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.338313368 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.370461014 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.372357569 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.367185425 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.390529747 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.35818533 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.35555813 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.366313413 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.371813901 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.373968111 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.359409294 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.35890635 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.384382787 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.356357286 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.367156231 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.366202305 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.363261429 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.349326697 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.381780536 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.372560478 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.347823845 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.368599817 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.373992174 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.368735124 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.359846924 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.368523127 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.359982781 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.446955627 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.380092786 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.369325987 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.367478069 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.374307177 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.363701771 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.365280136 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.369355548 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.387476091 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.36711704 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.372394874 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.351841102 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.340773181 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.384435696 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.372159182 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.367355281 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.336526404 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.363507524 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.376248059 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.369844749 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380943188 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.368175927 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.361169476 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.393783814 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.381011069 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.373932653 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.368702826 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.368040218 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.375711904 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.369680677 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.375590107 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.369280772 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.361860267 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.362422866 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.36894943 seconds)
done (took 107.823907801 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.484124019 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.359735477 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.516153278 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.368104367 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.523386957 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.480971229 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.367654372 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.368151085 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.367983067 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.164713702 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.369342486 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.369398476 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.361608472 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.369364143 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.481214822 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.368282652 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.36810182 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.061135535 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.369301419 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.497888746 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.355126001 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.36885422 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.370457329 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.169752701 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.36140402 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.357206832 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.496341054 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.368798731 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.068807044 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.35720513 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.35902335 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.068252725 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.498762365 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.390826404 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.381224004 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.380047803 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.525935012 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.373845317 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.484235058 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.487964783 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.523450908 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.397736357 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.357667759 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.364231425 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.371728579 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.37267608 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.364172462 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.394000588 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.356192371 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.36407952 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.05866891 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.373817705 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.363154709 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.353080075 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.353156357 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.37219318 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.353289864 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.35264909 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.480857817 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.348058804 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.45867418 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.144334873 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.138152205 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.344218035 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.333356214 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.334016673 seconds)
  done (took 110.103622257 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.398642546 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.403437977 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.434613076 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.326696754 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.377106854 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.432187113 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.328297958 seconds)
  done (took 10.90683838 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.328401637 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.331042808 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.369448815 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.369547639 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.330587362 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.48978746 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.325167864 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.328754681 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.325994389 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.367346238 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.328026651 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.328692062 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.331597006 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.31192752 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.362579294 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.325552085 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.432435798 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.315814387 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.323754403 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.461978732 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.319341637 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.329163267 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.361741757 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.322143378 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.321779157 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.321570015 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.097991339 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.325487107 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.32516404 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.325311945 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.324745363 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.38102495 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.326194801 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.315611518 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.32524094 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.429519631 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.326537062 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.324552359 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.327273071 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.318738168 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.327664599 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.323947477 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.325300488 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.324196225 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.327374037 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.34141324 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.325231615 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.31881042 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.320353458 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.320007689 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.361019167 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.318403381 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.319574228 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.320323408 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.361535821 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.325083635 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.316774397 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.315413283 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.316316324 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.316646644 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.458887593 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.353105569 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.312476113 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.350184383 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.312370973 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.314390142 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.313218775 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.315044653 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.39363834 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.312390462 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.349379267 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.310281399 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.482870997 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.327496378 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.312976472 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.304892917 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.305362934 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.312268829 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.299391974 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.309505279 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.312678575 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.304954975 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.310307914 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.310527096 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.312224959 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.463976347 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.411274197 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.312478192 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.320464852 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.311277842 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.312241653 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.355329307 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.313074647 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.313112333 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.354485382 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.422992872 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.354397806 seconds)
  done (took 135.815998033 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.31738596 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.317442586 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.308655134 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.330915742 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.307976749 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.306446039 seconds)
  done (took 9.078418466 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.309985733 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.316822189 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.315811969 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.316198286 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.317809858 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.316850194 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.316899015 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.308096885 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.319162696 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.316514897 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.318782769 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.319400377 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.316450464 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.316197427 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.316736415 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.31647124 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.318486367 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.315319319 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.316257308 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.317060564 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.304575506 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.317934939 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.318111994 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.310716331 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.321163778 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.318840628 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.3320027 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.317698417 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.317161938 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.311997447 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.32021803 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.319943223 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.310390779 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.312906877 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.32014891 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.309810804 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.320775385 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.320971468 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.317811069 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.320203193 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.321530985 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.318828517 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.318813666 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.321052495 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.310385907 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.311897181 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.324710424 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.333685699 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.318959177 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.323012893 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.32190821 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.319541635 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.322085406 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.322343623 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.312227139 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.313753212 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.323886204 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.319957034 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.319662132 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.311245814 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.320755161 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.321068886 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.312900503 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.322322718 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.322148305 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.32266259 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.311573178 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.321115001 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.320873847 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.319728971 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.32411458 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.319227063 seconds)
  done (took 97.090400674 seconds)
done (took 364.228899579 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.751291303 seconds)
  done (took 3.94703344 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.342092691 seconds)
  done (took 3.544387959 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.728180657 seconds)
  done (took 21.93156295 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.397504655 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.401885602 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.313113892 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.32438245 seconds)
  done (took 10.636239011 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.700868392 seconds)
  done (took 3.901007915 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.318055824 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.319482135 seconds)
  done (took 5.838690957 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.470230771 seconds)
  done (took 3.66885042 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.551883531 seconds)
  done (took 3.750246943 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.329480255 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.320802911 seconds)
  done (took 5.854754434 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.280199021 seconds)
  done (took 3.478027492 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.769294451 seconds)
  done (took 20.959028778 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.324979082 seconds)
  done (took 3.517405195 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.371717675 seconds)
  done (took 3.563997995 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.6954811 seconds)
  done (took 5.884808654 seconds)
done (took 101.673169681 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.301649471 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.302181419 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.303075427 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.30318943 seconds)
  done (took 10.401129893 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.379079808 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.378457707 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.386255664 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.371512597 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.373937427 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.38404201 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.358050522 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.337221262 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.371106835 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.36580702 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.385645044 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.374828315 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.381867165 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.34114973 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.370431769 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.386619291 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.371701778 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.388516951 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.343250913 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.372247403 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.318121483 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.375615127 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.366466953 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.317112103 seconds)
  done (took 33.98954396 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.801895536 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.379321745 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.459450184 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.356982974 seconds)
  done (took 7.187565644 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.421068192 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.419682426 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.436992655 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.47070051 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.521255494 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.434716174 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.341833473 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.338447562 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.323426178 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.418881901 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.502150966 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.421755673 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.638333262 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.322051747 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.633450379 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.318701896 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.317766431 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.419305448 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.469777704 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.501809018 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.318822744 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.422671399 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.426761724 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.420687146 seconds)
  done (took 35.454006376 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.329287639 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.332269214 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.320433326 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.33119672 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.321651011 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.320655447 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.326959795 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.328987663 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.321799625 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.322074978 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.322026066 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.330000424 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.322709848 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.317224993 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.327013218 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.320111666 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.321093001 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.325546625 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.328465811 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.320606308 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.317652908 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.329043254 seconds)
  done (took 30.329183247 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.304699606 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.305435671 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.659645969 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.561505666 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.307596513 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.300508211 seconds)
  done (took 13.634110215 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.375778301 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.510690603 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.31543838 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.641278022 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.725067975 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.314392243 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.309182752 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.542734042 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.82707473 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.810588345 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.371049695 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.380240153 seconds)
  done (took 19.321308346 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.321042556 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.304151192 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.307398955 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.327015709 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.364989163 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.315992669 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.317508167 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.307412772 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.363968955 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.370533645 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.317827689 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.366558515 seconds)
  done (took 21.180861397 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.396944919 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.314546589 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.320570097 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376455064 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316765926 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.313400095 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.314132856 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.020628043 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.322046388 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.591114123 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315116702 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399672045 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.561911158 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32298139 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.323158259 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.259200016 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.543181027 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.778702906 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321872488 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320154653 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351770563 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.327295516 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.321684156 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.512021797 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.32660259 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.317969076 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.58352754 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.31831716 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.588148042 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.55886537 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.559526067 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322624111 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.597698665 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94438912 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423728225 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511898821 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326473536 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.324538288 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.308091978 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.32216933 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355028221 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.324551896 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.556601081 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324545359 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.319648096 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.316030699 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043670696 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.330454624 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.318493237 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.322279737 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.564450009 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408849919 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.323186498 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.3244624 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353964401 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324411628 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.32759965 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438505698 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963751784 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317200005 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340495552 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.325790951 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.312382854 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351514774 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941964473 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.335514144 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.322260684 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.325599755 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32173223 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.327760563 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.348069122 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325218675 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.341293723 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320487647 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.053127678 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.324809126 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325216372 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.863042906 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338344555 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.327820785 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.549985768 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319051149 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32450034 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.322894671 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.324239689 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011580433 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332396272 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.290215966 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.365762365 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.02959757 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.518006618 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342731049 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354378709 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.542587459 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.289260935 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32159619 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.325106217 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347130275 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342862808 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.041764563 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325280454 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.32797743 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.57244408 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.534333444 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332316706 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.263819835 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.782583202 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337223117 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.350104298 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.328356099 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.51856349 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.919500975 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.576707414 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329088332 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360784984 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.329392313 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088694825 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337578391 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.335244941 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.32940945 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.601988851 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.102956583 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327294658 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401746131 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.337500457 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.331135392 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336622268 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333849835 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.328439594 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.496599286 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339679507 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.569142695 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.334551502 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328123595 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.327561556 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3349277 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.330017828 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.549872331 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330358847 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.605478589 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329120097 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329441454 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32712836 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.540025568 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.333774088 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.332259216 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.667904961 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335225343 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.336619981 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.575102935 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364020804 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438583516 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359960239 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.332978167 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.575801745 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.336376667 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.335665867 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334574046 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.334488209 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331768206 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.335843191 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327814212 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924679422 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310464845 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.331817882 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.329206086 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.347779252 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405639952 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.340972139 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.5255249 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.333360727 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343829608 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.339527228 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.329435782 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.557895775 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.572376623 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.338002432 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.512475183 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.786611965 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.924702017 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.346542523 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.332906607 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.329024422 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.329582643 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336485236 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334844269 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.332994242 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.528643022 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.582893472 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.329198621 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.932024534 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337225602 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.333131516 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.342748707 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.573876078 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.344267936 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332048903 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.336201964 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336953549 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348504342 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.578669129 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55669074 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.350624406 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.335462369 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.853669471 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.336844402 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.337222844 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.333888189 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363259998 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.331395687 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.220280042 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.675597178 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341544425 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.575213437 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.337375389 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.35343044 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.33167192 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351424032 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347145201 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.342776474 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344035185 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.527008524 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.346079077 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341818474 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971257376 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076276758 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882098478 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346316783 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.346075746 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.337333285 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.047236746 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34018568 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336633997 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.577051454 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.048676519 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339789868 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789891255 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.349980799 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.062853618 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.581827289 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.566192335 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341307825 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.34247757 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.585759365 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.553599737 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358917987 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.337079339 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355304667 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.306138814 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.878554486 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342031412 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.519620819 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.049899525 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344501088 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.340647558 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.376631582 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.337272669 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.709513912 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.339848928 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335508507 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.338527335 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.348128415 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.220840268 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.344217928 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338409114 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969723645 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.345652429 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.799373806 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341144953 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.538018192 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.580281131 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.56350425 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.344282414 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.343145456 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.581600558 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.578120738 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343624867 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.346246989 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881871335 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.196586084 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.345407972 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339364557 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.097886458 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338199414 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.626055483 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.352056536 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.340264799 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348775331 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.33868112 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346347847 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.340254224 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.348982125 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315250138 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797896767 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.332083612 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343433076 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369798417 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339505059 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.588932027 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.354433556 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.935187046 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.565281272 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346245703 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377955663 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.346026596 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350013512 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.314218199 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.341738986 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.339555384 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399061129 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.562048872 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.337423777 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.309891682 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.407450959 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.556282115 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.338868905 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.344353971 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.568838062 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.343308906 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.363656042 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.100939922 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372462789 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.34353398 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36731284 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.329771237 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.379902738 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416840533 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.535488264 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.587308382 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.590079478 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.717553207 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343093141 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362558371 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.359437945 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422282495 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34061283 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.348487381 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.342377879 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940704794 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.102978314 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.945326676 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.587680897 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.342034419 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355180057 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343113161 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.580459244 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342145452 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.624904004 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343612289 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.342970924 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362084668 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353865491 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356451262 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.554308199 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.617450161 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348330335 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349671231 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346870313 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.344076204 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592804437 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.554631299 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814117124 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.861542835 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341457675 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.349986698 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.070170841 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620468351 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348568134 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346692863 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346229079 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.365168217 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.343370046 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.357957291 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348051327 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.574441183 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.592424562 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98690224 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.593150136 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.580474598 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.349418675 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345871604 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.593953248 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.188156598 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.539717404 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95419822 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.043025468 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.598603074 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420500269 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.545650909 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.345970469 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.585297021 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.35687353 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.344763759 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349626452 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34857289 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.345512024 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.59264697 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.955858592 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.603857454 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.356115873 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.356524165 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374411189 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.543525399 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.568811758 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.060318545 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.570702114 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595985286 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.357780097 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.352601932 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.961589581 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.597889673 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350661561 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.353790936 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560415297 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.35084202 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.387174748 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.227797467 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.349353587 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.882316045 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.557833683 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36820615 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359625083 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.046006035 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.955702332 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.357560919 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814219477 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34802154 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363881159 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629507076 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.359467139 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.355191045 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635664223 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.354778549 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.351454054 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.551694288 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.949417762 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.082615235 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.376432638 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362703038 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.358446226 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351468678 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426484928 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352428087 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355500603 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.732166005 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.355138936 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354232792 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.3610936 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.357753866 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360353325 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.355743188 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354957423 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.356429459 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.352444958 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.342115402 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.364922815 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.476509849 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.906405738 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35638161 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.973066478 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.686812319 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.604720839 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.359581949 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.325854886 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.362907861 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353577784 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358230129 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349534563 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.371223089 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874173742 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.358701863 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.605865136 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.359039991 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.566483605 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.563472091 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.355872621 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.551227072 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361368054 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.379153239 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.323602689 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355914448 seconds)
  done (took 961.890122152 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.376357887 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.34919265 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.358816436 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.403643834 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.34233037 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.349186276 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.351293126 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.39982199 seconds)
  done (took 20.153722411 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.34795565 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.354170964 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.345357838 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.350930212 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.356368546 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.810012133 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.357358009 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.347984837 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.370835439 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.348135694 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.357775162 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.954584296 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.356443031 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.361812987 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.354906756 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.361025906 seconds)
  done (took 31.96738809 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.011909614 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.692523794 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.792620534 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.366809717 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.375372188 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.353889435 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.456269275 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.376596947 seconds)
  done (took 25.65585662 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.362742576 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.360505805 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.364370303 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.365581532 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.364119924 seconds)
  done (took 8.048870575 seconds)
done (took 1220.407981753 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.366335239 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.367064623 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.361891406 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.36039485 seconds)
  done (took 6.686241212 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.331130803 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.327765615 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.32348804 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.344571404 seconds)
  done (took 9.557816755 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.012829892 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.856317001 seconds)
  done (took 5.097434199 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.889900379 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.885073691 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.883944849 seconds)
  done (took 6.889808143 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.633237425 seconds)
  done (took 2.865945727 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.34596775 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.353744674 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.078736329 seconds)
  done (took 8.010666683 seconds)
done (took 40.340626867 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.354084801 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.111844034 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.508408452 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.356997303 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.509538089 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.511149952 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.606656709 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.356091577 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.351508038 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.345200123 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.358293123 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.50334284 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.590642113 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.112102605 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.591820278 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.112882131 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.510307896 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.35094108 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.34937928 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.345664454 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.597973545 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.350962236 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.350959984 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.351937111 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.510119308 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.500488731 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.355910978 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.113803983 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.352686109 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.346268367 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.520018392 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.35441754 seconds)
  done (took 81.775141464 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.350858551 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.357554071 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.354999998 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.349361908 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.364049892 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.374840017 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.350235437 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.347290572 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.353958108 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.348741217 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.349013627 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.369587697 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.353948754 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.352783661 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.366477534 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.349989036 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.367299147 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.352534513 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.362999561 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.352210271 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.354763771 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.352510477 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.362976685 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.346847039 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.350388304 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.358610691 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.363136365 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.353972323 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.350040279 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.365297845 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.376894817 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.354431667 seconds)
  done (took 76.654361313 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.355916312 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.351979972 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.372875908 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.350773662 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.351821155 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.35991084 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.353259272 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.348910365 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.35105884 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.354540645 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.351539831 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.352898097 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.354722146 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.36663442 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.354856596 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.365754649 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.351645353 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.350771006 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.352704834 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.354720094 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.350762461 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.349330932 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.367258745 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.350941741 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.357539899 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.351621506 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.358938178 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.353104679 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.355725645 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.352387303 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.371070246 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.368558546 seconds)
  done (took 76.628194778 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.601676295 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.374275364 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.377349738 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.36986002 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.378039776 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.372660029 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.369697638 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.605979374 seconds)
  done (took 14.685566913 seconds)
done (took 250.975001461 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.373075592 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.8329639 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.394332925 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.367865384 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.381376035 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.395760615 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.58496915 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.395864467 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.58394091 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.378546832 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.382969959 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.366002143 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.138031335 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.511516527 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.171635338 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.284604972 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.211637503 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.362241122 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.901815666 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.640155574 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.390672942 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.359384198 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.167808883 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.229298615 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.354381805 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.438018927 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.459116733 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.592350527 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.526518014 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.444221869 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.85224369 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.367570092 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.367126472 seconds)
  done (took 63.447000223 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.368046489 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.372140045 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.37768039 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.378524872 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.373180036 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.374998178 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.367706704 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.373314277 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.378201133 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.372757551 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.37538174 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.377222114 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.376738378 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.375379182 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.372645835 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.348679333 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.366208675 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.374669068 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.364200044 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.349464569 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.371868721 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.375231281 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.374080658 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.376391317 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.378092625 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.379902858 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.373947907 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.379093084 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.375724721 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.372335907 seconds)
  done (took 42.409000585 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.378164028 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.930592662 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.079115687 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.372982166 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.369496259 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.374195502 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.64328618 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.380889429 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.370786725 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.372463437 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.834744924 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.380154441 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.401532018 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.089634238 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.374177517 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.382361623 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.378909769 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.370450063 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.937669459 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.383063345 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.642766501 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.376584045 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.64595569 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.378316917 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.371505966 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.370086341 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.372692108 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.156709855 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.388485246 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.839923437 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.102760649 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.642516358 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.084755876 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.132910672 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.106956821 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.381002994 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.378459112 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.840910967 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.366364625 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.371103069 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.642411004 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.370488189 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.097178181 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.042851134 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.391015084 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.380827699 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.180596633 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.829558107 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.596608374 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.376968869 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.125861839 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.371970469 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.382211553 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.368426499 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.600318249 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.375176588 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.373995112 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.211296807 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.37450947 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.641405305 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.38109666 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.373140853 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.932805273 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.371331005 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.9269298 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.376768564 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.379002536 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.372648532 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.102330337 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.380065099 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.060036173 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.380959731 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.380782401 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.844403984 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.932493593 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.226046993 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.372357414 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.940694482 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.116406586 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.653299491 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.377317892 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.126242788 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.658880676 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.374819028 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.381749978 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.383795414 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.385582882 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.451532722 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.643901241 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.97095959 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.054587834 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.202811724 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.64396174 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.3805918 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.374170601 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.203857974 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.381166156 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.381559064 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.093564709 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.061214467 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.383362733 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.384355565 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.049334144 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.391569245 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.650857298 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.384015122 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.140777906 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.3746536 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.452867282 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.385408094 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.382728185 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.379461904 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.6521779 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.382299133 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.388375484 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.04203307 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.86189923 seconds)
  done (took 191.456386962 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.37552125 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.384283196 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.372621578 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.368401572 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.372326757 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.379050523 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.370518481 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.369220296 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.378470541 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.368181501 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.369527838 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.37975983 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.374372252 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.371005588 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.377376511 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.373674305 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.369081051 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.369855335 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.376497118 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.370568468 seconds)
  done (took 44.7213168 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.384824948 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.914238061 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.878551779 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.3869674 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.388233703 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.380820706 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.430830761 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.381194198 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.383701935 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.662445706 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.546563998 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.386828544 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.39029789 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.388794706 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.876280432 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.359458921 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.667952464 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.910431589 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.389418521 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.915113672 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.361396797 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.389406316 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.380324759 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.912306728 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.676474088 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.652903676 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.43626048 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.918059297 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.38793198 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.38947781 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.915151226 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.393891758 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.378930808 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.902391838 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.393327405 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.402965052 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.390218439 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.436247741 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.437217645 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.670431305 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.924059929 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.660537823 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.401777766 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.543092787 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.388994124 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.360206322 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.929228504 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.393618514 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.359920691 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.391634362 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.396291585 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.892672821 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.387041372 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.889570677 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.39223399 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.389743287 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.917310749 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.893153752 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.879167854 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.545830166 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.3797546 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.654184342 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.391396964 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.927739227 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.39254998 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.392093647 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.392182002 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.545744833 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.916209079 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.651937854 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.671985778 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.674230448 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.390618549 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.444510661 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.393919997 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.669881284 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.446182757 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.764336788 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.671229845 seconds)
  done (took 124.806881601 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.653356442 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.488654288 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.756684368 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.955944169 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.874944855 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.521820461 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.49664732 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.618869931 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.392052946 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.491138132 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.016896245 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.476157209 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.121264764 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.43930196 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.485489662 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.504505737 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.768944278 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.31151252 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.021178039 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.995445194 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.401773395 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.481611344 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.878954977 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.579531511 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.38169426 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.95651145 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.315230015 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.892017551 seconds)
  done (took 52.534118844 seconds)
done (took 520.614160773 seconds)
SAVING RESULT...
DONE!
