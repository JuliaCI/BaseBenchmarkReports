cset: moving following pidspec: 11942
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.419516692 seconds)
loading group "string"... done (took 0.504881394 seconds)
loading group "linalg"... done (took 8.80555124 seconds)
loading group "parallel"... done (took 0.171001696 seconds)
loading group "find"... done (took 1.26524339 seconds)
loading group "tuple"... done (took 1.992440258 seconds)
loading group "dates"... done (took 1.358162718 seconds)
loading group "micro"... done (took 0.192498964 seconds)
loading group "io"... done (took 0.503113881 seconds)
loading group "scalar"... done (took 51.44278382 seconds)
loading group "sparse"... done (took 13.610310223 seconds)
loading group "broadcast"... done (took 1.275557669 seconds)
loading group "union"... done (took 10.5186649 seconds)
loading group "simd"... done (took 3.108484475 seconds)
loading group "random"... done (took 12.145019973 seconds)
loading group "problem"... done (took 2.198988917 seconds)
loading group "array"... done (took 23.655628529 seconds)
loading group "misc"... done (took 1.096556449 seconds)
loading group "sort"... done (took 3.670043146 seconds)
loading group "collection"... done (took 19.075291177 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.605984369 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125677952 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.263798181 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.275733351 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.235503626 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.165429235 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.141821223 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.240278887 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.56733439 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.203147042 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141692308 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.501977027 seconds)
done (took 6.204523477 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.251783551 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.178105275 seconds)
    (2/2) benchmarking "String"...
    done (took 0.164902707 seconds)
  done (took 1.024268643 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077616694 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.159451522 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.107719451 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094488166 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093416815 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109681196 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093724989 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108929884 seconds)
  done (took 1.451239124 seconds)
done (took 3.487120263 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.503529316 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.867933549 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.502008885 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.145600209 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.313749331 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.314326379 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.313997667 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.20776375 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.11121931 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.093191454 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.178604933 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.401504035 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.417314339 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.93724075 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.091695937 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.097210147 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.136972564 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.767650487 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080115001 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.125144809 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.477096689 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.183746778 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.100006524 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.120438921 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.186427262 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132615788 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.159801747 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102889412 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.661724517 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.132737785 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.180789862 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.097938509 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.160166836 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.183865179 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.20968304 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.094570683 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.678587195 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.201486276 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.089945189 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101279293 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.666820136 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.123285161 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.190622757 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106671252 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.092279467 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.182469178 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.090843163 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.078372041 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.111430793 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.087886448 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.163317704 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.454749707 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.107522794 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.176003384 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.093354117 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.685032565 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097470867 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.273126914 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.130770075 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.096675581 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.094466117 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.090630097 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.162981515 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.094918395 seconds)
  done (took 20.032367227 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.145753618 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.164915443 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.081562118 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.158471751 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.126329513 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.082653676 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.105109036 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.081470058 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.129014561 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.182857938 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.14292726 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.154924526 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094451822 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.093807114 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.134100203 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.25289197 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.110595295 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.125718005 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.091463986 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.092584196 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.144726732 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.100120268 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.111357843 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095296353 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.173559483 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20826256 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112619286 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125067868 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.094727281 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098962992 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144014982 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.148156034 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094842692 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.091504853 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.191974346 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.109862417 seconds)
  done (took 5.299895341 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.199357636 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122365208 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.209263687 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.159433256 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.147542753 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.165226559 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127283946 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.269438698 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.197498779 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.181963555 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117854986 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.126672323 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083072001 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084172967 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.09687293 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.430287901 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.149665368 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.161680274 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.132630201 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102688916 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082018937 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.378939561 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085219752 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.09801164 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085820596 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064666549 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.198964111 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085339063 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.119241879 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.083091025 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104645529 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114874628 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.2176778 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.129978402 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.124740739 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102337359 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.081104754 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.229449667 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08890696 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.09466503 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.118033778 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131343652 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.11935043 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097241662 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.089837162 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.223559674 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.083533991 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.119253879 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.0543972 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.197747911 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.155137909 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.09672957 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.29270986 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.102560399 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080713974 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078405582 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.812509148 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131851675 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084348505 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.087436746 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.099810662 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08449769 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080521939 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.43526323 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100202247 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.033254675 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.086042645 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.159467218 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082942765 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101596915 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091648825 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089524535 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.122835456 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.139826136 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.096362845 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081288904 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079555178 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081632917 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.104087356 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08280108 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.128719661 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.087502289 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079875768 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.161142415 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.101803993 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.102814749 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12906649 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085892328 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.098329762 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117384682 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101111333 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084355122 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.166242252 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082399837 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112499329 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098812588 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143242349 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.085402641 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.242612528 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.098590511 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127824276 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098143797 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113766998 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.115051412 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081742317 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083994992 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.101027828 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.079886388 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080679015 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161360084 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.084126509 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.083539296 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082078246 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.113526935 seconds)
  done (took 27.784818012 seconds)
done (took 53.799702758 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.434690736 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.085613982 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.084588905 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.100102538 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.079185164 seconds)
  done (took 1.542679421 seconds)
done (took 2.278064188 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.315657265 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.188278364 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102978789 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.186471573 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085662878 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.191009752 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.178677705 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094844527 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.20291769 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.085510788 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.184012133 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084599048 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.103629957 seconds)
  done (took 2.764048385 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101052873 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.109074962 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099617362 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117219019 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083242588 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099473192 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116912487 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.112754864 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100797257 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114498459 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086429575 seconds)
  done (took 1.874379483 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097351863 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104661472 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096366394 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114318109 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083494795 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096758587 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115152479 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109904901 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098760449 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113226373 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08627257 seconds)
  done (took 1.853736028 seconds)
done (took 7.226051485 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.080380257 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.379684082 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.148596614 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.211017998 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.352828068 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.257058739 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.545531633 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.1743628 seconds)
  done (took 14.030493725 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.166984904 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.110306339 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.093042806 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095275141 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.092087506 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.109083253 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.095490775 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.090989204 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.113062024 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.090959813 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.09479625 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.106167673 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.091274304 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.091239541 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.110598855 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.094930866 seconds)
  done (took 2.442168959 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.143577514 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.14061588 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.098359198 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.098574886 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.11162455 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.098076553 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.102133314 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.114791973 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.094468142 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095917563 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.117586389 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.09901439 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.096948514 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.108439814 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.099360308 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.118181255 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.109602554 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.098751442 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.11645144 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.114702551 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.099237264 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096538152 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.113499195 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.100288359 seconds)
  done (took 3.410869208 seconds)
done (took 20.622592993 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.148802404 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100815294 seconds)
  done (took 0.995657355 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.144042249 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.158201671 seconds)
  done (took 1.049820678 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.112963544 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.089931281 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137048678 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.103809879 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.090322475 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.107414661 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117716542 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.107560876 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.092420831 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.09182983 seconds)
  done (took 1.800414656 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.094646055 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095996206 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.120757024 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.139211166 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.116408441 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093842492 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.096032762 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.094327753 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.097937633 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.090755095 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.096113266 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.125801772 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.097224652 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.125237247 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.096764347 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.096679704 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.116647098 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.096283164 seconds)
  done (took 2.658573089 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.091623132 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.09290254 seconds)
  done (took 0.938383249 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.095093511 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091481951 seconds)
    (3/7) benchmarking "month"...
    done (took 0.093254844 seconds)
    (4/7) benchmarking "year"...
    done (took 0.11058831 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.091262851 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.089523988 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.107274963 seconds)
  done (took 1.432366178 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.484585806 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.259753879 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.359800158 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.107695117 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.145816705 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.465652042 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.145700717 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.104297823 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103151626 seconds)
  done (took 2.964853607 seconds)
done (took 12.593843065 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.09151733 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.228759395 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.621723494 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.112919307 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.089785213 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.159789914 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.281421918 seconds)
done (took 2.345364911 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.335767817 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.141028338 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.080804383 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.088977979 seconds)
  done (took 1.397426574 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082679101 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099317015 seconds)
  done (took 0.942843361 seconds)
done (took 3.10071222 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091139404 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.089425869 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.088751569 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.104920552 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.089392708 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.089303338 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.137620816 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.089461836 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.089091825 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.106356213 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.090774306 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.089466675 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088661893 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106960226 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08926292 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087962565 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.106100405 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08936987 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088740615 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.088008862 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104820992 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.088950186 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.088552649 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.103675094 seconds)
  done (took 3.078676398 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.106928996 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092631761 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.109631109 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.09438745 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.092764591 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.108481376 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.094228945 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.090756669 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.109262606 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.092060549 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094492693 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.108992377 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.091078044 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.09417556 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105520066 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.094676958 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.092615825 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107018042 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091999932 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.094526005 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.110672289 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092413939 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.09361996 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093557021 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.11028875 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094026951 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.090173355 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.107122778 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09357853 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.093414777 seconds)
  done (took 3.703691453 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.097766384 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.086595822 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088737187 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.114051693 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.088510354 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.088724363 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.10418902 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.088222197 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09024481 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.087940121 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.108023271 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090416496 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.086041462 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.107785108 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.090617034 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.092285292 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.114005566 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.087455502 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.087277006 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.091004694 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.110195211 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.087414434 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089542441 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.10730009 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.090566885 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087060625 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.08963915 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.107137702 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.092107321 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089976407 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.107784911 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.0930845 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.09055414 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.114706497 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.093379766 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089308188 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.095282768 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.103834002 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.09193101 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086605797 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.103855489 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.090254707 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.086851829 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.111674343 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.092957541 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090836968 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.086952281 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.107360815 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.091159618 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092983623 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.102958716 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.088604772 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.092134483 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09050952 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.109359153 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.088506572 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090608937 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.10318864 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.091503243 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089677982 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.103467171 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.087932484 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096015213 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089672342 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.121258161 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.097336086 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.088150913 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.108536276 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.091081947 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.095451531 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.108396596 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.09989187 seconds)
  done (took 7.662941641 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.103311136 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099554471 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.090799022 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.108148786 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090882 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089239913 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111553487 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090678073 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091239131 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.112262172 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092514372 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.091165535 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107473841 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09217604 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091195758 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091444324 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112952197 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090931061 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090277704 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108541759 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091531308 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.096266853 seconds)
  done (took 2.911765583 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.236375428 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097358591 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139135945 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.120849878 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109281594 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.120608361 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.094573045 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095176714 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112239872 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099773036 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100045454 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111743421 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110428915 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115372939 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100369116 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100291011 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114210272 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100647874 seconds)
  done (took 2.845925658 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.103514021 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092851402 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.127724983 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092677705 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.094165304 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092437705 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.115134116 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111899335 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.109158178 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09294819 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.099870359 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111175915 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.093444164 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092816562 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092482767 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109130468 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.093742357 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092867378 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115672695 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098642959 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.114895964 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100272042 seconds)
  done (took 3.01843995 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105631174 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093250604 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.125126063 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096967877 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091154355 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.108049494 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.097589492 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.092783554 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.11531369 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.092817628 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092562792 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091883249 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.123288646 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094393523 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.097923349 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10928653 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092465382 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092040933 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109417275 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092538156 seconds)
  done (took 2.789400995 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.172646649 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124200478 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108046564 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116594117 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124516709 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.10973953 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115174462 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.126165277 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107814793 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135032049 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108261434 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107627128 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132567389 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11422784 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124786345 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117562039 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115949659 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133776449 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109419862 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125554494 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119776127 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108540722 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13243734 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108981562 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.123903099 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108537053 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108098223 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130527282 seconds)
  done (took 4.147578832 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091830416 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090755166 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090281572 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.107253392 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.090951175 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.09041259 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.089882551 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.108225943 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091428782 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090753344 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.10799403 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09199822 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091122689 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.090401051 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.107817186 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091229348 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090813707 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.107215259 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090958647 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090795348 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.090074441 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108782183 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.091233924 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090903782 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107898454 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.09182268 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091232969 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090977514 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108577977 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091444774 seconds)
  done (took 3.64185325 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.103863198 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10167959 seconds)
  done (took 0.983699778 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099704953 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105278876 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.089952949 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.108579509 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098809026 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.091321755 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116324271 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098045149 seconds)
  done (took 1.588204498 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.143908133 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.162419518 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.096071795 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.102621505 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.163046873 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.155513786 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133930443 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.096174728 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.108138256 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085297894 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.15700285 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084764167 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092677763 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106560937 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093225982 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09785565 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.109579395 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.101857602 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.099178349 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.110740449 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097176216 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09854932 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112322894 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.10339956 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086766974 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.111584235 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096780134 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102927987 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10634694 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093822984 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090278445 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.109216993 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.0968095 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.096379977 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.109152381 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.14752878 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098206133 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10800047 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093498281 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095937831 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.142656582 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093522138 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.09367754 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.109686664 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09534155 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.095934409 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.114344373 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093259719 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.085034096 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.104942821 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093854848 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086740972 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.110253029 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094361147 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.092889231 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116272322 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.09506435 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.089396218 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.105490586 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.08940577 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.092102279 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.10511881 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095465113 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.095509176 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.11066396 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.094161928 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091545373 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.109520037 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.09431378 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.092943444 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.108762236 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108915393 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093910499 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.114796695 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099134402 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.093710876 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107204825 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098630789 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091488006 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.111023543 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.096896161 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.122963516 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111744211 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089817406 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089331422 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.099808088 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.112815425 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.095710427 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085174614 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119618869 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.096672149 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.093084548 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.104677666 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.091972565 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08870558 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.114253442 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.087321679 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093473402 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.109006567 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.09849702 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098633219 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108925389 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095114687 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097400375 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.114983803 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092784063 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.138462735 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108499688 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088400045 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095223301 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116704282 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086429386 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092824254 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.109914162 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090294171 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087542882 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.114755883 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.094531879 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.093539921 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.113852533 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095794579 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.094779672 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.11222471 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.092812994 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089198326 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.096244127 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118593835 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094748671 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.093489386 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.111630158 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.093363663 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.09212091 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.113317108 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.09138784 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098298158 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107215458 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.092938775 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.093739203 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.114052243 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094228042 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.087894055 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.108842738 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.095083854 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.093466465 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.112824433 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.094647927 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.090547323 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.103484274 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.095662296 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.088706238 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.094071162 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119439261 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.089854304 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.095268982 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.107961869 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102151171 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.09015909 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.117002747 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096767326 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.099403895 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.116867655 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086742912 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090629313 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.114140805 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.096696622 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089942842 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.111832412 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.095570411 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.100847828 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.087006587 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.1160863 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.087433417 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.093607344 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.116922758 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.096243895 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.096462403 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.107908448 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.133050326 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104700515 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.117212211 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093878716 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093258338 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.115909522 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.096725553 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.096078248 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.116597019 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.098956651 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091443477 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.110344107 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099804342 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088477923 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.113359551 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093058003 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095892387 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085406381 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.113261809 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.08581271 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.097273488 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.113117693 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.098707854 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.097404972 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.112802523 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093343789 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101011996 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.107087338 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.09794087 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08569177 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.11507194 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.105855702 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.099756434 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.116977724 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096833158 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091559759 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.111673714 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103714884 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095540866 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.093384994 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.112841746 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087947851 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.086970516 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.117623314 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.096522115 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.090393522 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.111711192 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09726559 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.097291445 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.110109274 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087770493 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.098173532 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114402727 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.091818054 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095018833 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.108000119 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093168631 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102438723 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.106357686 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.091446115 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096575848 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.116432282 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095352221 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093521531 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.096693848 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.118651067 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.098511905 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.096434411 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109549092 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103830836 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091933732 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.112931552 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.092238551 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.096847863 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.105611743 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097003408 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.095389931 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.090568714 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.110164681 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098638166 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099528282 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.117755523 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093225453 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.098143781 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.119773091 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101140872 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092236716 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.120006959 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.092048664 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.086887299 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.109485974 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.088083145 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.096032775 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.108846169 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100132885 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.093258523 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110818351 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.098337436 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096653491 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.109279546 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100641477 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104749129 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.106667602 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.088007729 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.101475285 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111604123 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.091720184 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.09136579 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.113468497 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098387024 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.09919296 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114628385 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.09308836 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.095258254 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.100130555 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.109715553 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.101603282 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.100155639 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.119228153 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.09161959 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.098608546 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.109943317 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098948106 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.088630619 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.11223078 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094749529 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093919041 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.110104856 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.093983676 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.090458007 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.105703725 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.092334266 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.100525331 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.111768158 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.099735301 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.102734135 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.111034617 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.093885062 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090733085 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.09991535 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.113427839 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.10088327 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095658993 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.107912821 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.088988706 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.099858266 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113522223 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101433521 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.091998154 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.116420924 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102322867 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098396089 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.095278407 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.122410508 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103568482 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.099585907 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11957959 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.089726274 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.092951829 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119058295 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.096345069 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.098044781 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.11579407 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.089884442 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096715733 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.118941024 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.098043557 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.093676676 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.107719344 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.09762671 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101315728 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.115601375 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.100024532 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098924557 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095607434 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.109252272 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098463601 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.099431754 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.114327283 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102745133 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093925412 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.11752459 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.093022138 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100326095 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.113550331 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090399799 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.089517321 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.110537501 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102020435 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.088943138 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099304466 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.118409489 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.093701519 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.093386384 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.117882389 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.092648451 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096788499 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.117946175 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.094339916 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10454268 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.114428205 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.093937007 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.099888924 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.118585189 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.090361448 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093692244 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093208988 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.122108571 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094300732 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.099785627 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114484712 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10138848 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.098099493 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.119105022 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101117185 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.099506435 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.108050701 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102723038 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097507791 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.116065901 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.093945925 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093917266 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.107361904 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.095072257 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.100560627 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.092058094 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.122614018 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.102124216 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.092272637 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.112832367 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101079487 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093254314 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.120761991 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.092437577 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097145497 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.107773255 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.097789404 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.09469155 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.121200856 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.093135722 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.08954455 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.118959919 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100821651 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098790468 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.117318472 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.102866849 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089034387 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087867621 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.116563321 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092790356 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104570539 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117979316 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.094860583 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093213341 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.117332992 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097340488 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101246433 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.108805174 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.093237418 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.095901499 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115560794 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.095153156 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.089991598 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.117224153 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095752771 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097237855 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.113483561 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.090660567 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.094142013 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.11928355 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.095648976 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.091668707 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.091403945 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.121237525 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.095055437 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.091604294 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.108326833 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103035679 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.096681293 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.122031041 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092675917 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.095066309 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.11166466 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098388039 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.101913969 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.11348582 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096332846 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.093338037 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.119239297 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101836117 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.091099701 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.111633984 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10542303 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099855785 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.116290873 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099117951 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.094663348 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.12007308 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10338785 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.09812119 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.088826298 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.109163473 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.094958046 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.089255802 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.117094394 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101918759 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094027409 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.112760819 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100735078 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099090491 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.115722386 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098945432 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089879339 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.121108538 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.094459406 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.098642464 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.089767627 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.109926251 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098478323 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101294615 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114433826 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.09706262 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.097644096 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.117359227 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.091646726 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.093055588 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.118057357 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099986431 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101592164 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113635312 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.09508526 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.097918299 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.124060406 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.097297436 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.094850285 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101371217 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.122166972 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09609714 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094493512 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.120206568 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.101319474 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.096512158 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.121472628 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.094294539 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.095440104 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.121969002 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.102423461 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103981069 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115442093 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.09022811 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.100021224 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.113735119 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.091653347 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.099207075 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.122441399 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103295089 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.095203507 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.111617401 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106485341 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100622624 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115819431 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.09460913 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.093606268 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.118715327 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09593861 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099497347 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.091733084 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.12273184 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102563851 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100440252 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.124014266 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090819505 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099940249 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.117989553 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.104015957 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096538293 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.109699837 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.091122904 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099318792 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.121037474 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.10290952 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.099325183 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.098836092 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.120908085 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097277916 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095474913 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.113433209 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.104363468 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.100823069 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.116985526 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.099026159 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.094432663 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.115467902 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099462658 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.101499007 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.121384048 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.098038374 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107202209 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.12223441 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.097069547 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.093239166 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.115430003 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.100138183 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.097470498 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099998155 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.114133006 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.091785856 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.1015832 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.122328561 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097142451 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102733115 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.122130299 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.096967634 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.099142508 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.123224042 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.10228945 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098479426 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.11607439 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100121521 seconds)
  done (took 61.844997041 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145364873 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104402815 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11709996 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098618994 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115291803 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119519005 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098850351 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099688041 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.119062602 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108058458 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097806454 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116922582 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11411908 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137780031 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116457959 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107263802 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118761495 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099659305 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098525699 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118223539 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115685627 seconds)
  done (took 3.201876023 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.116407918 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111265479 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.128960581 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113174552 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10483981 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.129950979 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109256956 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.128797467 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112850027 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106496014 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.131790901 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109217763 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.127098724 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.10904173 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105757089 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.128083726 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112937879 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.124185787 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.111039078 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110215575 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.127636999 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.11141181 seconds)
  done (took 3.405454032 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.129361509 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101757898 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.096615461 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.119066565 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102207223 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.098110625 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.12084955 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.100282356 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.106577825 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.112893492 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.090730138 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094033106 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.096474802 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.118791023 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.094576908 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098424667 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.126077023 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.104234254 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.1031168 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.119239512 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.090842396 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099078573 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098217287 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.109622407 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.103611262 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102147314 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.117940333 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103253248 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089756144 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.100601477 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.118424236 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093501636 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089136058 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.110368059 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.09077863 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102202768 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.121255816 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.100508686 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099297639 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089529147 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.118966246 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.102898488 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089933822 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.118342106 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.100311051 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092842244 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.100825399 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.119814817 seconds)
  done (took 5.844172326 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.128688694 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.16396397 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.103412955 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.136384401 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.134707422 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.109062242 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.123926116 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.13709595 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.099852571 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.123167651 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.114259745 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.134526223 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105353405 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105475351 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.125766208 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105806555 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104558418 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.122478513 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108563509 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102929724 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.127491846 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.106034429 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.351341007 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.13339648 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105892552 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102162121 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.123754148 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106647231 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.131937152 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.10974656 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.10538233 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.127493463 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.11285447 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.10422957 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.123307961 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.103098117 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.11324926 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.124631952 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.10348587 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100884338 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.125694405 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107378486 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.103611183 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.135113065 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105084216 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.123696651 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103691621 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101023501 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.132111483 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.105158573 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.108247421 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.133738527 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.104746265 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102940603 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.12719487 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.113743608 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.122926459 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102261288 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.105566669 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.131155432 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102694036 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107624596 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.132952804 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.103987359 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.107237164 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.133894857 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.106197566 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104669544 seconds)
  done (took 9.049688483 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.134779389 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.106838298 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134941276 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113901577 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10610267 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.128605064 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105880628 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.125964371 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.106958693 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111280628 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125652217 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.199471812 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.124759661 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111312151 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104800422 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.127448677 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.10615728 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126993038 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107762456 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10583348 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.12614834 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115113244 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.10503458 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.133647705 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117799032 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.122685895 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107063448 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105906227 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134323611 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.107776342 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.117570647 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.127428134 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106774405 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.134462248 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.117418034 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.10554517 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.121374613 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107066432 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106223558 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.127389749 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.103881811 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114744782 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.127816071 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105130489 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106112961 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.128561438 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115178139 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.13744123 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111296423 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11058982 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.129004272 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114545853 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126594586 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.106800694 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114287111 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.143691098 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115043751 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.136465688 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107155246 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.114390639 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13599543 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.120743015 seconds)
  done (took 8.235489531 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100471127 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099388603 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098185034 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.12046582 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100561192 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098282652 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.12058071 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.10151274 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099828467 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098500046 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120829172 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100255357 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098731426 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098411359 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.120248915 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100360711 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098859448 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.121720978 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10084451 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099541104 seconds)
  done (took 2.948070333 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.111210584 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.116645046 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.122242194 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109917959 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101979088 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.127793572 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102570861 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102080934 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.123247393 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104187554 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10969828 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.129808016 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103332287 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107182676 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.131118527 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108917591 seconds)
  done (took 2.664254831 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.121395148 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117161603 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.189211962 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.105076085 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.124252891 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108522084 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102009956 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.126062278 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102322084 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106948745 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.104657212 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.128244671 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.101907803 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102652593 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.124859654 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105408538 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100503118 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.127993625 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10313147 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.191161614 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106654241 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104409206 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.124572945 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105796072 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103250398 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.128783952 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108433695 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101328685 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.126190091 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.103586331 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103849658 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.131640173 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102495913 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.105656461 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.1253892 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.10537107 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102467431 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.102679122 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.125855162 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102544353 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103946703 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.125582261 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.103802982 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.103487236 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.121836618 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.103564931 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100876191 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.129434094 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104397817 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104075374 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.122933662 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.110361943 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106539734 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.129927243 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.109055619 seconds)
  done (took 7.149841421 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113349435 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.1035282 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.133488021 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100737607 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.10304703 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.102343283 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.125210548 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.104626772 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102399099 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.122789433 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103254874 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103412803 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.124111558 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103625554 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102913158 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.12340091 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.102153136 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.102981535 seconds)
  done (took 2.834749115 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.107695744 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102682357 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.105463415 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.123452506 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102081537 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101936387 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.122459654 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.102226246 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100295756 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.124992343 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104155098 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101997243 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100896661 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.12451114 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102440531 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102538692 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.124224026 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10193027 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103632996 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.12234331 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104201138 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10118895 seconds)
  done (took 3.246598861 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113447109 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.181909904 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.108760617 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.191229383 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.098881253 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.097506168 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.129771663 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098992702 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.114448035 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.120604272 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.099043596 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.097219318 seconds)
  done (took 2.311196619 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12943152 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139295828 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.123880011 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103042186 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110791006 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129164753 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107471174 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107308619 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136880336 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119379668 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127949862 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115377695 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11365802 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136657497 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110087063 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132790776 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107303256 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107304842 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124638347 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123147543 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106696689 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136195095 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107047132 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127662275 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107431528 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114822323 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136468045 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118602237 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127848627 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116119507 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110524665 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129126806 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114699472 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138975201 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104388466 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114272155 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129092448 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123568386 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110667277 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138151587 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103211635 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132888644 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115559827 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112073155 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136624976 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106987107 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133743975 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109423155 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107333041 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.149412836 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11214346 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136862368 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113983524 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114231645 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136601718 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12852636 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14035268 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116010032 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13206523 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119419003 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115247482 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133827158 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115376017 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140274087 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112620475 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114329616 seconds)
  done (took 8.871396663 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142484124 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103964949 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13064974 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118995032 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137774124 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109306939 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110254136 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130795271 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108397918 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1045595 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1715056 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107559845 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137205895 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117578507 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107894203 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129341867 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108422781 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115326824 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126256874 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128238822 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1297043 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116629758 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115401605 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137884519 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118953963 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132457034 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108372831 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107756731 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130866234 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108189455 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133687112 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109330209 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116095415 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.124798617 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117636494 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108362259 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129841394 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112860046 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107744707 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134945682 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116380864 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143871456 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107827345 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108017323 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141388033 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108071302 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129886632 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106007673 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106687883 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125982929 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12147139 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119510612 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142682419 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116731637 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130213112 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109181698 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108386646 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129817395 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108860374 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110977051 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138222216 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10899168 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.149829366 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108791781 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107754014 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139521269 seconds)
  done (took 8.863699318 seconds)
done (took 167.606110074 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.151837724 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.188876595 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.147679023 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.180272634 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094494352 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.128445629 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.14982559 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.148526037 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.115567751 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.095846603 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094841007 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.095712041 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.185522255 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.095828793 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.094584372 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.118758358 seconds)
  done (took 2.948764057 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.19130285 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.309357213 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10838349 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.120335437 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101529547 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099469203 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.121072076 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100889064 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.099173738 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.128349161 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099004837 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096078402 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.127619205 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095873749 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098845961 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.121247067 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106436668 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099067094 seconds)
  done (took 3.092183049 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120284614 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142317843 seconds)
  done (took 1.140574838 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129215392 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.192843138 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.279397333 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.167927726 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119846926 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.139636738 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.148857442 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132740986 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.18635562 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133199379 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.11187708 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097052959 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146435536 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.104454213 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114676441 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.120221097 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.12766486 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.134559901 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.113765132 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100927552 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.143775184 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103592914 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.104575651 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.134583599 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.179601142 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.133979365 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103266293 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.101779075 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.124674641 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113226586 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.105335682 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.138364285 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110937182 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.178917608 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102269338 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.174045296 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.127741663 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.102058723 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113619422 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.121612844 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.104313477 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.10310376 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.134294281 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098333941 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102540543 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.128634323 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.103420071 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.101656839 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.129266349 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.107990482 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.128415685 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.106779051 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.172031963 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.108537086 seconds)
  done (took 7.823751982 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.855774009 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141374349 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100423489 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.998758833 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.150637122 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114852022 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.849018518 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.144851504 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253550061 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.874339699 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.11701865 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.111983299 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.261547078 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.25612603 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.28055177 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.357475714 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.716194591 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114984746 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.1292111 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.163197446 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109653541 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.148209348 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120047634 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.520821412 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100395559 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.121930807 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.109160783 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.11300557 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176310695 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100964208 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127828145 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196228636 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.269364266 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206330092 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123708705 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.100228297 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099397639 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.185520989 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266993879 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215130547 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.194940003 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097639372 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098810667 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.132649017 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119981307 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.119386397 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.156911616 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.190601135 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.191094492 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104595106 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.137022887 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110747294 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.129965144 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.155130697 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.12105678 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.358787667 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.361614595 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100242036 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132531471 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.117341993 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263991285 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124555852 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.233445454 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127798539 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211570294 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.122172852 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.842259374 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.162133096 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.1223173 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.109160404 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.10832355 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128324685 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.108055633 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.189781448 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.480144008 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.136393565 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10505874 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121655263 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.207745132 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.123373184 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100566993 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180748404 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.10131181 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130595492 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.116473564 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133528646 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.167318244 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.269923495 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.111691743 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.131652349 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.106181748 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136373462 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.101598903 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.231605215 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226537463 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.17445505 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.209658618 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132861321 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.182251383 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.162479247 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130977431 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.187124735 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.109180218 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116918983 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131158728 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22064959 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.133564409 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.126252604 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.106700651 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130693583 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.138857065 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104031444 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.133724076 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.189609611 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.533618477 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.184325876 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.119731888 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107321178 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110461945 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179423326 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108267689 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259637515 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1339608 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.161402557 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.131434772 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.098503666 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.130545193 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.159505832 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133513207 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111248321 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131494579 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111651807 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.279737028 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221301247 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11463388 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246634984 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.199486212 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.10940691 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.194106027 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108727883 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187321985 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133022815 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.112021149 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101142755 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.827299969 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138610033 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.109629118 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.127257716 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185859381 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099945295 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126121071 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.10148255 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097961871 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.814153319 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126698372 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099518089 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102811202 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.130362503 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.110424571 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108535575 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.129690268 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.17838641 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243825038 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114012086 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.130194815 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102081135 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.17849404 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.103816254 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101554497 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123801092 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103352921 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110124951 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.129218216 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104791137 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191295535 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.175161509 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.228381088 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.635851353 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.10245273 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102042092 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.25840613 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10207685 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.324334863 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109131564 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.253029236 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163132548 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121700786 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.359749977 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.187064658 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.185856779 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.10423437 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.190649448 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.121096384 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.111180722 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.177727793 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102404461 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108655774 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.176692367 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.139700277 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.115688828 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.277558875 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.123849057 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.229826057 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.122344848 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.167431832 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12631629 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110806235 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.323602353 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.12296147 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.121238715 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.180920417 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.106600127 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.107556425 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.675243099 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.126999602 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113894169 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.130815046 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.232458973 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.161088169 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.133822995 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.111220273 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.137863251 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.179923319 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.20891153 seconds)
  done (took 47.774794131 seconds)
done (took 63.649978099 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.29453875 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.255692502 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.302149122 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.209408167 seconds)
  done (took 2.030426399 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.261933344 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.162770628 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.233247249 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.09835128 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.242615386 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097689208 seconds)
  done (took 2.000218035 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.488038646 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.365815843 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.301456567 seconds)
  done (took 2.064396048 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.252913126 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.240094569 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.329502782 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.407274241 seconds)
  done (took 2.247600504 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.265535786 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.125547209 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124158192 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.208856974 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.231031855 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.211348299 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.129143428 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.177620922 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.128636617 seconds)
  done (took 2.555074706 seconds)
done (took 11.802589897 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.290369283 seconds)
    (2/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.26540091 seconds)
    (3/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.329484193 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.203293407 seconds)
    (5/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.220669957 seconds)
    (6/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.320991539 seconds)
    (7/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.198453956 seconds)
    (8/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.300720641 seconds)
    (9/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.161449432 seconds)
    (10/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.167149052 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.216452371 seconds)
    (12/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.091725093 seconds)
    (13/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.108902516 seconds)
    (14/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.253777465 seconds)
    (15/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.279010762 seconds)
    (16/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.105134154 seconds)
    (17/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.219096824 seconds)
    (18/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.189803646 seconds)
    (19/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.21173756 seconds)
    (20/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.187732905 seconds)
    (21/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.151995346 seconds)
    (22/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.075724803 seconds)
    (23/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.234957906 seconds)
    (24/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.181306378 seconds)
    (25/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.075092691 seconds)
    (26/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.084866585 seconds)
    (27/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.109474827 seconds)
    (28/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.099546532 seconds)
    (29/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.098527355 seconds)
    (30/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.310307029 seconds)
    (31/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.191572347 seconds)
    (32/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.211648089 seconds)
    (33/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.168660284 seconds)
    (34/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.180123838 seconds)
    (35/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.229586846 seconds)
    (36/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.117047358 seconds)
    (37/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.142646462 seconds)
    (38/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.128424822 seconds)
    (39/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.270977508 seconds)
    (40/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.085761782 seconds)
    (41/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.178944168 seconds)
    (42/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.155010045 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.101461824 seconds)
    (44/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.193890875 seconds)
    (45/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.143258715 seconds)
    (46/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.075948248 seconds)
    (47/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.209625156 seconds)
    (48/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.082699472 seconds)
    (49/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.083850441 seconds)
    (50/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.196694854 seconds)
    (51/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.181174897 seconds)
    (52/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.140355433 seconds)
    (53/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.169713048 seconds)
    (54/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.077220502 seconds)
    (55/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.109471722 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.13664597 seconds)
    (57/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111812039 seconds)
    (58/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.166835465 seconds)
    (59/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.098429822 seconds)
    (60/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.076702844 seconds)
    (61/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.145631019 seconds)
    (62/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.132321165 seconds)
    (63/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.099828274 seconds)
    (64/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.190086145 seconds)
    (65/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.098928769 seconds)
    (66/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.100308486 seconds)
    (67/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.128926736 seconds)
    (68/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.10978127 seconds)
    (69/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.082370339 seconds)
    (70/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.162206851 seconds)
    (71/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.077492962 seconds)
    (72/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.10212356 seconds)
    (73/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.13027039 seconds)
    (74/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.084563707 seconds)
    (75/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.154151555 seconds)
    (76/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.135269825 seconds)
    (77/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.077892918 seconds)
    (78/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.143329978 seconds)
    (79/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.083312041 seconds)
    (80/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.135746574 seconds)
    (81/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.169240829 seconds)
    (82/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.076666331 seconds)
    (83/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.130389666 seconds)
    (84/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.07538875 seconds)
    (85/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.122749086 seconds)
    (86/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.191841713 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.103509863 seconds)
    (88/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.075740891 seconds)
    (89/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.102146891 seconds)
    (90/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.194354021 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.130220971 seconds)
    (92/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.161694464 seconds)
    (93/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.13558315 seconds)
    (94/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.121758157 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.154852507 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.107834797 seconds)
    (97/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.075025894 seconds)
    (98/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.121099671 seconds)
    (99/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.09901096 seconds)
    (100/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.078218214 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.103601607 seconds)
    (102/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.194879079 seconds)
    (103/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.112578993 seconds)
    (104/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.07719257 seconds)
    (105/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.083234502 seconds)
    (106/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.099110819 seconds)
    (107/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.1061822 seconds)
    (108/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.111135322 seconds)
    (109/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.108423597 seconds)
    (110/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.075093308 seconds)
    (111/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.137267329 seconds)
    (112/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.126091873 seconds)
    (113/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.212233958 seconds)
    (114/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.078580128 seconds)
    (115/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.167022439 seconds)
    (116/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.164720238 seconds)
    (117/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.075769762 seconds)
    (118/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.075683677 seconds)
    (119/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.166773158 seconds)
    (120/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.136600889 seconds)
    (121/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.107783929 seconds)
    (122/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.168163986 seconds)
    (123/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.101380404 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.102512392 seconds)
    (125/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.076002729 seconds)
    (126/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.108963754 seconds)
    (127/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.108427596 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.136077256 seconds)
    (129/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.159718784 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.12791804 seconds)
    (131/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.133355229 seconds)
    (132/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.12632226 seconds)
    (133/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.078294534 seconds)
    (134/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.076273934 seconds)
    (135/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.075443213 seconds)
    (136/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.167843916 seconds)
    (137/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.167861613 seconds)
    (138/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.07513349 seconds)
    (139/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.075940727 seconds)
    (140/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.155781382 seconds)
    (141/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.085189585 seconds)
    (142/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.086705497 seconds)
    (143/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.123144428 seconds)
    (144/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.148324523 seconds)
    (145/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.141769314 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.103248994 seconds)
    (147/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.133101165 seconds)
    (148/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.102550087 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.108310155 seconds)
    (150/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.098957601 seconds)
    (151/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.135951322 seconds)
    (152/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.112338704 seconds)
    (153/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.075715103 seconds)
    (154/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.075223697 seconds)
    (155/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.128739244 seconds)
    (156/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.076133509 seconds)
    (157/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.07656874 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.101417094 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.127362423 seconds)
    (160/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.111344426 seconds)
    (161/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.078226378 seconds)
    (162/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.074948846 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.128790209 seconds)
    (164/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.078195237 seconds)
    (165/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.077088173 seconds)
    (166/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.07579755 seconds)
    (167/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.124156736 seconds)
    (168/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.102215797 seconds)
    (169/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.078062462 seconds)
    (170/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.10823711 seconds)
    (171/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.099507956 seconds)
    (172/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.077405252 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.103857634 seconds)
    (174/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.109129189 seconds)
    (175/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.125136162 seconds)
    (176/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.12558599 seconds)
    (177/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.11028774 seconds)
    (178/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.074770562 seconds)
    (179/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.133198049 seconds)
    (180/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.104152438 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.121443914 seconds)
    (182/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.128300001 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.103786376 seconds)
    (184/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.07806868 seconds)
    (185/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.132347708 seconds)
    (186/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.079825778 seconds)
    (187/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.109870798 seconds)
    (188/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.075151889 seconds)
    (189/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.075118082 seconds)
    (190/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.099240519 seconds)
    (191/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.101594611 seconds)
    (192/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.083497302 seconds)
  done (took 26.205277504 seconds)
done (took 27.124059176 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.211936084 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.126913883 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.110012439 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.109810265 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.203436246 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.116588386 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.14901675 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.112318038 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.119869429 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.133600005 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.102307198 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.120536792 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.133411769 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.181692462 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.136878753 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.104731542 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101466247 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.144061978 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.126749404 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.124865206 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.203910025 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102688787 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.118056979 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.127534923 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.177427593 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.12904488 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.109862728 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.110598605 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.146827744 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.111169598 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.110125148 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.126754234 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.126177951 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.124708798 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.126556438 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.111556889 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100840245 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.107521758 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.112228328 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112325133 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.121601199 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.136658599 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110861056 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.101720271 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.138245778 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.110201036 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100899351 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.140558862 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.10053971 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.111764295 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129378773 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.127005289 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110198895 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.124624609 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.101515801 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102405923 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.145143241 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10400149 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123587015 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.125961607 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.104200669 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102608336 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.135743612 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104540745 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.11190097 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101413827 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.136694286 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.113473757 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110218727 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.130114933 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103890676 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.110671079 seconds)
done (took 9.853301335 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.107703125 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.147859768 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.198992561 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.213009091 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.130438618 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.142499881 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.116858491 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126183354 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.139455451 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.122623973 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.138719985 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.158796591 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.181667343 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.144719432 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.11723294 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.112966245 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.1393395 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.110568979 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.210653721 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.126262795 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.151453984 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.119611989 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.127919532 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.144389199 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106606074 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.135970103 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.136990402 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.11421281 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.105473634 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.139630365 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.126472714 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.129344173 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.109917388 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.12396457 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.147137071 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.117331991 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.11685122 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.13930647 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.10858638 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.106271525 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139798089 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.121913901 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106046458 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.143070089 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115790991 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.119548367 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.137559039 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120233109 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.106441148 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.139395795 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109698617 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.131631305 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.143828849 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123059469 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.142661087 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.120860221 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119840409 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.118205294 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.135368768 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.119013537 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.130165124 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.108549571 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.108599637 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.1520157 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.111163152 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119861245 seconds)
  done (took 9.586130014 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.1262535 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.136521351 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.141706881 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.118712026 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110550279 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.12521697 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101554479 seconds)
  done (took 1.823860289 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.104339516 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.186687918 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.208036014 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.209453934 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.208147239 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.192882105 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.149861236 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.103418221 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.135672312 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.138883963 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.187556163 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.23968137 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.111395611 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.143600454 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.211236433 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.102804942 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.212564538 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.103419088 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115892216 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.211374544 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118347751 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.158319892 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.115721768 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.102311077 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.208799543 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.10330274 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.261704191 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.144239492 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113355287 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.115352686 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115545945 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.206864641 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.211602399 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.116025489 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11047908 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.208397071 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.208720627 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116713403 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.223829757 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.106893924 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.209294357 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.115623047 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.142774233 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.118377267 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.11706405 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.196994778 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120700597 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.142690979 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117556633 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.216074603 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.113593641 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.210155179 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.115109057 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116464512 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.136883921 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120484938 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124281909 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.14262114 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.191740434 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.144071892 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.183879415 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.209131458 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.209494433 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.184222621 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.153301924 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.186955019 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.206868543 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.114515886 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.137477006 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119355112 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.211094258 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.116383431 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116527773 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.200280324 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119722343 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.212585465 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.213940819 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114929134 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.114872033 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.132262922 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.116650385 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.102961855 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.202944624 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116166182 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.140328492 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122131087 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114573425 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.144116228 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.108686719 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.125351658 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.143667244 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.114845357 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.145821829 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.118552261 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.11881458 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.213992387 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.112701279 seconds)
  done (took 15.744187258 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.10599588 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.105126799 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.10839794 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.131170127 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.106184474 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.104771569 seconds)
  done (took 1.645910562 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.14221381 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118124159 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.151850738 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120182236 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.185492835 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.195051094 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.222091034 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111421935 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.160273848 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126973226 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.220092535 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.194282851 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.22153522 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.119504229 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.223161491 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.145006095 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.199071243 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.141707518 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126811436 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114671212 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.143264456 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122085222 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115477741 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.212016675 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117340814 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.145108878 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.111858691 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.125514847 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.151516448 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.112955397 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.121153441 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.145374399 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.111431133 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.136576608 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.199294633 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.136221604 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11447074 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120207409 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.147061838 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119615224 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.222913537 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115583116 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.124348625 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.148392228 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.112816603 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.135864494 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121781948 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.112053158 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.225004321 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121058541 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.146049341 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.119405646 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118677806 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.147209843 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.11197836 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111895898 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.146145738 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.199603899 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.148131176 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.112018468 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.143392338 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120797039 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.113108945 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.148243938 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.120726993 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121131796 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.136472521 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121222863 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115477748 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.143800457 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.122879481 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118673635 seconds)
  done (took 11.262525537 seconds)
done (took 41.021212003 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.56543589 seconds)
  done (took 2.544866768 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.82741638 seconds)
  done (took 1.808934093 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.092169388 seconds)
  done (took 19.104602127 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.518872932 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.593713438 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.021954716 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.150617213 seconds)
  done (took 3.26781741 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.07763514 seconds)
  done (took 2.076062913 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.292940972 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.263657499 seconds)
  done (took 1.543647454 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.716827028 seconds)
  done (took 1.71526904 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.493733439 seconds)
  done (took 2.480977634 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.350010772 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.179216449 seconds)
  done (took 1.527840772 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.607458743 seconds)
  done (took 1.605676164 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.971591526 seconds)
  done (took 20.971329777 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.249860801 seconds)
  done (took 1.253283587 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.287149134 seconds)
  done (took 1.293946601 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.623062676 seconds)
  done (took 4.628417322 seconds)
done (took 66.816050846 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.114218645 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.116708982 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.115444058 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.139479806 seconds)
  done (took 1.481680229 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.123867348 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119155924 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.166032716 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.118762953 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.123503944 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.14306086 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.117290775 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.120487149 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.115628359 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.145146073 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119305906 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.116645613 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.144969054 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.116752878 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.114536474 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.145860616 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.121107456 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117041758 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.143734226 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120585401 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118893193 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.146485039 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121887959 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.119694401 seconds)
  done (took 4.068581751 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.114231192 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.109888792 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110016043 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.13455302 seconds)
  done (took 1.479433528 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.125982002 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.129332751 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.153184063 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126079774 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129592758 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.155342905 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118535764 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114299678 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.143246858 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126618714 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.133464391 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.156453708 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.129886742 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.11905949 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.153424105 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112125328 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117744665 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.155169026 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124824919 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.151136759 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.12031644 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123860893 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.148235329 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.127214156 seconds)
  done (took 4.203046755 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.19116805 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.1286674 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.174279756 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160773974 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.177473184 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.116661852 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.145090472 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.149450637 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.124495219 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.143808156 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.121583649 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.161174317 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.148536228 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.119422475 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.118084767 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.148456677 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.129774531 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.124181045 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.190452486 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.121556693 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.149234175 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.13123673 seconds)
  done (took 4.188690252 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.120774181 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.109456785 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.129580546 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.110317552 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120077033 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.136217454 seconds)
  done (took 1.742691494 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.107599021 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.103254232 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.102834132 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.128187897 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.107307609 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.102347538 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.127415595 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.10368623 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.103345724 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.101863739 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.128272984 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103472867 seconds)
  done (took 2.329574507 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.327429575 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.108971967 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.135830637 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.111469695 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.113631554 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.104638549 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.147597767 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.108390567 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.269741177 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.103082322 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.145798463 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.195551076 seconds)
  done (took 2.889042779 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200065927 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145724818 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290346032 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.363810321 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159007293 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185902808 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.265889887 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189205673 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.202253002 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136984852 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211247129 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158552207 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178150452 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184298896 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167908861 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.157302799 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19744316 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20259945 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171666896 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237619769 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156141397 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198079123 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189424436 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175427821 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137285287 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187122621 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118998183 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152690063 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165770659 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188558326 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168668254 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175799339 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139763324 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215266554 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250639021 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196272612 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283491039 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132017819 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.192400681 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.189680489 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257719301 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166841405 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185096666 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178343793 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127335733 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216141896 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175755683 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.183289145 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.130316786 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170211947 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204044814 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17504528 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.200978754 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133924522 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.308016726 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159297181 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.142695219 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163156405 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211803107 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225647821 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200161521 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.123133365 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201442661 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189997668 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237121048 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.164945315 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.161937025 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149438857 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163702277 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.230809736 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177085254 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186390813 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.226635287 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128856202 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196302412 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167961842 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179767181 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225670204 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169821685 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.144171227 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149816868 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131263782 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153360924 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.185278514 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148067004 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212087189 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155970237 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.341119607 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179661911 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181685284 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156916286 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185091217 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186251378 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146401294 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.099398204 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168077899 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.162498246 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181943339 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126992866 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17840865 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13978225 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.123431741 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176227044 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.121331763 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192866465 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.132123329 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187373336 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167123097 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.157330041 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177160896 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172762084 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.160103928 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192657861 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192295096 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15664448 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130359698 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243786603 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191045744 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.136599406 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198285942 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.195069067 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.175476964 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133048023 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190061284 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192139541 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169126358 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224176094 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136395483 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130994518 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.163518903 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16867322 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18505787 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.152553566 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153564382 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.162286635 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217193909 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.124312464 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165904931 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177492734 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16020186 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122167615 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16158975 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13571839 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140040875 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.174120933 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.137878838 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179467307 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163253698 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191395186 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153017684 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160650699 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167775651 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156839273 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.166797219 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174421047 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119033099 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.198669666 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194201192 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156112799 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177621143 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.189409972 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20880587 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1717246 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155328039 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180380365 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154696011 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119449507 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185901946 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168208088 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18744341 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.186453756 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208902459 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.191006494 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.160763729 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174857975 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191809832 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.183066575 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181234432 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.14256649 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197058572 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165700315 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.146631651 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122957588 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.126130677 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162713037 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128838984 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135275065 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201897559 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188158621 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205473134 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166261505 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135688439 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.218052773 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.123023015 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185429925 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.198866969 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137674669 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.215840001 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189391607 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20359255 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138957743 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185827748 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119846315 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152041974 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.134050427 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18636004 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137093532 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1334434 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165911373 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190047744 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19761615 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145143114 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220052872 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189784631 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.226944434 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120433655 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.156337306 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196182068 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190699244 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.182900287 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134235241 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.185972994 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19182454 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169570213 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219183449 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165597874 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203292788 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191911048 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.191453587 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128108908 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175558219 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158977466 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163774793 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162802199 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172912496 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129987574 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177496986 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.136823708 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138398699 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206784018 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1690684 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174777484 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.186280199 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166300914 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153531307 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139342094 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.20143023 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144294275 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.102811615 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195218016 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219759698 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148350543 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182791881 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171755043 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156550363 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.315519829 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21395845 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201052591 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13487358 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136271472 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197804663 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160210654 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187807792 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211659913 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1397681 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230934886 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166243093 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.170746824 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130804347 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174484187 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150252383 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.162080124 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149728122 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.187257442 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.142989511 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207888862 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135151884 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194525142 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174125159 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.170360039 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.148413912 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136958168 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25091048 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193899243 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169700912 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.191547251 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.191888056 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182751473 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122977708 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153445586 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.131481077 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212267546 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129682325 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201314915 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.168945463 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21223412 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199781 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159752324 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167914247 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.126883343 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19357393 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148271947 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213708876 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134166293 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.166024753 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215407599 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.126673115 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129134496 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187831212 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294276138 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148203147 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198078513 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.106091699 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.269329603 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154974428 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131084726 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190186743 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168823017 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.160827085 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.181330141 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198048377 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140191857 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162188284 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163115105 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20603801 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185491711 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191329375 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198446626 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.143331539 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186487549 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157215456 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200954976 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144689832 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.172741565 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156169221 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221618131 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.179732113 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.158652325 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167402324 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195928435 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168986743 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197803081 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137040093 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209279896 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126383 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190105931 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138642229 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150706961 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157065373 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.194902766 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129968306 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203926078 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166751365 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158673862 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127945786 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171946034 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162549804 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164637997 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.13039679 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208719011 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.128145975 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204362016 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204452369 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155831555 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165721302 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171240999 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12855375 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13506485 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169445821 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129331177 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.173996701 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205188917 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.129882862 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204057896 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188452569 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161725264 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183520227 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140539078 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.360827995 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.127291011 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217368639 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149923396 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223349519 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148762217 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202532636 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169478598 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177926722 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160926695 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175240957 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.217903053 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189992644 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.1660959 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159035769 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141203111 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163047293 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.13167049 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149809846 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194924727 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138416401 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.163900248 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.165225236 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172601201 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.145079052 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167020567 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198732176 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179164664 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180188987 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213915987 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135616208 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202255792 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200470197 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127476346 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.188297972 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169966576 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171068359 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148882709 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.132745685 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.165920607 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206637569 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.153896189 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156583536 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199674472 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165870544 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198802728 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.132151935 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202923099 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139571818 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201489478 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127268591 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.180950886 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170536169 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162436091 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.125979769 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197187527 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156979142 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.192096162 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140854617 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.174886356 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222921462 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122217189 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160758038 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270509013 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185789078 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221710894 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.135300524 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135585894 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173411895 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156690574 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.19272943 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16906539 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.159667729 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128389082 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.171402001 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.154322433 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.141922652 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192734216 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168167945 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18748994 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213791158 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.131894216 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277155348 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142410073 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169831343 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.142159101 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.127603837 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16561613 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134936001 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138966794 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21044298 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239797869 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.160412659 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.173748786 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134478594 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.153280135 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130556503 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163112138 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177516972 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165425235 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17462978 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.101847168 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165551027 seconds)
  done (took 85.422626582 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.1601569 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.152348908 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.166737768 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.220258772 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194672023 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.286832505 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.22745303 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.243300436 seconds)
  done (took 2.750304971 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.119416466 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.157578311 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.140525175 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.143886391 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.109355662 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.441916554 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.130379011 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.146956426 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.160166545 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.150414422 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.133839483 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.624235832 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.118245838 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.147222428 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.14581371 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.109073152 seconds)
  done (took 4.074762553 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.570644585 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.542772119 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.857644058 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.29508475 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.250781662 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.202470828 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.750204223 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.187947869 seconds)
  done (took 12.76263682 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.15588048 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.144110519 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.389799493 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.249937497 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.204371012 seconds)
  done (took 2.254501183 seconds)
done (took 130.645819084 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.123426309 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12283628 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121752153 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.152688318 seconds)
  done (took 1.618624126 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.173718306 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.089933543 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.091808356 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.116626379 seconds)
  done (took 1.580273962 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.400692514 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.089745864 seconds)
  done (took 1.623044959 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.149814174 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.139583895 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.165107152 seconds)
  done (took 1.569428053 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.145720812 seconds)
  done (took 1.252921165 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.119420427 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.115419743 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.224952274 seconds)
  done (took 1.573514154 seconds)
done (took 10.329851111 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119117067 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.927294611 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.431490493 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132277234 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.711226494 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.425284357 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.422045266 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.173367923 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.174220631 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.136815534 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13063751 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.690044622 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.436441783 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.880346294 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.393509669 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.908101897 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.694895721 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110698404 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.145039201 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111408768 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.398430043 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.135958949 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110586186 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111377275 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.716814042 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.417671405 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108201853 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.921565011 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109431618 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.112724137 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.427060926 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110321776 seconds)
  done (took 20.935280966 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116817158 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.166310575 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145204453 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111449407 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112996988 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.138490058 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.121556871 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122382244 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.201837139 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109077431 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.160013792 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.109733002 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.113853821 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.139121482 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.134873903 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109180403 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.141037811 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.11301603 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116502353 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.140510335 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.132026934 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108545193 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.140464614 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111788896 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109502469 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.156920732 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110535793 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120897275 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.137371528 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114656589 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113992649 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.137827001 seconds)
  done (took 5.235913007 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.157834399 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174428524 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.147095711 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146465656 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.186507961 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.11182419 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.222529737 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147455497 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.201930868 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.11185543 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.129975221 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.138439835 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.149204982 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.109484056 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.163870525 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11050647 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.112186713 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.140280596 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117390858 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110518488 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.159929858 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109267034 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.137340758 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112947134 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109779061 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.159389568 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111249647 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12140237 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.13718073 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114347812 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115659577 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.137145913 seconds)
  done (took 5.530449837 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.124099368 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124315958 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.132356599 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.162125545 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.119231109 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.122817318 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.153002461 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.119856916 seconds)
  done (took 2.172064259 seconds)
done (took 34.986127337 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.134078451 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.128536678 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.127673816 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.152334977 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.192576425 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.145778196 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.124790043 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115080742 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.152177085 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.129422693 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.109658571 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.116058027 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.156101644 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.119871608 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.221138763 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.122731465 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.226215076 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.192888357 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.146333914 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.122453647 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.115895954 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.227149076 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.119526407 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.144496574 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.193383209 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.111717106 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.212129902 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.119211055 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.14764118 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.112021044 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.221642582 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.120557434 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.116000656 seconds)
  done (took 6.006479566 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.211138697 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.11973816 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.148892885 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.118384965 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.119321147 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.147456225 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.210633592 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.147715033 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.118283978 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.117633664 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.117248476 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.223520758 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.123738484 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.144161067 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.121695054 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.106862145 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.241000476 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.118939824 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.138747267 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.092658727 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.114300456 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.117397321 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.253205497 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.114692358 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.146402311 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.11925018 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.121057743 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.122253486 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.150719704 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.120188309 seconds)
  done (took 5.399360664 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.124064265 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.131946612 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.16428384 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185862068 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.146652821 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.160319936 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.138263296 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.13225997 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.168333957 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.112939561 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.126689872 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.175877493 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128329955 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.121246072 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.145545165 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.130549347 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.133590188 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.141912511 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.121777822 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129162693 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.161063373 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.129517054 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.135823124 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.150171343 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.110469882 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119803007 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.152074126 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127201862 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.119810268 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.155656242 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.114820853 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.116315949 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.141312242 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.146793677 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.1123118 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.153909947 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.136731315 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123721033 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.155925821 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.143218585 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.115834785 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.143010685 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.137614263 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.164449593 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.142732398 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.124588126 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.123367679 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.155908867 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.111281277 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130264559 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.183588722 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.112315819 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.132012916 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.140811077 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.110932651 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.120959153 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.142146516 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.117378544 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.126754101 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.143312089 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.136632505 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.118961007 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.151890466 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.114884506 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.123518895 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.11042198 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.141490447 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.117034698 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.138623105 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.149583112 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.149333184 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.112279972 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.153831233 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.126741811 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.122933119 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.153658532 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.113160721 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123188136 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.152297838 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.120610616 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.125011437 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.144135272 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.117414707 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.129124988 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.162335399 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.12769372 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123798643 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.154731501 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.118188939 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.113920864 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.157359613 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.117248254 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.117490849 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.125272969 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.142110127 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.117871959 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.124647564 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.153272889 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.11169088 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13610815 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.146121015 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.113185337 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.136597381 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.145330118 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.118691066 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.121806353 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.182450034 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.117012055 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.123834259 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.153387275 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.113082191 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.120070411 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.143762689 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.113967866 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.129972208 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128154689 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.150142782 seconds)
  done (took 16.852671454 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.322006622 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.305756987 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.179919925 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.310334052 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.157520175 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.207755707 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.304051303 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.306732246 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.113084333 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.181402785 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.194605134 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.244370833 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.14591273 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.140947625 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.307020769 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.361097421 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.173685327 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.151092425 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.180572339 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.126416288 seconds)
  done (took 5.557129615 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.133111907 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.148101956 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.165364668 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.141790163 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.123028685 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.159604862 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.114395592 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13381546 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.155698419 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124206906 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.114588829 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.159278808 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125697927 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.128751712 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.157864028 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.145063081 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.119475135 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.147978816 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.135420783 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.116894069 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.130420348 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.138771517 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121520707 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.165287164 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.131827891 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.151975332 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.113471175 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.118425198 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.119820908 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.151551256 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.118129932 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.131447796 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.149377588 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.103541663 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.124723405 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.15674222 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.120649894 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.115393274 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.117866504 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.149017681 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.127748816 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.125275003 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.150751855 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097841552 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.131055334 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.107551251 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.158359974 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.125092529 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.103716328 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.162923607 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126454077 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.126764314 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.150009058 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.13572864 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.12002538 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.159707908 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.125626896 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.127796624 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.148013524 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.11361235 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.11075723 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.145080491 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.124407032 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.128037613 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.124108849 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.165538854 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.129699868 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.14215057 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.119703127 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.117114555 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.144253239 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.130021968 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.134053963 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.153196693 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.121850642 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.125297248 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.120542803 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.121934173 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.123411379 seconds)
  done (took 11.643407672 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.13890422 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.122450565 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131142537 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.177055412 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.125893777 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.119020665 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.154254013 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.133123419 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.128406715 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.160122996 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.126928947 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.12723543 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.16596912 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.12379087 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121408782 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.159475712 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.125010715 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.149882063 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.161258981 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.140299486 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.157025614 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.119516987 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.125764703 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.123830867 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.172301865 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.125255918 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.170447888 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.127212608 seconds)
  done (took 5.068845612 seconds)
done (took 51.652576677 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.288433353 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.479985009 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.256222137 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.251698656 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.304151487 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.272858388 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.25454768 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.255189584 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.694900622 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.226984911 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.253949956 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.251746492 seconds)
done (took 28.943863164 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.336296903 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.766484681 seconds)
    (2/2) benchmarking "String"...
    done (took 1.54008715 seconds)
  done (took 4.450635324 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.242716557 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.245828724 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.508764875 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.243012501 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.24693807 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.24642536 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.245246794 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.254126008 seconds)
  done (took 16.134897691 seconds)
done (took 26.311646538 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.29070438 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.428843782 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.48690181 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.24590903 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.247518853 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.265560365 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.268107423 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.269632305 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.257594584 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.25033242 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.679806905 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.506227425 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.249030899 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.609637635 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.24752547 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.260063344 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.272110978 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.479012312 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.247890393 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.272629956 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.223529149 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.226529866 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.285308367 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.248742688 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.252841581 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.247051546 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.291979324 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.247173481 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.430006646 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.247007386 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.27894666 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.246868196 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.294417492 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.247150627 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.247786563 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.255238197 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.432238472 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.254407735 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.226875791 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.269393368 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.435656099 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.260027439 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.247038607 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.250489529 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.251997914 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.290292304 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.247805083 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.362804319 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.26568445 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.247245528 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.326413512 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.635812063 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.254983587 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.263349414 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.26338016 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.468390128 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.263572305 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.301462078 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.27331119 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.264022011 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.248524717 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.267170205 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.27056578 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.252751005 seconds)
  done (took 146.647973114 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.249733561 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.252304197 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.252461404 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.25272913 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.25126364 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.25259147 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.248891203 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.249669427 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.251715306 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.254780663 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.25169167 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.253872083 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.252731297 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.280380606 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.259752022 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.27139482 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.254156733 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.269483234 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.276353089 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.249911027 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.256185822 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.252913317 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.253876908 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.254721926 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.301310079 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.329740863 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.285902498 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.284358408 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.263775046 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.24979551 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.294364949 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.254325823 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.878404845 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.122773797 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.262277972 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.270252928 seconds)
  done (took 82.100893031 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.251034858 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.251934694 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.252029424 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.284427039 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.249786498 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.834882475 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.83825749 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.23861391 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.305928311 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.619973043 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.49641389 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.255050163 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.342430568 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.264705323 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.252399229 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.267490493 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.277603355 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.25804819 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.251972511 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.830027598 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.264161852 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.431703389 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.43030075 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.269192077 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.285053277 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.643476728 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.251358442 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.286950646 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.587410776 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.304463952 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.252539035 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.593639578 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.610555695 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.367372136 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.255029244 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.285882192 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.252919435 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.536119538 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.251960581 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.253109468 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.254056976 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.887569104 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.256996431 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.83745661 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.257520665 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.219527525 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.25466055 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.252779607 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.200512484 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.925837173 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.258507566 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.254211796 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.255887566 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.253688457 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.252607801 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.287423578 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.229081246 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.350840196 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.254991756 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.254658836 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.25852864 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.288548042 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.254420467 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.427472159 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.256849923 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.214147468 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.312574505 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.361054223 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.832071398 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.255619106 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.349509981 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.373189254 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.256321093 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.255992446 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.255263191 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.256344422 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.255370923 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.366509428 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.256009732 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.255116739 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.950996397 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.434806226 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.27372533 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.646938062 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.358380276 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.256137981 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.596315466 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.258797627 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.25652903 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.959817569 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.351270938 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.256804216 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.255071943 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.257146025 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.954067192 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.84396509 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.506922213 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.260375954 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.734334826 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.259243937 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.130549627 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.82510743 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.915485647 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.261618187 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.36803929 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.435839832 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.273910157 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.258814005 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.256913757 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.641590027 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.261030697 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.317471983 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.257026595 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.659890938 seconds)
  done (took 380.065993014 seconds)
done (took 609.96119138 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.145906169 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.087158626 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.23683124 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.102763373 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.082783013 seconds)
  done (took 11.812484398 seconds)
done (took 12.969621862 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.449690652 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.451160726 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.321990223 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.457370347 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.291522491 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.471351179 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.434424084 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.277804879 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.369419672 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.343144272 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.367168252 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.312321963 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.294909078 seconds)
  done (took 18.998402032 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.555563484 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.269730292 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.321786305 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.529847548 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.306126991 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.554247538 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.579360398 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.271570335 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.42335419 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.28363868 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.28010084 seconds)
  done (took 18.532598865 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.533075189 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.272270107 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.327334898 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.528260909 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.307086549 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.553688427 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.591553364 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.271517963 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.422671988 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.280227275 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.278289121 seconds)
  done (took 18.523944485 seconds)
done (took 57.213260319 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.301053107 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.360333034 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.295244313 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.281590758 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.2781386 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.27728284 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.28520209 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.280047939 seconds)
  done (took 11.517061837 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.276692235 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.277175174 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.277281469 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.276522549 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.277440604 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.276626559 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.276607402 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.277337014 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.277180661 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.277541384 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.279095696 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.278848445 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.27807529 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.277675247 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.278282653 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.277975038 seconds)
  done (took 21.599532907 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.281106494 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.277866214 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.277957388 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.2786467 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.279762667 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.27636252 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.279383881 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.277624538 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.278457249 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.278355001 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.276822367 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.278586444 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.278579858 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.278262149 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.279871062 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.281583091 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.277853371 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.277629178 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.282980273 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.278789521 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.279291373 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.277954632 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.279416803 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.277253808 seconds)
  done (took 31.851049936 seconds)
done (took 66.126374585 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.277729276 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.267296781 seconds)
  done (took 5.705931405 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.338527766 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.338608427 seconds)
  done (took 3.838003499 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.279263945 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.278671928 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.280001254 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.279300618 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.279891197 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.279141144 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.279784534 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.279310715 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.279391638 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.278444339 seconds)
  done (took 13.951837406 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.280528346 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.281434965 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.280956306 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.280823279 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.278510626 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.28115383 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.279666843 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.281559396 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.281619355 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.28120868 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.281478895 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.280195037 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.280307866 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.281380795 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.280327622 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.280327015 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.28023193 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.28055338 seconds)
  done (took 24.213369153 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.295538886 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.300179605 seconds)
  done (took 3.758188312 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.408265948 seconds)
    (2/7) benchmarking "second"...
    done (took 1.322098594 seconds)
    (3/7) benchmarking "month"...
    done (took 1.385976502 seconds)
    (4/7) benchmarking "year"...
    done (took 1.377685353 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.323412513 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.30168842 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.32295531 seconds)
  done (took 10.604023704 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.282812032 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.485750028 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.616061159 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.887446679 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.284865144 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.28475703 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.216184068 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.287453866 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.288383105 seconds)
  done (took 14.79584131 seconds)
done (took 78.030315902 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.267062511 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.300254445 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.288858363 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.284961759 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.618132067 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.290083513 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.268856715 seconds)
done (took 16.483267319 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.249749792 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.256816911 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.248326392 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.278162995 seconds)
  done (took 10.196802063 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.282944887 seconds)
    (2/2) benchmarking "read"...
    done (took 1.594372866 seconds)
  done (took 5.040848616 seconds)
done (took 16.402553951 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.285710668 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.283905601 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.282257615 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.283446734 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.28457579 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.283549857 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.283916254 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.284546125 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.285827027 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.283939346 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.284707159 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.283819014 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285050332 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.284911849 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283736937 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286293137 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.283049307 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283090383 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.283404393 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.284144372 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.285622647 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.282926703 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.283720565 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.285337104 seconds)
  done (took 31.986834352 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.286539419 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.286863186 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.284393953 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.284795476 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.284485724 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.284237575 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.284891646 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.283730198 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.284729074 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.284443524 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.283634847 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.286196114 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.285388373 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.285767153 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283523808 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.284996562 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.285166257 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284590176 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284759971 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.285238032 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.285475649 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286020386 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.286952297 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.28540891 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.28681234 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.285624574 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.285895431 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.285917237 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.28690135 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.286066431 seconds)
  done (took 39.724741372 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.289312801 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.286477132 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.285485855 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.286013073 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.286438016 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.286094292 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.286306495 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.287507591 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.285721735 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.287128941 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.286448586 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.286413509 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.287476028 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.286467144 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.286729206 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.287243329 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.285647781 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.288310166 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.286803534 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.287148253 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.286689024 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.287697313 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.288597315 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.289361725 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.288459056 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.288228319 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.286072964 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.288717404 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.287745261 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.287643622 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.288629204 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.288374296 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.289577508 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.288630219 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.286385759 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.288113081 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.291954869 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.290246093 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.28750206 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.28824953 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.290651186 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.287754111 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.288749014 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.2898928 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.287535852 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.289769941 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.28896182 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.288826222 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.288564287 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.286546122 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.289874214 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.290040193 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.289206816 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.288967134 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.291042013 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.289222851 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.289094458 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.290724843 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.288266731 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.291263099 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.290561913 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.288779632 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.290577134 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.290542161 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.289524707 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.289387736 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.290217128 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.289987009 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.290538408 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.291071749 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.291080999 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.289882929 seconds)
  done (took 93.939005305 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.292156569 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.292163637 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.289330448 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.289316325 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.289988969 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.291266913 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.29108569 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.291254914 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289731889 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.289137579 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29128675 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.292006835 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290563062 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.292150196 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.291850831 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.292022685 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.293062377 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.292139323 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.292767138 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.292123073 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.291263441 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.290372527 seconds)
  done (took 29.579281404 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.291552402 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.293779088 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.291132487 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.294252751 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.292781394 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.294145128 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.292214964 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.293220843 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292722675 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.292382729 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292592445 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291321335 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.295963905 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292923061 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293236525 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.293198538 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.292794198 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.294786775 seconds)
  done (took 24.446603348 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.293484087 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.292036529 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.294015533 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.292690358 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.293647376 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.292643741 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.294201248 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.294697853 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.292531652 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.292999373 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.294196538 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294179285 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.293565288 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292049005 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295864081 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.2929134 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.293945961 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294658414 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.293886179 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.29373109 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.29555326 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.292758574 seconds)
  done (took 29.633139627 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.293567935 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.296031154 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.294455634 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.295041579 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.295565534 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.296389441 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.294397566 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.295209758 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.296352651 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.294435697 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.295693694 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.29476204 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.297932328 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.295689172 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.296454587 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.295710998 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.297301756 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.29470756 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.296707866 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.296280387 seconds)
  done (took 27.086860203 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.295626804 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.294785942 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.294933391 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.296321975 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.295341764 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.29610787 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.297894242 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.295830639 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.297494206 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.296537523 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.296388735 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.295074958 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.297409189 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.297263729 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.297388865 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.295099449 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.295443278 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.296780212 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.296186479 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.298256543 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.298225804 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.297496745 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.297645697 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.297950088 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.29536017 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.297229116 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.297614605 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.298028682 seconds)
  done (took 37.482220743 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.297426718 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.296644833 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.303548736 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.297757144 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.297850363 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.297794868 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.296558407 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.297206491 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.296828456 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.298273661 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.296486338 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.298596994 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.297087043 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.297423788 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.296951701 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.297056662 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298580512 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.297188365 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.298451952 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.298265601 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.298184947 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.298929904 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.297900033 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.29935153 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.297639315 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.298307394 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.297954134 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.297430851 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.298952263 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.297972392 seconds)
  done (took 40.116328019 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.316358634 seconds)
    (2/2) benchmarking "in"...
    done (took 1.317161525 seconds)
  done (took 3.81123121 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.299900384 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.299768056 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.300693398 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.30009327 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.300317426 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.300095649 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.299492129 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.299766962 seconds)
  done (took 11.578654477 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.291397111 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.301447458 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.300046741 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.300589142 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.300749955 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.294407973 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.301100564 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.306047778 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.29374669 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.294135869 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.293998791 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.293970887 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.296791641 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.294841823 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.295865406 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.29618111 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.304288602 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.302635916 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.302597424 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.30214977 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.301469853 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.296864941 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.299827791 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.305994948 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.293299546 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.301934853 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.304497884 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.306803559 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.296046294 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.300643571 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.298949922 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.305138657 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.303027042 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.302507195 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.303891165 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.302128684 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.305540367 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.302165082 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.304982223 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.307435416 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.304338245 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.306112005 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.298454879 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.300474722 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.302072791 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.309768694 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.304901666 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.304276894 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.29587961 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.29942646 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.303371259 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.295578502 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.305835853 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.29969428 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.302292928 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.306989491 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.312122416 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.297188534 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.297178226 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.30695777 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.311964698 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.306100077 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.303931358 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.309123499 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.301092481 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.304287849 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.30803914 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.312932906 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.307402942 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.304386483 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.305589039 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.314874623 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.310432907 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.310482269 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.305494803 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.306536331 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.298481369 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.308534223 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.306759884 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.309964662 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.313767487 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.30795138 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.30254198 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.305332475 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.301321883 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.310285898 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.307229432 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.307031015 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.297870312 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.310454833 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.314710889 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.306754805 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.298373459 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.302762043 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.305187876 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.308649978 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.299341124 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.304041153 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.311498329 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.307962847 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.306927725 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.301168287 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.304285498 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.313011119 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.30777473 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.308611475 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.315609583 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.301610154 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.310793972 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.315396368 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.307398762 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.300239402 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.30442142 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.311169529 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.302568769 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.305591345 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.313141246 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.30383601 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.314667407 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.308659551 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.305287432 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.311927613 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.315343483 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.310468641 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.302632353 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.313139489 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.310103227 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.305740516 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.313297335 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.308595833 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.308379536 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.303034897 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.314465012 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.302896693 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.31120021 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.303898183 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.312516306 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.30756717 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.310801442 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.305035489 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.308720084 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.306048154 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.30765681 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.311297472 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.3167879 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.306249762 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.317321893 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.310881001 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.30851057 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.311633819 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.315520424 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.309560819 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.30283457 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.313731009 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.303698636 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.312640219 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.30469132 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.312594566 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.311281061 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.311591111 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.311829011 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.301713345 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.307513519 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.315456184 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.310456025 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.31035634 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.314834164 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.311265281 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.312544282 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.303253778 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.312840861 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.30054813 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.306456133 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.313795507 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.310786514 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.313255996 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.308840929 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.319073812 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.313460444 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.312629396 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.305337933 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.310372771 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.31780412 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.314325239 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.32001041 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.314665586 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.312543227 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.306016422 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.307779635 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.315249172 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.306547626 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.315082992 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.31726819 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.320829009 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.307774149 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.315440243 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.30458207 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.315181736 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.31282133 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.320411297 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.313128167 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.314783613 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.308173999 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.317054892 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.307029543 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.318223425 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.306362563 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.31763858 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.315393918 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.313900384 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.312595963 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.308883544 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.31122353 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.317589277 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.313189078 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.314477492 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.308709581 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.317745653 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.305960205 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.309370301 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.317883426 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.315417183 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.317722828 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.322153676 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.312785956 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.318864227 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.314599505 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.309118359 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.316744587 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.313829988 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.315600225 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.319236339 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.317372806 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.311376987 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.319020824 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.319167316 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.309991357 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.317164754 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.322858145 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.314066599 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.30821386 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.317843168 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.313396034 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.316093401 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.315251131 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.307770981 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.320108905 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.317849383 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.323885826 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.308805339 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.318913218 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.31090618 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.318718565 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.312317083 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.316241223 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.315444763 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.318478476 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.323734097 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.316087904 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.310126773 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.32040724 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.315632952 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.316401887 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.309100228 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.318527941 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.318446413 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.317209865 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.314076691 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.314080262 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.319597972 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.309208683 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.318780852 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.310894567 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.326304088 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.333788293 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.321336452 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.320673187 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.321211052 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.319172798 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.3191581 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.310655604 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.313433015 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.314524851 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.314155867 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.312182891 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.320160447 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.312570327 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.322176828 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.316186019 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.31902175 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.319646757 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.317812926 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.310099119 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.32275057 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.318869528 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.31914636 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.312390979 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.31941717 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.313025648 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.319611907 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.319233686 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.31358245 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.325340989 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.323710708 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.317065857 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.317357557 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.315258014 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.31162885 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.316214266 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.326707283 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.313294585 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.323035403 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.314637116 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.316164474 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.316023148 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.324599443 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.329735361 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.312176121 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.324702794 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.321264496 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.311956294 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.31483621 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.322240794 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.324015488 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.333870628 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.314844271 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.324458156 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.322654672 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.321670454 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.320210773 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.321361562 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.323258037 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.320270928 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.326361695 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.326287354 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.317482924 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.321764789 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.330818488 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.322606685 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.323234763 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.312491492 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.323239698 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.33000944 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.315764106 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.31788959 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.316403437 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.321893041 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.322645691 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.322488121 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.323273997 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.32135317 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.325483642 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.327025832 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.323405653 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.321931893 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.324944603 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.332666029 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.326212865 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.335175148 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.315641439 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.32800915 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.322733513 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.318316502 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.316988193 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.317895398 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.325721946 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.313765416 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.325305 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.322344703 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.317376726 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.322216851 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.32973666 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.314443188 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.323033018 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.330937456 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.315233988 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.326379407 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.324465321 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.314276698 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.325480467 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.323745645 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.315578334 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.318814362 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.319937418 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.327701779 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.31690707 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.329428488 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.319488141 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.329406276 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.324526099 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.323428096 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.325121275 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.324674759 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.318887639 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.325372814 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.324248666 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.335058111 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.3201875 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.324757288 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.321772614 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.331190625 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.336317665 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.319705984 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.33111305 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.325611821 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.319762035 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.323067553 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.329441423 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.318260939 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.327369065 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.317972445 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.321054374 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.318962997 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.32735458 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.328878759 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.327620387 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.318046939 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.319592882 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.32779928 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.325241203 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.326028241 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.322046588 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.332111998 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.318293766 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.319794461 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.327191015 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.319278233 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.330402222 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.319905369 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.320019599 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.321778271 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.328200552 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.325116887 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.32428579 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.315203874 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.319133609 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.330596417 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.327752704 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.319935487 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.319618403 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.328495598 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.31825536 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.322301761 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.322398761 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.320215694 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.319594797 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.328673503 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.319150428 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.322619073 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.319687081 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.326883335 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.33001548 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.330420768 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.318771567 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.33458148 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.335357893 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.333682676 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.319342184 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.322564005 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.321849721 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.328192025 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.327545084 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.319970078 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.335344646 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.333737943 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.331548262 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.326878731 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.327786369 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.318835314 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.329671191 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.327062755 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.322320633 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.333265965 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.323710044 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.333919878 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.325430688 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.325311256 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.316494113 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.319239326 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.320251025 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.32005992 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.329222887 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.324271244 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.32851365 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.323488946 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.331855443 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.32681946 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.326140309 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.326453973 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.317854509 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.327743708 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.319181999 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.327750124 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.327574748 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.319473241 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.327762374 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.327101698 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.31867454 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.321128205 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.327961544 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.325172159 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.319611483 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.324201197 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.329656571 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.336520678 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.326206127 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.319142693 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.321653632 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.329251542 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.326165087 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.326685336 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.320710964 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.335772511 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.340317176 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.318908518 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.32228004 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.328632708 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.33672096 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.326250001 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.329712829 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.320914299 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.32409466 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.329453814 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.327534534 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.328846443 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.332537078 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.323940306 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.328949119 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.319652606 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.321978753 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.328761301 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.337012369 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.32773669 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.320472167 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.333815046 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.336668462 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.324616382 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.338187204 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.331442131 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.326309087 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.331463928 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.318978379 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.32828793 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.324208039 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.331609398 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.326598438 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.328197532 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.327623562 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.319722084 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.327887195 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.333848093 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.33877261 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.327275079 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.319690201 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.322761475 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.328283604 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.326079888 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.329996866 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.329204318 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.328611006 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.327959343 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.320706957 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.336748026 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.341372023 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.332112228 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.327100197 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.328409782 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.328314372 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.331253626 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.325038998 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.330894095 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.32812972 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.329178575 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.326568907 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.337444278 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.329669167 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.322258544 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.324577853 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.323275987 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.331845266 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.336526475 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.348740442 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.330870815 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.333159328 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.332623628 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.330201912 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.3232609 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.332960442 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.330395221 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.323164906 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.325388339 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.333027094 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.329465248 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.330604407 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.32364929 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.331534151 seconds)
  done (took 786.326507717 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.329352141 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.330657532 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.330468109 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.330456788 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.331231025 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.33018208 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.330093061 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.330052591 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.331634496 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.331335975 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.330490618 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.330679208 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.331601659 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.330366877 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.33106957 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.332036948 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.332040632 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.33139854 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.331470417 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.332097377 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.331431244 seconds)
  done (took 29.153019171 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.33311152 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.33119197 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.330867141 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.332037945 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.331444642 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.333242796 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.332966906 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.33199467 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.333749681 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.332042103 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.331401048 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.332707861 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.332857943 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.333216835 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.331477277 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.334125473 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.33286188 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.333971292 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.332862469 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.333537316 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.333198816 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.333140657 seconds)
  done (took 30.523546987 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.334753954 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.333130357 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.32552535 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.33684395 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.334819027 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.333957414 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.333038288 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.334810432 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.334388355 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.326726725 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.328188341 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.326536862 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.329094497 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.337735583 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.329843425 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.339764183 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.335039789 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.333836486 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.333447439 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.333915802 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.337000979 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.344964379 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.333941702 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.325328182 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.337530828 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.334404857 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.334026394 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.336074273 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.325429105 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.338095029 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.334540742 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.329273074 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.337512252 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.337779227 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.328367699 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.338978291 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.33561507 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.334747399 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.335703225 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.333728694 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.344595303 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.336047193 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.340925396 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.347919624 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.337457399 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.328810767 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.339463419 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.337393384 seconds)
  done (took 65.268663679 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.335743816 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.337157563 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.336262817 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.336500019 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.338227476 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.338204589 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.336978256 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.336683621 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.337645714 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.336256684 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.33732824 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.336942341 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.336904512 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.336782515 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.338029138 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.33587268 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.337277985 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.335756272 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.336889178 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.336219129 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.336759233 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.339801627 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.337407362 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.339516971 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.337309345 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.335965815 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.336381228 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.338454904 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.337504532 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.336958341 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.338388755 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.336836505 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.33770506 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.337827892 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.33657324 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.337760416 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.338309092 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.336380249 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.33963411 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.337446796 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.336774438 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.336727216 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.338135714 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.338905596 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.337972682 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.338209154 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.336860192 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.337875691 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.337475697 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.336604413 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.33709207 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.3381035 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.337845076 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.337438383 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.338311976 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.337247079 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.335976815 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.338109177 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.338935685 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.338263111 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.338472271 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.338465644 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.338570718 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.338454286 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.338602378 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.337725265 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.338529949 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.338640911 seconds)
  done (took 92.164002314 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.338281567 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.338443209 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.339752456 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.338788572 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.337634106 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.338835776 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.339278148 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.338842329 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.339899345 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.339161423 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.33988527 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.339855841 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.339294282 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.338090559 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.340590033 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.339789423 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.341784212 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.339522037 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.33958683 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.339778344 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.339948321 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.339104168 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.340026485 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.339803971 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.340876546 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.340316271 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.339450142 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.341884815 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.341203738 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.340798334 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.340625899 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.339687516 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.341179675 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.341726421 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.339920636 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.340350522 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.339476833 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.341033664 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.340535378 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.341232428 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.340560665 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.342057764 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.340188004 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.341476764 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.341429336 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.34085186 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.341181842 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.340431587 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.341652071 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.340780362 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.341294749 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.340527246 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.341723835 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.3407283 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.340379236 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.339880728 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.339516524 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.341746988 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.341962668 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.341313496 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.340857878 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.34159206 seconds)
  done (took 84.311510533 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.341121435 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.341706528 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.34216095 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.341573551 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.341309324 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.340368237 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.340536307 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.340073404 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.340852825 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.341323469 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.341241963 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.341609455 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.341223133 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.341287771 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.341514263 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.342373279 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.341139955 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.34134844 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.341690406 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.34084536 seconds)
  done (took 28.035753034 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.340401632 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.341630617 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.34156675 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.340875175 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.340357307 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.341667419 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.341338489 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.341989565 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.340678206 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.340551268 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.341342058 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.341220482 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.341856109 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.342063082 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.341677326 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.341567303 seconds)
  done (took 22.672850688 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.341745937 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.341667266 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.341248761 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.342497457 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.341024922 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.34151415 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.341554488 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.342299974 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.34298634 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.341083525 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.343184033 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.344605097 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.34331256 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.341718406 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.343181025 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.341605007 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.340858492 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.342484901 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.342426796 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.343453412 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.342008601 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.342796747 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.342966825 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.342093241 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.342543939 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.345770497 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.341837286 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.343586575 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.342827362 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.344348829 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.34173028 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.343105292 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.342149938 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.342833181 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.344550573 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.343694544 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.343060648 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.344555827 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.345097805 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.344143013 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.345530675 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.345081015 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.344311789 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.344313488 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.343479541 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.344136154 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.344113408 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.346078448 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.344532414 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.3452717 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.345081685 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.345070199 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.346165769 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.345835336 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.345932481 seconds)
  done (took 75.098221444 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.345084554 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.344395927 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.345354001 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.344457315 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.345893126 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.345308092 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.345929699 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.350123765 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.345544288 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.346917634 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.345055582 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.345982797 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.345504775 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.345661348 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.34723488 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.344321421 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.346734154 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.347061368 seconds)
  done (took 25.441261238 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.345411598 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.344515275 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.347132814 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.345218733 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.345752993 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.344694557 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.346765572 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.3465897 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.346720931 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.346035396 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.345448983 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.346318282 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.3466297 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.348191514 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.345411371 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.347558847 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.346942173 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.34529864 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.346981048 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.347272182 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.347343711 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.34686196 seconds)
  done (took 30.834390331 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.337668396 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.336360556 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.337281161 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.350058342 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.346699298 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.338264114 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.338762693 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.337643691 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.353258167 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.359908381 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.357385972 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.345241377 seconds)
  done (took 17.356221289 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.347973588 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.346694471 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.348426853 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348547175 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.34864385 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348046799 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.347554837 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348893114 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.347570917 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348753118 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.34727769 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.350280766 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.349299798 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348007726 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34884616 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.349843995 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.34795703 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349401529 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348643776 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348123671 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348457961 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348833817 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348411833 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348733457 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.349104655 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348568412 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.349343736 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.350059277 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348702989 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.34976895 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.350198243 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348744087 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.349546038 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.350223812 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.349311531 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348646489 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3477495 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348639264 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.348941677 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.350871264 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.347145104 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.349504779 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348550257 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348876898 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.349515035 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.351535994 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.351315074 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.349361703 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35196474 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3483495 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.350102748 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349150224 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.350854192 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.350599923 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.350715819 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34921887 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349678767 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.349583358 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.349679027 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.349241496 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349243444 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.350835552 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.349645087 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.350589088 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.351108686 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350600603 seconds)
  done (took 90.267080769 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.351334439 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.350126843 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.349108147 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349497363 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.351096907 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.349110807 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.350155547 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350621962 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.349738053 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349287633 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.350556134 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35190176 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.350104623 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.349784255 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351269781 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.350359275 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.349673235 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.350477502 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.351682355 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352354317 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.350829551 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.350410685 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.35214454 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351270076 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352912541 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352598421 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351179696 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.349671234 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.351235857 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.350986797 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.352065359 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.351587488 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351002068 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.352424837 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.351678611 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349812528 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.353510702 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.351299597 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351371733 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352544276 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.352035603 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.351603813 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351948369 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351362633 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.351735161 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.351658405 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.352331059 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.350820646 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352687809 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.350855205 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.351971075 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.352037665 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.351711581 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.351269923 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.352062449 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.350970168 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.35266952 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.352956214 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.350823219 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.353994279 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352850939 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.35196167 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.351704903 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.352791495 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.351423361 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.351080511 seconds)
  done (took 90.409268471 seconds)
done (took 1838.412864054 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.508409032 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.461174578 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.342976236 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.354454341 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.342266085 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.342614435 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.352342667 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.342049006 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.342495389 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.340685246 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.342499228 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.532364822 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.375700438 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.341865896 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.342453127 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.438747969 seconds)
  done (took 27.3234311 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.370200543 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.351737602 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.459967926 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.346237646 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.37160638 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.534939473 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.407366067 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.350460642 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.514433147 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.363743768 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.339907378 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.368054511 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.348157438 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.33671633 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.365540459 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.534924831 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.603455503 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.343475223 seconds)
  done (took 29.530224613 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.779693997 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.373743346 seconds)
  done (took 5.375465749 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.366499809 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.347689896 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.346451045 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.345833797 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.338043764 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.353399643 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.346063048 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.357857051 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.338550943 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.473204706 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.349155657 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.361376024 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.363551017 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.347146364 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.354589891 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.392418146 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.495565339 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.355849555 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.353788042 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.352795051 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.347836796 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.435265138 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.387206155 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.356103459 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.468312672 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.342654763 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.354511818 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.354753939 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.465923104 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.356786848 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.346106014 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.347893225 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.348422503 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.288929421 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.875486855 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.344863724 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.370337211 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.354952685 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.353079348 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.476638471 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.346564607 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.353310767 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.349544539 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.868608315 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.456417205 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.465074168 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.36563004 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.351789651 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.348721432 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.412769046 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.345167848 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.349714246 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.40801901 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.151571127 seconds)
  done (took 86.112762946 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.344142419 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.341293866 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.524219384 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.363259786 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.340511464 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.353028781 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.341645951 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.61189708 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.381481885 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.339731957 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.656682081 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.957800732 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.342320895 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.40648479 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.378423483 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.405324877 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.351815587 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.338258354 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.354573945 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.340014169 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.904968134 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.342194565 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.339076059 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.429195105 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.378053232 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.863462326 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.340063067 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.339629705 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.346040847 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.339957145 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.912500045 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.343768384 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.39151755 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.341557302 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.621825294 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.71358436 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.677097546 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.349609167 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.36312746 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.341193327 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.375505989 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.856421161 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.702898145 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.342941187 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.341402509 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.854444983 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.345648666 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.354379388 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.339764008 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.608834588 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.339388439 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.340170771 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.341022721 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.344746608 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.34050532 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.414075816 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.413688848 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.866843205 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.344823081 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.339872039 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.350625864 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.342968148 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.343326542 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.346584179 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.341972543 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.699612633 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.619835144 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.346552178 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.698074154 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.904263223 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.344452676 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.991170481 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.351840951 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.359337914 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.388232314 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.34107831 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.340521511 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.862777652 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.380839229 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.340556131 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.674236972 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.343826341 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.645124981 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.361543937 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.340215317 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.924119004 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.347602083 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.389492019 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.341217589 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.341824176 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.360507969 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.346357136 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.624079024 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.402870869 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.341107825 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.341097457 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.393588217 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.341409765 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.359285713 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.342643594 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.973712212 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.348307722 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.341574701 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.361605418 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.340700133 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.347100018 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.343584714 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.343326782 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.630434678 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.343081173 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.347038636 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.344797828 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.342928541 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.342582351 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.448814796 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.344084115 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.638723408 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.349325722 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.342180496 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.343342191 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.350224868 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.395428506 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.342356328 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.362902234 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.337395593 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.642811257 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.359667515 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.358194755 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.344558137 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.341908382 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.366228866 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.348438311 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.398763474 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.34563186 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.197954535 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.354281547 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.36132037 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.343540933 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.348463617 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.34314693 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.374817388 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.346235848 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.641555237 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.62473282 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.59135165 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.350610135 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.345082814 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.173693388 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.352000292 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.526948926 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.364827648 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.345304041 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.623526324 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.578387808 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.344493511 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.344321565 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.348874874 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.623125708 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.351536553 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.665117243 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.936299817 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.348453786 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.347648483 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.19206969 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.159534622 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.347078872 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.344166531 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.645627055 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.36245363 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.345776949 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.344915528 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.346065776 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.344715897 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.350831813 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.354333428 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.347987617 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.347521981 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.636008846 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.540710583 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.360561845 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.345697397 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.867721786 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.374280953 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.345784217 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.350800262 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.35045491 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.345851817 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.408872217 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.347883795 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.394685473 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.349225783 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.357553571 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.889057428 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.349405548 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.36322742 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.540979078 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.10842332 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.351111679 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.3493523 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.350145503 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.405245802 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.894645176 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.396338721 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.639592857 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.361574281 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.384730425 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.346571535 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.362009039 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.897874826 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.351963377 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.36160901 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.063182701 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.356488648 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.828932333 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.348079942 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.348281013 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.990559665 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.348089391 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.347807125 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.351111968 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.351493673 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.682840222 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.351260732 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.389025516 seconds)
  done (took 501.52628886 seconds)
done (took 651.089315134 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.347178328 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.347335741 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.331124618 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.353161518 seconds)
  done (took 10.607444599 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.367517548 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.35588386 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.365439129 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.354628627 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.365175568 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.354817245 seconds)
  done (took 9.392470932 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.35028379 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.350662686 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.353283036 seconds)
  done (took 8.283254572 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.566557448 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.367770587 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.686418008 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.352910983 seconds)
  done (took 9.203020997 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.365085074 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.364040486 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.366858948 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.365319313 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.371112655 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.36768039 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.366882616 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.366915902 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.368149188 seconds)
  done (took 13.530404125 seconds)
done (took 52.245295351 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.4431389 seconds)
    (2/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.535577313 seconds)
    (3/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.177235229 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.453935772 seconds)
    (5/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.406486614 seconds)
    (6/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.327896037 seconds)
    (7/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.332848583 seconds)
    (8/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.34114782 seconds)
    (9/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.421492451 seconds)
    (10/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.455428168 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.466590036 seconds)
    (12/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.494852032 seconds)
    (13/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.388138822 seconds)
    (14/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.030044509 seconds)
    (15/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.554060656 seconds)
    (16/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.470242202 seconds)
    (17/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.346995206 seconds)
    (18/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.420183883 seconds)
    (19/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.04992064 seconds)
    (20/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.329905527 seconds)
    (21/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.438586712 seconds)
    (22/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.327950855 seconds)
    (23/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.709050663 seconds)
    (24/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.346805078 seconds)
    (25/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.334720512 seconds)
    (26/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.341316677 seconds)
    (27/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.469790854 seconds)
    (28/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.329592797 seconds)
    (29/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.333901694 seconds)
    (30/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.336039723 seconds)
    (31/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.349213013 seconds)
    (32/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.102397658 seconds)
    (33/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.236613081 seconds)
    (34/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.571776562 seconds)
    (35/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.154333204 seconds)
    (36/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.358543614 seconds)
    (37/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.374282437 seconds)
    (38/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.448673917 seconds)
    (39/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.381123224 seconds)
    (40/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.32887315 seconds)
    (41/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.334214707 seconds)
    (42/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.483692779 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.463311776 seconds)
    (44/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.335917781 seconds)
    (45/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.47249179 seconds)
    (46/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.333153484 seconds)
    (47/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.544517971 seconds)
    (48/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.470868041 seconds)
    (49/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.362504307 seconds)
    (50/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.331797353 seconds)
    (51/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.471110996 seconds)
    (52/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.439987051 seconds)
    (53/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.557346028 seconds)
    (54/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.33852555 seconds)
    (55/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.393191078 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.457813299 seconds)
    (57/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.425810395 seconds)
    (58/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.172112571 seconds)
    (59/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.531247918 seconds)
    (60/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.05977179 seconds)
    (61/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.468536174 seconds)
    (62/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.508780286 seconds)
    (63/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.330094178 seconds)
    (64/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.357956931 seconds)
    (65/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.462683845 seconds)
    (66/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.383777589 seconds)
    (67/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.423768387 seconds)
    (68/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.387475939 seconds)
    (69/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.591563695 seconds)
    (70/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.345298014 seconds)
    (71/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.334853566 seconds)
    (72/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.373932858 seconds)
    (73/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.442428071 seconds)
    (74/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.333005118 seconds)
    (75/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.452332363 seconds)
    (76/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.434670566 seconds)
    (77/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.380351119 seconds)
    (78/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.332492384 seconds)
    (79/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.330518647 seconds)
    (80/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.439684185 seconds)
    (81/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.454806462 seconds)
    (82/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.423699378 seconds)
    (83/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.530063376 seconds)
    (84/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.500694628 seconds)
    (85/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.445546649 seconds)
    (86/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.586443575 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.462578255 seconds)
    (88/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.200177713 seconds)
    (89/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.373559998 seconds)
    (90/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.538196688 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.507992876 seconds)
    (92/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.558485512 seconds)
    (93/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.389375682 seconds)
    (94/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.441084156 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.498118968 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.466132688 seconds)
    (97/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.306214122 seconds)
    (98/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.469760685 seconds)
    (99/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.08991195 seconds)
    (100/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.428313163 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.505628454 seconds)
    (102/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.470520156 seconds)
    (103/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.390627016 seconds)
    (104/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.333750945 seconds)
    (105/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.604761097 seconds)
    (106/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.477300528 seconds)
    (107/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.51907914 seconds)
    (108/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.390698757 seconds)
    (109/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.39473719 seconds)
    (110/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.332158959 seconds)
    (111/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.510994783 seconds)
    (112/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.433437792 seconds)
    (113/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.109584377 seconds)
    (114/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.533985652 seconds)
    (115/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.499761909 seconds)
    (116/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.598706078 seconds)
    (117/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.366826953 seconds)
    (118/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.155623438 seconds)
    (119/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.504890186 seconds)
    (120/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.432837027 seconds)
    (121/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.415810319 seconds)
    (122/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.480224104 seconds)
    (123/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.356949341 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.508927506 seconds)
    (125/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.336767483 seconds)
    (126/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.403402329 seconds)
    (127/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.333576166 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.60390711 seconds)
    (129/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.33539324 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.468267512 seconds)
    (131/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.379164766 seconds)
    (132/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.391985525 seconds)
    (133/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.336540514 seconds)
    (134/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.543310514 seconds)
    (135/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.173447828 seconds)
    (136/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.490967813 seconds)
    (137/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.519347177 seconds)
    (138/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.176364103 seconds)
    (139/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.145147329 seconds)
    (140/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.364660876 seconds)
    (141/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.361184248 seconds)
    (142/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.338162423 seconds)
    (143/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.497636325 seconds)
    (144/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.449522815 seconds)
    (145/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.563838238 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.458697916 seconds)
    (147/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.394379931 seconds)
    (148/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.537847386 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.605633193 seconds)
    (150/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.472336868 seconds)
    (151/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.426073762 seconds)
    (152/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.405461736 seconds)
    (153/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.201372726 seconds)
    (154/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.346263187 seconds)
    (155/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.360754953 seconds)
    (156/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.520529242 seconds)
    (157/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.197761759 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.483137752 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.503778193 seconds)
    (160/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.393542191 seconds)
    (161/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.456078469 seconds)
    (162/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.043597566 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.600321277 seconds)
    (164/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.436027793 seconds)
    (165/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.338676313 seconds)
    (166/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.115840433 seconds)
    (167/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.427874583 seconds)
    (168/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.418142815 seconds)
    (169/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.358387663 seconds)
    (170/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.402462672 seconds)
    (171/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.194133262 seconds)
    (172/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.343379659 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.516035653 seconds)
    (174/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.402198983 seconds)
    (175/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.475166548 seconds)
    (176/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.474213339 seconds)
    (177/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.39541777 seconds)
    (178/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.240133277 seconds)
    (179/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.404459686 seconds)
    (180/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.360669142 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.573660734 seconds)
    (182/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.363315251 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.485547299 seconds)
    (184/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.417715002 seconds)
    (185/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.401555515 seconds)
    (186/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.43832647 seconds)
    (187/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.393235167 seconds)
    (188/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.145729019 seconds)
    (189/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.628185415 seconds)
    (190/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.528154253 seconds)
    (191/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.438795612 seconds)
    (192/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.475760402 seconds)
  done (took 344.268365733 seconds)
done (took 345.49990189 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.391900656 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.454866119 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.369997 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.370418011 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.372866368 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.361233256 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.396060733 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.372647625 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.386403248 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.384667677 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.361569767 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.38619166 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.387412731 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.382556162 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.404183682 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.371907828 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.371087972 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.38229256 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.386762999 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.388573668 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.372338943 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.374140434 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.398761066 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.37220755 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.380047982 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.3812774 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.377688522 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.3631736 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.381651554 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.388415992 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.362579092 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.380100881 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.388715904 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.38465542 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.374594155 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.382737162 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.372160172 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.456739735 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.391962118 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.384582925 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.3812396 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.387169451 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.376164166 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.37802479 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.384899256 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.395862985 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.369882543 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.376985496 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.352762473 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.345870072 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.388300236 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.370626299 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.360932014 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.334425862 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.360333047 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.365999893 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.364306447 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.363353374 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.350903739 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.344728929 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.376460408 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.362190333 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.355769856 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.351047974 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.348539533 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.351059557 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.346827091 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.35228192 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.344127158 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.339059074 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.33789045 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.345782136 seconds)
done (took 108.162674768 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.45566178 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.328854694 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.487111278 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.338847816 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.494878801 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.450239818 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.334347679 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.335383348 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.334462071 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.132351663 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.334399707 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.332967006 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.321567144 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.331145243 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.447210834 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.330885988 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.332531952 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.028757285 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.328024933 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.45502418 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.318821022 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.328154258 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.329411116 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.128061328 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.313830367 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.312169128 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.452978736 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.325004273 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.023986269 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.311540455 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.313316261 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.022555138 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.453466641 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.344695958 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.335904402 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.335198672 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.483114052 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.328104135 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.441831308 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.442081207 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.475189009 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.364031804 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.311346531 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.31632266 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.326528796 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.327880108 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.326188434 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.353522069 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.312063892 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.321931108 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.022207841 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.333262148 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.32337156 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.325609727 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.320792068 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.350077835 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.321505434 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.321166475 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.447031906 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.321970453 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.43683792 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.119207126 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.119418792 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.319072629 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.307003936 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.320174353 seconds)
  done (took 107.633142656 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.37597868 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.382971991 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.416755327 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.312836563 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.3604208 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.420136482 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.316091969 seconds)
  done (took 10.780199766 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.3174947 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.320662555 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.357869545 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.358373052 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.320453564 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.483463182 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.320594379 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.323404948 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.320283274 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.36066777 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.32195235 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.322732051 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.330004731 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.31160881 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.361762924 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.324216354 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.431120231 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.314417462 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.323788647 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.465631067 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.323528398 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.331345942 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.363311472 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.324487567 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.326305674 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.320271771 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.096203442 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.323253974 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.324003435 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.323547278 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.32354713 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.3811583 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.323472013 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.314394 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.323743663 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.427927389 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.323835816 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.324064513 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.323566574 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.307516569 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.324299512 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.324267719 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.325405734 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.325204288 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.323012721 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.337861945 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.323480655 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.323101212 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.323918686 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.323646814 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.364890018 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.323134919 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.32374384 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.323729482 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.368247175 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.332033149 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.325329108 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.324601567 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.323917191 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.325109546 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.468148345 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.363211685 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.324341437 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.362109526 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.325325074 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.325134737 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.326579053 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.324971593 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.403835078 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.325686239 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.362912396 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.324527244 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.498292961 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.339638568 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.326496285 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.319032909 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.319250266 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.326928971 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.313664183 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.323513496 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.325885532 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.319120079 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.323311413 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.326459281 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.325192256 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.477828042 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.425953493 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.327855741 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.33404965 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.325445291 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.326463967 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.368641699 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.325097577 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.327146527 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.367796242 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.435433416 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.368388544 seconds)
  done (took 136.241083014 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.33143271 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.331298748 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.323777156 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.34569205 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.324530567 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.322081783 seconds)
  done (took 9.179896032 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.325586353 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.334171129 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.332694362 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.333046726 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.333196704 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.334794323 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.333756793 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.324426569 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.335571663 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.33340213 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.337126424 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.336189415 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.333275577 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.334096397 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.334676281 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.333168851 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.332384015 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.333167816 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.333039744 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.334899656 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.322460171 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.333110104 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.335152803 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.325790789 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.338139856 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.334031849 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.349450951 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.334767156 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.33311813 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.332706872 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.335658777 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.33793166 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.320922823 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.324159449 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.33224206 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.321941236 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.331681691 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.332422762 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.331229838 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.33286688 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.329485795 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.326924264 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.327142725 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.329215481 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.318611065 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.320317207 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.332025079 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.338255043 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.323705298 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.325550341 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.325043728 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.323246236 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.324666092 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.327053661 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.316890195 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.31557649 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.326073354 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.321150339 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.32155769 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.313472793 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.323397681 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.325826061 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.314785436 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.323829018 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.321260225 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.324196515 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.314831838 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.324350204 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.321402702 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.321637065 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.324968311 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.320816565 seconds)
  done (took 97.856917777 seconds)
done (took 362.901542892 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.698520082 seconds)
  done (took 3.894265627 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.578889044 seconds)
  done (took 3.778468405 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.768466301 seconds)
  done (took 22.218935268 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.322057623 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.333335781 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.330436076 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.316168994 seconds)
  done (took 10.49911542 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.694412061 seconds)
  done (took 3.892376018 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.318484419 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.32052527 seconds)
  done (took 5.841861202 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.476397775 seconds)
  done (took 3.678542479 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.528901923 seconds)
  done (took 3.730138538 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.342338746 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.339102955 seconds)
  done (took 5.889268824 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.287648424 seconds)
  done (took 3.487558216 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.311712041 seconds)
  done (took 20.514249885 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.341497367 seconds)
  done (took 3.544043359 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.341329909 seconds)
  done (took 3.542371115 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.723175742 seconds)
  done (took 5.923687366 seconds)
done (took 101.631562355 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.309726921 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.313331356 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.313162699 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.311698368 seconds)
  done (took 10.448204521 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.390833199 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.391185805 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.398714208 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.385389349 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.384928284 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.39388322 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.368969002 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.353964389 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.383093882 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.379215835 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.394667071 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.384407303 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.394880255 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.35360579 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.380321656 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.394361576 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.382238518 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.402392352 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.354519017 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.386090337 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.329532138 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.386786203 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.381166131 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.328309657 seconds)
  done (took 34.284558905 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.814146518 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.388344719 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.472902505 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.36996289 seconds)
  done (took 7.248048947 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.504649497 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.434373121 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.449038439 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.494103025 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.533293777 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.447012481 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.3532201 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.35072611 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.336995724 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.43406542 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.512107891 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.432953065 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.649071069 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.32944229 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.646933057 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.329154121 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.329017195 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.433331395 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.482634239 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.512781371 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.329763968 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.434132643 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.436538683 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.433720528 seconds)
  done (took 35.832616967 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.338913648 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.345967058 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.331660717 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.347017298 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.331846949 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.331752482 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.331705683 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.337399408 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.331021917 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.331675922 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.330593319 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.345080671 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.331523936 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.331645083 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.338696048 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.334179871 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.333435018 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.337656305 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.339828223 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.332665078 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.332502015 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.339859688 seconds)
  done (took 30.590760827 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.316130032 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.316146245 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.667029726 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.572224014 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.317770405 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.321613323 seconds)
  done (took 13.715839599 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.389612207 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.528747007 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.328912855 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.655886721 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.746590291 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.329888563 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.32504259 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.558482085 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.842821954 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.837158249 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.383828037 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.392715055 seconds)
  done (took 19.524814444 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.324791228 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.322338944 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.327156405 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.338897893 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.374560314 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.327576856 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.332248313 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.317443145 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.379464133 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.382838626 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.327142745 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.37638991 seconds)
  done (took 21.337813399 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409018844 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.328426885 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.339325684 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335812189 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332088594 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.329169783 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.403230825 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.010484685 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.334243936 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.60407245 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331080821 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417221554 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.575609655 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328897335 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.336992327 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.288851643 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.564472775 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797884836 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333906015 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338597899 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369811056 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.330613796 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.337712118 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.536358358 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.337009918 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.331208023 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.595637672 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.332788446 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.602531065 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.577618987 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.577643949 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339854898 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.610523418 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960741637 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437742746 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.527419169 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324943287 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.338645158 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.314723531 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.333913314 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34011539 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.335051762 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.574894684 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336482033 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.33324108 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341242841 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.030233801 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.342347426 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.332908995 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.334381918 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.576593097 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421455902 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.340121791 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.332592392 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369695755 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336183311 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.341054869 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.454790205 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971826407 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333043449 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348683343 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.339562018 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.327544849 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360110694 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981141653 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.343393814 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.339579006 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.340805549 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335956341 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.347258979 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.363154158 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335843836 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.35492561 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336279404 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084270177 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.344738204 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342172039 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85119419 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33849278 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.35839182 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.560413688 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335790699 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337022834 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.332765428 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.337288357 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.045151309 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343764656 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.304638498 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.39424407 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.020457297 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.533005383 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356329322 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366642534 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.557673269 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.304399433 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338259977 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.337564808 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341724612 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358584032 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.027088649 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337500928 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.343105518 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.585470744 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.547518893 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337153355 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.296421417 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.799867171 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337923615 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.381522483 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.337359001 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.540092119 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.937204807 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.584945898 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344161551 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37776199 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.339105207 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113913032 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341317458 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.365102163 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.344285425 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.610450247 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.131497937 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340056744 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413070941 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.340655116 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.340306801 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348741761 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347177821 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.338584577 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.51151036 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345658019 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587654893 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.342962353 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340089215 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.352454801 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345485192 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.347547373 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.560601874 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351416959 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622265014 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340157755 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339760056 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338828218 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.557432759 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.340134554 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.354321389 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.680348002 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34235506 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.347319834 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.588707098 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374587394 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451148429 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372095295 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.339937022 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.593637636 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.348254838 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.349032261 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341641454 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.364561179 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345805535 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.35026385 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339048555 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.955733312 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319086617 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.347528711 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.343656512 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.35882129 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415183095 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.349995726 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.538633749 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.349578852 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345123942 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.355820212 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.341652397 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.567207566 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584891484 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.345167923 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.523858685 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.799547205 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.932278808 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.364544393 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.343419676 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.343501738 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.343166005 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345011881 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343765678 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.34591215 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.541604236 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.594164547 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.338375404 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.948423465 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346941241 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.348220911 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.356456355 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.584762457 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.359394854 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345027095 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.35349963 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350290316 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363821919 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.589887591 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.57068685 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.361468984 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.345578815 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.863666533 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.352335657 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.346043826 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.345006347 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370502329 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.350071915 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.171898686 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.684305574 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339789412 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.592351935 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.353216944 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.369109196 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.342839544 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350757496 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352864222 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.36851284 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359167542 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.54371458 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.354364734 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366607232 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984953868 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093983525 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889999101 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350600957 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.36473088 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.354244014 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.041219533 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345749935 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347181108 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.585885901 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.041606445 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347552574 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.806107359 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.353751951 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.080398319 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.594192912 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.57808459 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362956485 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.347807197 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.598290318 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.561361193 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373453931 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.351811899 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351463454 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.315948981 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.880739479 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348148729 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.531712747 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.037471682 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353453346 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.354359513 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.409317137 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.354475573 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.724221843 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.346771014 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347684919 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.359700975 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.362687342 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.170094245 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.352363962 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347143351 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972007184 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.36191046 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.813414031 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347395237 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.544690207 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.597323483 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.567733611 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.361298349 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.362174558 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.59670864 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.594259799 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353712695 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.36157678 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893725821 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.204192718 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.356134143 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349433986 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11306294 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351491373 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.623432183 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.354137317 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.356990453 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359226529 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.351654561 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351241611 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.350473405 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.356986082 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325670878 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813411518 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.35855654 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367034462 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357015041 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35574279 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.596175427 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.366617097 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.948406334 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578821817 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347243745 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390630433 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.357619776 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361540807 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.320756416 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.352533158 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.350925054 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381031776 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.57591554 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.352319979 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.336877372 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.353554975 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.565434966 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.350740722 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.364282004 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565653524 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.357373907 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.363264654 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.102829223 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389148752 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.353514275 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359298978 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.34344355 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411203386 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4263215 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.550672527 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.602387332 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.601545559 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.734406867 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357032942 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360590424 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.370731477 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43492876 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355246828 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.361705065 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.358136272 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94939684 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.117091723 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.958919894 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.603604055 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.359009502 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364185258 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353935921 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.596654126 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353847972 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.631471596 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356248067 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.352942044 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396576002 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354756314 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383680938 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.570497665 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62849815 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356721159 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363877404 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35998905 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.355494687 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.605110085 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.566727727 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82225862 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884206038 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357045044 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.356504016 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.056957357 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63325528 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356555144 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358297979 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356749407 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.376110438 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.365386626 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.365501593 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35698575 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.586299691 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.600437617 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989212816 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.599842233 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.541548354 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.300491886 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35610848 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.60761354 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.189582702 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.554736664 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.96513382 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.053170085 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.615974125 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431371358 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.556151963 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.360710903 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.595645299 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.369051146 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.358138817 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359496222 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35828193 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.357389881 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.599282774 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.965710184 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.615609234 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.363384972 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.367804551 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388300439 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.55606463 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.584994086 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.067301913 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.581404502 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.605690836 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.371164396 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.360182175 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.964186964 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.609807582 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366200602 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.365125242 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567667165 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.36581946 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395708652 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.248872311 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.358196946 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.880599476 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.572222299 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381568276 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35901368 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.06258786 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969350094 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.376688982 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829920587 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362420825 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362904404 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642767453 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.368776496 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.367963493 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647130574 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.367555937 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.363614574 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.566588394 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.962186464 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.112775352 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.370925214 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398813864 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.369750163 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362421151 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427424868 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367024662 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363864188 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.743095466 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.362461449 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364387534 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.377967528 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.362765234 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362214399 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.383199055 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364098089 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.372085067 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.363643598 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.348405333 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.371918425 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.486721837 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901621999 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367008779 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.975255253 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.698073204 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.610399735 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.363709392 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.336349107 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.370663401 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365564332 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363655521 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364758625 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.362449305 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899345653 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.377746293 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.611918867 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.375117339 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.574158173 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.575040356 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.377285089 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.568728006 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37008057 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.393588907 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.331795586 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365268084 seconds)
  done (took 967.39314823 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.359769076 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.374329997 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.374077683 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.419170768 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.366965577 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.364652644 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.368016939 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.418454083 seconds)
  done (took 20.285223917 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.358911058 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.368698643 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.357591238 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.363940824 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.368039858 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.820318908 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.374582392 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.366294723 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.378720064 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.357003423 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.356593768 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.026775857 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.385700744 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.357486199 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.377617111 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.366302454 seconds)
  done (took 32.224475057 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.003566392 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.372272784 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.813093353 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.384668863 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.385808686 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.358357025 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.471563822 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.373529429 seconds)
  done (took 25.404241993 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.370856359 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.371323395 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.372461405 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.371947595 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.370952872 seconds)
  done (took 8.098703502 seconds)
done (took 1227.591121941 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.373913178 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.37367389 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.372138343 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.373795332 seconds)
  done (took 6.73519832 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.335867011 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.337990012 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.336236621 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.354001014 seconds)
  done (took 9.60458867 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.00727086 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.949756498 seconds)
  done (took 5.198467675 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.880235433 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.880609883 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.881309284 seconds)
  done (took 6.879543811 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.643589173 seconds)
  done (took 2.880214893 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.326678289 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.365166053 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.079669005 seconds)
  done (took 8.012478725 seconds)
done (took 40.551238189 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.365434924 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.12290399 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.513395274 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.365667345 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.52084413 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.514008849 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.609588559 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.363764251 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.370880235 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.367426341 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.367392205 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.521791627 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.597966747 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.124362511 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.595700315 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.123052732 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.519648002 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.359301483 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.376258249 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.360802397 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.611620166 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.364520561 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.360977637 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.359257487 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.525855816 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.505576393 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.361831815 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.126898755 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.36062605 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.362050023 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.504557275 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.360534228 seconds)
  done (took 82.107988959 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.362555631 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.362883245 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.372936753 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.361298046 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.384903759 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.374051464 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.362454881 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.362134133 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.368131599 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.368128315 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.361390666 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.378978832 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.361483112 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.374540217 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.364014371 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.361621013 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.381909954 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.37353293 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.362171596 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.376869284 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.362431322 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.363107115 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.364640709 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.362233172 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.366551119 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.364956323 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.382140152 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.36360208 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.362306238 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.363001519 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.369472967 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.377392551 seconds)
  done (took 77.022204353 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.36339334 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.368172116 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.383289282 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.365803653 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.36929703 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.371779295 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.367131438 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.378802619 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.370065794 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.370792757 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.367549656 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.369083466 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.367573889 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.380051525 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.366980113 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.380226857 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.364618713 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.371040456 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.375809507 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.371051382 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.371398435 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.363988491 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.383418789 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.369753208 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.385343498 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.375257872 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.376158721 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.364302032 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.36919306 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.383318274 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.393549318 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.382428178 seconds)
  done (took 77.187105557 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.604211251 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.381477212 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.383991282 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.376840683 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.383221611 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.382642071 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.376968481 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.610184012 seconds)
  done (took 14.747527598 seconds)
done (took 252.3078305 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.37358163 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.847919259 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.405542215 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.372237552 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.398050385 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.401944942 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.586751778 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.401901258 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.588951605 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.403713941 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.390815451 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.373819838 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.144820779 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.52075633 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.167903134 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.274155093 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.227805986 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.370835424 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.929690283 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.655164822 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.400688391 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.367248522 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.159736167 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.234548168 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.350829567 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.455376139 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.468840001 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.599577443 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.528549089 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.448509302 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.860913046 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.380624032 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.381091654 seconds)
  done (took 63.721730954 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.37314575 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.384122777 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.382247462 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.383572834 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.382675722 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.38415586 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.374881433 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.38400354 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.384621147 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.383562628 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.385000417 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.384904438 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.385764243 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.384622317 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.383893785 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.35690687 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.375645937 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.384381547 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.375124419 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.356632202 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.384286059 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.384925038 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.385413285 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.385127339 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.387027637 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.385030886 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.384994899 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.38589378 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.385763644 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.386208248 seconds)
  done (took 42.694969063 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.387170014 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.912246277 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.09138087 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.38734117 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.376885309 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.381071904 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.651712067 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.391209802 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.380263184 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.381816127 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.835123447 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.388981185 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.410247478 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.096826499 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.381153988 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.387423268 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.387716646 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.378060858 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.925542707 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.390524352 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.652652265 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.38973002 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.654327505 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.38788991 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.382748839 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.37922855 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.385418755 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.152146291 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.398377442 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.840709468 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.109046468 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.652790215 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.096227411 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.147321226 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.113658433 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.394898228 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.388196973 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.846094555 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.382497281 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.380658305 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.651527785 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.385950891 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.104488727 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.059781639 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.398136096 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.390035417 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.187167943 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.842235689 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.618057875 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.390670473 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.136549326 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.388881152 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.391693943 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.382199784 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.610504689 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.387360244 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.381122321 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.204370293 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.385788376 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.651304697 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.395330491 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.382858631 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.924607396 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.388197642 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.925257946 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.384341921 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.389834321 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.383706297 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.103090399 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.384923021 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.081950929 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.397300449 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.390717834 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.845077341 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.921393932 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.238786009 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.385209566 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.929266252 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.129352779 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.669253069 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.3915399 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.134416693 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.672767179 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.391594567 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.392561791 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.392653791 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.391923822 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.454062665 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.652508006 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.010695166 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.072964313 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.206804803 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.657555306 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.396677587 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.385009465 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.207523089 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.393190397 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.39291841 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.101582819 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.077468394 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.400187475 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.390905389 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.064389645 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.402079022 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.658919958 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.393258281 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.14253601 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.391515611 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.462196063 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.392191906 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.390335399 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.389058348 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.658282415 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.394050352 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.393907973 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.061351678 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.878546733 seconds)
  done (took 192.55135131 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.380474554 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.379015237 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.378923322 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.378068363 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.377611752 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.386401658 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.379475993 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.379923108 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.385468899 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.379068797 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.379939322 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.387460873 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.386943628 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.380129065 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.37915399 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.380311881 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.380127474 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.385322463 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.380546777 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.380319509 seconds)
  done (took 44.882419921 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.395641683 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.918877422 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.889535875 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.402363473 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.397118316 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.387228027 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.439637489 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.396495813 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.395075493 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.670672586 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.552161533 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.402687485 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.395818576 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.397326375 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.894159753 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.368605794 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.671809401 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.920343849 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.396913321 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.919272187 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.367448531 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.397632972 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.38572614 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.919617651 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.682164254 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.660443876 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.443427458 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.921839466 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.397721779 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.397529956 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.921090037 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.397925028 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.388014659 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.904562152 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.397814565 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.41122329 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.398625182 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.44396056 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.443386626 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.673974726 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.926694851 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.669395654 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.411426566 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.543237008 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.402287433 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.366934588 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.933907468 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.399611528 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.369176194 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.400084271 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.403823683 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.902291618 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.394964828 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.902842953 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.404671085 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.399494374 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.927592288 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.909295043 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.899006087 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.557082651 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.397852402 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.662203386 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.404949593 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.937144549 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.404953718 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.400626103 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.401640291 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.554468079 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.933961795 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.667254592 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.681257499 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.676703859 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.400466615 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.455093301 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.40009558 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.67631229 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.454217196 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.760685414 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.682322402 seconds)
  done (took 125.504405073 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.646907546 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.504163088 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.757587784 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.956489991 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.875801263 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.533352033 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.500317288 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.628880083 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.39450965 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.500719107 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.008789403 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.482104663 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.130250751 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.460286171 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.494600065 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.511550398 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.767117283 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.339629376 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.00646963 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.993652966 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.394181523 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.491284652 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.889068646 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.582398423 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.400389618 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.946790781 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.286579583 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.894162629 seconds)
  done (took 52.643179101 seconds)
done (took 523.246682587 seconds)
SAVING RESULT...
DONE!
